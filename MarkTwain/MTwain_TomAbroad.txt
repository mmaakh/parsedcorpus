(ROOT
  (S
    (NP (NNP TOM) (NNP SAWYER))
    (VP (VBD ABROAD)
      (SBAR
        (S
          (PP (IN By)
            (NP (NNP Mark) (NNP Twain) (NNP CHAPTER) (NNP I.) (NNP TOM) (NNP SEEKS) (NNP NEW) (NNP ADVENTURES) (NNP DO)))
          (NP (PRP you))
          (VP (VBP reckon)
            (SBAR
              (S
                (NP (NNP Tom) (NNP Sawyer))
                (VP (VBD was)
                  (ADJP (VBN satisfied)
                    (PP (IN after)
                      (NP
                        (NP (DT all))
                        (SBAR
                          (S
                            (NP (PRP them))
                            (VP (VBZ adventures))))))))))))))
    (. ?)))

nn(SAWYER-2, TOM-1)
nsubj(ABROAD-3, SAWYER-2)
root(ROOT-0, ABROAD-3)
nn(DO-13, Mark-5)
nn(DO-13, Twain-6)
nn(DO-13, CHAPTER-7)
nn(DO-13, I.-8)
nn(DO-13, TOM-9)
nn(DO-13, SEEKS-10)
nn(DO-13, NEW-11)
nn(DO-13, ADVENTURES-12)
prep_by(reckon-15, DO-13)
nsubj(reckon-15, you-14)
ccomp(ABROAD-3, reckon-15)
nn(Sawyer-17, Tom-16)
nsubjpass(satisfied-19, Sawyer-17)
auxpass(satisfied-19, was-18)
ccomp(reckon-15, satisfied-19)
prep_after(satisfied-19, all-21)
nsubj(adventures-23, them-22)
rcmod(all-21, adventures-23)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)
        (NP
          (NP (DT the) (NNS adventures))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD had)
                (ADVP (RB down)
                  (NP (DT the) (NN river)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (NN time))
        (NP (PRP we))
        (VP (VBD set)
          (S
            (NP (DT the) (JJ darky) (NNP Jim))
            (ADJP (JJ free)))))
      (CC and)
      (S
        (NP (NNP Tom))
        (VP (VBD got)
          (NP (NN shot))
          (PP (IN in)
            (NP (DT the) (NN leg))))))
    (. .)))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
det(adventures-4, the-3)
dobj(mean-2, adventures-4)
nsubj(had-6, we-5)
rcmod(adventures-4, had-6)
advmod(had-6, down-7)
det(river-9, the-8)
pobj(down-7, river-9)
det(time-13, the-12)
nsubj(set-15, time-13)
nsubj(set-15, we-14)
conj_and(mean-2, set-15)
det(Jim-18, the-16)
amod(Jim-18, darky-17)
nsubj(free-19, Jim-18)
xcomp(set-15, free-19)
nsubj(got-22, Tom-21)
conj_and(mean-2, got-22)
conj_and(set-15, got-22)
dobj(got-22, shot-23)
det(leg-26, the-25)
prep_in(got-22, leg-26)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (PRP he))
    (VP (VBD was) (RB n't))
    (. .)))

discourse(was-4, No-1)
nsubj(was-4, he-3)
root(ROOT-0, was-4)
neg(was-4, n't-5)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB only))
    (ADVP (RB just))
    (VP (VBP p) (`` `)
      (S
        (VP (VBN isoned)
          (NP (PRP him))
          (PP (IN for)
            (NP (JJR more))))))
    (. .)))

nsubj(p-4, It-1)
advmod(p-4, only-2)
advmod(p-4, just-3)
root(ROOT-0, p-4)
dep(p-4, isoned-6)
dobj(isoned-6, him-7)
prep_for(isoned-6, more-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (NP
        (NP (PDT all) (DT the) (NN effect))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD had))))))
    (. .)))

nsubj(effect-5, That-1)
cop(effect-5, was-2)
predet(effect-5, all-3)
det(effect-5, the-4)
root(ROOT-0, effect-5)
nsubj(had-7, it-6)
rcmod(effect-5, had-7)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (S
            (NP (PRP we))
            (VP
              (NP
                (NP (CD three))
                (SBAR
                  (S
                    (VP (VBD came)
                      (ADVP (RB back) (RB up))
                      (NP
                        (NP (DT the) (NN river))
                        (PP (IN in)
                          (NP (NN glory))))
                      (, ,)
                      (SBAR (IN as)
                        (S
                          (NP (PRP you))
                          (VP (MD may)
                            (VP (VB say)))))))))
              (PRN (, ,)
                (PP (IN from)
                  (NP (DT that) (JJ long) (NN travel)))
                (, ,))))
          (CC and)
          (S
            (S
              (NP (DT the) (NN village))
              (VP (VBD received)
                (NP (PRP us))
                (PP (IN with)
                  (NP
                    (NP (DT a) (JJ torchlight) (NN procession))
                    (CC and)
                    (NP (NNS speeches))))))
            (, ,)
            (CC and)
            (S
              (NP (NN everybody) (NN hurrah))
              (VP
                (VP (MD 'd))
                (CC and)
                (VP (VBD shouted)))))))
      (, ,)
      (NP (PRP it))
      (VP (VBD made)
        (S
          (NP (PRP us))
          (NP (NNS heroes)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP Tom) (NNP Sawyer))
            (VP (VBD had)
              (ADVP (RB always))
              (VP (VBN been)
                (VP (VBG hankering)
                  (S
                    (VP (TO to)
                      (VP (VB be)))))))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
advmod(three-6, when-4)
nsubj(three-6, we-5)
advcl(made-45, three-6)
rcmod(three-6, came-7)
advmod(up-9, back-8)
advmod(came-7, up-9)
det(river-11, the-10)
dobj(came-7, river-11)
prep_in(river-11, glory-13)
mark(say-18, as-15)
nsubj(say-18, you-16)
aux(say-18, may-17)
advcl(came-7, say-18)
dep(three-6, from-20)
det(travel-23, that-21)
amod(travel-23, long-22)
pobj(from-20, travel-23)
det(village-27, the-26)
nsubj(received-28, village-27)
conj_and(three-6, received-28)
advcl(made-45, received-28)
dobj(received-28, us-29)
det(procession-33, a-31)
amod(procession-33, torchlight-32)
prep_with(received-28, procession-33)
prep_with(received-28, speeches-35)
conj_and(procession-33, speeches-35)
nn(hurrah-39, everybody-38)
nsubj('d-40, hurrah-39)
nsubj(shouted-42, hurrah-39)
conj_and(three-6, 'd-40)
conj_and(received-28, 'd-40)
conj_and(received-28, shouted-42)
conj_and('d-40, shouted-42)
nsubj(made-45, it-44)
ccomp(see-2, made-45)
conj_and(see-2, made-45)
nsubj(heroes-47, us-46)
xcomp(made-45, heroes-47)
nsubj(was-51, that-50)
conj_and(see-2, was-51)
dobj(hankering-58, what-52)
nsubj(be-60, what-52)
nn(Sawyer-54, Tom-53)
nsubj(hankering-58, Sawyer-54)
aux(hankering-58, had-55)
advmod(hankering-58, always-56)
aux(hankering-58, been-57)
ccomp(was-51, hankering-58)
aux(be-60, to-59)
xcomp(hankering-58, be-60)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN while)))
    (NP (PRP he))
    (VP (VBD WAS)
      (ADJP (JJ satisfied)))
    (. .)))

det(while-3, a-2)
prep_for(satisfied-6, while-3)
nsubj(satisfied-6, he-4)
cop(satisfied-6, WAS-5)
root(ROOT-0, satisfied-6)

(ROOT
  (S
    (S
      (NP (NN Everybody))
      (VP (VBD made)
        (NP
          (NP (RB much))
          (PP (IN of)
            (NP (PRP him))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBN tilted)
          (PRT (RP up))
          (NP (PRP$ his) (NN nose)))
        (CC and)
        (VP (VBN stepped)
          (PP (IN around)
            (NP (DT the) (NN town)))
          (SBAR (RB as) (IN though)
            (S
              (NP (PRP he))
              (VP (VBD owned)
                (NP (PRP it))))))))
    (. .)))

nsubj(made-2, Everybody-1)
root(ROOT-0, made-2)
dobj(made-2, much-3)
prep_of(much-3, him-5)
nsubj(tilted-9, he-8)
nsubj(stepped-14, he-8)
conj_and(made-2, tilted-9)
prt(tilted-9, up-10)
poss(nose-12, his-11)
dobj(tilted-9, nose-12)
conj_and(made-2, stepped-14)
conj_and(tilted-9, stepped-14)
det(town-17, the-16)
prep_around(stepped-14, town-17)
advmod(owned-21, as-18)
mark(owned-21, though-19)
nsubj(owned-21, he-20)
advcl(stepped-14, owned-21)
dobj(owned-21, it-22)

(ROOT
  (S
    (S
      (NP (DT Some))
      (VP (VBD called)
        (S
          (NP (PRP him))
          (NP
            (NP (NNP Tom) (NNP Sawyer))
            (NP (DT the) (NN Traveler))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (ADVP (RB just))
      (VP (VBD swelled)
        (SBAR
          (S
            (NP (PRP him))
            (ADVP (RB up))
            (VP (VBP fit)
              (PP (TO to)
                (NP (NN bust))))))))
    (. .)))

nsubj(called-2, Some-1)
root(ROOT-0, called-2)
nsubj(Sawyer-5, him-3)
nn(Sawyer-5, Tom-4)
xcomp(called-2, Sawyer-5)
det(Traveler-7, the-6)
dep(Sawyer-5, Traveler-7)
nsubj(swelled-12, that-10)
advmod(swelled-12, just-11)
conj_and(called-2, swelled-12)
nsubj(fit-15, him-13)
advmod(fit-15, up-14)
ccomp(swelled-12, fit-15)
prep_to(fit-15, bust-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)
        (SBAR
          (S
            (S
              (NP (PRP he))
              (VP (VBN laid)
                (PP (IN over)
                  (NP (PRP me)))))
            (CC and)
            (S
              (NP (NNP Jim))
              (ADJP (JJ considerable)))))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP we))
            (VP
              (VP
                (ADVP (RB only))
                (VBD went)
                (PRT (RP down))
                (NP (DT the) (NN river))
                (PP (IN on)
                  (NP (DT a) (NN raft))))
              (CC and)
              (VP (VBD came)
                (PRT (RP back))
                (PP (IN by)
                  (NP (DT the) (NN steamboat)))))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Tom))
      (VP (VBD went)
        (PP (IN by)
          (NP (DT the) (JJ steamboat) (CD both) (NNS ways)))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
nsubj(laid-4, he-3)
nsubj(considerable-9, he-3)
dep(see-2, laid-4)
prep_over(laid-4, me-6)
dep(considerable-9, Jim-8)
dep(see-2, considerable-9)
conj_and(laid-4, considerable-9)
mark(went-14, because-11)
nsubj(went-14, we-12)
nsubj(came-22, we-12)
advmod(went-14, only-13)
advcl(see-2, went-14)
prt(went-14, down-15)
det(river-17, the-16)
dobj(went-14, river-17)
det(raft-20, a-19)
prep_on(went-14, raft-20)
advcl(see-2, came-22)
conj_and(went-14, came-22)
prt(came-22, back-23)
det(steamboat-26, the-25)
prep_by(came-22, steamboat-26)
nsubj(went-30, Tom-29)
conj_but(see-2, went-30)
det(ways-35, the-32)
amod(ways-35, steamboat-33)
num(ways-35, both-34)
prep_by(went-30, ways-35)

(ROOT
  (S
    (NP (DT The) (NNS boys))
    (VP
      (VP (VBD envied)
        (S
          (NP (PRP me)
            (CC and)
            (NNP Jim))
          (NP (DT a) (JJ good) (NN deal))))
      (, ,)
      (CC but)
      (VP (VB land)))
    (. !)))

det(boys-2, The-1)
nsubj(envied-3, boys-2)
nsubj(land-12, boys-2)
root(ROOT-0, envied-3)
nsubj(deal-9, me-4)
conj_and(me-4, Jim-6)
nsubj(deal-9, Jim-6)
det(deal-9, a-7)
amod(deal-9, good-8)
xcomp(envied-3, deal-9)
conj_but(envied-3, land-12)

(ROOT
  (S
    (NP (PRP they))
    (ADVP (RB just))
    (VP (VBD knuckled)
      (PP (TO to)
        (NP (DT the) (NN dirt)))
      (PP (IN before)
        (NP (NNP TOM))))
    (. .)))

nsubj(knuckled-3, they-1)
advmod(knuckled-3, just-2)
root(ROOT-0, knuckled-3)
det(dirt-6, the-5)
prep_to(knuckled-3, dirt-6)
prep_before(knuckled-3, TOM-8)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (: ;)
    (S
      (ADVP (RB maybe))
      (NP (PRP he))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (VBN satisfied)
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBD had) (RB n't)
                    (VP (VBN been)
                      (PP (IN for)
                        (NP
                          (NP
                            (NP (JJ old) (NNP Nat) (NNP Parsons))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBD was)
                                  (NP
                                    (NP (NN postmaster))
                                    (, ,)
                                    (CC and)
                                    (ADJP (JJ powerful) (JJ long)
                                      (CC and)
                                      (JJ slim)))))))
                          (, ,)
                          (CC and)
                          (NP
                            (NP
                              (NP (NN kind) (NN o) (POS '))
                              (ADJP
                                (ADJP (JJ good-hearted)
                                  (CC and)
                                  (JJ silly))
                                (, ,)
                                (CC and)
                                (ADJP (JJ bald-headed) (, ,)
                                  (PP (IN on)
                                    (NP
                                      (NP (NN account))
                                      (PP (IN of)
                                        (NP (PRP$ his) (NN age))))))
                                (, ,)
                                (CC and)
                                (ADJP
                                  (NP (RB about) (DT the) (NN talkiest))
                                  (JJ old)))
                              (NN cretur))
                            (SBAR
                              (S
                                (NP (PRP I))
                                (ADVP (RB ever))
                                (VP (VBP see))))))))))))))))
    (. .)))

discourse(know-6, Well-1)
nsubj(know-6, I-3)
aux(know-6, do-4)
neg(know-6, n't-5)
root(ROOT-0, know-6)
advmod(satisfied-13, maybe-8)
nsubjpass(satisfied-13, he-9)
aux(satisfied-13, might-10)
aux(satisfied-13, have-11)
auxpass(satisfied-13, been-12)
parataxis(know-6, satisfied-13)
mark(been-18, if-14)
nsubj(been-18, it-15)
aux(been-18, had-16)
neg(been-18, n't-17)
ccomp(satisfied-13, been-18)
amod(Parsons-22, old-20)
nn(Parsons-22, Nat-21)
prep_for(been-18, Parsons-22)
nsubj(postmaster-26, Parsons-22)
nsubj(long-30, Parsons-22)
cop(postmaster-26, was-25)
rcmod(Parsons-22, postmaster-26)
dep(long-30, powerful-29)
rcmod(Parsons-22, long-30)
conj_and(postmaster-26, long-30)
conj_and(postmaster-26, slim-32)
conj_and(long-30, slim-32)
nn(o-36, kind-35)
poss(cretur-56, o-36)
amod(cretur-56, good-hearted-38)
conj_and(good-hearted-38, silly-40)
amod(cretur-56, silly-40)
conj_and(good-hearted-38, bald-headed-43)
amod(cretur-56, bald-headed-43)
poss(age-49, his-48)
prep_on_account_of(bald-headed-43, age-49)
advmod(talkiest-54, about-52)
det(talkiest-54, the-53)
npadvmod(old-55, talkiest-54)
conj_and(good-hearted-38, old-55)
amod(cretur-56, old-55)
prep_for(been-18, cretur-56)
conj_and(Parsons-22, cretur-56)
nsubj(see-59, I-57)
advmod(see-59, ever-58)
rcmod(cretur-56, see-59)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP
          (QP (RB as) (JJ much) (IN as) (CD thirty))
          (NNS years)))
      (NP (PRP he))
      (VP (VBD 'd)
        (VP (VBN been)
          (NP
            (NP (DT the) (JJ only) (NN man))
            (PP (IN in)
              (NP
                (NP (DT the) (NN village))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (NP
                        (NP (DT a) (NN reputation))
                        (: --)
                        (S
                          (S
                            (NP (PRP I))
                            (VP (VBP mean)
                              (NP (DT a) (NN reputation))
                              (PP (IN for)
                                (S
                                  (VP (VBG being)
                                    (NP (DT a) (NN traveler)))))))
                          (, ,)
                          (CC and)
                          (S
                            (PP (IN of)
                              (NP (NN course)))
                            (NP (PRP he))
                            (VP (VBD was)
                              (ADJP
                                (ADJP (JJ mortal) (NN proud))
                                (PP (IN of)
                                  (NP (PRP it)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBN reckoned)
          (SBAR (IN that)
            (S
              (PP (IN in)
                (NP
                  (NP (DT the) (NN course))
                  (PP (IN of)
                    (NP (DT that) (CD thirty) (NNS years)))))
              (NP (PRP he))
              (VP
                (VP (VBD had)
                  (VP (VBN told)
                    (PP (IN about)
                      (NP
                        (NP (DT that) (NN journey))
                        (PP (IN over)
                          (NP
                            (QP (DT a) (CD million) (NNS times))))))))
                (CC and)
                (VP (VBD enjoyed)
                  (NP (PRP it))
                  (NP (DT every) (NN time)))))))))
    (. .)))

advmod(as-4, as-2)
advmod(as-4, much-3)
quantmod(thirty-5, as-4)
num(years-6, thirty-5)
prep_for(man-12, years-6)
nsubj(man-12, he-7)
aux(man-12, 'd-8)
cop(man-12, been-9)
det(man-12, the-10)
amod(man-12, only-11)
root(ROOT-0, man-12)
det(village-15, the-14)
prep_in(man-12, village-15)
nsubj(had-17, village-15)
rcmod(village-15, had-17)
det(reputation-19, a-18)
dobj(had-17, reputation-19)
nsubj(mean-22, I-21)
dep(reputation-19, mean-22)
det(reputation-24, a-23)
dobj(mean-22, reputation-24)
cop(traveler-28, being-26)
det(traveler-28, a-27)
prepc_for(mean-22, traveler-28)
prep_of(proud-36, course-32)
nsubj(proud-36, he-33)
cop(proud-36, was-34)
dep(proud-36, mortal-35)
dep(reputation-19, proud-36)
conj_and(mean-22, proud-36)
prep_of(proud-36, it-38)
nsubjpass(reckoned-43, it-41)
auxpass(reckoned-43, was-42)
conj_and(man-12, reckoned-43)
mark(told-54, that-44)
det(course-47, the-46)
prep_in(told-54, course-47)
det(years-51, that-49)
num(years-51, thirty-50)
prep_of(course-47, years-51)
nsubj(told-54, he-52)
nsubj(enjoyed-63, he-52)
aux(told-54, had-53)
ccomp(reckoned-43, told-54)
det(journey-57, that-56)
prep_about(told-54, journey-57)
quantmod(times-61, a-59)
number(times-61, million-60)
prep_over(journey-57, times-61)
ccomp(reckoned-43, enjoyed-63)
conj_and(told-54, enjoyed-63)
iobj(enjoyed-63, it-64)
det(time-66, every-65)
dobj(enjoyed-63, time-66)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (VP
      (VP (VBZ comes)
        (PRT (RP along))
        (ADVP
          (NP (DT a) (NN boy))
          (RB not))
        (ADVP (RB quite)
          (NP (CD fifteen))))
      (, ,)
      (CC and)
      (VP (VBZ sets)
        (NP (NN everybody))
        (S
          (VP (VBG admiring)
            (CC and)
            (VBG gawking)
            (PP (IN over)
              (NP (PRP$ HIS) (NNS travels)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (ADVP (RB just))
      (VP (VBP give)
        (NP (DT the) (JJ poor) (JJ old) (NN man))
        (NP (DT the) (JJ high) (NNS strikes))))
    (. .)))

advmod(comes-3, now-2)
root(ROOT-0, comes-3)
prt(comes-3, along-4)
det(boy-6, a-5)
npadvmod(not-7, boy-6)
neg(comes-3, not-7)
advmod(comes-3, quite-8)
pobj(quite-8, fifteen-9)
conj_and(comes-3, sets-12)
dobj(sets-12, everybody-13)
xcomp(sets-12, admiring-14)
xcomp(sets-12, gawking-16)
conj_and(admiring-14, gawking-16)
poss(travels-19, HIS-18)
prep_over(admiring-14, travels-19)
nsubj(give-24, it-22)
advmod(give-24, just-23)
conj_and(comes-3, give-24)
det(man-28, the-25)
amod(man-28, poor-26)
amod(man-28, old-27)
iobj(give-24, man-28)
det(strikes-31, the-29)
amod(strikes-31, high-30)
dobj(give-24, strikes-31)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD made)
      (S
        (NP (PRP him))
        (ADJP (JJ sick)
          (S
            (VP
              (VP (TO to)
                (VP (VB listen)
                  (PP (TO to)
                    (NP (NNP Tom)))))
              (, ,)
              (CC and)
              (VP (TO to)
                (VP (VB hear)
                  (SBAR
                    (S
                      (NP (DT the) (NNS people))
                      (VP (VBP say) (`` ``)
                        (NP (PRP$ My) (NN land))))))))))))
    (. !) ('' '')))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
nsubj(sick-4, him-3)
xcomp(made-2, sick-4)
aux(listen-6, to-5)
dep(sick-4, listen-6)
prep_to(listen-6, Tom-8)
aux(hear-12, to-11)
dep(sick-4, hear-12)
conj_and(listen-6, hear-12)
det(people-14, the-13)
nsubj(say-15, people-14)
ccomp(hear-12, say-15)
poss(land-18, My-17)
dobj(say-15, land-18)

(ROOT
  (S (`` ``)
    (VP (VB Did)
      (NP (PRP you))
      (ADVP (RB ever)))
    (. !) ('' '')))

root(ROOT-0, Did-2)
dobj(Did-2, you-3)
advmod(Did-2, ever-4)

(ROOT
  (S (`` ``)
    (NP (PRP$ My) (NN goodness))
    (VP (VBZ sakes)
      (ADJP (JJ alive)))
    (. !) ('' '')))

poss(goodness-3, My-2)
nsubj(sakes-4, goodness-3)
root(ROOT-0, sakes-4)
acomp(sakes-4, alive-5)

(ROOT
  (S
    (S (CC and)
      (S
        (NP (DT all) (JJ such) (NNS things))
        (: ;)
        (ADVP (CC but))
        (NP (PRP he))
        (VP (MD could) (RB n't)
          (VP (VB pull)
            (PRT (RP away))
            (PP (IN from)
              (NP (PRP it)))))))
    (, ,)
    (NP (DT any)
      (QP (JJR more) (IN than) (DT a)))
    (VP (VBP fly)
      (SBAR (IN that)
        (S
          (NP (PRP 's))
          (VP (VBD got)
            (NP (PRP$ its) (JJ hind) (NN leg))
            (ADVP (RB fast))
            (PP (IN in)
              (NP (DT the) (NNS molasses)))))))
    (. .)))

cc(pull-10, and-1)
det(things-4, all-2)
amod(things-4, such-3)
nsubj(pull-10, things-4)
advmod(pull-10, but-6)
nsubj(pull-10, he-7)
aux(pull-10, could-8)
neg(pull-10, n't-9)
ccomp(fly-19, pull-10)
prep_away_from(pull-10, it-13)
det(a-18, any-15)
mwe(than-17, more-16)
quantmod(a-18, than-17)
nsubj(fly-19, a-18)
root(ROOT-0, fly-19)
mark(got-22, that-20)
nsubj(got-22, 's-21)
ccomp(fly-19, got-22)
poss(leg-25, its-23)
amod(leg-25, hind-24)
dobj(got-22, leg-25)
advmod(got-22, fast-26)
det(molasses-29, the-28)
prep_in(got-22, molasses-29)

(ROOT
  (S
    (S
      (S (CC And)
        (SBAR
          (ADVP (RB always))
          (WHADVP (WRB when))
          (S
            (NP (NNP Tom))
            (VP (VBP come)
              (PP (TO to)
                (NP (DT a) (NN rest))))))
        (, ,)
        (NP (DT the) (JJ poor) (JJ old) (NN cretur))
        (VP (MD would)
          (VP
            (VP (VB chip)
              (PRT (RP in))
              (PP (IN on)
                (NP (PRP$ HIS) (JJ same) (JJ old) (NNS travels))))
            (CC and)
            (VP (VB work)
              (NP (PRP them))
              (PP (IN for)
                (NP
                  (NP (DT all))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD were)
                        (ADJP (JJ worth)))))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP they))
        (VP
          (VP (VBD were)
            (ADJP (RB pretty) (VBN faded)))
          (, ,)
          (CC and)
          (VP (VBD did) (RB n't)
            (VP (VB go)
              (PP (IN for)
                (NP (RB much))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ pitiful)
          (S
            (VP (TO to)
              (VP (VB see)))))))
    (. .)))

advmod(come-5, always-2)
advmod(come-5, when-3)
nsubj(come-5, Tom-4)
advcl(chip-15, come-5)
det(rest-8, a-7)
prep_to(come-5, rest-8)
det(cretur-13, the-10)
amod(cretur-13, poor-11)
amod(cretur-13, old-12)
nsubj(chip-15, cretur-13)
nsubj(work-23, cretur-13)
aux(chip-15, would-14)
root(ROOT-0, chip-15)
prt(chip-15, in-16)
poss(travels-21, HIS-18)
amod(travels-21, same-19)
amod(travels-21, old-20)
prep_on(chip-15, travels-21)
conj_and(chip-15, work-23)
dobj(work-23, them-24)
prep_for(work-23, all-26)
nsubj(worth-29, they-27)
cop(worth-29, were-28)
rcmod(all-26, worth-29)
nsubjpass(faded-35, they-32)
nsubj(go-40, they-32)
auxpass(faded-35, were-33)
advmod(faded-35, pretty-34)
conj_but(chip-15, faded-35)
aux(go-40, did-38)
neg(go-40, n't-39)
conj_but(chip-15, go-40)
conj_and(faded-35, go-40)
prep(go-40, for-41)
pobj(for-41, much-42)
nsubj(pitiful-47, it-45)
nsubj(see-49, it-45)
cop(pitiful-47, was-46)
conj_and(chip-15, pitiful-47)
aux(see-49, to-48)
xcomp(pitiful-47, see-49)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (NP (NNP Tom))
    (VP (MD would)
      (VP
        (VP
          (VP (VB take)
            (NP
              (NP (DT another) (NNS innings))
              (, ,)
              (CC and)
              (NP (RB then)
                (NP (DT the) (JJ old) (NN man))
                (ADVP (RB again)))
              (: --)))
          (CC and)
          (VP
            (ADVP
              (ADVP (RB so) (RB on))
              (, ,)
              (CC and)
              (ADVP (RB so) (RB on))
              (, ,))
            (PP (IN for)
              (NP
                (QP (DT an) (NN hour)
                  (CC and)
                  (JJR more))))))
        (, ,)
        (NP
          (NP (DT each))
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB beat)
                  (PRT (RP out))
                  (NP (DT the) (JJ other)))))))))
    (. .)))

advmod(take-5, then-2)
nsubj(take-5, Tom-3)
aux(take-5, would-4)
root(ROOT-0, take-5)
det(innings-7, another-6)
dobj(take-5, innings-7)
advmod(man-13, then-10)
det(man-13, the-11)
amod(man-13, old-12)
dobj(take-5, man-13)
conj_and(innings-7, man-13)
advmod(man-13, again-14)
advmod(on-18, so-17)
conj_and(take-5, on-18)
advmod(on-22, so-21)
conj_and(take-5, on-22)
conj_and(on-18, on-22)
det(hour-26, an-25)
prep_for(on-18, hour-26)
prep_for(on-18, more-28)
conj_and(hour-26, more-28)
dobj(take-5, each-30)
vmod(each-30, trying-31)
aux(beat-33, to-32)
xcomp(trying-31, beat-33)
prt(beat-33, out-34)
det(other-36, the-35)
dobj(beat-33, other-36)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (S
      (NP
        (NP (NNP Parsons) (POS '))
        (NNS travels))
      (VP (VBD happened)
        (PP (IN like)
          (NP (DT this)))
        (: :)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP he))
            (VP
              (VP
                (ADVP (RB first))
                (VBD got)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (NN postmaster))))))
              (CC and)
              (VP (VBD was)
                (ADJP (JJ green))
                (PP (IN in)
                  (NP (DT the) (NN business)))))))))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBP come)
        (NP
          (NP (DT a) (NN letter))
          (PP (IN for)
            (NP (NN somebody)))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD did) (RB n't)
                (VP (VB know))))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was) (RB n't)
        (NP
          (NP (DT any) (JJ such) (NN person))
          (PP (IN in)
            (NP (DT the) (NN village))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
poss(travels-6, Parsons-4)
nsubj(happened-7, travels-6)
ccomp(see-2, happened-7)
conj_and(see-2, happened-7)
prep_like(happened-7, this-9)
advmod(got-14, When-11)
nsubj(got-14, he-12)
nsubj(postmaster-17, he-12)
nsubj(green-20, he-12)
advmod(got-14, first-13)
parataxis(happened-7, got-14)
aux(postmaster-17, to-15)
cop(postmaster-17, be-16)
xcomp(got-14, postmaster-17)
cop(green-20, was-19)
parataxis(happened-7, green-20)
conj_and(got-14, green-20)
det(business-23, the-22)
prep_in(green-20, business-23)
expl(come-26, there-25)
ccomp(see-2, come-26)
conj_and(see-2, come-26)
det(letter-28, a-27)
dobj(come-26, letter-28)
nsubj(come-26, letter-28)
prep_for(letter-28, somebody-30)
nsubj(know-34, he-31)
aux(know-34, did-32)
neg(know-34, n't-33)
rcmod(letter-28, know-34)
expl(was-38, there-37)
conj_and(see-2, was-38)
neg(was-38, n't-39)
det(person-42, any-40)
amod(person-42, such-41)
nsubj(was-38, person-42)
det(village-45, the-44)
prep_in(person-42, village-45)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD did) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (TO to)
                  (VP (VB do)))))))
        (, ,)
        (CC nor)
        (VP
          (NP (WRB how))
          (S
            (VP (TO to)
              (VP (VB act)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (DT the) (NN letter))
      (VP (VBD stayed)
        (CC and)
        (VBD stayed) (, ,)
        (ADVP
          (ADVP (NN week) (IN in))
          (CC and)
          (ADVP (NN week) (IN out)))
        (, ,)
        (SBAR (IN till)
          (S
            (NP
              (NP (DT the) (JJ bare) (NN sight))
              (PP (IN of)
                (NP (PRP it))))
            (VP (VBD gave)
              (NP (PRP him))
              (NP (DT a) (NN conniption)))))))
    (. .)))

discourse(know-6, Well-1)
nsubj(know-6, he-3)
aux(know-6, did-4)
neg(know-6, n't-5)
root(ROOT-0, know-6)
nsubj(do-9, what-7)
aux(do-9, to-8)
ccomp(know-6, do-9)
xcomp(know-6, do-9)
conj_nor(know-6, how-12)
aux(act-14, to-13)
vmod(how-12, act-14)
advmod(stayed-20, there-17)
det(letter-19, the-18)
nsubj(stayed-20, letter-19)
nsubj(stayed-22, letter-19)
conj_and(know-6, stayed-20)
conj_and(know-6, stayed-22)
conj_and(stayed-20, stayed-22)
dep(in-25, week-24)
advmod(stayed-20, in-25)
dep(out-28, week-27)
advmod(stayed-20, out-28)
conj_and(in-25, out-28)
mark(gave-36, till-30)
det(sight-33, the-31)
amod(sight-33, bare-32)
nsubj(gave-36, sight-33)
prep_of(sight-33, it-35)
advcl(stayed-20, gave-36)
iobj(gave-36, him-37)
det(conniption-39, a-38)
dobj(gave-36, conniption-39)

(ROOT
  (S
    (S
      (NP (DT The) (NN postage))
      (VP (VBD was) (RB n't)
        (VP (VBN paid)
          (PP (IN on)
            (NP (PRP it))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (NP (DT another) (NN thing)
          (S
            (VP (TO to)
              (VP (VB worry)
                (PRT (RP about))))))))
    (. .)))

det(postage-2, The-1)
nsubjpass(paid-5, postage-2)
auxpass(paid-5, was-3)
neg(paid-5, n't-4)
root(ROOT-0, paid-5)
prep_on(paid-5, it-7)
nsubj(thing-13, that-10)
cop(thing-13, was-11)
det(thing-13, another-12)
conj_and(paid-5, thing-13)
aux(worry-15, to-14)
vmod(thing-13, worry-15)
prt(worry-15, about-16)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was) (RB n't)
        (NP (DT any) (NN way)
          (S
            (VP (TO to)
              (VP (VB collect)
                (NP (DT that) (CD ten) (NNS cents))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBP reckon)
        (NP
          (NP (NNP 'd))
          (SBAR
            (S
              (NP (DT the) (NN gov) (`` `) (NN ment))
              (VP (MD would)
                (VP
                  (VP (VB hold)
                    (S
                      (NP (PRP him))
                      (ADJP (JJ responsible)
                        (PP (IN for)
                          (NP (PRP it))))))
                  (CC and)
                  (VP
                    (ADVP (RB maybe))
                    (VB turn)
                    (NP (PRP him))
                    (PRT (RP out))
                    (PP (IN besides))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VBD found)
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD had) (RB n't)
                                (VP (VBN collected)
                                  (NP (PRP it)))))))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, n't-3)
det(way-5, any-4)
nsubj(was-2, way-5)
aux(collect-7, to-6)
vmod(way-5, collect-7)
det(cents-10, that-8)
num(cents-10, ten-9)
dobj(collect-7, cents-10)
nsubj(reckon-14, he-13)
conj_and(was-2, reckon-14)
dobj(reckon-14, 'd-15)
prep_besides(turn-28, 'd-15)
det(ment-19, the-16)
nn(ment-19, gov-17)
nsubj(hold-21, ment-19)
nsubj(turn-28, ment-19)
aux(hold-21, would-20)
rcmod('d-15, hold-21)
nsubj(responsible-23, him-22)
xcomp(hold-21, responsible-23)
prep_for(responsible-23, it-25)
advmod(turn-28, maybe-27)
rcmod('d-15, turn-28)
conj_and(hold-21, turn-28)
dobj(turn-28, him-29)
prt(turn-28, out-30)
advmod(found-35, when-33)
nsubj(found-35, they-34)
advcl(turn-28, found-35)
nsubj(collected-39, he-36)
aux(collected-39, had-37)
neg(collected-39, n't-38)
ccomp(found-35, collected-39)
dobj(collected-39, it-40)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (ADVP (IN at) (JJ last))
    (NP (PRP he))
    (VP (MD could) (RB n't)
      (VP (VB stand)
        (NP (PRP it))
        (ADVP (DT any) (RBR longer))))
    (. .)))

discourse(stand-8, Well-1)
advmod(stand-8, at-3)
advmod(at-3, last-4)
nsubj(stand-8, he-5)
aux(stand-8, could-6)
neg(stand-8, n't-7)
root(ROOT-0, stand-8)
dobj(stand-8, it-9)
dep(longer-11, any-10)
advmod(stand-8, longer-11)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could) (RB n't)
        (VP (VB sleep)
          (NP (NNS nights)))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (MD could) (RB n't)
        (VP (VB eat))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN thinned)
          (PRT (RP down))
          (PP (TO to)
            (NP (DT a) (NN shadder))))))
    (, ,)
    (S
      (ADVP (RB yet))
      (NP (PRP he))
      (VP (VBD da) (`` `)
        (S
          (NP (PRP s))
          (VP (RB n't)
            (VP (VB ask)
              (NP
                (NP (NN anybody) (POS 's))
                (NN advice)))))))
    (, ,)
    (S
      (PP (IN for)
        (NP (DT the) (JJ very) (NN person)))
      (NP (PRP he))
      (VP (VBD asked)
        (SBAR (IN for)
          (S
            (NP (NN advice))
            (VP (MD might)
              (VP (VB go)
                (PRT (RP back))
                (PP (IN on)
                  (NP (PRP him)))))))))
    (CC and)
    (S
      (S
        (VP (VB let)
          (S
            (NP (DT the) (NN gov))
            (`` `)
            (ADJP (JJ ment)))))
      (VP (VBP know)
        (PP (IN about)
          (NP (DT the) (NN letter)))))
    (. .)))

nsubj(sleep-4, He-1)
aux(sleep-4, could-2)
neg(sleep-4, n't-3)
root(ROOT-0, sleep-4)
tmod(sleep-4, nights-5)
nsubj(eat-10, he-7)
aux(eat-10, could-8)
neg(eat-10, n't-9)
ccomp(sleep-4, eat-10)
conj_and(sleep-4, eat-10)
nsubjpass(thinned-14, he-12)
auxpass(thinned-14, was-13)
ccomp(sleep-4, thinned-14)
conj_and(sleep-4, thinned-14)
prt(thinned-14, down-15)
det(shadder-18, a-17)
prep_to(thinned-14, shadder-18)
advmod(da-22, yet-20)
nsubj(da-22, he-21)
ccomp(sleep-4, da-22)
conj_and(sleep-4, da-22)
nsubj(ask-26, s-24)
neg(ask-26, n't-25)
ccomp(da-22, ask-26)
poss(advice-29, anybody-27)
dobj(ask-26, advice-29)
det(person-34, the-32)
amod(person-34, very-33)
prep_for(asked-36, person-34)
nsubj(asked-36, he-35)
conj_and(sleep-4, asked-36)
mark(go-40, for-37)
nsubj(go-40, advice-38)
aux(go-40, might-39)
advcl(asked-36, go-40)
prt(go-40, back-41)
prep_on(go-40, him-43)
csubj(know-50, let-45)
det(gov-47, the-46)
dep(ment-49, gov-47)
dep(let-45, ment-49)
conj_and(sleep-4, know-50)
det(letter-53, the-52)
prep_about(know-50, letter-53)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP
          (NP (DT the) (NN letter))
          (VP (VBN buried)
            (PP (IN under)
              (NP (DT the) (NN floor)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBD did)
        (ADJP (RB no) (JJ good))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (VBD happened)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (DT a) (NN person) (NN standing))
                  (PP (IN over)
                    (NP (DT the) (NN place)))))))))
      (NP (PRP it))
      (VP
        (VP (MD 'd)
          (VP (VB give)
            (NP (PRP him))
            (NP (DT the) (JJ cold) (NNS shivers))))
        (, ,)
        (CC and)
        (VP (VBD loaded)
          (NP (PRP him))
          (PRT (RP up))
          (PP (IN with)
            (NP (NNS suspicions))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP (VB sit)
            (PRT (RP up))
            (NP (DT that) (NN night))
            (SBAR (IN till)
              (S
                (NP (DT the) (NN town))
                (VP (VBD was)
                  (UCP
                    (ADVP (RB still))
                    (CC and)
                    (ADJP (JJ dark)))))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP
            (VP (VB sneak)
              (ADVP (RB there)))
            (CC and)
            (VP
              (VP (VB get)
                (NP (PRP it))
                (PRT (RP out)))
              (CC and)
              (VP (VB bury)
                (NP (PRP it))
                (PP (IN in)
                  (NP (DT another) (NN place)))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(letter-4, the-3)
dobj(had-2, letter-4)
vmod(letter-4, buried-5)
det(floor-8, the-7)
prep_under(buried-5, floor-8)
nsubj(good-14, that-11)
dep(good-14, did-12)
neg(good-14, no-13)
conj_but(had-2, good-14)
mark(happened-18, if-16)
nsubj(happened-18, he-17)
nsubj(see-20, he-17)
advcl(give-29, happened-18)
aux(see-20, to-19)
xcomp(happened-18, see-20)
det(standing-23, a-21)
nn(standing-23, person-22)
dobj(see-20, standing-23)
det(place-26, the-25)
prep_over(see-20, place-26)
nsubj(give-29, it-27)
nsubj(loaded-36, it-27)
aux(give-29, 'd-28)
conj_but(had-2, give-29)
iobj(give-29, him-30)
det(shivers-33, the-31)
amod(shivers-33, cold-32)
dobj(give-29, shivers-33)
conj_but(had-2, loaded-36)
conj_and(give-29, loaded-36)
dobj(loaded-36, him-37)
prt(loaded-36, up-38)
prep_with(loaded-36, suspicions-40)
nsubj(sit-45, he-43)
aux(sit-45, would-44)
conj_and(had-2, sit-45)
prt(sit-45, up-46)
det(night-48, that-47)
tmod(sit-45, night-48)
mark(was-52, till-49)
det(town-51, the-50)
nsubj(was-52, town-51)
advcl(sit-45, was-52)
advmod(was-52, still-53)
advmod(was-52, dark-55)
conj_and(still-53, dark-55)
advmod(sneak-61, then-58)
nsubj(sneak-61, he-59)
nsubj(get-64, he-59)
aux(sneak-61, would-60)
conj_and(had-2, sneak-61)
conj_and(sit-45, sneak-61)
advmod(sneak-61, there-62)
conj_and(sit-45, get-64)
conj_and(sneak-61, get-64)
dobj(get-64, it-65)
prt(get-64, out-66)
conj_and(sneak-61, bury-68)
conj_and(get-64, bury-68)
dobj(bury-68, it-69)
det(place-72, another-71)
prep_in(bury-68, place-72)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (NNS people))
    (VP (VBD got)
      (PP (TO to)
        (S
          (VP
            (VP (VBG avoiding)
              (NP (PRP him)))
            (CC and)
            (VP
              (VP (VBG shaking)
                (NP (PRP$ their) (NNS heads)))
              (CC and)
              (VP (VBG whispering) (, ,)
                (SBAR
                  (SBAR (IN because)
                    (S (, ,)
                      (S
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (VP (VBG looking)
                                  (CC and)
                                  (VBG acting))))))
                        (, ,)
                        (NP (PRP they))
                        (VP (VBD judged)
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (VP
                                  (VP (VBN killed)
                                    (NP (NN somebody)))
                                  (CC or)
                                  (VP (VBN done)
                                    (NP (NN something) (JJ terrible)))))))))
                      (, ,)
                      (NP (PRP they))
                      (VP (VBD did) (RB n't)
                        (VP (VB know)
                          (NP (WP what))))))
                  (, ,)
                  (CC and)
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN been)
                          (NP
                            (NP (DT a) (NN stranger))
                            (SBAR
                              (S
                                (NP (PRP they))
                                (VP (MD would)
                                  (VP (VB 've)
                                    (VP (VBN lynched)
                                      (NP (PRP him)))))))))))))))))))
    (. .)))

prep_of(got-5, course-2)
nsubj(got-5, people-4)
root(ROOT-0, got-5)
prepc_to(got-5, avoiding-7)
dobj(avoiding-7, him-8)
prepc_to(got-5, shaking-10)
conj_and(avoiding-7, shaking-10)
poss(heads-12, their-11)
dobj(shaking-10, heads-12)
conj_and(avoiding-7, whispering-14)
conj_and(shaking-10, whispering-14)
mark(know-40, because-16)
det(way-19, the-18)
nsubj(judged-27, way-19)
nsubj(looking-22, he-20)
nsubj(acting-24, he-20)
aux(looking-22, was-21)
rcmod(way-19, looking-22)
rcmod(way-19, acting-24)
conj_and(looking-22, acting-24)
nsubj(judged-27, they-26)
ccomp(know-40, judged-27)
nsubj(killed-30, he-28)
nsubj(done-33, he-28)
aux(killed-30, had-29)
ccomp(judged-27, killed-30)
dobj(killed-30, somebody-31)
ccomp(judged-27, done-33)
conj_or(killed-30, done-33)
dobj(done-33, something-34)
amod(something-34, terrible-35)
nsubj(know-40, they-37)
aux(know-40, did-38)
neg(know-40, n't-39)
advcl(whispering-14, know-40)
dobj(know-40, what-41)
mark(stranger-49, if-44)
nsubj(stranger-49, he-45)
aux(stranger-49, had-46)
cop(stranger-49, been-47)
det(stranger-49, a-48)
advcl(whispering-14, stranger-49)
conj_and(know-40, stranger-49)
nsubj(lynched-53, they-50)
aux(lynched-53, would-51)
aux(lynched-53, 've-52)
rcmod(stranger-49, lynched-53)
dobj(lynched-53, him-54)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG saying)))))
    (, ,)
    (S
      (NP (PRP it))
      (VP
        (VP (VBD got)
          (SBAR
            (SBAR (IN so)
              (S
                (NP (PRP he))
                (VP (MD could) (RB n't)
                  (VP (VB stand)
                    (NP (PRP it))
                    (ADVP (DT any) (RBR longer))))))
            (: ;)
            (SBAR (IN so)
              (S
                (NP (PRP he))
                (VP (VBD made)
                  (PRT (RP up))
                  (NP (PRP$ his) (NN mind)
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB pull)
                            (PRT (RP out))
                            (PP (IN for)
                              (NP (NNP Washington))))
                          (, ,)
                          (CC and)
                          (ADVP (RB just))
                          (VP
                            (VP (VB go)
                              (PP (TO to)
                                (NP
                                  (NP (DT the) (NNP President))
                                  (PP (IN of)
                                    (NP (DT the) (NNP United) (NNPS States))))))
                            (CC and)
                            (VP
                              (VP (VB make)
                                (NP
                                  (NP (DT a) (JJ clean) (NN breast))
                                  (PP (IN of)
                                    (NP (DT the) (JJ whole) (NN thing))))
                                (, ,)
                                (S (RB not)
                                  (VP (VBG keeping)
                                    (PRT (RP back))
                                    (NP (DT an) (NN atom)))))
                              (, ,)
                              (CC and)
                              (ADVP (RB then))
                              (VP
                                (VP (VB fetch)
                                  (NP (DT the) (NN letter))
                                  (PRT (RP out)))
                                (CC and)
                                (VP (VB lay)
                                  (NP (PRP it))
                                  (PP (IN before)
                                    (NP (DT the) (JJ whole) (NN gov)))
                                  (`` `) (VB ment) (, ,)
                                  (CC and)
                                  (VB say) (, ,)
                                  (S (`` ``)
                                    (INTJ (RB Now))
                                    (, ,)
                                    (ADVP (RB there))
                                    (NP (PRP she))
                                    (VP (VBZ is) (: --)
                                      (SQ (VBP do)
                                        (PP (IN with)
                                          (NP (PRP me))))))))
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (NP (PRP you))
                                  (VP (VBP 're)
                                    (NP (DT a) (NN mind)
                                      (S
                                        (VP (TO to))))))))))))))))
            (: ;)
            (SBAR (IN though)
              (S
                (S
                  (SBAR (IN as)
                    (S
                      (NP (NN heaven))
                      (VP (VBZ is)
                        (NP (PRP$ my) (NN judge)))))
                  (NP (PRP I))
                  (VP (VBP am)
                    (NP
                      (NP (DT an) (JJ innocent) (NN man))
                      (CC and)
                      (NP
                        (NP (RB not) (JJ deserving))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJ full) (NNS penalties))
                            (PP (IN of)
                              (NP (DT the) (NN law)))))))))
                (CC and)
                (S
                  (VP (VBG leaving)
                    (PP (IN behind)
                      (NP (PRP me)))
                    (NP
                      (NP (DT a) (NN family))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD must)
                            (VP (VB starve))))))))))))
        (CC and)
        (ADVP (RB yet))
        (VP (VBD had) (RB n't)
          (VP (VBN had)
            (NP (DT a) (NN thing))
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN with)
                    (NP (PRP it))))))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP (DT the) (JJ whole) (NN truth)))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB swear)
          (PP (TO to)
            (NP (PRP it))))))
    (. .) ('' '')))

advmod(got-9, Well-1)
mark(saying-6, as-3)
nsubj(saying-6, I-4)
aux(saying-6, was-5)
dep(got-9, saying-6)
nsubj(got-9, it-8)
nsubj(had-127, it-8)
root(ROOT-0, got-9)
mark(stand-14, so-10)
nsubj(stand-14, he-11)
aux(stand-14, could-12)
neg(stand-14, n't-13)
advcl(got-9, stand-14)
dobj(stand-14, it-15)
dep(longer-17, any-16)
advmod(stand-14, longer-17)
mark(made-21, so-19)
nsubj(made-21, he-20)
dep(stand-14, made-21)
prt(made-21, up-22)
poss(mind-24, his-23)
dobj(made-21, mind-24)
aux(pull-26, to-25)
vmod(mind-24, pull-26)
prt(pull-26, out-27)
prep_for(pull-26, Washington-29)
advmod(go-33, just-32)
vmod(mind-24, go-33)
conj_and(pull-26, go-33)
det(President-36, the-35)
prep_to(go-33, President-36)
det(States-40, the-38)
nn(States-40, United-39)
prep_of(President-36, States-40)
conj_and(pull-26, make-42)
conj_and(go-33, make-42)
det(breast-45, a-43)
amod(breast-45, clean-44)
dobj(make-42, breast-45)
det(thing-49, the-47)
amod(thing-49, whole-48)
prep_of(breast-45, thing-49)
neg(keeping-52, not-51)
vmod(make-42, keeping-52)
prt(keeping-52, back-53)
det(atom-55, an-54)
dobj(keeping-52, atom-55)
advmod(fetch-59, then-58)
conj_and(go-33, fetch-59)
conj_and(make-42, fetch-59)
det(letter-61, the-60)
dobj(fetch-59, letter-61)
prt(fetch-59, out-62)
conj_and(make-42, lay-64)
conj_and(fetch-59, lay-64)
dobj(lay-64, it-65)
det(gov-69, the-67)
amod(gov-69, whole-68)
prep_before(lay-64, gov-69)
dep(lay-64, ment-71)
conj_and(fetch-59, say-74)
conj_and(lay-64, say-74)
discourse(is-81, Now-77)
advmod(is-81, there-79)
nsubj(is-81, she-80)
conj_and(fetch-59, is-81)
conj_and(lay-64, is-81)
parataxis(is-81, do-83)
prep_with(do-83, me-85)
dobj(mind-90, what-86)
nsubj(mind-90, you-87)
cop(mind-90, 're-88)
det(mind-90, a-89)
ccomp(make-42, mind-90)
vmod(mind-90, to-91)
mark(man-103, though-93)
mark(judge-98, as-94)
nsubj(judge-98, heaven-95)
cop(judge-98, is-96)
poss(judge-98, my-97)
advcl(man-103, judge-98)
nsubj(man-103, I-99)
nsubj(deserving-106, I-99)
nsubj(leaving-115, I-99)
cop(man-103, am-100)
det(man-103, an-101)
amod(man-103, innocent-102)
dep(stand-14, man-103)
neg(deserving-106, not-105)
dep(stand-14, deserving-106)
conj_and(man-103, deserving-106)
det(penalties-110, the-108)
amod(penalties-110, full-109)
prep_of(deserving-106, penalties-110)
det(law-113, the-112)
prep_of(penalties-110, law-113)
dep(stand-14, leaving-115)
conj_and(man-103, leaving-115)
prep_behind(leaving-115, me-117)
det(family-119, a-118)
dobj(leaving-115, family-119)
nsubj(starve-122, family-119)
aux(starve-122, must-121)
rcmod(family-119, starve-122)
advmod(had-127, yet-124)
aux(had-127, had-125)
neg(had-127, n't-126)
conj_and(got-9, had-127)
det(thing-129, a-128)
dobj(had-127, thing-129)
aux(do-131, to-130)
vmod(had-127, do-131)
prep_with(do-131, it-133)
nsubj(truth-139, which-135)
cop(truth-139, is-136)
det(truth-139, the-137)
amod(truth-139, whole-138)
dep(had-127, truth-139)
nsubj(swear-143, I-141)
aux(swear-143, can-142)
conj_and(got-9, swear-143)
prep_to(swear-143, it-145)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD did)
      (NP (PRP it)))
    (. .)))

dep(did-3, So-1)
nsubj(did-3, he-2)
root(ROOT-0, did-3)
dobj(did-3, it-4)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP
          (NP
            (NP (DT a) (JJ little) (NN wee) (NN bit))
            (PP (IN of)
              (NP (VBG steamboating))))
          (, ,)
          (CC and)
          (NP (DT some) (NN stage-coaching)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP
          (NP (PDT all) (DT the) (NN rest))
          (PP (IN of)
            (NP (DT the) (NN way))))
        (VP (VBD was)
          (VP (VBN horseback))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD took)
          (NP (PRP him))
          (NP (CD three) (NNS weeks))
          (S
            (VP (TO to)
              (VP (VB get)
                (PP (TO to)
                  (NP (NNP Washington)))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(bit-6, a-3)
amod(bit-6, little-4)
nn(bit-6, wee-5)
dobj(had-2, bit-6)
prep_of(bit-6, steamboating-8)
det(stage-coaching-12, some-11)
dobj(had-2, stage-coaching-12)
conj_and(bit-6, stage-coaching-12)
predet(rest-17, all-15)
det(rest-17, the-16)
nsubjpass(horseback-22, rest-17)
det(way-20, the-19)
prep_of(rest-17, way-20)
auxpass(horseback-22, was-21)
conj_but(had-2, horseback-22)
nsubj(took-26, it-25)
conj_but(had-2, took-26)
conj_and(horseback-22, took-26)
dobj(took-26, him-27)
num(weeks-29, three-28)
tmod(took-26, weeks-29)
aux(get-31, to-30)
vmod(took-26, get-31)
prep_to(get-31, Washington-33)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD saw)
      (NP
        (NP (NNS lots))
        (PP (IN of)
          (NP (NN land)
            (CC and)
            (NNS lots)))
        (PP (IN of)
          (NP
            (NP (NNS villages))
            (CC and)
            (NP (CD four) (NNS cities))))))
    (. .)))

nsubj(saw-2, He-1)
root(ROOT-0, saw-2)
dobj(saw-2, lots-3)
prep_of(lots-3, land-5)
prep_of(lots-3, lots-7)
conj_and(land-5, lots-7)
prep_of(lots-3, villages-9)
num(cities-12, four-11)
prep_of(lots-3, cities-12)
conj_and(villages-9, cities-12)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBN gone)
          (S (`` `)
            (NP
              (NP (JJS most))
              (NP (CD eight) (NNS weeks)))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (ADVP (RB never))
      (VP (VBD was)
        (NP
          (NP (PDT such) (DT a) (JJ proud) (NN man))
          (PP (IN in)
            (NP
              (NP (DT the) (NN village))
              (PP (IN as)
                (NP (PRP he)))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD got)
                (ADVP (RB back))))))))
    (. .)))

nsubjpass(gone-3, He-1)
auxpass(gone-3, was-2)
root(ROOT-0, gone-3)
dep(gone-3, most-5)
num(weeks-7, eight-6)
dep(most-5, weeks-7)
expl(was-12, there-10)
neg(was-12, never-11)
conj_and(gone-3, was-12)
predet(man-16, such-13)
det(man-16, a-14)
amod(man-16, proud-15)
nsubj(was-12, man-16)
tmod(got-24, man-16)
det(village-19, the-18)
prep_in(man-16, village-19)
prep_as(village-19, he-21)
advmod(got-24, when-22)
nsubj(got-24, he-23)
rcmod(man-16, got-24)
advmod(got-24, back-25)

(ROOT
  (S
    (S
      (S
        (NP (PRP$ His) (NNS travels))
        (VP (VBD made)
          (S
            (NP (PRP him))
            (NP
              (NP (DT the) (JJS greatest) (NN man))
              (PP (IN in)
                (NP (PDT all) (DT that) (NN region)))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (JJS most))
        (VP (VBD talked)
          (PRT (RP about))))
      (: ;)
      (CC and)
      (S
        (NP (NNS people))
        (VP (VBD come)
          (PP (IN from)
            (NP
              (NP
                (QP (RB as) (JJ much) (IN as) (CD thirty))
                (NNS miles))
              (ADVP (RB back)
                (PP
                  (PP (IN in)
                    (NP (DT the) (NN country)))
                  (, ,)
                  (CC and)
                  (PP (IN from)
                    (PP (IN over)
                      (PP (IN in)
                        (NP (DT the) (NNP Illinois) (NNS bottoms)))))))))
          (, ,)
          (ADVP (RB too))
          (, ,)
          (S
            (ADVP (RB just))
            (VP (TO to)
              (VP (VB look)
                (PP (IN at)
                  (NP (PRP him))))))))
      (: --)
      (CC and)
      (S
        (ADVP (RB there))
        (NP (PRP they))
        (VP (MD 'd)
          (VP (VB stand)
            (CC and)
            (VB gawk)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD 'd)
        (VP (VB gabble))))
    (. .)))

poss(travels-2, His-1)
nsubj(made-3, travels-2)
root(ROOT-0, made-3)
nsubj(man-7, him-4)
det(man-7, the-5)
amod(man-7, greatest-6)
xcomp(made-3, man-7)
predet(region-11, all-9)
det(region-11, that-10)
prep_in(man-7, region-11)
det(most-15, the-14)
nsubj(talked-16, most-15)
conj_and(made-3, talked-16)
prt(talked-16, about-17)
nsubj(come-21, people-20)
nsubj(look-45, people-20)
conj_and(made-3, come-21)
advmod(as-25, as-23)
advmod(as-25, much-24)
quantmod(thirty-26, as-25)
num(miles-27, thirty-26)
prep_from(come-21, miles-27)
advmod(miles-27, back-28)
advmod(miles-27, back-28')
conj_and(back-28, back-28')
det(country-31, the-30)
prep_from(back-28', country-31)
prep_in(back-28, country-31)
prep(back-28, over-35)
pcomp(over-35, in-36)
det(bottoms-39, the-37)
nn(bottoms-39, Illinois-38)
pobj(in-36, bottoms-39)
advmod(come-21, too-41)
advmod(look-45, just-43)
aux(look-45, to-44)
xcomp(come-21, look-45)
prep_at(look-45, him-47)
advmod(stand-53, there-50)
nsubj(stand-53, they-51)
nsubj(gawk-55, they-51)
aux(stand-53, 'd-52)
conj_and(made-3, stand-53)
conj_and(made-3, gawk-55)
conj_and(stand-53, gawk-55)
nsubj(gabble-60, he-58)
aux(gabble-60, 'd-59)
conj_and(made-3, gabble-60)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB never))
    (VP (VBP see)
      (NP
        (NP (NN anything))
        (PP (IN like)
          (NP (PRP it)))))
    (. .)))

nsubj(see-3, You-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
dobj(see-3, anything-4)
prep_like(anything-4, it-6)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (NP (EX there))
        (VP (VBD was) (RB n't)
          (NP (DT any) (NN way)
            (S
              (ADVP (RB now))
              (VP (TO to)
                (VP (VB settle)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD was)
                        (NP (DT the) (JJS greatest) (NN traveler)))))))))))
      (: ;)
      (S
        (NP (DT some))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP (JJ Nat))))))))
    (, ,)
    (NP (DT some))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (NNP Tom))))))
    (. .)))

discourse(was-4, Well-1)
expl(was-4, there-3)
ccomp(said-24, was-4)
neg(was-4, n't-5)
det(way-7, any-6)
nsubj(was-4, way-7)
advmod(settle-10, now-8)
aux(settle-10, to-9)
vmod(way-7, settle-10)
nsubj(traveler-15, which-11)
cop(traveler-15, was-12)
det(traveler-15, the-13)
amod(traveler-15, greatest-14)
ccomp(settle-10, traveler-15)
nsubj(said-18, some-17)
parataxis(was-4, said-18)
nsubj(Nat-21, it-19)
cop(Nat-21, was-20)
ccomp(said-18, Nat-21)
nsubj(said-24, some-23)
root(ROOT-0, said-24)
nsubj(Tom-27, it-25)
cop(Tom-27, was-26)
ccomp(said-24, Tom-27)

(ROOT
  (S
    (S
      (NP (NN Everybody))
      (VP (VBD allowed)
        (SBAR (IN that)
          (S
            (NP (NNP Nat))
            (VP (VBD had)
              (VP (VBN seen)
                (NP (DT the) (JJS most) (NN longitude))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB give)
              (PRT (RP in))
              (SBAR (IN that)
                (S
                  (SBAR
                    (WHNP (WDT whatever))
                    (S
                      (NP (NNP Tom))
                      (VP (VBD was)
                        (ADJP (JJ short)
                          (PP (IN in)
                            (NP (NN longitude)))))))
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN made)
                      (PRT (RP up))
                      (PP (IN in)
                        (NP (NN latitude)
                          (CC and)
                          (NN climate))))))))))))
    (. .)))

nsubj(allowed-2, Everybody-1)
root(ROOT-0, allowed-2)
mark(seen-6, that-3)
nsubj(seen-6, Nat-4)
aux(seen-6, had-5)
ccomp(allowed-2, seen-6)
det(longitude-9, the-7)
amod(longitude-9, most-8)
dobj(seen-6, longitude-9)
nsubj(had-13, they-12)
nsubj(give-15, they-12)
conj_but(allowed-2, had-13)
aux(give-15, to-14)
xcomp(had-13, give-15)
prt(give-15, in-16)
mark(made-26, that-17)
dobj(short-21, whatever-18)
nsubj(short-21, Tom-19)
cop(short-21, was-20)
advcl(made-26, short-21)
prep_in(short-21, longitude-23)
nsubj(made-26, he-24)
aux(made-26, had-25)
ccomp(give-15, made-26)
prt(made-26, up-27)
prep_in(made-26, latitude-29)
prep_in(made-26, climate-31)
conj_and(latitude-29, climate-31)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN about)
          (NP (DT a) (NN stand-off)))))
    (: ;)
    (S
      (NP
        (NP (RB so) (DT both))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP
              (VP (VB whoop)
                (PRT (RP up))
                (NP (PRP$ their) (JJ dangerous) (NNS adventures)))
              (, ,)
              (CC and)
              (VP (VB try)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (NP (RB ahead) (JJ THAT) (NN way)))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
det(stand-off-5, a-4)
prep_about(was-2, stand-off-5)
advmod(both-8, so-7)
nsubj(had-11, both-8)
nsubj(whoop-13, both-8)
nsubj(try-20, both-8)
nsubj(get-22, both-8)
prep_of(both-8, them-10)
parataxis(was-2, had-11)
aux(whoop-13, to-12)
xcomp(had-11, whoop-13)
prt(whoop-13, up-14)
poss(adventures-17, their-15)
amod(adventures-17, dangerous-16)
dobj(whoop-13, adventures-17)
xcomp(had-11, try-20)
conj_and(whoop-13, try-20)
aux(get-22, to-21)
xcomp(try-20, get-22)
advmod(way-25, ahead-23)
amod(way-25, THAT-24)
dobj(get-22, way-25)

(ROOT
  (S
    (S
      (NP
        (NP (DT That) (NN bullet-wound))
        (PP (IN in)
          (NP
            (NP (NNP Tom) (POS 's))
            (NN leg))))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ tough) (NN thing))
          (PP (IN for)
            (NP (NNP Nat) (NNP Parsons)))
          (S
            (VP (TO to)
              (VP (VB buck)
                (PP (IN against))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD bucked)
        (NP
          (NP (DT the) (JJS best))
          (SBAR
            (S
              (S
                (NP (PRP he))
                (VP (MD could)))
              (: ;)
              (CC and)
              (S
                (PP (IN at)
                  (NP (DT a) (NN disadvantage)))
                (, ,)
                (ADVP (RB too))
                (, ,)
                (VP
                  (VP
                    (SBAR (IN for)
                      (S
                        (NP (NNP Tom))
                        (VP (VBD did) (RB n't)
                          (VP (VB set)
                            (ADVP (RB still))
                            (SBAR (IN as)
                              (S
                                (NP (PRP he))
                                (VP (VBD 'd)
                                  (VP
                                    (ADVP (RB orter))
                                    (VBN done) (, ,)
                                    (S
                                      (VP (TO to)
                                        (VP (VB be)
                                          (ADJP (JJ fair)))))))))))))
                    (, ,)
                    (VP
                      (ADVP (CC but))
                      (ADVP (RB always))
                      (VBD got)
                      (PRT (RP up)))
                    (CC and)
                    (VP (VBD sauntered)
                      (PRT (RP around))))
                  (CC and)
                  (VP (VBD worked)
                    (NP (PRP$ his) (NN limp))
                    (SBAR (IN while)
                      (S
                        (NP (NNP Nat))
                        (VP (VBD was)
                          (VP (VBG painting)
                            (PRT (RP up))
                            (NP (DT the) (NN adventure))
                            (SBAR (IN that)
                              (S
                                (NP (PRP HE))
                                (VP (VBD had)
                                  (PP (IN in)
                                    (NP (NNP Washington)))))))))))))
              (: ;)
              (SBAR (IN for)
                (S
                  (NP (NNP Tom))
                  (ADVP (RB never))
                  (VP
                    (VP (VBP let)
                      (VP (VB go)
                        (NP (DT that) (JJ limp))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP$ his) (NN leg))
                            (VP
                              (VP (VBD got)
                                (ADVP (RB well)))
                              (, ,)
                              (CC but)
                              (VP (VBD practiced)
                                (NP (PRP it))
                                (NP (NNS nights))
                                (PP (IN at)
                                  (NP (NN home)))))))))
                    (, ,)
                    (CC and)
                    (VP (VBD kept)
                      (S
                        (NP (PRP it))
                        (ADJP (JJ good)
                          (PP (IN as)
                            (NP (JJ new) (NN right))))
                        (ADVP (RB along))))))))))))
    (. .)))

det(bullet-wound-2, That-1)
nsubj(thing-10, bullet-wound-2)
poss(leg-6, Tom-4)
prep_in(bullet-wound-2, leg-6)
cop(thing-10, was-7)
det(thing-10, a-8)
amod(thing-10, tough-9)
root(ROOT-0, thing-10)
nn(Parsons-13, Nat-12)
prep_for(thing-10, Parsons-13)
aux(buck-15, to-14)
vmod(thing-10, buck-15)
prep(buck-15, against-16)
nsubj(bucked-20, he-19)
conj_but(thing-10, bucked-20)
det(best-22, the-21)
dobj(bucked-20, best-22)
nsubj(could-24, he-23)
nsubj(got-51, he-23)
rcmod(best-22, could-24)
det(disadvantage-29, a-28)
prep_at(got-51, disadvantage-29)
advmod(got-51, too-31)
mark(set-37, for-33)
nsubj(set-37, Tom-34)
aux(set-37, did-35)
neg(set-37, n't-36)
advcl(got-51, set-37)
advmod(set-37, still-38)
mark(done-43, as-39)
nsubj(done-43, he-40)
nsubj(fair-47, he-40)
aux(done-43, 'd-41)
advmod(done-43, orter-42)
advcl(set-37, done-43)
aux(fair-47, to-45)
cop(fair-47, be-46)
xcomp(done-43, fair-47)
advmod(got-51, but-49)
advmod(got-51, always-50)
rcmod(best-22, got-51)
conj_and(could-24, got-51)
prt(got-51, up-52)
conj_and(could-24, sauntered-54)
conj_and(got-51, sauntered-54)
prt(sauntered-54, around-55)
conj_and(could-24, worked-57)
conj_and(got-51, worked-57)
poss(limp-59, his-58)
dobj(worked-57, limp-59)
mark(painting-63, while-60)
nsubj(painting-63, Nat-61)
aux(painting-63, was-62)
advcl(worked-57, painting-63)
prt(painting-63, up-64)
det(adventure-66, the-65)
dobj(painting-63, adventure-66)
mark(had-69, that-67)
nsubj(had-69, HE-68)
ccomp(painting-63, had-69)
prep_in(had-69, Washington-71)
mark(let-76, for-73)
nsubj(let-76, Tom-74)
nsubj(kept-94, Tom-74)
neg(let-76, never-75)
rcmod(best-22, let-76)
conj_and(could-24, let-76)
xcomp(let-76, go-77)
det(limp-79, that-78)
dobj(go-77, limp-79)
advmod(got-83, when-80)
poss(leg-82, his-81)
nsubj(got-83, leg-82)
nsubj(practiced-87, leg-82)
advcl(go-77, got-83)
advmod(got-83, well-84)
advcl(go-77, practiced-87)
conj_but(got-83, practiced-87)
dobj(practiced-87, it-88)
tmod(practiced-87, nights-89)
prep_at(practiced-87, home-91)
conj_and(could-24, kept-94)
conj_and(let-76, kept-94)
nsubj(good-96, it-95)
xcomp(kept-94, good-96)
amod(right-99, new-98)
prep_as(good-96, right-99)
advmod(good-96, along-100)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Nat) (POS 's))
        (NN adventure))
      (VP (VBD was)
        (PP (IN like)
          (NP (DT this)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how)
              (ADJP (JJ true)))
            (S
              (NP (PRP it))
              (VP (VBZ is)))))))
    (: ;)
    (S
      (ADVP (RB maybe))
      (NP (PRP he))
      (VP (VBD got)
        (NP (PRP it))
        (PP (IN out)
          (UCP
            (PP (IN of)
              (NP (DT a) (NN paper)))
            (, ,)
            (CC or)
            (ADVP (RB somewhere))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB say)
          (NP
            (NP (DT this))
            (PP (IN for)
              (NP (PRP him))))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (ADVP (RB DID))
              (VP (VBP know)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (TO to)
                      (VP (VB tell)
                        (NP (PRP it))))))))))))
    (. .)))

poss(adventure-3, Nat-1)
nsubj(was-4, adventure-3)
root(ROOT-0, was-4)
prep_like(was-4, this-6)
nsubj(know-11, I-8)
aux(know-11, do-9)
neg(know-11, n't-10)
conj_but(was-4, know-11)
advmod(is-15, how-12)
dep(how-12, true-13)
nsubj(is-15, it-14)
ccomp(know-11, is-15)
advmod(got-19, maybe-17)
nsubj(got-19, he-18)
conj_but(was-4, got-19)
dobj(got-19, it-20)
det(paper-24, a-23)
prep_out_of(got-19, paper-24)
conj_but(was-4, somewhere-27)
conj_or(got-19, somewhere-27)
nsubj(say-32, I-30)
aux(say-32, will-31)
conj_but(was-4, say-32)
dobj(say-32, this-33)
prep_for(this-33, him-35)
mark(know-40, that-37)
nsubj(know-40, he-38)
nsubj(tell-43, he-38)
advmod(know-40, DID-39)
ccomp(say-32, know-40)
advmod(tell-43, how-41)
aux(tell-43, to-42)
ccomp(know-40, tell-43)
xcomp(know-40, tell-43)
dobj(tell-43, it-44)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could)
        (VP (VB make)
          (NP
            (NP (NN anybody) (POS 's))
            (NN flesh) (NN crawl)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP (MD 'd)
          (VP
            (VP (VB turn)
              (ADJP (JJ pale)))
            (CC and)
            (VP (VB hold)
              (NP (PRP$ his) (NN breath))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBD told)
                    (NP (PRP it)))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB sometimes))
        (NP (NNS women)
          (CC and)
          (NNS girls))
        (VP (VBD got)
          (ADJP (RB so) (JJ faint))
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD could) (RB n't)
                (VP (VB stick)
                  (NP (PRP it))
                  (PRT (RP out)))))))))
    (. .)))

nsubj(make-3, He-1)
aux(make-3, could-2)
root(ROOT-0, make-3)
poss(crawl-7, anybody-4)
nn(crawl-7, flesh-6)
dobj(make-3, crawl-7)
nsubj(turn-12, he-10)
nsubj(hold-15, he-10)
aux(turn-12, 'd-11)
conj_and(make-3, turn-12)
acomp(turn-12, pale-13)
conj_and(make-3, hold-15)
conj_and(turn-12, hold-15)
poss(breath-17, his-16)
dobj(hold-15, breath-17)
advmod(told-20, when-18)
nsubj(told-20, he-19)
advcl(hold-15, told-20)
dobj(told-20, it-21)
advmod(faint-30, sometimes-24)
nsubj(faint-30, women-25)
conj_and(women-25, girls-27)
nsubj(faint-30, girls-27)
dep(faint-30, got-28)
advmod(faint-30, so-29)
conj_and(make-3, faint-30)
conj_and(turn-12, faint-30)
nsubj(stick-34, they-31)
aux(stick-34, could-32)
neg(stick-34, n't-33)
ccomp(faint-30, stick-34)
dobj(stick-34, it-35)
prt(stick-34, out-36)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT this) (NN way))
          (PRN (, ,)
            (ADVP (RB as) (RB near))
            (SBAR (IN as)
              (S
                (S
                  (NP (PRP I))
                  (VP
                    (VP (MD can)
                      (VP (VB remember) (: :)
                        (S
                          (NP (PRP He))
                          (VP
                            (VP (VB come)
                              (NP (NN a-loping))
                              (PP (IN into)
                                (NP (NNP Washington))))
                            (, ,)
                            (CC and)
                            (VP (VB put)
                              (PRT (RP up))
                              (NP (PRP$ his) (NN horse)))))))
                    (CC and)
                    (VP (VBD shoved)
                      (PRT (RP out))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NNP President) (POS 's))
                          (NN house)))
                      (PP (IN with)
                        (NP (PRP$ his) (NN letter))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP they))
                  (VP (VBD told)
                    (NP (PRP him))
                    (SBAR
                      (S
                        (NP (DT the) (NNP President))
                        (VP (VBD was)
                          (ADVP
                            (ADVP (RB up)
                              (PP (TO to)
                                (NP (DT the) (NNP Capitol))))
                            (, ,)
                            (CC and)
                            (ADVP (RB just)))
                          (VP (VBG going)
                            (S
                              (VP (TO to)
                                (VP (VB start)
                                  (PP (IN for)
                                    (NP (NNP Philadelphia))))))))))))))
            (: --)))
        (NP (RB not) (DT a) (NN minute))
        (S
          (VP (TO to)
            (VP (VB lose)
              (SBAR (IN if)
                (S
                  (NP (PRP he))
                  (VP (VBD wanted)
                    (S
                      (VP (TO to)
                        (VP (VB catch)
                          (NP (PRP him)))))))))))))
    (. .)))

discourse(way-6, Well-1)
nsubj(way-6, it-3)
cop(way-6, was-4)
det(way-6, this-5)
root(ROOT-0, way-6)
advmod(near-9, as-8)
dep(remember-13, near-9)
mark(remember-13, as-10)
nsubj(remember-13, I-11)
nsubj(shoved-27, I-11)
aux(remember-13, can-12)
dep(way-6, remember-13)
nsubj(come-16, He-15)
nsubj(put-22, He-15)
ccomp(remember-13, come-16)
parataxis(remember-13, come-16)
dobj(come-16, a-loping-17)
prep_into(come-16, Washington-19)
ccomp(remember-13, put-22)
parataxis(remember-13, put-22)
conj_and(come-16, put-22)
prt(put-22, up-23)
poss(horse-25, his-24)
dobj(put-22, horse-25)
dep(way-6, shoved-27)
conj_and(remember-13, shoved-27)
prt(shoved-27, out-28)
det(President-31, the-30)
poss(house-33, President-31)
prep_to(shoved-27, house-33)
poss(letter-36, his-35)
prep_with(shoved-27, letter-36)
nsubj(told-40, they-39)
dep(way-6, told-40)
conj_and(remember-13, told-40)
dobj(told-40, him-41)
det(President-43, the-42)
nsubj(going-52, President-43)
nsubj(start-54, President-43)
aux(going-52, was-44)
advmod(going-52, up-45)
det(Capitol-48, the-47)
prep_to(up-45, Capitol-48)
conj_and(up-45, just-51)
advmod(going-52, just-51)
dep(told-40, going-52)
aux(start-54, to-53)
xcomp(going-52, start-54)
prep_for(start-54, Philadelphia-56)
neg(minute-60, not-58)
det(minute-60, a-59)
dep(way-6, minute-60)
aux(lose-62, to-61)
vmod(way-6, lose-62)
mark(wanted-65, if-63)
nsubj(wanted-65, he-64)
nsubj(catch-67, he-64)
advcl(lose-62, wanted-65)
aux(catch-67, to-66)
xcomp(wanted-65, catch-67)
dobj(catch-67, him-68)

(ROOT
  (S
    (S
      (NP (NNP Nat))
      (`` `)
      (VP
        (ADVP (RBS most))
        (VBN dropped)))
    (, ,)
    (NP (PRP it))
    (VP (VBD made)
      (S
        (NP (PRP him))
        (ADJP (RB so) (JJ sick))))
    (. .)))

nsubj(dropped-4, Nat-1)
advmod(dropped-4, most-3)
vmod(made-7, dropped-4)
nsubj(made-7, it-6)
root(ROOT-0, made-7)
nsubj(sick-10, him-8)
advmod(sick-10, so-9)
xcomp(made-7, sick-10)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN horse))
      (VP (VBD was)
        (VP (VBN put)
          (PRT (RP up)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (. .)))

poss(horse-2, His-1)
nsubjpass(put-4, horse-2)
auxpass(put-4, was-3)
root(ROOT-0, put-4)
prt(put-4, up-5)
nsubj(know-11, he-8)
aux(know-11, did-9)
neg(know-11, n't-10)
conj_and(put-4, know-11)
nsubj(do-14, what-12)
aux(do-14, to-13)
ccomp(know-11, do-14)
xcomp(know-11, do-14)

(ROOT
  (S (CC But)
    (ADVP
      (NP (RB just) (RB then))
      (IN along))
    (VP (VBZ comes)
      (NP
        (NP (DT a) (NN darky))
        (VP (VBG driving)
          (NP (DT an) (JJ old) (NN ramshackly) (NN hack)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBP see)
        (NP (PRP$ his) (NN chance))))
    (. .)))

advmod(then-3, just-2)
npadvmod(along-4, then-3)
advmod(comes-5, along-4)
root(ROOT-0, comes-5)
det(darky-7, a-6)
dobj(comes-5, darky-7)
vmod(darky-7, driving-8)
det(hack-12, an-9)
amod(hack-12, old-10)
nn(hack-12, ramshackly-11)
dobj(driving-8, hack-12)
nsubj(see-16, he-15)
conj_and(comes-5, see-16)
poss(chance-18, his-17)
dobj(see-16, chance-18)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ rushes)
        (PRT (RP out)))
      (CC and)
      (VP (VBZ shouts) (: :) (`` ``)
        (S
          (NP (DT A) (NN half))
          (NP (DT a) (NN dollar))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP git)
                (NP (PRP me))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNP Capitol))
                    (PP (IN in)
                      (NP
                        (NP
                          (QP (PDT half) (DT an) (NN hour)))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (DT a) (NN quarter))
                          (NP (JJ extra)))))))
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP do)
                      (NP (PRP it))
                      (PP (IN in)
                        (NP (CD twenty) (NNS minutes))))))))))))
    (. !) ('' '')))

nsubj(rushes-2, He-1)
nsubj(shouts-5, He-1)
root(ROOT-0, rushes-2)
prt(rushes-2, out-3)
conj_and(rushes-2, shouts-5)
det(half-9, A-8)
nsubj(git-14, half-9)
det(dollar-11, a-10)
dep(git-14, dollar-11)
mark(git-14, if-12)
nsubj(git-14, you-13)
xcomp(shouts-5, git-14)
dobj(git-14, me-15)
det(Capitol-18, the-17)
prep_to(git-14, Capitol-18)
quantmod(hour-22, half-20)
quantmod(hour-22, an-21)
prep_in(Capitol-18, hour-22)
det(quarter-26, a-25)
prep_in(Capitol-18, quarter-26)
conj_and(hour-22, quarter-26)
dep(quarter-26, extra-27)
mark(do-30, if-28)
nsubj(do-30, you-29)
advcl(git-14, do-30)
dobj(do-30, it-31)
num(minutes-34, twenty-33)
prep_in(do-30, minutes-34)

(ROOT
  (S (`` ``)
    (VP (VB Done))
    (. !) ('' '')))

root(ROOT-0, Done-2)

(ROOT
  (S
    (VP (VBZ says)
      (NP (DT the) (NN darky)))
    (. .)))

root(ROOT-0, says-1)
det(darky-3, the-2)
dobj(says-1, darky-3)

(ROOT
  (S
    (S
      (VP (VB Nat)
        (SBAR
          (S
            (S
              (NP (PRP he))
              (VP
                (VP (VBD jumped)
                  (PRT (RP in)))
                (CC and)
                (VP (VBD slammed)
                  (NP (DT the) (NN door)))))
            (, ,)
            (CC and)
            (S
              (ADVP (RB away))
              (NP (PRP they))
              (VP (VBD went)
                (NP (NN a-ripping)
                  (CC and)
                  (NN a-tearing))
                (PP (IN over)
                  (NP (DT the) (JJ roughest) (NN road)))))))))
    (S
      (NP (DT a) (NN body))
      (ADVP (RB ever))
      (VP (VBP see)))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN racket))
        (PP (IN of)
          (NP (PRP it))))
      (VP (VBD was)
        (NP (NN something) (JJ awful))))
    (. .)))

root(ROOT-0, Nat-1)
nsubj(jumped-3, he-2)
nsubj(slammed-6, he-2)
dep(Nat-1, jumped-3)
prt(jumped-3, in-4)
dep(Nat-1, slammed-6)
conj_and(jumped-3, slammed-6)
det(door-8, the-7)
dobj(slammed-6, door-8)
advmod(went-13, away-11)
nsubj(went-13, they-12)
dep(Nat-1, went-13)
conj_and(jumped-3, went-13)
dobj(went-13, a-ripping-14)
dobj(went-13, a-tearing-16)
conj_and(a-ripping-14, a-tearing-16)
det(road-20, the-18)
amod(road-20, roughest-19)
prep_over(went-13, road-20)
det(body-22, a-21)
nsubj(see-24, body-22)
advmod(see-24, ever-23)
ccomp(Nat-1, see-24)
det(racket-28, the-27)
nsubj(something-32, racket-28)
prep_of(racket-28, it-30)
cop(something-32, was-31)
conj_and(Nat-1, something-32)
amod(something-32, awful-33)

(ROOT
  (S
    (S
      (NP (NNP Nat))
      (VP
        (VP (VBD passed)
          (NP (PRP$ his) (NNS arms))
          (PP (IN through)
            (NP (DT the) (NNS loops))))
        (CC and)
        (VP (VBD hung)
          (PRT (RP on))
          (PP (IN for)
            (NP (NN life)
              (CC and)
              (NN death))))))
    (, ,)
    (CC but)
    (S
      (S
        (ADVP (RB pretty) (RB soon))
        (NP (DT the) (NN hack))
        (VP
          (VP (VBD hit)
            (NP (DT a) (NN rock)))
          (CC and)
          (VP (VBD flew)
            (PRT (RP up))
            (PP (IN in)
              (NP (DT the) (NN air))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN bottom))
          (VP (VBD fell)
            (PRT (RP out))))
        (, ,)
        (CC and)
        (S
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBP come)
                  (PRT (RP down))
                  (NP
                    (NP (NNP Nat) (POS 's))
                    (NNS feet)))))
            (VP (VBD was)
              (PP (IN on)
                (NP (DT the) (NN ground)))))
          (, ,)
          (CC and)
          (S
            (NP (PRP he))
            (VP (VBP see)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (PP (IN in)
                      (NP (DT the)
                        (ADJP (RBS most) (JJ desperate))
                        (NN danger)))
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (MD could) (RB n't)
                          (VP (VB keep)
                            (PRT (RP up))
                            (PP (IN with)
                              (NP (DT the) (NN hack)))))))))))))))
    (. .)))

nsubj(passed-2, Nat-1)
nsubj(hung-9, Nat-1)
root(ROOT-0, passed-2)
poss(arms-4, his-3)
dobj(passed-2, arms-4)
det(loops-7, the-6)
prep_through(passed-2, loops-7)
conj_and(passed-2, hung-9)
prt(hung-9, on-10)
prep_for(hung-9, life-12)
prep_for(hung-9, death-14)
conj_and(life-12, death-14)
advmod(soon-18, pretty-17)
advmod(hit-21, soon-18)
det(hack-20, the-19)
nsubj(hit-21, hack-20)
nsubj(flew-25, hack-20)
conj_but(passed-2, hit-21)
det(rock-23, a-22)
dobj(hit-21, rock-23)
conj_but(passed-2, flew-25)
conj_and(hit-21, flew-25)
prt(flew-25, up-26)
det(air-29, the-28)
prep_in(flew-25, air-29)
det(bottom-33, the-32)
nsubj(fell-34, bottom-33)
conj_but(passed-2, fell-34)
conj_and(hit-21, fell-34)
prt(fell-34, out-35)
advmod(come-40, when-38)
nsubj(come-40, it-39)
advcl(was-45, come-40)
csubj(was-45, come-40)
prt(come-40, down-41)
poss(feet-44, Nat-42)
dobj(come-40, feet-44)
conj_and(hit-21, was-45)
conj_and(fell-34, was-45)
det(ground-48, the-47)
prep_on(was-45, ground-48)
nsubj(see-52, he-51)
conj_and(fell-34, see-52)
conj_and(was-45, see-52)
nsubj(was-54, he-53)
ccomp(see-52, was-54)
det(danger-59, the-56)
advmod(desperate-58, most-57)
amod(danger-59, desperate-58)
prep_in(was-54, danger-59)
mark(keep-64, if-60)
nsubj(keep-64, he-61)
aux(keep-64, could-62)
neg(keep-64, n't-63)
advcl(was-54, keep-64)
prt(keep-64, up-65)
det(hack-68, the-67)
prep_with(keep-64, hack-68)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (JJ horrible) (JJ scared))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD laid)
          (PP (IN into)
            (NP (PRP$ his) (NN work)))
          (PP (IN for)
            (NP
              (NP (DT all))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP
                    (VP (VBD was)
                      (ADJP (JJ worth)))
                    (, ,)
                    (CC and)
                    (VP (VBD hung)
                      (ADVP (RB tight))
                      (PP (TO to)
                        (NP (DT the) (NNS arm-loops))))))))))
        (CC and)
        (VP (VBD made)
          (SBAR
            (S
              (NP (PRP$ his) (NNS legs))
              (ADVP (RB fairly))
              (VP (VBP fly)))))))
    (. .)))

nsubj(scared-4, He-1)
cop(scared-4, was-2)
amod(scared-4, horrible-3)
root(ROOT-0, scared-4)
nsubj(laid-8, he-7)
nsubj(made-25, he-7)
conj_but(scared-4, laid-8)
poss(work-11, his-10)
prep_into(laid-8, work-11)
prep_for(laid-8, all-13)
nsubj(worth-16, he-14)
nsubj(hung-19, he-14)
cop(worth-16, was-15)
rcmod(all-13, worth-16)
rcmod(all-13, hung-19)
conj_and(worth-16, hung-19)
advmod(hung-19, tight-20)
det(arm-loops-23, the-22)
prep_to(hung-19, arm-loops-23)
conj_but(scared-4, made-25)
conj_and(laid-8, made-25)
poss(legs-27, his-26)
nsubj(fly-29, legs-27)
advmod(fly-29, fairly-28)
ccomp(made-25, fly-29)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD yelled)
          (CC and)
          (VBD shouted)
          (PP (TO to)
            (NP (DT the) (NN driver)))
          (S
            (VP (TO to)
              (VP (VB stop)))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB so))
          (VBD did)
          (NP
            (NP (DT the) (NNS crowds))
            (PP (IN along)
              (NP (DT the) (NN street))))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP they))
              (VP (MD could)
                (VP (VB see)
                  (NP (PRP$ his) (NNS legs))
                  (S
                    (VP (VBG spinning)
                      (PRT (RP along))
                      (PP (IN under)
                        (NP (DT the) (NN coach))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP$ his) (NN head)
          (CC and)
          (NNS shoulders))
        (VP (VBG bobbing)
          (ADVP (RB inside))
          (PP (IN through)
            (NP (DT the) (NNS windows)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (PP (IN in)
            (NP (JJ awful) (NN danger))))))
    (: ;)
    (CC but)
    (S
      (FRAG
        (X (DT the) (JJR more))
        (NP (PRP they)))
      (NP (DT all))
      (VP (VBD shouted)
        (SBAR
          (S
            (SBAR
              (X (DT the) (JJR more))
              (S
                (NP (DT the) (NN nigger))
                (VP
                  (VP (VBD whooped))
                  (CC and)
                  (VP
                    (VP (VBD yelled)
                      (CC and)
                      (VBD lashed)
                      (NP (DT the) (NNS horses)))
                    (CC and)
                    (VP (VBD shouted) (, ,) (`` ``)
                      (SQ (VBP Do) (RB n't)
                        (NP (PRP you))
                        (VP (VB fret))))))))
            (, ,)
            (NP (PRP I))
            (`` `)
            (VP (VBZ se)
              (ADJP (JJ gwine)
                (S
                  (VP (TO to)
                    (VP (VB git)
                      (S
                        (S
                          (NP (PRP you))
                          (VP (VBP dah)
                            (PP (IN in)
                              (NP
                                (NP (NN time))
                                (, ,)
                                (NP (NN boss))))))
                        (: ;)
                        (S
                          (NP (PRP I))
                          (VP (VBZ 's)
                            (ADJP (JJ gwine)
                              (S
                                (VP (TO to)
                                  (VP (VB do)
                                    (NP (PRP it))))))
                            (, ,)
                            (ADVP (RB sho))))))))))
            ('' ')))))
    (. !) ('' '')))

nsubj(yelled-2, He-1)
nsubj(shouted-4, He-1)
nsubj(stop-9, He-1)
nsubj(did-13, He-1)
root(ROOT-0, yelled-2)
conj_and(yelled-2, shouted-4)
det(driver-7, the-6)
prep_to(yelled-2, driver-7)
aux(stop-9, to-8)
xcomp(yelled-2, stop-9)
advmod(did-13, so-12)
conj_and(yelled-2, did-13)
det(crowds-15, the-14)
dobj(did-13, crowds-15)
det(street-18, the-17)
prep_along(crowds-15, street-18)
mark(see-23, for-20)
nsubj(see-23, they-21)
aux(see-23, could-22)
advcl(did-13, see-23)
poss(legs-25, his-24)
dobj(see-23, legs-25)
xcomp(see-23, spinning-26)
prt(spinning-26, along-27)
det(coach-30, the-29)
prep_under(spinning-26, coach-30)
poss(head-34, his-33)
nsubj(bobbing-37, head-34)
conj_and(head-34, shoulders-36)
nsubj(bobbing-37, shoulders-36)
conj_and(yelled-2, bobbing-37)
advmod(bobbing-37, inside-38)
det(windows-41, the-40)
prep_through(bobbing-37, windows-41)
nsubj(was-45, he-44)
conj_and(yelled-2, was-45)
conj_and(bobbing-37, was-45)
amod(danger-48, awful-47)
prep_in(was-45, danger-48)
det(more-52, the-51)
dep(they-53, more-52)
dep(shouted-55, they-53)
nsubj(shouted-55, all-54)
conj_but(yelled-2, shouted-55)
det(more-57, the-56)
dep(whooped-60, more-57)
det(nigger-59, the-58)
nsubj(whooped-60, nigger-59)
nsubj(yelled-62, nigger-59)
advcl(se-78, whooped-60)
conj_and(whooped-60, yelled-62)
advcl(se-78, yelled-62)
conj_and(whooped-60, lashed-64)
conj_and(yelled-62, lashed-64)
det(horses-66, the-65)
dobj(yelled-62, horses-66)
conj_and(whooped-60, shouted-68)
conj_and(yelled-62, shouted-68)
aux(fret-74, Do-71)
neg(fret-74, n't-72)
nsubj(fret-74, you-73)
dep(shouted-68, fret-74)
nsubj(se-78, I-76)
ccomp(shouted-55, se-78)
acomp(se-78, gwine-79)
aux(git-81, to-80)
xcomp(gwine-79, git-81)
nsubj(dah-83, you-82)
dep(git-81, dah-83)
prep_in(dah-83, time-85)
appos(time-85, boss-87)
nsubj(gwine-91, I-89)
nsubj(do-93, I-89)
cop(gwine-91, 's-90)
parataxis(dah-83, gwine-91)
aux(do-93, to-92)
xcomp(gwine-91, do-93)
dobj(do-93, it-94)
advmod(gwine-91, sho-96)

(ROOT
  (S
    (SBAR (IN for)
      (S
        (NP (PRP you))
        (VP (VBP see)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD thought)
                (SBAR
                  (S
                    (S
                      (NP (PRP they))
                      (VP (VBD were) (RB all)
                        (VP (VBG hurrying)
                          (NP (PRP him))
                          (PRT (RP up)))))
                    (, ,)
                    (CC and)
                    (, ,)
                    (PP (IN of)
                      (NP (NN course)))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD could) (RB n't)
      (VP (VB hear)
        (NP (NN anything))
        (PP (IN for)
          (NP
            (NP (DT the) (NN racket))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (VP (VBG making)))))))))
    (. .)))

mark(see-3, for-1)
nsubj(see-3, you-2)
advcl(hear-21, see-3)
nsubj(thought-5, he-4)
ccomp(see-3, thought-5)
nsubj(hurrying-9, they-6)
aux(hurrying-9, were-7)
advmod(hurrying-9, all-8)
dep(thought-5, hurrying-9)
dobj(hurrying-9, him-10)
prt(hurrying-9, up-11)
dep(thought-5, of-15)
conj_and(hurrying-9, of-15)
prep_of(hurrying-9, course-16)
nsubj(hear-21, he-18)
aux(hear-21, could-19)
neg(hear-21, n't-20)
root(ROOT-0, hear-21)
dobj(hear-21, anything-22)
det(racket-25, the-24)
prep_for(hear-21, racket-25)
nsubj(making-28, he-26)
aux(making-28, was-27)
rcmod(racket-25, making-28)

(ROOT
  (S (CC And)
    (S
      (S (IN so)
        (NP (PRP they))
        (VP (VBD went)
          (S
            (VP (VBG ripping)
              (PRT (RP along))))))
      (, ,)
      (CC and)
      (S
        (NP (NN everybody) (RB just))
        (ADJP (JJ petrified)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP it)))))))
      (: ;)
      (CC and)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD got)
              (PP (TO to)
                (NP (DT the) (NNP Capitol)))
              (PP (IN at)
                (NP (JJ last))))))
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (DT the) (JJS quickest) (NN trip))
            (SBAR
              (WHNP (WDT that))
              (S
                (ADVP (RB ever))
                (VP (VBD was)
                  (VP (VBN made)))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN everybody))
      (VP (VBD said)
        (ADVP (RB so))))
    (. .)))

dep(went-4, so-2)
nsubj(went-4, they-3)
nsubj(petrified-11, they-3)
nsubj(see-13, they-3)
root(ROOT-0, went-4)
xcomp(went-4, ripping-5)
prt(ripping-5, along-6)
dep(petrified-11, everybody-9)
advmod(everybody-9, just-10)
conj_and(went-4, petrified-11)
aux(see-13, to-12)
xcomp(petrified-11, see-13)
dobj(see-13, it-14)
advmod(got-19, when-17)
nsubj(got-19, they-18)
advcl(trip-29, got-19)
det(Capitol-22, the-21)
prep_to(got-19, Capitol-22)
prep_at(got-19, last-24)
nsubj(trip-29, it-25)
cop(trip-29, was-26)
det(trip-29, the-27)
amod(trip-29, quickest-28)
conj_and(went-4, trip-29)
nsubjpass(made-33, trip-29)
advmod(made-33, ever-31)
auxpass(made-33, was-32)
rcmod(trip-29, made-33)
nsubj(said-37, everybody-36)
conj_and(went-4, said-37)
advmod(said-37, so-38)

(ROOT
  (S
    (S
      (NP (DT The) (NNS horses))
      (VP (VBD laid)
        (PRT (RP down))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Nat))
      (VP (VBD dropped)))
    (, ,)
    (S
      (NP (DT all))
      (VP (VBD tuckered)
        (PRT (RP out))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (UCP
          (NP (DT all) (NN dust))
          (CC and)
          (ADJP (JJ rags)
            (CC and)
            (JJ barefooted)))))
    (: ;)
    (S (CC but)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD was)
            (PP
              (PP (IN in)
                (NP (NN time)))
              (CC and)
              (RB just)
              (PP (IN in)
                (NP (NN time)))))
          (, ,)
          (CC and)
          (VP (VBD caught)
            (NP (DT the) (NNP President)))))
      (CC and)
      (S
        (VP (VB give)
          (NP (PRP him))
          (NP (DT the) (NN letter)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NN everything))
        (VP (VBD was)
          (ADVP (DT all) (RB right))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NNP President))
          (VP (VBP give)
            (NP (PRP him))
            (NP
              (NP (DT a) (JJ free) (NN pardon))
              (PP (IN on)
                (NP (DT the) (NN spot))))))
        (, ,)
        (CC and)
        (S
          (NP (NNP Nat))
          (VP
            (VP (VBP give)
              (NP (DT the) (NN nigger))
              (NP
                (NP (CD two) (JJ extra) (NNS quarters))
                (PP (RB instead) (IN of)
                  (NP (CD one))))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB see)
                      (SBAR (IN that) (IN if)
                        (S
                          (NP (PRP he))
                          (VP (VBD had) (RB n't)
                            (VP (VBN had)
                              (NP
                                (NP (DT the) (NN hack))
                                (SBAR
                                  (S
                                    (NP (PRP he))
                                    (VP (MD would) (RB n't)
                                      (S
                                        (NP (`` `)
                                          (NP (SYM a))
                                          ('' ')
                                          (VP (VBN got)
                                            (ADVP (RB there))
                                            (PP (IN in)
                                              (NP (NN time)))))))))))))))))))
            (, ,)
            (CC nor)
            (VP
              (ADVP (RB anywhere)
                (PP (IN near)
                  (NP (PRP it)))))))))
    (. .)))

det(horses-2, The-1)
nsubj(laid-3, horses-2)
root(ROOT-0, laid-3)
prt(laid-3, down-4)
nsubj(dropped-8, Nat-7)
conj_and(laid-3, dropped-8)
nsubj(tuckered-11, all-10)
ccomp(laid-3, tuckered-11)
conj_and(laid-3, tuckered-11)
prt(tuckered-11, out-12)
nsubj(dust-18, he-15)
nsubj(rags-20, he-15)
cop(dust-18, was-16)
det(dust-18, all-17)
conj_and(laid-3, dust-18)
conj_and(laid-3, rags-20)
conj_and(dust-18, rags-20)
conj_and(dust-18, barefooted-22)
conj_and(rags-20, barefooted-22)
nsubj(was-26, he-25)
nsubj(caught-35, he-25)
nsubj(give-39, he-25)
conj_and(laid-3, was-26)
prep(was-26, in-27)
pobj(in-27, time-28)
prep(was-26, just-30)
conj_and(in-27, just-30)
dep(in-27, in-31)
pobj(in-31, time-32)
conj_and(laid-3, caught-35)
conj_and(was-26, caught-35)
det(President-37, the-36)
dobj(caught-35, President-37)
conj_and(laid-3, give-39)
conj_and(was-26, give-39)
iobj(give-39, him-40)
det(letter-42, the-41)
dobj(give-39, letter-42)
nsubj(was-46, everything-45)
conj_and(laid-3, was-46)
dep(right-48, all-47)
advmod(was-46, right-48)
det(President-52, the-51)
nsubj(give-53, President-52)
conj_and(laid-3, give-53)
conj_and(was-46, give-53)
iobj(give-53, him-54)
det(pardon-57, a-55)
amod(pardon-57, free-56)
dobj(give-53, pardon-57)
det(spot-60, the-59)
prep_on(pardon-57, spot-60)
nsubj(give-64, Nat-63)
conj_and(was-46, give-64)
conj_and(give-53, give-64)
det(nigger-66, the-65)
iobj(give-64, nigger-66)
num(quarters-69, two-67)
amod(quarters-69, extra-68)
dobj(give-64, quarters-69)
prep_instead_of(quarters-69, one-72)
mark(see-77, because-74)
nsubj(see-77, he-75)
aux(see-77, could-76)
advcl(give-64, see-77)
mark(had-83, that-78)
mark(had-83, if-79)
nsubj(had-83, he-80)
aux(had-83, had-81)
neg(had-83, n't-82)
advcl(see-77, had-83)
ccomp(see-77, had-83)
det(hack-85, the-84)
dobj(had-83, hack-85)
nsubj(would-87, he-86)
rcmod(hack-85, would-87)
neg(would-87, n't-88)
dep(would-87, a-90)
vmod(a-90, got-92)
advmod(got-92, there-93)
prep_in(got-92, time-95)
conj_and(give-53, anywhere-98)
conj_nor(give-64, anywhere-98)
prep_near(anywhere-98, it-100)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD WAS)
        (NP (DT a) (JJ powerful) (JJ good) (NN adventure))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom) (NNP Sawyer))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB work)
              (NP (PRP$ his) (JJ bullet-wound) (JJ mighty) (NN lively)))))
        (S
          (VP (TO to)
            (VP (VB hold)
              (NP (PRP$ his) (JJ own))
              (PP (IN against)
                (NP (PRP it))))))))
    (. .)))

nsubj(adventure-6, It-1)
cop(adventure-6, WAS-2)
det(adventure-6, a-3)
amod(adventure-6, powerful-4)
amod(adventure-6, good-5)
root(ROOT-0, adventure-6)
nn(Sawyer-10, Tom-9)
nsubj(had-11, Sawyer-10)
nsubj(work-13, Sawyer-10)
nsubj(hold-19, Sawyer-10)
conj_and(adventure-6, had-11)
aux(work-13, to-12)
xcomp(had-11, work-13)
poss(lively-17, his-14)
amod(lively-17, bullet-wound-15)
amod(lively-17, mighty-16)
dobj(work-13, lively-17)
aux(hold-19, to-18)
xcomp(had-11, hold-19)
poss(own-21, his-20)
dobj(hold-19, own-21)
prep_against(hold-19, it-23)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Well))
        (, ,)
        (PP (IN by)
          (CC and)
          (IN by)
          (NP
            (NP (NNP Tom) (POS 's))
            (NN glory))))
      (VP (VBD got)
        (S
          (VP (TO to)
            (VP (VB paling)
              (PRT (RP down))
              (S
                (VP (VBG gradu)
                  (NP (`` `)
                    (NP (NN ly))
                    (, ,)
                    (PP (IN on)
                      (NP
                        (NP (NN account))
                        (PP (IN of)
                          (NP
                            (NP (JJ other) (NNS things))
                            (VP (VBG turning)
                              (PRT (RP up))
                              (PP (IN for)
                                (NP (DT the) (NNS people)))
                              (S
                                (VP (TO to)
                                  (VP (VB talk)
                                    (PRT (RP about))))))
                            (PRN (: --)
                              (ADVP (RB first))
                              (UCP
                                (NP (DT a) (NN horse-race))
                                (, ,)
                                (CC and)
                                (PP (IN on)
                                  (NP
                                    (NP (NN top))
                                    (SBAR
                                      (WHPP (IN of)
                                        (WHNP (WDT that)))
                                      (S
                                        (NP (DT a) (NN house))
                                        (VP
                                          (VP (VBZ afire))
                                          (, ,)
                                          (CC and)
                                          (VP
                                            (PP
                                              (PP (IN on)
                                                (NP
                                                  (NP (NN top))
                                                  (PP (IN of)
                                                    (NP (DT that) (DT the) (NN circus)))))
                                              (, ,)
                                              (CC and)
                                              (PP (IN on)
                                                (NP
                                                  (NP (NN top))
                                                  (PP (IN of)
                                                    (NP (DT that))))))
                                            (NP
                                              (NP (DT the) (NN eclipse))
                                              (: ;)
                                              (CC and)
                                              (SBAR
                                                (WHNP (WDT that))
                                                (S
                                                  (VP (VBD started)
                                                    (NP (DT a) (NN revival))
                                                    (, ,)
                                                    (SBAR
                                                      (ADVP (JJ same))
                                                      (IN as)
                                                      (S
                                                        (NP (PRP it))
                                                        (ADVP (RB always))
                                                        (VP (VBZ does)))))))
                                              (, ,)
                                              (CC and)
                                              (SBAR
                                                (WHPP (IN by)
                                                  (WHNP (WDT that) (NN time)))
                                                (S
                                                  (NP (EX there))
                                                  (VP (VBD was) (RB n't)
                                                    (NP
                                                      (NP (DT any) (JJR more) (NN talk))
                                                      (PP (IN about)
                                                        (NP (NNP Tom))))))))))))))
                                (, ,)
                                (ADJP (RB so)
                                  (S
                                    (VP (TO to)
                                      (VP (VB speak)))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (ADVP (RB never))
      (VP (VBP see)
        (S
          (NP (DT a) (NN person))
          (ADJP (RB so) (JJ sick)
            (CC and)
            (JJ disgusted)))))
    (. .)))

nsubj(got-9, Well-1)
nsubj(paling-11, Well-1)
poss(glory-8, Tom-6)
prep_by(Well-1, glory-8)
root(ROOT-0, got-9)
aux(paling-11, to-10)
xcomp(got-9, paling-11)
prt(paling-11, down-12)
xcomp(paling-11, gradu-13)
dobj(gradu-13, ly-15)
amod(things-21, other-20)
prep_on_account_of(ly-15, things-21)
vmod(things-21, turning-22)
prt(turning-22, up-23)
det(people-26, the-25)
prep_for(turning-22, people-26)
aux(talk-28, to-27)
xcomp(turning-22, talk-28)
prt(talk-28, about-29)
dep(horse-race-33, first-31)
det(horse-race-33, a-32)
dep(things-21, horse-race-33)
prep_of(afire-42, top-37)
prep_on(so-85, top-37)
det(house-41, a-40)
nsubj(afire-42, house-41)
rcmod(top-37, afire-42)
prep_on(eclipse-58, top-46)
predet(circus-50, that-48)
det(circus-50, the-49)
prep_of(top-46, circus-50)
conj_and(top-46, top-54)
prep_on(eclipse-58, top-54)
prep_of(top-54, that-56)
det(eclipse-58, the-57)
rcmod(top-37, eclipse-58)
conj_and(afire-42, eclipse-58)
nsubj(started-62, that-61)
conj_and(afire-42, started-62)
conj_and(eclipse-58, started-62)
det(revival-64, a-63)
dobj(started-62, revival-64)
advmod(does-70, same-66)
mark(does-70, as-67)
nsubj(does-70, it-68)
advmod(does-70, always-69)
advcl(started-62, does-70)
det(time-75, that-74)
prep_by(was-77, time-75)
expl(was-77, there-76)
conj_and(afire-42, was-77)
conj_and(eclipse-58, was-77)
neg(was-77, n't-78)
det(talk-81, any-79)
amod(talk-81, more-80)
nsubj(was-77, talk-81)
prep_about(talk-81, Tom-83)
dep(things-21, so-85)
conj_and(horse-race-33, so-85)
aux(speak-87, to-86)
xcomp(so-85, speak-87)
nsubj(see-92, you-90)
neg(see-92, never-91)
conj_and(got-9, see-92)
det(person-94, a-93)
nsubj(sick-96, person-94)
nsubj(disgusted-98, person-94)
advmod(sick-96, so-95)
xcomp(see-92, sick-96)
xcomp(see-92, disgusted-98)
conj_and(sick-96, disgusted-98)

(ROOT
  (S
    (S
      (ADVP (RB Pretty) (RB soon))
      (NP (PRP he))
      (VP (VBD got)
        (PP (TO to)
          (S
            (VP (VBG worrying)
              (CC and)
              (VBG fretting)
              (NP (NN right))
              (PP (IN along)
                (NP
                  (NP (NN day) (RP in))
                  (CC and)
                  (NP (NN day) (RP out)))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD asked)
            (NP (PRP him))
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD WAS)
                  (NP (PRP he))
                  (PP (IN in)
                    (NP (PDT such) (DT a) (NN state) (RB about)))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (`` `)
            (VP
              (ADVP (RBS most))
              (VBD broke)
              (NP
                (NP
                  (NP (PRP$ his) (NN heart)
                    (S
                      (VP (TO to)
                        (VP (VB think)
                          (SBAR
                            (WHADVP (WRB how))
                            (S
                              (S
                                (NP (NN time))
                                (VP (VBD was)
                                  (VP (VBG slipping)
                                    (PRT (RP away)))))
                              (, ,)
                              (CC and)
                              (S
                                (NP (PRP him))
                                (VP (VBG getting)))))))))
                  (ADJP (JJR older)
                    (CC and)
                    (JJR older))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT no) (NNS wars))
                    (VP (VBG breaking)
                      (PRT (RP out)))))
                (CC and)
                (NP
                  (NP (DT no) (NN way))
                  (PP (IN of)
                    (S
                      (VP (VBG making)
                        (NP (DT a) (NN name))
                        (PP (IN for)
                          (NP (PRP himself)))
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (MD could)
                              (VP (VB see)))))))))))))))
    (. .)))

advmod(soon-2, Pretty-1)
advmod(got-4, soon-2)
nsubj(got-4, he-3)
root(ROOT-0, got-4)
prepc_to(got-4, worrying-6)
prepc_to(got-4, fretting-8)
conj_and(worrying-6, fretting-8)
dobj(worrying-6, right-9)
prep_along(worrying-6, day-11)
dep(day-11, in-12)
prep_along(worrying-6, day-14)
conj_and(day-11, day-14)
dep(day-14, out-15)
advmod(asked-20, when-18)
nsubj(asked-20, I-19)
advcl(said-32, asked-20)
dobj(asked-20, him-21)
nsubj(he-24, what-22)
cop(he-24, WAS-23)
dep(asked-20, he-24)
predet(state-28, such-26)
det(state-28, a-27)
prep_in(he-24, state-28)
advmod(state-28, about-29)
nsubj(said-32, he-31)
conj_and(got-4, said-32)
nsubj(broke-36, it-33)
advmod(broke-36, most-35)
ccomp(said-32, broke-36)
poss(heart-38, his-37)
dobj(broke-36, heart-38)
aux(think-40, to-39)
vmod(heart-38, think-40)
advmod(slipping-44, how-41)
nsubj(slipping-44, time-42)
aux(slipping-44, was-43)
dep(think-40, slipping-44)
prt(slipping-44, away-45)
nsubj(getting-49, him-48)
dep(think-40, getting-49)
conj_and(slipping-44, getting-49)
amod(heart-38, older-50)
amod(heart-38, older-52)
conj_and(older-50, older-52)
neg(wars-56, no-55)
dobj(broke-36, wars-56)
conj_and(heart-38, wars-56)
vmod(wars-56, breaking-57)
prt(breaking-57, out-58)
neg(way-61, no-60)
dobj(broke-36, way-61)
conj_and(heart-38, way-61)
prepc_of(way-61, making-63)
det(name-65, a-64)
dobj(making-63, name-65)
prep_for(making-63, himself-67)
mark(see-71, that-68)
nsubj(see-71, he-69)
aux(see-71, could-70)
ccomp(making-63, see-71)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT that))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (NP (NNS boys))
              (VP (VBZ is)
                (ADVP (RB always))
                (VP (VBG thinking))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ first) (NN one))
          (SBAR
            (S
              (NP (PRP I))
              (VP
                (VP
                  (ADVP (RB ever))
                  (VBD heard)
                  (S
                    (VP (VB come)
                      (PRT (RP out)))))
                (CC and)
                (VP (VBP say)
                  (NP (PRP it)))))))))
    (. .)))

advmod(way-5, Now-1)
nsubj(way-5, that-2)
cop(way-5, is-3)
det(way-5, the-4)
root(ROOT-0, way-5)
nsubj(thinking-9, boys-6)
aux(thinking-9, is-7)
advmod(thinking-9, always-8)
rcmod(way-5, thinking-9)
nsubj(one-16, he-12)
cop(one-16, was-13)
det(one-16, the-14)
amod(one-16, first-15)
conj_but(way-5, one-16)
nsubj(heard-19, I-17)
nsubj(say-23, I-17)
advmod(heard-19, ever-18)
rcmod(one-16, heard-19)
ccomp(heard-19, come-20)
prt(come-20, out-21)
rcmod(one-16, say-23)
conj_and(heard-19, say-23)
dobj(say-23, it-24)

(ROOT
  (S (IN So)
    (ADVP (RB then))
    (NP (PRP he))
    (VP (VBD set)
      (S
        (VP (TO to)
          (VP (VB work)
            (S
              (VP (TO to)
                (VP (VB get)
                  (PRT (RP up))
                  (NP (DT a) (NN plan)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (S
                            (S
                              (NP (PRP him))
                              (VP (VBD celebrated)))
                            (: ;)
                            (CC and)
                            (S
                              (ADVP (RB pretty) (RB soon))
                              (NP (PRP he))
                              (VP
                                (VP (VBD struck)
                                  (NP (PRP it)))
                                (, ,)
                                (CC and)
                                (VP (VBD offered)
                                  (S
                                    (VP (TO to)
                                      (VP (VB take)
                                        (NP
                                          (NP (PRP me))
                                          (CC and)
                                          (NP (NNP Jim)))
                                        (PP (IN in))))))))))))))))))))
    (. .)))

dep(set-4, So-1)
advmod(set-4, then-2)
nsubj(set-4, he-3)
nsubj(work-6, he-3)
nsubj(get-8, he-3)
root(ROOT-0, set-4)
aux(work-6, to-5)
xcomp(set-4, work-6)
aux(get-8, to-7)
xcomp(work-6, get-8)
prt(get-8, up-9)
det(plan-11, a-10)
dobj(get-8, plan-11)
aux(make-13, to-12)
vmod(plan-11, make-13)
nsubj(celebrated-15, him-14)
dep(make-13, celebrated-15)
advmod(soon-19, pretty-18)
advmod(struck-21, soon-19)
nsubj(struck-21, he-20)
nsubj(offered-25, he-20)
nsubj(take-27, he-20)
dep(make-13, struck-21)
conj_and(celebrated-15, struck-21)
dobj(struck-21, it-22)
conj_and(celebrated-15, offered-25)
conj_and(struck-21, offered-25)
aux(take-27, to-26)
xcomp(offered-25, take-27)
dobj(take-27, me-28)
dobj(take-27, Jim-30)
conj_and(me-28, Jim-30)
prep(take-27, in-31)

(ROOT
  (S
    (NP (NNP Tom) (NNP Sawyer))
    (VP (VBD was)
      (ADVP (RB always))
      (NP
        (ADJP (JJ free)
          (CC and)
          (JJ generous))
        (DT that) (NN way)))
    (. .)))

nn(Sawyer-2, Tom-1)
nsubj(way-9, Sawyer-2)
cop(way-9, was-3)
advmod(way-9, always-4)
amod(way-9, free-5)
conj_and(free-5, generous-7)
amod(way-9, generous-7)
det(way-9, that-8)
root(ROOT-0, way-9)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (NN a-plenty))
          (PP (IN of)
            (NP
              (NP (NNS boys))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (ADJP (RB mighty) (JJ good)
                      (CC and)
                      (JJ friendly)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP YOU))
                          (ADVP (RB 'VE))
                          (VP (VBD got)
                            (NP (DT a) (JJ good) (NN thing))))))))))))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT a) (JJ good) (NN thing))
          (VP (VBZ happens)
            (S
              (VP (TO to)
                (VP (VB come)
                  (NP (PRP$ their) (NN way))))))))
      (NP (PRP they))
      (VP (VBP do) (RB n't)
        (VP
          (VP (VB say)
            (NP (DT a) (NN word))
            (PP (TO to)
              (NP (PRP you))))
          (, ,)
          (CC and)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB hog)
                  (S
                    (NP (PRP it))
                    (NP (DT all))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, a-plenty-3)
prep_of(a-plenty-3, boys-5)
nsubj(good-9, boys-5)
nsubj(friendly-11, boys-5)
cop(good-9, 's-7)
advmod(good-9, mighty-8)
rcmod(boys-5, good-9)
rcmod(boys-5, friendly-11)
conj_and(good-9, friendly-11)
advmod(got-15, when-12)
nsubj(got-15, YOU-13)
advmod(got-15, 'VE-14)
ccomp(good-9, got-15)
det(thing-18, a-16)
amod(thing-18, good-17)
dobj(got-15, thing-18)
advmod(happens-25, when-21)
det(thing-24, a-22)
amod(thing-24, good-23)
nsubj(happens-25, thing-24)
nsubj(come-27, thing-24)
advcl(say-33, happens-25)
aux(come-27, to-26)
xcomp(happens-25, come-27)
poss(way-29, their-28)
dobj(come-27, way-29)
nsubj(say-33, they-30)
nsubj(try-40, they-30)
nsubj(hog-42, they-30)
aux(say-33, do-31)
neg(say-33, n't-32)
conj_but('s-2, say-33)
det(word-35, a-34)
dobj(say-33, word-35)
prep_to(say-33, you-37)
conj_but('s-2, try-40)
conj_and(say-33, try-40)
aux(hog-42, to-41)
xcomp(try-40, hog-42)
nsubj(all-44, it-43)
xcomp(hog-42, all-44)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ war) (RB n't)
        (ADVP (RB ever))
        (VP (VB Tom)
          (NP
            (NP (NNP Sawyer) (POS 's))
            (NN way)))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB say)
        (NP
          (NP (DT that))
          (PP (IN for)
            (NP (PRP him))))))
    (. .)))

nsubj(war-2, That-1)
ccomp(say-12, war-2)
neg(war-2, n't-3)
advmod(war-2, ever-4)
dep(war-2, Tom-5)
poss(way-8, Sawyer-6)
dobj(Tom-5, way-8)
nsubj(say-12, I-10)
aux(say-12, can-11)
root(ROOT-0, say-12)
dobj(say-12, that-13)
prep_for(that-13, him-15)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP
              (NP (NNS boys))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD will)
                    (VP
                      (VP (VB come)
                        (S
                          (VP (VBG hankering)
                            (CC and)
                            (VBG groveling)
                            (PP (IN around)
                              (NP (PRP you)))))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP you))
                            (VP (VBP 've)
                              (VP (VBN got)
                                (NP (DT an) (NN apple)))))))
                      (CC and)
                      (VP (VB beg)
                        (NP (DT the) (NN core))
                        (PRT (RP off))
                        (PP (IN of)
                          (NP (PRP you)))))))))))))
    (: ;)
    (S
      (S (CC but)
        (SBAR
          (WHADVP (WRB when))
          (S
            (S
              (NP (PRP they))
              (VP (VBP 've)
                (VP (VBN got)
                  (NP (CD one)))))
            (, ,)
            (CC and)
            (S
              (NP (PRP you))
              (VP
                (VP (VB beg)
                  (PP (IN for)
                    (NP (DT the) (NN core))))
                (CC and)
                (VP (VB remind)
                  (NP (PRP them))
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (PRP you))
                      (VP (VBP give)
                        (NP (PRP them))
                        (NP (DT a) (JJ core) (NN one) (NN time))))))))))
        (, ,)
        (NP (PRP they))
        (VP (VBP say)
          (S
            (VP (VB thank)
              (S
                (NP (PRP you))
                (`` `)
                (ADJP
                  (ADJP (JJS most))
                  (PP (TO to)
                    (NP (NN death)))))))))
      (, ,)
      (CC but)
      (S
        (NP (EX there))
        (VP (VBP ai) (RB n't)
          (ADJP (JJ a-going)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT no) (NN core)))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, plenty-3)
prep_of(plenty-3, boys-5)
nsubj(come-8, boys-5)
nsubj(beg-21, boys-5)
aux(come-8, will-7)
rcmod(boys-5, come-8)
xcomp(come-8, hankering-9)
xcomp(come-8, groveling-11)
conj_and(hankering-9, groveling-11)
prep_around(hankering-9, you-13)
advmod(got-17, when-14)
nsubj(got-17, you-15)
aux(got-17, 've-16)
advcl(come-8, got-17)
det(apple-19, an-18)
dobj(got-17, apple-19)
rcmod(boys-5, beg-21)
conj_and(come-8, beg-21)
det(core-23, the-22)
dobj(beg-21, core-23)
prep_off_of(beg-21, you-26)
advmod(got-32, when-29)
nsubj(got-32, they-30)
aux(got-32, 've-31)
advcl(say-54, got-32)
dobj(got-32, one-33)
nsubj(beg-37, you-36)
nsubj(remind-42, you-36)
conj_and(got-32, beg-37)
advcl(say-54, beg-37)
det(core-40, the-39)
prep_for(beg-37, core-40)
conj_and(got-32, remind-42)
conj_and(beg-37, remind-42)
dobj(remind-42, them-43)
advmod(give-46, how-44)
nsubj(give-46, you-45)
dep(remind-42, give-46)
iobj(give-46, them-47)
det(time-51, a-48)
amod(time-51, core-49)
nn(time-51, one-50)
dobj(give-46, time-51)
nsubj(say-54, they-53)
nsubj(ai-64, they-53)
parataxis('s-2, say-54)
ccomp(say-54, thank-55)
dep(most-58, you-56)
dep(thank-55, most-58)
prep_to(most-58, death-60)
expl(ai-64, there-63)
parataxis('s-2, ai-64)
conj_but(say-54, ai-64)
neg(ai-64, n't-65)
acomp(ai-64, a-going-66)
aux(core-70, to-67)
cop(core-70, be-68)
neg(core-70, no-69)
xcomp(a-going-66, core-70)

(ROOT
  (S
    (S (CC But)
      (NP (PRP I))
      (VP (VBP notice)
        (SBAR
          (S
            (NP (PRP they))
            (ADVP (RB always))
            (VP (VBP git)
              (S
                (VP (VB come)
                  (PRT (RP up))
                  (PP (IN with)))))))))
    (: ;)
    (S
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD got)
              (S
                (VP (TO to)
                  (VP (VB do))))))))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB wait))))))
    (. .)))

cc(notice-3, But-1)
nsubj(notice-3, I-2)
root(ROOT-0, notice-3)
nsubj(git-6, they-4)
advmod(git-6, always-5)
ccomp(notice-3, git-6)
ccomp(git-6, come-7)
prt(come-7, up-8)
prep(come-7, with-9)
nsubj(is-16, all-11)
nsubj(wait-18, all-11)
nsubj(got-13, you-12)
nsubj(do-15, you-12)
rcmod(all-11, got-13)
aux(do-15, to-14)
xcomp(got-13, do-15)
parataxis(notice-3, is-16)
aux(wait-18, to-17)
xcomp(is-16, wait-18)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP we))
      (VP (VBD went)
        (PRT (RP out))
        (PP (IN in)
          (NP (DT the) (NNS woods)))
        (PP (IN on)
          (NP (DT the) (NN hill)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBD told)
        (NP (PRP us))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP (VBD was))))))
    (. .)))

discourse(went-4, Well-1)
nsubj(went-4, we-3)
root(ROOT-0, went-4)
prt(went-4, out-5)
det(woods-8, the-7)
prep_in(went-4, woods-8)
det(hill-11, the-10)
prep_on(went-4, hill-11)
nsubj(told-15, Tom-14)
conj_and(went-4, told-15)
dobj(told-15, us-16)
dobj(was-19, what-17)
nsubj(was-19, it-18)
dep(told-15, was-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (NN crusade)))
    (. .)))

nsubj(crusade-4, It-1)
cop(crusade-4, was-2)
det(crusade-4, a-3)
root(ROOT-0, crusade-4)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT a) (NN crusade)))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(crusade-5, a-4)
nsubj(What-2, crusade-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says))
    (. .)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD looked)
      (SBAR
        (S
          (NP (NNP scornful))
          (, ,)
          (NP
            (NP (DT the) (NN way))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBZ 's)
                  (ADVP (RB always))
                  (VP (VBN done)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP
                          (VP (VBD was)
                            (ADJP (JJ ashamed))
                            (PP (IN of)
                              (NP (DT a) (NN person))))
                          (, ,)
                          (CC and)
                          (VP (VBZ says) (: :) (`` ``)
                            (S
                              (NP (NNP Huck) (NNP Finn))
                              (, ,)
                              (VP (VB do)
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP (VBP mean)
                                      (S
                                        (VP (TO to)
                                          (VP (VB tell)
                                            (NP (PRP me)))))))))))))))))))
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB know)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT a) (NN crusade))
                  (VP (VBZ is)))))))))
    (. ?) ('' '')))

nsubj(looked-2, He-1)
root(ROOT-0, looked-2)
nsubj(know-35, scornful-3)
det(way-6, the-5)
nsubj(know-35, way-6)
nsubjpass(done-10, he-7)
auxpass(done-10, 's-8)
advmod(done-10, always-9)
rcmod(way-6, done-10)
advmod(ashamed-14, when-11)
nsubj(ashamed-14, he-12)
nsubj(says-20, he-12)
cop(ashamed-14, was-13)
advcl(done-10, ashamed-14)
det(person-17, a-16)
prep_of(ashamed-14, person-17)
advcl(done-10, says-20)
conj_and(ashamed-14, says-20)
nn(Finn-24, Huck-23)
nsubj(do-26, Finn-24)
ccomp(says-20, do-26)
nsubj(mean-28, you-27)
nsubj(tell-30, you-27)
ccomp(do-26, mean-28)
aux(tell-30, to-29)
xcomp(mean-28, tell-30)
dobj(tell-30, me-31)
nsubj(know-35, you-32)
aux(know-35, do-33)
neg(know-35, n't-34)
ccomp(looked-2, know-35)
dobj(is-39, what-36)
det(crusade-38, a-37)
nsubj(is-39, crusade-38)
ccomp(know-35, is-39)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBZ says))
    (NP (PRP I))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)))
    (. .)))

dep(says-5, No-2)
root(ROOT-0, says-5)
nsubj(says-5, I-6)
nsubj(do-10, I-9)
ccomp(says-5, do-10)
neg(do-10, n't-11)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (PP (TO to))
        (, ,)
        (ADVP (RB nuther))))
    (. .)))

cc(care-5, And-1)
nsubj(care-5, I-2)
aux(care-5, do-3)
neg(care-5, n't-4)
root(ROOT-0, care-5)
prep(care-5, to-6)
advmod(care-5, nuther-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP
        (VP (VBN lived)
          (PP (IN till)
            (NP (RB now))))
        (CC and)
        (VP (VBN done)
          (PP (IN without)
            (NP (PRP it))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP (PRP$ my) (NN health))))
      (, ,)
      (ADVP (RB too)))
    (. .)))

nsubj(lived-3, I-1)
nsubj(done-7, I-1)
nsubj(had-12, I-1)
aux(lived-3, 've-2)
root(ROOT-0, lived-3)
prep(lived-3, till-4)
pobj(till-4, now-5)
conj_and(lived-3, done-7)
prep_without(done-7, it-9)
conj_and(lived-3, had-12)
poss(health-14, my-13)
dobj(had-12, health-14)
advmod(lived-3, too-16)

(ROOT
  (S (CC But)
    (S
      (ADVP (RB as) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP tell)
              (NP (PRP me))))))
      (, ,)
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB know))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (ADVP (RB soon))
        (ADJP (JJ enough))))
    (. .)))

advmod(soon-3, as-2)
advmod(know-11, soon-3)
mark(tell-6, as-4)
nsubj(tell-6, you-5)
ccomp(soon-3, tell-6)
dobj(tell-6, me-7)
nsubj(know-11, I-9)
aux(know-11, 'll-10)
root(ROOT-0, know-11)
nsubj(enough-17, that-14)
cop(enough-17, 's-15)
advmod(enough-17, soon-16)
conj_and(know-11, enough-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (NP (DT any) (NN use))
        (PP (IN in)
          (S
            (VP
              (VP (VBG finding)
                (PRT (RP out))
                (NP (NNS things)))
              (CC and)
              (VP (VBG clogging)
                (PRT (RP up))
                (NP (PRP$ my) (NN head))
                (PP (IN with)
                  (NP
                    (NP (PRP them))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP I))
                        (VP (MD may) (RB n't)
                          (ADVP (RB ever))
                          (VP (VB have)
                            (NP (DT any) (NN occasion)
                              (S
                                (VP (TO to)
                                  (VP (VB use)
                                    (NP (PRP 'em))))))))))))))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
det(use-6, any-5)
dobj(see-4, use-6)
prepc_in(see-4, finding-8)
prt(finding-8, out-9)
dobj(finding-8, things-10)
prepc_in(see-4, clogging-12)
conj_and(finding-8, clogging-12)
prt(clogging-12, up-13)
poss(head-15, my-14)
dobj(clogging-12, head-15)
prep_with(clogging-12, them-17)
tmod(have-23, them-17)
advmod(have-23, when-18)
nsubj(have-23, I-19)
aux(have-23, may-20)
neg(have-23, n't-21)
advmod(have-23, ever-22)
rcmod(them-17, have-23)
det(occasion-25, any-24)
dobj(have-23, occasion-25)
aux(use-27, to-26)
vmod(occasion-25, use-27)
dobj(use-27, 'em-28)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (NNP Lance) (NNP Williams))))
    (, ,)
    (NP (PRP he))
    (VP (VBD learned)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (TO to)
            (VP (VB talk)
              (NP (NNP Choctaw))
              (ADVP (RB here))
              (SBAR (IN till)
                (S
                  (NP (PRP one))
                  (VP
                    (VP (VBP come))
                    (CC and)
                    (VP (VBD dug)
                      (NP (PRP$ his) (NN grave))
                      (PP (IN for)
                        (NP (PRP him))))))))))))
    (. .)))

expl(was-2, There-1)
ccomp(learned-7, was-2)
nn(Williams-4, Lance-3)
nsubj(was-2, Williams-4)
nsubj(learned-7, he-6)
nsubj(talk-10, he-6)
root(ROOT-0, learned-7)
advmod(talk-10, how-8)
aux(talk-10, to-9)
ccomp(learned-7, talk-10)
xcomp(learned-7, talk-10)
dobj(talk-10, Choctaw-11)
advmod(talk-10, here-12)
mark(come-15, till-13)
nsubj(come-15, one-14)
nsubj(dug-17, one-14)
advcl(talk-10, come-15)
advcl(talk-10, dug-17)
conj_and(come-15, dug-17)
poss(grave-19, his-18)
dobj(dug-17, grave-19)
prep_for(dug-17, him-21)

(ROOT
  (SBARQ
    (FRAG
      (INTJ (RB Now))
      (, ,)
      (ADVP (RB then)))
    (, ,)
    (SBARQ
      (WHNP (WP what))
      (SQ (VBZ 's)
        (NP (DT a) (NN crusade))))
    (. ?)))

discourse(then-3, Now-1)
dep(what-5, then-3)
root(ROOT-0, what-5)
cop(what-5, 's-6)
det(crusade-8, a-7)
nsubj(what-5, crusade-8)

(ROOT
  (S
    (S (CC But)
      (NP (PRP I))
      (VP (MD can)
        (VP (VB tell)
          (NP (PRP you))
          (NP
            (NP (CD one) (NN thing))
            (SBAR (IN before)
              (S
                (NP (PRP you))
                (VP (VBP begin))))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT a) (NN patent-right)))))
      (, ,)
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN money))
          (PP (IN in)
            (NP (PRP it))))))
    (. .)))

cc(tell-4, But-1)
nsubj(tell-4, I-2)
aux(tell-4, can-3)
root(ROOT-0, tell-4)
iobj(tell-4, you-5)
num(thing-7, one-6)
dobj(tell-4, thing-7)
nsubj(begin-10, you-9)
prepc_before(thing-7, begin-10)
mark(patent-right-16, if-12)
nsubj(patent-right-16, it-13)
cop(patent-right-16, 's-14)
det(patent-right-16, a-15)
advcl('s-19, patent-right-16)
expl('s-19, there-18)
parataxis(tell-4, 's-19)
neg(money-21, no-20)
nsubj('s-19, money-21)
prep_in(money-21, it-23)

(ROOT
  (VP
    (NP
      (NP (NNP Bill))
      (PP (IN Thompson)
        (NP (PRP he))
        (: --))
      ('' ''))
    (ADJP (`` ``) (RB Patent-right) (VBN !) ('' ''))))

dobj(!-8, Bill-1)
prep_thompson(Bill-1, he-3)
advmod(!-8, Patent-right-7)

(ROOT
  (S
    (VP (VBZ says)
      (NP (PRP he)))
    (. .)))

root(ROOT-0, says-1)
dobj(says-1, he-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VB see)
      (NP (PDT such) (DT an) (NN idiot)))
    (. .)))

nsubj(see-4, I-2)
neg(see-4, never-3)
root(ROOT-0, see-4)
predet(idiot-7, such-5)
det(idiot-7, an-6)
dobj(see-4, idiot-7)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (DT a) (NN crusade))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN kind))
        (PP (IN of)
          (NP (NN war)))))
    (. .) ('' '')))

discourse(kind-7, Why-1)
det(crusade-4, a-3)
nsubj(kind-7, crusade-4)
cop(kind-7, is-5)
det(kind-7, a-6)
root(ROOT-0, kind-7)
prep_of(kind-7, war-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD must)
            (VP (VB be)
              (VP (VBG losing)
                (NP (PRP$ his) (NN mind))))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(losing-6, he-3)
aux(losing-6, must-4)
aux(losing-6, be-5)
ccomp(thought-2, losing-6)
poss(mind-8, his-7)
dobj(losing-6, mind-8)

(ROOT
  (S (CC But)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (PP (IN in)
          (NP (JJ real) (NN earnest)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBD went)
          (ADVP (RB right))
          (PP (IN on))
          (, ,)
          (ADVP (RB perfectly))))
      (VP (MD ca)
        (VP (VBP 'm))))
    (. .)))

discourse(was-5, no-2)
nsubj(was-5, he-4)
root(ROOT-0, was-5)
amod(earnest-8, real-7)
prep_in(was-5, earnest-8)
csubj('m-17, went-11)
advmod(went-11, right-12)
prep(went-11, on-13)
advmod(went-11, perfectly-15)
aux('m-17, ca-16)
conj_and(was-5, 'm-17)

(ROOT
  (S (`` ``)
    (NP (DT A) (NN crusade))
    (VP (VBZ is)
      (NP (DT a) (NN war)
        (S
          (VP (TO to)
            (VP (VB recover)
              (NP (DT the) (JJ Holy) (NN Land))
              (PP (IN from)
                (NP (DT the) (NN paynim))))))))
    (. .) ('' '')))

det(crusade-3, A-2)
nsubj(war-6, crusade-3)
cop(war-6, is-4)
det(war-6, a-5)
root(ROOT-0, war-6)
aux(recover-8, to-7)
vmod(war-6, recover-8)
det(Land-11, the-9)
amod(Land-11, Holy-10)
dobj(recover-8, Land-11)
det(paynim-14, the-13)
prep_from(recover-8, paynim-14)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT Which) (NN Holy))
    (SQ
      (VP (VBP Land)))
    (. ?) ('' '')))

det(Holy-3, Which-2)
nsubj(Land-4, Holy-3)
root(ROOT-0, Land-4)

(ROOT
  (S (`` ``)
    (S
      (INTJ (WRB Why))
      (, ,)
      (NP (DT the) (NNP Holy))
      (VP (VBP Land)))
    (: --)
    (S
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (PP (CC but)
          (NP (CD one)))))
    (. .) ('' '')))

discourse(Land-6, Why-2)
det(Holy-5, the-4)
nsubj(Land-6, Holy-5)
root(ROOT-0, Land-6)
expl(ai-9, there-8)
parataxis(Land-6, ai-9)
neg(ai-9, n't-10)
prep(ai-9, but-11)
pobj(but-11, one-12)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB want)
        (PP (IN of)
          (NP (PRP it)))))
    (. ?) ('' '')))

dobj(want-5, What-2)
aux(want-5, do-3)
nsubj(want-5, we-4)
root(ROOT-0, want-5)
prep_of(want-5, it-7)

(ROOT
  (SQ
    (INTJ (`` ``) (UH Why))
    (, ,) (MD ca) (RB n't)
    (NP (PRP you))
    (VP (VB understand))
    (. ?)))

discourse(understand-7, Why-2)
aux(understand-7, ca-4)
neg(understand-7, n't-5)
nsubj(understand-7, you-6)
root(ROOT-0, understand-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (PP (IN in)
          (NP
            (NP (DT the) (NNS hands))
            (PP (IN of)
              (NP (DT the) (NN paynim)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (PRP$ our) (NN duty)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (PRP it))
                (PRT (RP away))
                (PP (IN from)
                  (NP (PRP them)))))))))
    (. .) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
det(hands-5, the-4)
prep_in('s-2, hands-5)
det(paynim-8, the-7)
prep_of(hands-5, paynim-8)
nsubj(duty-14, it-11)
cop(duty-14, 's-12)
poss(duty-14, our-13)
conj_and('s-2, duty-14)
aux(take-16, to-15)
vmod(duty-14, take-16)
dobj(take-16, it-17)
prep_away_from(take-16, them-20)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (PRP we))
      (VP (VB come)
        (S
          (VP (TO to)
            (VP (VB let)
              (S
                (NP (PRP them))
                (NP
                  (NP (NN git) (NN hold))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. ?) ('' '')))

advmod(come-5, How-2)
aux(come-5, did-3)
nsubj(come-5, we-4)
nsubj(let-7, we-4)
root(ROOT-0, come-5)
aux(let-7, to-6)
xcomp(come-5, let-7)
nsubj(hold-10, them-8)
nn(hold-10, git-9)
xcomp(let-7, hold-10)
prep_of(hold-10, it-12)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBD did) (RB n't)
      (VP (VB come)
        (S
          (VP (TO to)
            (VP (VB let)
              (S
                (NP (PRP them))
                (NP
                  (NP (NN git) (NN hold))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(come-5, We-2)
nsubj(let-7, We-2)
aux(come-5, did-3)
neg(come-5, n't-4)
root(ROOT-0, come-5)
aux(let-7, to-6)
xcomp(come-5, let-7)
nsubj(hold-10, them-8)
nn(hold-10, git-9)
xcomp(let-7, hold-10)
prep_of(hold-10, it-12)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB always))
    (VP (VBD had)
      (NP (PRP it)))
    (. .) ('' '')))

nsubj(had-3, They-1)
advmod(had-3, always-2)
root(ROOT-0, had-3)
dobj(had-3, it-4)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (NNP Tom))
    (PRN (, ,)
      (S
        (ADVP (RB then))
        (NP (PRP it))
        (VP (MD must)
          (VP (VB belong)
            (PP (TO to)
              (NP (PRP them))))))
      (, ,))
    (VP (VBP do)
      (VP (RB n't)
        (NP (PRP it))))
    (. ?) ('' '')))

discourse(it-15, Why-2)
nsubj(it-15, Tom-4)
advmod(belong-9, then-6)
nsubj(belong-9, it-7)
aux(belong-9, must-8)
parataxis(it-15, belong-9)
prep_to(belong-9, them-11)
aux(it-15, do-13)
neg(it-15, n't-14)
root(ROOT-0, it-15)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (PP (IN of)
      (NP (NN course)))
    (NP (PRP it))
    (VP (VBZ does))
    (. .)))

advmod(does-6, Why-2)
prep_of(does-6, course-4)
nsubj(does-6, it-5)
root(ROOT-0, does-6)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD did) (RB n't))))))
    (. ?) ('' '')))

nsubj(said-2, Who-1)
root(ROOT-0, said-2)
nsubj(did-4, it-3)
ccomp(said-2, did-4)
neg(did-4, n't-5)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD studied)
        (PRT (RP over))
        (NP (PRP it)))
      (, ,)
      (CC but)
      (VP (MD could) (RB n't)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB git)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN right))
                    (PP (IN of)
                      (NP
                        (NP (PRP it))
                        (, ,)
                        (NP (DT no) (NN way))))))))))))
    (. .)))

nsubj(studied-2, I-1)
nsubj(seem-9, I-1)
nsubj(git-11, I-1)
root(ROOT-0, studied-2)
prt(studied-2, over-3)
dobj(studied-2, it-4)
aux(seem-9, could-7)
neg(seem-9, n't-8)
conj_but(studied-2, seem-9)
aux(git-11, to-10)
xcomp(seem-9, git-11)
det(right-14, the-13)
prep_at(git-11, right-14)
prep_of(right-14, it-16)
neg(way-19, no-18)
appos(it-16, way-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (ADJP (RB too) (JJ many)
            (PP (IN for)
              (NP
                (NP (PRP me))
                (, ,)
                (NP (NNP Tom) (NNP Sawyer))))))))
    (. .)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nsubj(many-8, It-5)
cop(many-8, 's-6)
advmod(many-8, too-7)
ccomp(says-2, many-8)
prep_for(many-8, me-10)
nn(Sawyer-13, Tom-12)
appos(me-10, Sawyer-13)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (S
          (NP (PRP I))
          (VP (VBD had)
            (NP (DT a) (NN farm))))
        (CC and)
        (S
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (NN mine))))
          (, ,)
          (CC and)
          (S
            (NP (DT another) (NN person))
            (VP (VBD wanted)
              (NP (PRP it)))))))
    (, ,) (MD would)
    (NP (PRP it))
    (VP (VB be)
      (S
        (NP
          (NP
            (NP (NN right))
            (PP (IN for)
              (NP (PRP him))))
          (PP (TO to))
          (: --) ('' ''))
        (ADJP (`` ``)
          (ADJP (JJ Oh))
          (, ,)
          (ADJP (JJ shucks)))))
    (. !)))

mark(had-3, If-1)
nsubj(had-3, I-2)
advcl(be-19, had-3)
det(farm-5, a-4)
dobj(had-3, farm-5)
nsubj(mine-9, it-7)
cop(mine-9, was-8)
conj_and(had-3, mine-9)
advcl(be-19, mine-9)
det(person-13, another-12)
nsubj(wanted-14, person-13)
conj_and(had-3, wanted-14)
conj_and(mine-9, wanted-14)
dobj(wanted-14, it-15)
aux(be-19, would-17)
nsubj(be-19, it-18)
root(ROOT-0, be-19)
nsubj(Oh-27, right-20)
prep_for(right-20, him-22)
prep(right-20, to-23)
xcomp(be-19, Oh-27)
dep(Oh-27, shucks-29)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADJP (JJ enough)
          (S
            (VP (TO to)
              (VP (VB come)
                (PP (IN in)
                  (NP
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP it))
                        (VP (VBZ rains))))
                    (, ,)
                    (NP (NNP Huck) (NNP Finn))))))))))
    (. .)))

nsubj(know-4, you-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
acomp(know-4, enough-5)
aux(come-7, to-6)
xcomp(enough-5, come-7)
advmod(rains-11, when-9)
nsubj(rains-11, it-10)
dep(Finn-14, rains-11)
nn(Finn-14, Huck-13)
prep_in(come-7, Finn-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBP ai) (RB n't)
        (NP (DT a) (NN farm))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (RB entirely) (JJ different)))
    (. .)))

nsubj(farm-5, It-1)
cop(farm-5, ai-2)
neg(farm-5, n't-3)
det(farm-5, a-4)
ccomp(different-10, farm-5)
nsubj(different-10, it-7)
cop(different-10, 's-8)
advmod(different-10, entirely-9)
root(ROOT-0, different-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (PP (IN like)
        (NP (DT this))))
    (. .)))

nsubj(see-2, You-1)
ccomp('s-5, see-2)
nsubj('s-5, it-4)
root(ROOT-0, 's-5)
prep_like('s-5, this-7)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP own)
        (NP
          (NP (DT the) (NN land))
          (, ,) (RB just)
          (NP (DT the) (JJ mere) (NN land)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ 's) (RB all)
            (NP (PRP they)))))
      (S
        (NP (NNP DO))
        (VP (VBP own)))
      (: ;)
      (CC but)
      (S
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP
              (NP (PRP$ our) (NNS folks))
              (, ,)
              (NP (PRP$ our) (NNS Jews)
                (CC and)
                (NNS Christians))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD made)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ holy))))))))))
        (, ,)
        (CC and)
        (RB so)
        (S
          (NP (PRP they))
          (VP (VBP have) (RB n't)
            (NP (DT any) (NN business)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP
                      (ADVP (RB there))
                      (VBG defiling)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(own-2, They-1)
root(ROOT-0, own-2)
det(land-4, the-3)
dobj(own-2, land-4)
advmod(land-4, just-6)
det(land-9, the-7)
amod(land-9, mere-8)
dep(land-4, land-9)
nsubj(they-15, that-12)
cop(they-15, 's-13)
advmod(they-15, all-14)
dep(own-17, they-15)
nsubj(own-17, DO-16)
conj_and(own-2, own-17)
nsubj(folks-23, it-20)
cop(folks-23, was-21)
poss(folks-23, our-22)
conj_and(own-2, folks-23)
conj_but(own-17, folks-23)
nsubj(made-31, folks-23)
poss(Jews-26, our-25)
appos(folks-23, Jews-26)
appos(folks-23, Christians-28)
conj_and(Jews-26, Christians-28)
rcmod(folks-23, made-31)
nsubj(holy-33, it-32)
ccomp(made-31, holy-33)
nsubj(have-38, they-37)
conj_but(own-17, have-38)
conj_and(folks-23, have-38)
nsubj(made-31, have-38)
neg(have-38, n't-39)
det(business-41, any-40)
dobj(have-38, business-41)
aux(defiling-45, to-42)
aux(defiling-45, be-43)
advmod(defiling-45, there-44)
vmod(business-41, defiling-45)
dobj(defiling-45, it-46)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT a) (NN shame))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD ought)
        (S (RB not)
          (VP (TO to)
            (VP (VB stand)
              (NP
                (NP (PRP it))
                (NP (DT a) (NN minute))))))))
    (. .)))

nsubj(shame-4, It-1)
cop(shame-4, 's-2)
det(shame-4, a-3)
root(ROOT-0, shame-4)
nsubj(ought-8, we-7)
nsubj(stand-11, we-7)
conj_and(shame-4, ought-8)
neg(stand-11, not-9)
aux(stand-11, to-10)
xcomp(ought-8, stand-11)
dobj(stand-11, it-12)
iobj(stand-11, it-12)
det(minute-14, a-13)
dep(it-12, minute-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP
            (VP (VB march)
              (PP (IN against)
                (NP (PRP them))))
            (CC and)
            (VP (VB take)
              (NP (PRP it))
              (PRT (RP away))
              (PP (IN from)
                (NP (PRP them))))))))
    (. .) ('' '')))

nsubj(ought-2, We-1)
nsubj(march-4, We-1)
nsubj(take-8, We-1)
root(ROOT-0, ought-2)
aux(march-4, to-3)
xcomp(ought-2, march-4)
prep_against(march-4, them-6)
xcomp(ought-2, take-8)
conj_and(march-4, take-8)
dobj(take-8, it-9)
prep_away_from(take-8, them-12)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does)
      (VP (VB seem)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP
                (NP (DT the) (RBS most) (JJ mixed-up) (NN thing))
                (SBAR
                  (S
                    (NP (PRP I))
                    (ADVP (RB ever))
                    (VP (VBP see))))))))))
    (. !)))

discourse(seem-6, Why-2)
nsubj(seem-6, it-4)
aux(seem-6, does-5)
root(ROOT-0, seem-6)
prep_to(seem-6, me-8)
nsubj(thing-14, it-9)
cop(thing-14, 's-10)
det(thing-14, the-11)
advmod(thing-14, most-12)
amod(thing-14, mixed-up-13)
ccomp(seem-6, thing-14)
nsubj(see-17, I-15)
advmod(see-17, ever-16)
rcmod(thing-14, see-17)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S (IN if)
      (NP (PRP I))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN farm))
          (CC and)
          (NP (DT another) (NN person)))))
    (: --) ('' '')
    (S (`` ``)
      (S
        (VP (VB Do) (RB n't)))
      (NP (PRP I))
      (VP (VBP tell)
        (NP (PRP you))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ has) (RB n't)
              (VP (VBN got)
                (NP (NN anything))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (NN farming))))))))))))
    (. ?)))

advmod(had-5, Now-1)
dep(had-5, if-3)
nsubj(had-5, I-4)
root(ROOT-0, had-5)
det(farm-7, a-6)
dobj(had-5, farm-7)
det(person-10, another-9)
dobj(had-5, person-10)
conj_and(farm-7, person-10)
dep(tell-17, Do-14)
neg(Do-14, n't-15)
nsubj(tell-17, I-16)
parataxis(had-5, tell-17)
dobj(tell-17, you-18)
nsubj(got-22, it-19)
aux(got-22, has-20)
neg(got-22, n't-21)
dep(tell-17, got-22)
dobj(got-22, anything-23)
aux(do-25, to-24)
vmod(got-22, do-25)
prep_with(do-25, farming-27)

(ROOT
  (S
    (S
      (NP (NNP Farming))
      (VP (VBZ is)
        (NP
          (NP (NN business))
          (, ,) (RB just)
          (NP (JJ common) (JJ low-down) (NN business))
          (: :)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (NP
                  (NP (DT all))
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBZ is) (, ,)
                        (S
                          (S
                            (NP (PRP it))
                            (VP (VBZ 's)
                              (NP
                                (NP (DT all))
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP (MD can)
                                      (VP (VB say)
                                        (PP (IN for)
                                          (NP (PRP it))))))))))
                          (: ;)
                          (CC but)
                          (S
                            (NP (DT this))
                            (VP (VBZ is)
                              (ADJP (JJR higher)))))))))))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJ religious))
        (, ,)
        (CC and)
        (ADJP (RB totally) (JJ different))))
    (. .) ('' '')))

nsubj(business-3, Farming-1)
cop(business-3, is-2)
nsubj(all-12, business-3)
ccomp(religious-32, business-3)
advmod(business-3, just-5)
amod(business-8, common-6)
amod(business-8, low-down-7)
dep(business-3, business-8)
cop(all-12, 's-11)
rcmod(business-3, all-12)
nsubj(is-14, it-13)
rcmod(all-12, is-14)
nsubj(all-18, it-16)
cop(all-18, 's-17)
dep(is-14, all-18)
nsubj(say-21, you-19)
aux(say-21, can-20)
rcmod(all-18, say-21)
prep_for(say-21, it-23)
nsubj(higher-28, this-26)
cop(higher-28, is-27)
dep(is-14, higher-28)
conj_but(all-18, higher-28)
nsubj(religious-32, this-30)
nsubj(different-36, this-30)
cop(religious-32, is-31)
root(ROOT-0, religious-32)
advmod(different-36, totally-35)
conj_and(religious-32, different-36)

(ROOT
  (FRAG (`` ``)
    (ADJP (JJ Religious)
      (S
        (VP (TO to)
          (VP (VB go)
            (CC and)
            (VB take)
            (NP (DT the) (NN land))
            (PP (RB away) (IN from)
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ owns)
                      (NP (PRP it)))))))))))
    (. ?) ('' '')))

root(ROOT-0, Religious-2)
aux(go-4, to-3)
xcomp(Religious-2, go-4)
xcomp(Religious-2, take-6)
conj_and(go-4, take-6)
det(land-8, the-7)
dobj(go-4, land-8)
prep_away_from(go-4, people-11)
nsubj(owns-13, people-11)
rcmod(people-11, owns-13)
dobj(owns-13, it-14)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Certainly)))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB always))
        (VP (VBN been)
          (VP (VBN considered)
            (ADVP (RB so))))))
    (. .) ('' '')))

root(ROOT-0, Certainly-2)
nsubjpass(considered-8, it-4)
auxpass(considered-8, 's-5)
advmod(considered-8, always-6)
auxpass(considered-8, been-7)
parataxis(Certainly-2, considered-8)
advmod(considered-8, so-9)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNP Jim))
          (SBAR
            (S
              (NP (PRP he))
              (VP
                (VP (VBD shook)
                  (NP (PRP$ his) (NN head)))
                (, ,)
                (CC and)
                (VP (VBZ says))))))
        (: :) (`` ``)
        (NP (NNP Mars) (NNP Tom))
        (, ,))
      (NP (PRP I))
      (VP (VBP reckon)
        (SBAR
          (S
            (NP (NN dey))
            (VP (VBZ 's)
              (NP
                (NP (DT a) (NN mistake))
                (PP (IN about)
                  (NP (PRP it) (NNS somers)))))))))
    (: --)
    (S
      (NP
        (NP (JJ dey) (NN mos) (POS '))
        (NN sholy))
      (VP (VBZ is)))
    (. .)))

nsubj(reckon-15, Jim-1)
nsubj(shook-3, he-2)
nsubj(says-8, he-2)
rcmod(Jim-1, shook-3)
poss(head-5, his-4)
dobj(shook-3, head-5)
rcmod(Jim-1, says-8)
conj_and(shook-3, says-8)
nn(Tom-12, Mars-11)
dep(Jim-1, Tom-12)
nsubj(reckon-15, I-14)
root(ROOT-0, reckon-15)
nsubj(mistake-19, dey-16)
cop(mistake-19, 's-17)
det(mistake-19, a-18)
ccomp(reckon-15, mistake-19)
dep(somers-22, it-21)
prep_about(mistake-19, somers-22)
amod(mos-25, dey-24)
poss(sholy-27, mos-25)
nsubj(is-28, sholy-27)
parataxis(reckon-15, is-28)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ 's)
        (ADVP (RB religious))
        (NP (PRP myself))
        (, ,)
        (ADVP (IN en))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBZ knows)
              (NP (JJ plenty) (JJ religious) (NNS people)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP hai) (RB n't)
        (VP (VB run)
          (PP (IN across)
            (NP
              (NP (NN none) (NN dat) (NNS acts))
              (PP (IN like)
                (NP (NN dat))))))))
    (. .) ('' '')))

nsubj(myself-4, I-1)
cop(myself-4, 's-2)
advmod(myself-4, religious-3)
root(ROOT-0, myself-4)
advmod(myself-4, en-6)
nsubj(knows-8, I-7)
dep(myself-4, knows-8)
amod(people-11, plenty-9)
amod(people-11, religious-10)
dobj(knows-8, people-11)
nsubj(hai-15, I-14)
conj_but(myself-4, hai-15)
neg(hai-15, n't-16)
dep(hai-15, run-17)
nn(acts-21, none-19)
nn(acts-21, dat-20)
prep_across(run-17, acts-21)
prep_like(acts-21, dat-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD made)
        (S
          (NP (NNP Tom))
          (ADJP (JJ hot)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ enough)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (S
                      (NP (DT a) (NN body))
                      (ADJP (JJ sick)))))))
            (, ,)
            (PP (JJ such)
              (NP (JJ mullet-headed) (NN ignorance)))))))
    (. !)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
nsubj(hot-4, Tom-3)
xcomp(made-2, hot-4)
nsubj(says-8, he-7)
conj_and(made-2, says-8)
discourse(enough-15, Well-11)
nsubj(enough-15, it-13)
nsubj(make-17, it-13)
cop(enough-15, 's-14)
ccomp(says-8, enough-15)
aux(make-17, to-16)
xcomp(enough-15, make-17)
det(body-19, a-18)
nsubj(sick-20, body-19)
xcomp(make-17, sick-20)
prep(enough-15, such-22)
amod(ignorance-24, mullet-headed-23)
dep(such-22, ignorance-24)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP
            (NP (DT either))
            (PP (IN of)
              (NP (PRP you))))
          (VP (MD 'd)
            (VP (VB read)
              (NP (NN anything))
              (PP (IN about)
                (NP (NN history)))))))
      (, ,)
      (NP (PRP you))
      (VP (MD 'd)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP
                (NP
                  (NP (NNP Richard) (NNP Cur) (FW de) (NNP Loon))
                  (, ,)
                  (CC and)
                  (NP (DT the) (NNP Pope)))
                (, ,)
                (CC and)
                (NP
                  (NP (NNP Godfrey) (IN de) (NNP Bulleyn))
                  (, ,)
                  (CC and)
                  (ADVP
                    (NP (NNS lots))
                    (RBR more))
                  (PP (IN of)
                    (NP
                      (NP (DT the)
                        (ADJP (RBS most) (JJ noble-hearted)
                          (CC and)
                          (JJ pious))
                        (NNS people))
                      (PP (IN in)
                        (NP (DT the) (NN world))))))
                (, ,))
              (VP (VBN hacked)
                (CC and)
                (VBN hammered)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NNS paynims))
                    (PP (IN for)
                      (NP
                        (NP
                          (QP (JJR more) (IN than) (CD two) (CD hundred))
                          (NNS years))
                        (VP (VBG trying)
                          (S
                            (VP (TO to)
                              (VP (VB take)
                                (NP (PRP$ their) (NN land))
                                (PRT (RP away))
                                (PP (IN from)
                                  (NP (PRP them)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN swum) (NN neck-deep))
        (PP
          (PP (IN in)
            (NP (NN blood))
            (NP (DT the) (JJ whole) (NN time)))
          (PRN (: --)
            (CC and)
            (ADVP (RB yet)))))
      (ADVP (RB here))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN couple))
          (PP (IN of)
            (NP (JJ sap-headed) (NN country) (NNS yahoos))))
        (ADVP (IN out)
          (PP (IN in)
            (NP
              (NP (DT the) (NNS backwoods))
              (PP (IN of)
                (NP (NNP Missouri))))))
        (S
          (VP (VBG setting)
            (NP (PRP themselves))
            (PRT (RP up))
            (S
              (VP (TO to)
                (VP (VB know)
                  (NP (JJR more))
                  (PP (IN about)
                    (NP
                      (NP (DT the) (NNS rights)
                        (CC and)
                        (NNS wrongs))
                      (PP (IN of)
                        (NP (PRP it)))))
                  (SBAR (IN than)
                    (S
                      (NP (PRP they))
                      (VP (VBD did)))))))))))
    (. !)))

mark(read-6, If-1)
nsubj(read-6, either-2)
prep_of(either-2, you-4)
aux(read-6, 'd-5)
advcl(know-13, read-6)
dobj(read-6, anything-7)
prep_about(read-6, history-9)
nsubj(know-13, you-11)
aux(know-13, 'd-12)
root(ROOT-0, know-13)
mark(hacked-43, that-14)
nn(Loon-18, Richard-15)
nn(Loon-18, Cur-16)
nn(Loon-18, de-17)
nsubj(hacked-43, Loon-18)
nsubj(hammered-45, Loon-18)
det(Pope-22, the-21)
conj_and(Loon-18, Pope-22)
nsubj(hacked-43, Pope-22)
nn(Bulleyn-27, Godfrey-25)
amod(Bulleyn-27, de-26)
conj_and(Loon-18, Bulleyn-27)
nsubj(hacked-43, Bulleyn-27)
npadvmod(more-31, lots-30)
conj_and(Loon-18, more-31)
conj_and(Bulleyn-27, more-31)
det(people-38, the-33)
advmod(noble-hearted-35, most-34)
amod(people-38, noble-hearted-35)
conj_and(noble-hearted-35, pious-37)
amod(people-38, pious-37)
prep_of(more-31, people-38)
det(world-41, the-40)
prep_in(people-38, world-41)
ccomp(know-13, hacked-43)
ccomp(know-13, hammered-45)
conj_and(hacked-43, hammered-45)
det(paynims-48, the-47)
prep_at(hacked-43, paynims-48)
mwe(than-51, more-50)
quantmod(hundred-53, than-51)
number(hundred-53, two-52)
num(years-54, hundred-53)
prep_for(paynims-48, years-54)
vmod(years-54, trying-55)
aux(take-57, to-56)
xcomp(trying-55, take-57)
poss(land-59, their-58)
dobj(take-57, land-59)
prep_away_from(take-57, them-62)
nn(neck-deep-66, swum-65)
nsubj(couple-78, neck-deep-66)
prep_in(neck-deep-66, blood-68)
det(time-71, the-69)
amod(time-71, whole-70)
dep(neck-deep-66, time-71)
cc(yet-74, and-73)
dep(neck-deep-66, yet-74)
advmod(couple-78, here-75)
cop(couple-78, 's-76)
det(couple-78, a-77)
conj_and(know-13, couple-78)
amod(yahoos-82, sap-headed-80)
nn(yahoos-82, country-81)
prep_of(couple-78, yahoos-82)
advmod(couple-78, out-83)
det(backwoods-86, the-85)
prep_in(out-83, backwoods-86)
prep_of(backwoods-86, Missouri-88)
xcomp(couple-78, setting-89)
dobj(setting-89, themselves-90)
prt(setting-89, up-91)
aux(know-93, to-92)
vmod(setting-89, know-93)
dobj(know-93, more-94)
det(rights-97, the-96)
prep_about(know-93, rights-97)
prep_about(know-93, wrongs-99)
conj_and(rights-97, wrongs-99)
prep_of(rights-97, it-101)
mark(did-104, than-102)
nsubj(did-104, they-103)
advcl(know-93, did-104)

(ROOT
  (FRAG
    (NP
      (NP (NN Talk))
      (PP (IN about)
        (NP (NN cheek))))
    (. !) ('' '')))

root(ROOT-0, Talk-1)
prep_about(Talk-1, cheek-3)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (S
      (PP (IN of)
        (NP (NN course)))
      (, ,)
      (NP (DT that))
      (VP (VBD put)
        (NP (DT a)
          (ADJP (RBR more) (JJ different))
          (NN light))
        (PP (IN on)
          (NP (PRP it)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP me)
        (CC and)
        (NNP Jim))
      (VP
        (VP (VBD felt)
          (S
            (ADJP (RB pretty) (JJ cheap)
              (CC and)
              (JJ ignorant))))
        (, ,)
        (CC and)
        (VP (VBD wished)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD had) (RB n't)
                (VP (VBN been)
                  (ADJP (RB quite) (RB so) (JJ chipper)))))))))
    (. .)))

advmod(put-7, Well-1)
prep_of(put-7, course-4)
nsubj(put-7, that-6)
root(ROOT-0, put-7)
det(light-11, a-8)
advmod(different-10, more-9)
amod(light-11, different-10)
dobj(put-7, light-11)
prep_on(put-7, it-13)
nsubj(felt-19, me-16)
nsubj(wished-26, me-16)
conj_and(me-16, Jim-18)
nsubj(felt-19, Jim-18)
conj_and(put-7, felt-19)
advmod(cheap-21, pretty-20)
acomp(felt-19, cheap-21)
acomp(felt-19, ignorant-23)
conj_and(cheap-21, ignorant-23)
conj_and(put-7, wished-26)
conj_and(felt-19, wished-26)
nsubj(chipper-33, we-27)
aux(chipper-33, had-28)
neg(chipper-33, n't-29)
cop(chipper-33, been-30)
advmod(chipper-33, quite-31)
advmod(chipper-33, so-32)
ccomp(wished-26, chipper-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB say)
          (NP (NN nothing)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Jim))
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could) (RB n't)))))
      (PP (IN for)
        (NP (DT a) (NN while))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (INTJ (UH den))
          (, ,)
          (NP (PRP I))
          (VP (VBP reckon)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ 's) (RB all)
                  (ADJP (JJ right)))))))))
    (: ;)
    (S
      (NP (JJ beca) (`` `) (NNS se) (NN ef) (NNS dey))
      (VP (VBD did) (RB n't)
        (VP (VB know))))
    (, ,)
    (S
      (NP (NN dey))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT no) (NN use))
          (PP (IN for)
            (NP
              (NP (NNP po) (POS '))
              (JJ ignorant) (NNS folks)))))
      (VP (VB like)
        (NP (PRP us))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB know))))))))
        (: ;)
        (ADVP (IN en) (RB so))))
    (, ,)
    (S
      (ADVP (RB ef))
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (PRP$ our) (NN duty))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBD got)
        (S
          (VP (TO to)
            (VP (VB go)
              (S
                (NP (FW en))
                (VP (VB tackle)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP
                        (ADVP (IN en))
                        (VBP do)
                        (NP
                          (NP (NNP de) (NNP bes))
                          ('' ')
                          (SBAR
                            (S
                              (NP (PRP we))
                              (VP (MD can)))))))))))))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, could-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
dobj(say-4, nothing-5)
conj_and(say-4, Jim-8)
nsubj(could-10, he-9)
rcmod(Jim-8, could-10)
neg(could-10, n't-11)
dep(Jim-8, for-12)
det(while-14, a-13)
pobj(for-12, while-14)
advmod(says-18, then-16)
nsubj(says-18, he-17)
conj_and(say-4, says-18)
parataxis(say-4, says-18)
discourse(reckon-26, Well-21)
discourse(reckon-26, den-23)
nsubj(reckon-26, I-25)
ccomp(says-18, reckon-26)
nsubj(right-30, it-27)
cop(right-30, 's-28)
advmod(right-30, all-29)
ccomp(reckon-26, right-30)
amod(dey-36, beca-32)
nn(dey-36, se-34)
nn(dey-36, ef-35)
nsubj(know-39, dey-36)
aux(know-39, did-37)
neg(know-39, n't-38)
conj_and(say-4, know-39)
parataxis(say-4, know-39)
nsubj(use-45, dey-41)
cop(use-45, ai-42)
neg(use-45, n't-43)
neg(use-45, no-44)
conj_and(say-4, use-45)
parataxis(say-4, use-45)
poss(folks-50, po-47)
amod(folks-50, ignorant-49)
prep_for(use-45, folks-50)
dep(use-45, like-51)
dobj(like-51, us-52)
aux(trying-55, to-53)
aux(trying-55, be-54)
vmod(like-51, trying-55)
aux(know-57, to-56)
xcomp(trying-55, know-57)
advmod(like-51, en-59)
advmod(en-59, so-60)
advmod(duty-66, ef-62)
nsubj(duty-66, it-63)
cop(duty-66, 's-64)
poss(duty-66, our-65)
conj_and(say-4, duty-66)
parataxis(say-4, duty-66)
nsubj(got-69, we-68)
nsubj(go-71, we-68)
conj_and(say-4, got-69)
parataxis(say-4, got-69)
aux(go-71, to-70)
xcomp(got-69, go-71)
nsubj(tackle-73, en-72)
ccomp(go-71, tackle-73)
nsubj(do-76, it-74)
advmod(do-76, en-75)
ccomp(tackle-73, do-76)
nn(bes-78, de-77)
dobj(do-76, bes-78)
nsubj(can-81, we-80)
rcmod(bes-78, can-81)

(ROOT
  (S
    (NP (JJ Same) (NN time))
    (, ,)
    (NP (PRP I))
    (VP (VBP feel)
      (ADJP (RB as) (JJ sorry)
        (PP (IN for)
          (NP (DT dem) (NNS paynims))))
      (PP (IN as)
        (NP (NNP Mars) (NNP Tom))))
    (. .)))

amod(time-2, Same-1)
nsubj(feel-5, time-2)
nsubj(feel-5, I-4)
root(ROOT-0, feel-5)
advmod(sorry-7, as-6)
acomp(feel-5, sorry-7)
det(paynims-10, dem-9)
prep_for(sorry-7, paynims-10)
nn(Tom-13, Mars-12)
prep_as(feel-5, Tom-13)

(ROOT
  (S
    (NP (NNP De) (JJ hard) (NN part))
    (VP (VBP gwine)
      (S
        (VP (TO to)
          (VP (VB be)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (SBAR
                    (S
                      (NP (NNS folks))
                      (VP (VBP dat)
                        (SBAR
                          (S
                            (NP
                              (NP (DT a) (NN body) (NN hai))
                              (VP (RB n't)
                                (VP (VBN been) (`` `)
                                  (VP (VBN quainted)
                                    (NP (NN wid))))
                                (CC and)
                                (VP (VBN dat)
                                  (NP (NN hai))
                                  (RB n't))))
                            (VP (VBN done)
                              (S
                                (NP (PRP him))
                                (NP (DT no) (NN harm))))))))))))))))
    (. .)))

nn(part-3, De-1)
amod(part-3, hard-2)
nsubj(gwine-4, part-3)
nsubj(be-6, part-3)
nsubj(kill-8, part-3)
root(ROOT-0, gwine-4)
aux(be-6, to-5)
xcomp(gwine-4, be-6)
aux(kill-8, to-7)
xcomp(be-6, kill-8)
nsubj(dat-10, folks-9)
ccomp(kill-8, dat-10)
det(hai-13, a-11)
nn(hai-13, body-12)
nsubj(done-23, hai-13)
neg(quainted-17, n't-14)
auxpass(quainted-17, been-15)
dep(hai-13, quainted-17)
dobj(quainted-17, wid-18)
dep(hai-13, dat-20)
conj_and(quainted-17, dat-20)
dobj(dat-20, hai-21)
neg(dat-20, n't-22)
ccomp(dat-10, done-23)
nsubj(harm-26, him-24)
neg(harm-26, no-25)
xcomp(done-23, harm-26)

(ROOT
  (S
    (S
      (NP (NNP Dat))
      (VP (VBZ 's)
        (NP (PRP it))))
    (, ,)
    (NP (PRP you))
    (VP (VBP see))
    (. .)))

nsubj(it-3, Dat-1)
cop(it-3, 's-2)
ccomp(see-6, it-3)
nsubj(see-6, you-5)
root(ROOT-0, see-6)

(ROOT
  (S
    (S
      (VP (VB Ef)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP wuz)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (S (`` `)
                      (S
                        (VP
                          (VP (VB mongst)
                            (NP (PRP 'em)))
                          (, ,)
                          (VP (VB jist)
                            (NP (PRP we)))
                          (NP (CD three))))
                      (, ,)
                      (NP (FW en))
                      (VP (VBP say)
                        (SBAR
                          (S
                            (NP (PRP we))
                            (VP (VBZ 's)
                              (ADJP (JJ hungry)))))))))))))))
    (, ,)
    (NP (FW en))
    (VP (VBP ast)
      (NP (PRP 'em))
      (PP (IN for)
        (NP (DT a) (NN bite)
          (S
            (VP (TO to)
              (VP (VB eat))))))
      (, ,)
      (SBAR
        (WHADVP (WRB why))
        (, ,)
        (S
          (NP (RB maybe) (NN dey))
          (VP (VBZ 's)
            (ADJP (JJ jist)
              (PP (IN like)
                (NP (NN yuther) (NNS people))))))))
    (. .)))

ccomp(ast-21, Ef-1)
nsubj(wuz-3, we-2)
nsubj(go-5, we-2)
ccomp(Ef-1, wuz-3)
aux(go-5, to-4)
xcomp(wuz-3, go-5)
ccomp(say-15, mongst-7)
dobj(mongst-7, 'em-8)
dep(mongst-7, jist-10)
dobj(jist-10, we-11)
dobj(mongst-7, three-12)
nsubj(say-15, en-14)
ccomp(go-5, say-15)
nsubj(hungry-18, we-16)
cop(hungry-18, 's-17)
ccomp(say-15, hungry-18)
nsubj(ast-21, en-20)
root(ROOT-0, ast-21)
dobj(ast-21, 'em-22)
det(bite-25, a-24)
prep_for(ast-21, bite-25)
aux(eat-27, to-26)
vmod(bite-25, eat-27)
advmod(jist-34, why-29)
advmod(dey-32, maybe-31)
nsubj(jist-34, dey-32)
cop(jist-34, 's-33)
advcl(ast-21, jist-34)
nn(people-37, yuther-36)
prep_like(jist-34, people-37)

(ROOT
  (SQ (MD Do) (RB n't)
    (NP (PRP you))
    (VP (VB reckon)
      (NP
        (NP (NN dey))
        (VP (VBZ is))))
    (. ?)))

aux(reckon-4, Do-1)
neg(reckon-4, n't-2)
nsubj(reckon-4, you-3)
root(ROOT-0, reckon-4)
dobj(reckon-4, dey-5)
dep(dey-5, is-6)

(ROOT
  (S
    (ADVP (WRB Why))
    (PRN (, ,)
      (S
        (NP (NNP DEY) (NNP 'D))
        (VP (VBP give)
          (S
            (NP (PRP it))
            (, ,)
            (NP (PRP I))
            (VP (VBP know)
              (NP
                (NP
                  (NP (NN dey))
                  (SBAR
                    (S
                      (VP (MD would)))))
                (PRN (, ,)
                  (ADVP (IN en))
                  (NP (NN den))
                  (: --))))
            ('' '')))))
    (`` ``)
    (VP (VBZ Then)
      (WHNP (WP what)))
    (. ?) ('' '')))

advmod(Then-18, Why-1)
nn('D-4, DEY-3)
nsubj(give-5, 'D-4)
parataxis(Then-18, give-5)
nsubj(know-9, it-6)
nsubj(know-9, I-8)
ccomp(give-5, know-9)
dobj(know-9, dey-10)
rcmod(dey-10, would-11)
dep(den-14, en-13)
dep(dey-10, den-14)
root(ROOT-0, Then-18)
dobj(Then-18, what-19)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Well))
      (, ,)
      (NP (NNP Mars) (NNP Tom)))
    (, ,)
    (NP (PRP$ my) (NN idea))
    (VP (VBZ is)
      (PP (IN like)
        (NP (NN dis))))
    (. .)))

discourse(Tom-5, Well-2)
nn(Tom-5, Mars-4)
dep(is-9, Tom-5)
poss(idea-8, my-7)
nsubj(is-9, idea-8)
root(ROOT-0, is-9)
prep_like(is-9, dis-11)

(ROOT
  (SINV
    (S
      (S
        (NP (PRP It))
        (VP (VBP ai) (RB n't)
          (NP (DT no) (NN use))))
      (, ,)
      (S
        (NP (PRP we))
        (VP (VBZ CA) (RB N'T)
          (VP (VB kill)
            (NP
              (NP (DT dem) (NN po) (POS '))
              (JJ strangers) (NN dat))))))
    (VP (VBP ai) (RB n't)
      (VP (VBN doin) ('' ')
        (NP (PRP us))))
    (NP
      (NP (DT no) (NN harm))
      (, ,)
      (SBAR (IN till)
        (S
          (NP (PRP we))
          (VP (VBP 've)
            (VP (VBD had)
              (S
                (NP
                  (NP (NN practice))
                  (PRN (: --)
                    (S
                      (NP (PRP I))
                      (VP (VBZ knows)
                        (NP (PRP it))
                        (ADVP (RB perfectly))
                        (NP
                          (NP (NN well))
                          (, ,)
                          (NP (NNP Mars) (NNP Tom)))))
                    (: --))
                  (`` `))
                (VP (VBD deed)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBZ knows)
                        (NP (PRP it))
                        (ADVP (RB perfectly) (RB well))))))))))))
    (. .)))

nsubj(use-5, It-1)
cop(use-5, ai-2)
neg(use-5, n't-3)
neg(use-5, no-4)
dep(doin-18, use-5)
nsubj(kill-10, we-7)
aux(kill-10, CA-8)
neg(kill-10, N'T-9)
parataxis(use-5, kill-10)
det(po-12, dem-11)
poss(dat-15, po-12)
amod(dat-15, strangers-14)
dobj(kill-10, dat-15)
auxpass(doin-18, ai-16)
neg(doin-18, n't-17)
root(ROOT-0, doin-18)
dobj(doin-18, us-20)
neg(harm-22, no-21)
nsubjpass(doin-18, harm-22)
mark(had-27, till-24)
nsubj(had-27, we-25)
aux(had-27, 've-26)
rcmod(harm-22, had-27)
nsubj(deed-40, practice-28)
nsubj(knows-31, I-30)
dep(practice-28, knows-31)
dobj(knows-31, it-32)
advmod(knows-31, perfectly-33)
dobj(knows-31, well-34)
nn(Tom-37, Mars-36)
appos(well-34, Tom-37)
ccomp(had-27, deed-40)
nsubj(knows-42, I-41)
ccomp(deed-40, knows-42)
dobj(knows-42, it-43)
advmod(well-45, perfectly-44)
advmod(knows-42, well-45)

(ROOT
  (S (CC But)
    (ADVP (RB ef))
    (S
      (NP (PRP we))
      (VP
        (VP (VBZ takes)
          (NP
            (NP
              (NP (NNP a) (POS '))
              (NN axe))
            (CC or)
            (NP (CD two))))
        (, ,)
        (VP (VBD jist)
          (NP (PRP you))
          (PP (IN en)
            (NP (PRP me)))
          (PP (IN en)
            (NP (NNP Huck))))
        (, ,)
        (VP
          (ADVP (IN en))
          (VBZ slips)
          (NP
            (NP (NN acrost))
            (SBAR
              (S
                (NP (IN de) (NN river) (NN to-night))
                (VP (VBP arter)
                  (SBAR
                    (S
                      (NP (IN de) (NN moon))
                      (VP (VBZ 's)
                        (VP (VBN gone)
                          (PRT (RP down)))))))))))
        (, ,)
        (VP
          (ADVP (IN en))
          (VBZ kills)
          (NP
            (NP (NN dat) (JJ sick) (NN fam))
            (`` `)
            (SBAR
              (S
                (NP (NN ly) (NN dat))
                (VP (VBZ 's)
                  (ADVP (RB over))
                  (PP (IN on)
                    (NP (DT the) (NNP Sny))))))))
        (, ,)
        (VP
          (ADVP (IN en))
          (VBZ burns)
          (NP (NN dey) (NN house))
          (PRT (RP down)))
        (, ,)
        (PP (IN en))))
    (: --) ('' '')
    (S
      (INTJ (`` ``) (UH Oh))
      (, ,)
      (NP (PRP you))
      (VP (VBP make)
        (S
          (NP (PRP me))
          (ADJP (JJ tired)))))
    (. !) ('' '')))

cc(takes-4, But-1)
advmod(takes-4, ef-2)
nsubj(takes-4, we-3)
root(ROOT-0, takes-4)
poss(axe-7, a-5)
dobj(takes-4, axe-7)
dobj(takes-4, two-9)
conj_or(axe-7, two-9)
dep(takes-4, jist-11)
dobj(jist-11, you-12)
prep_en(jist-11, me-14)
prep_en(jist-11, Huck-16)
advmod(slips-19, en-18)
dep(takes-4, slips-19)
dobj(slips-19, acrost-20)
amod(to-night-23, de-21)
nn(to-night-23, river-22)
nsubj(arter-24, to-night-23)
rcmod(acrost-20, arter-24)
amod(moon-26, de-25)
nsubjpass(gone-28, moon-26)
auxpass(gone-28, 's-27)
ccomp(arter-24, gone-28)
prt(gone-28, down-29)
advmod(kills-32, en-31)
dep(takes-4, kills-32)
nn(fam-35, dat-33)
amod(fam-35, sick-34)
dobj(kills-32, fam-35)
nn(dat-38, ly-37)
nsubj('s-39, dat-38)
rcmod(fam-35, 's-39)
advmod('s-39, over-40)
det(Sny-43, the-42)
prep_on('s-39, Sny-43)
advmod(burns-46, en-45)
dep(takes-4, burns-46)
nn(house-48, dey-47)
dobj(burns-46, house-48)
prt(burns-46, down-49)
prep(takes-4, en-51)
discourse(make-58, Oh-55)
nsubj(make-58, you-57)
parataxis(takes-4, make-58)
nsubj(tired-60, me-59)
xcomp(make-58, tired-60)

(ROOT
  (S
    (VP (VBZ says)
      (NP (NNP Tom)))
    (. .)))

root(ROOT-0, says-1)
dobj(says-1, Tom-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB argue)
              (ADVP (DT any) (RBR more))
              (PP (IN with)
                (NP
                  (NP
                    (NP (NNS people))
                    (PP (IN like)
                      (NP (PRP you))))
                  (CC and)
                  (NP
                    (NP (NNP Huck) (NNP Finn))
                    (, ,)
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP
                          (VP (VBZ 's)
                            (ADVP (RB always))
                            (VP (VBG wandering)
                              (PP (IN from)
                                (NP (DT the) (NN subject)))))
                          (, ,)
                          (CC and)
                          (VP (VBP ai) (RB n't)
                            (VP (VBN got)
                              (NP (DT any) (JJR more) (NN sense))
                              (SBAR (IN than)
                                (S
                                  (VP (TO to)
                                    (VP (VB try)
                                      (S
                                        (VP (TO to)
                                          (VP (VB reason)
                                            (PRT (RP out))
                                            (NP
                                              (NP (DT a) (NN thing))
                                              (SBAR
                                                (WHNP (WDT that))
                                                (S
                                                  (VP (VBZ 's)
                                                    (NP
                                                      (NP (JJ pure) (NN theology))
                                                      (PP (IN by)
                                                        (NP
                                                          (NP (DT the) (NNS laws))
                                                          (SBAR
                                                            (WHNP (WDT that))
                                                            (S
                                                              (VP (VB protect)
                                                                (NP (JJ real) (NN estate))))))))))))))))))))))))))))))))
    (. !) ('' '')))

nsubj(want-5, I-2)
nsubj(argue-7, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
aux(argue-7, to-6)
xcomp(want-5, argue-7)
dep(more-9, any-8)
advmod(argue-7, more-9)
prep_with(argue-7, people-11)
prep_like(people-11, you-13)
nn(Finn-16, Huck-15)
prep_with(argue-7, Finn-16)
conj_and(people-11, Finn-16)
nsubj(wandering-21, Finn-16)
nsubjpass(got-29, Finn-16)
aux(wandering-21, 's-19)
advmod(wandering-21, always-20)
rcmod(Finn-16, wandering-21)
det(subject-24, the-23)
prep_from(wandering-21, subject-24)
auxpass(got-29, ai-27)
neg(got-29, n't-28)
rcmod(Finn-16, got-29)
conj_and(wandering-21, got-29)
det(sense-32, any-30)
amod(sense-32, more-31)
dobj(got-29, sense-32)
nsubj(try-35, sense-32)
mark(try-35, than-33)
aux(try-35, to-34)
advcl(got-29, try-35)
xcomp(got-29, try-35)
aux(reason-37, to-36)
xcomp(try-35, reason-37)
prt(reason-37, out-38)
det(thing-40, a-39)
dobj(reason-37, thing-40)
nsubj(theology-44, thing-40)
cop(theology-44, 's-42)
amod(theology-44, pure-43)
rcmod(thing-40, theology-44)
det(laws-47, the-46)
prep_by(theology-44, laws-47)
nsubj(protect-49, laws-47)
rcmod(laws-47, protect-49)
amod(estate-51, real-50)
dobj(protect-49, estate-51)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (RB just) (WRB where))
        (S
          (NP (NNP Tom) (NNP Sawyer))
          (VP (VBP war) (RB n't)
            (ADJP (JJ fair))))))
    (. .)))

advmod('s-3, Now-1)
nsubj('s-3, that-2)
root(ROOT-0, 's-3)
advmod(where-5, just-4)
advmod(war-8, where-5)
nn(Sawyer-7, Tom-6)
nsubj(war-8, Sawyer-7)
advcl('s-3, war-8)
neg(war-8, n't-9)
acomp(war-8, fair-10)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD did) (RB n't)
        (VP (VB mean)
          (NP (DT no) (NN harm)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB mean)
          (NP (DT no) (NN harm)))))
    (. .)))

nsubj(mean-4, Jim-1)
aux(mean-4, did-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
neg(harm-6, no-5)
dobj(mean-4, harm-6)
nsubj(mean-12, I-9)
aux(mean-12, did-10)
neg(mean-12, n't-11)
conj_and(mean-4, mean-12)
neg(harm-14, no-13)
dobj(mean-12, harm-14)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD knowed)
        (ADVP (RB well) (RB enough))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (JJ right)))))))
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (VBD was)
          (ADJP (JJ wrong))))
      (, ,)
      (CC and)
      (RB all)
      (S
        (NP (PRP we))
        (VP (VBD was)
          (SBAR (IN after)
            (S
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (PP (IN at)
                        (NP
                          (NP (DT the) (NNP HOW))
                          (PP (IN of)
                            (NP (PRP it))))))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD was)
            (NP
              (NP (DT all))
              (: ;)
              (CC and)
              (NP (DT the) (JJ only) (NN reason))))))
      (S
        (NP (PRP he))
        (VP (MD could) (RB n't)
          (VP (VB explain)
            (NP (PRP it)))))
      (IN so)
      (S
        (NP (PRP we))
        (VP (MD could)
          (VP (VB understand)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (SBAR (IN because)
                    (S
                      (NP (PRP we))
                      (VP (VBD was)
                        (ADJP
                          (ADJP (JJ ignorant))
                          (: --)
                          (ADJP (JJ yes))
                          (, ,)
                          (CC and)
                          (ADJP (RB pretty) (JJ dull))))))))))))
      (, ,)
      (S
        (ADVP (RB too))
        (, ,)
        (NP (PRP I))
        (VP (VBP ai) (RB n't)
          (VP (VBG denying)
            (NP
              (NP (DT that))
              (PRN (: ;)
                (FRAG (CC but)
                  (, ,)
                  (NP (NN land))
                  (. !))))))))))

nsubj(knowed-2, We-1)
root(ROOT-0, knowed-2)
advmod(enough-4, well-3)
advmod(knowed-2, enough-4)
mark(right-8, that-5)
nsubj(right-8, he-6)
cop(right-8, was-7)
ccomp(knowed-2, right-8)
nsubj(wrong-12, we-10)
cop(wrong-12, was-11)
conj_and(knowed-2, wrong-12)
conj_and(knowed-2, all-15)
advmod(wrong-12, all-15)
conj_and(wrong-12, all-15)
nsubj(was-17, we-16)
dep(wrong-12, was-17)
mark(was-19, after-18)
advcl(was-17, was-19)
aux(get-21, to-20)
xcomp(was-19, get-21)
det(HOW-24, the-23)
prep_at(get-21, HOW-24)
prep_of(HOW-24, it-26)
nsubj(all-31, that-29)
cop(all-31, was-30)
dep(explain-40, all-31)
det(reason-36, the-34)
amod(reason-36, only-35)
conj_and(all-31, reason-36)
dep(explain-40, reason-36)
nsubj(explain-40, he-37)
aux(explain-40, could-38)
neg(explain-40, n't-39)
conj_and(knowed-2, explain-40)
dobj(explain-40, it-41)
dep(explain-40, so-42)
nsubj(understand-45, we-43)
aux(understand-45, could-44)
parataxis(explain-40, understand-45)
nsubj(was-47, it-46)
ccomp(understand-45, was-47)
mark(ignorant-51, because-48)
nsubj(ignorant-51, we-49)
nsubj(yes-53, we-49)
nsubj(dull-57, we-49)
cop(ignorant-51, was-50)
advcl(was-47, ignorant-51)
advcl(was-47, yes-53)
conj_and(ignorant-51, yes-53)
advmod(dull-57, pretty-56)
advcl(was-47, dull-57)
conj_and(ignorant-51, dull-57)
advmod(denying-64, too-59)
nsubj(denying-64, I-61)
aux(denying-64, ai-62)
neg(denying-64, n't-63)
parataxis(explain-40, denying-64)
dobj(denying-64, that-65)
cc(land-69, but-67)
dep(that-65, land-69)

(ROOT
  (S
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBP ai) (RB n't)
          (NP (DT no) (NN crime)))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB think)))
    (. .)))

nsubj(crime-5, that-1)
cop(crime-5, ai-2)
neg(crime-5, n't-3)
neg(crime-5, no-4)
advcl(think-9, crime-5)
nsubj(think-9, I-7)
aux(think-9, should-8)
root(ROOT-0, think-9)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (MD would) (RB n't)
      (VP
        (VP (VB hear)
          (ADVP (DT no) (RBR more))
          (PP (IN about)
            (NP (PRP it)))
          (: --)
          (SBAR (RB just)
            (S
              (VP
                (VP
                  (VP (VBD said)
                    (SBAR
                      (S
                        (SBAR (IN if)
                          (S
                            (NP (PRP we))
                            (VP (VBD had)
                              (VP (VBN tackled)
                                (NP
                                  (NP (DT the) (NN thing))
                                  (PP (IN in)
                                    (NP (DT the) (JJ proper) (NN spirit))))))))
                        (, ,)
                        (NP (PRP he))
                        (VP (MD would)
                          (S
                            (NP (`` `)
                              (NP (SYM a))
                              ('' ')
                              (VP (VBN raised)
                                (NP
                                  (NP (DT a) (NN couple))
                                  (PP (IN of)
                                    (NP (CD thousand) (NNS knights)))))))))))
                  (CC and)
                  (VP (VBD put)
                    (NP (PRP them))
                    (PP (IN in)
                      (NP
                        (NP (NN steel) (NN armor))
                        (PP (IN from)
                          (NP (NN head)))))
                    (PP (TO to)
                      (NP (NN heel))))
                  (, ,)
                  (CC and)
                  (VP (VBD made)
                    (S
                      (S
                        (NP (PRP me))
                        (NP (DT a) (NN lieutenant)))
                      (CC and)
                      (S
                        (NP (NNP Jim))
                        (NP (DT a) (NN sutler)))))
                  (, ,)
                  (CC and)
                  (VP (VBD took)
                    (NP (DT the) (NN command)))
                  (NP (PRP himself)))
                (CC and)
                (VP (VBD brushed)
                  (NP (DT the) (JJ whole) (NN paynim) (NN outfit))
                  (PP (IN into)
                    (NP
                      (NP (DT the) (NN sea))
                      (PP (IN like)
                        (NP (NNS flies))))))))))
        (CC and)
        (VP (VB come)
          (PRT (RP back))
          (PP (IN across)
            (NP
              (NP (DT the) (NN world))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN glory))
                  (PP (IN like)
                    (NP (NN sunset))))))))))
    (. .)))

nsubj(hear-5, he-2)
nsubj(come-73, he-2)
aux(hear-5, would-3)
neg(hear-5, n't-4)
root(ROOT-0, hear-5)
neg(more-7, no-6)
advmod(hear-5, more-7)
prep_about(hear-5, it-9)
advmod(said-12, just-11)
ccomp(hear-5, said-12)
parataxis(hear-5, said-12)
mark(tackled-16, if-13)
nsubj(tackled-16, we-14)
aux(tackled-16, had-15)
advcl(would-25, tackled-16)
det(thing-18, the-17)
dobj(tackled-16, thing-18)
det(spirit-22, the-20)
amod(spirit-22, proper-21)
prep_in(thing-18, spirit-22)
nsubj(would-25, he-24)
ccomp(said-12, would-25)
dep(would-25, a-27)
vmod(a-27, raised-29)
det(couple-31, a-30)
dobj(raised-29, couple-31)
num(knights-34, thousand-33)
prep_of(couple-31, knights-34)
ccomp(hear-5, put-36)
parataxis(hear-5, put-36)
conj_and(said-12, put-36)
dobj(put-36, them-37)
nn(armor-40, steel-39)
prep_in(put-36, armor-40)
prep_from(armor-40, head-42)
prep_to(put-36, heel-44)
ccomp(hear-5, made-47)
parataxis(hear-5, made-47)
conj_and(said-12, made-47)
dep(lieutenant-50, me-48)
det(lieutenant-50, a-49)
dep(made-47, lieutenant-50)
dep(sutler-54, Jim-52)
det(sutler-54, a-53)
dep(made-47, sutler-54)
conj_and(lieutenant-50, sutler-54)
ccomp(hear-5, took-57)
parataxis(hear-5, took-57)
conj_and(said-12, took-57)
det(command-59, the-58)
dobj(took-57, command-59)
dobj(said-12, himself-60)
ccomp(hear-5, brushed-62)
parataxis(hear-5, brushed-62)
conj_and(said-12, brushed-62)
det(outfit-66, the-63)
amod(outfit-66, whole-64)
nn(outfit-66, paynim-65)
dobj(brushed-62, outfit-66)
det(sea-69, the-68)
prep_into(brushed-62, sea-69)
prep_like(sea-69, flies-71)
conj_and(hear-5, come-73)
prt(come-73, back-74)
det(world-77, the-76)
prep_across(come-73, world-77)
det(glory-80, a-79)
prep_in(world-77, glory-80)
prep_like(glory-80, sunset-82)

(ROOT
  (S (CC But)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD did) (RB n't)
              (VP (VB know)
                (ADJP (JJ enough)
                  (S
                    (VP (TO to)
                      (VP (VB take)
                        (NP (DT the) (NN chance))))))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP we))
                    (VP (VBD had)
                      (NP (PRP it)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD would) (RB n't)
        (ADVP (RB ever))
        (VP (VB offer)
          (NP (PRP it))
          (ADVP (RB again)))))
    (. .)))

nsubj(said-3, he-2)
root(ROOT-0, said-3)
nsubj(know-7, we-4)
aux(know-7, did-5)
neg(know-7, n't-6)
ccomp(said-3, know-7)
acomp(know-7, enough-8)
aux(take-10, to-9)
xcomp(enough-8, take-10)
det(chance-12, the-11)
dobj(take-10, chance-12)
advmod(had-15, when-13)
nsubj(had-15, we-14)
ccomp(know-7, had-15)
dobj(had-15, it-16)
nsubj(offer-23, he-19)
aux(offer-23, would-20)
neg(offer-23, n't-21)
advmod(offer-23, ever-22)
conj_and(said-3, offer-23)
dobj(offer-23, it-24)
advmod(offer-23, again-25)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD did) (RB n't))
    (. .)))

cc(did-3, And-1)
nsubj(did-3, he-2)
root(ROOT-0, did-3)
neg(did-3, n't-4)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (ADVP (RB once))
        (VP (VBD got)
          (NP (NN set)))))
    (, ,)
    (NP (PRP you))
    (VP (MD could) (RB n't)
      (VP (VB budge)
        (NP (PRP him))))
    (. .)))

advmod(got-4, When-1)
nsubj(got-4, he-2)
advmod(got-4, once-3)
advcl(budge-10, got-4)
dobj(got-4, set-5)
nsubj(budge-10, you-7)
aux(budge-10, could-8)
neg(budge-10, n't-9)
root(ROOT-0, budge-10)
dobj(budge-10, him-11)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB care)
        (NP (RB much))))
    (. .)))

cc(care-5, But-1)
nsubj(care-5, I-2)
aux(care-5, did-3)
neg(care-5, n't-4)
root(ROOT-0, care-5)
dobj(care-5, much-6)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP am)
        (ADJP (JJ peaceable)))
      (, ,)
      (CC and)
      (VP (VBP do) (RB n't)
        (VP (VB get)
          (PRT (RP up))
          (NP (NNS rows))
          (PP (IN with)
            (NP
              (NP (NNS people))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP ai) (RB n't)
                    (VP (VBG doing)
                      (NP (NN nothing))
                      (PP (TO to)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(peaceable-3, I-1)
nsubj(get-8, I-1)
cop(peaceable-3, am-2)
root(ROOT-0, peaceable-3)
aux(get-8, do-6)
neg(get-8, n't-7)
conj_and(peaceable-3, get-8)
prt(get-8, up-9)
dobj(get-8, rows-10)
prep_with(get-8, people-12)
nsubj(doing-16, people-12)
aux(doing-16, ai-14)
neg(doing-16, n't-15)
rcmod(people-12, doing-16)
dobj(doing-16, nothing-17)
prep_to(doing-16, me-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD allowed)
        (SBAR (IN if)
          (S
            (NP (DT the) (NN paynim))
            (VP (VBD was)
              (ADJP (VBN satisfied)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBD was))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD would)
        (VP (VB let)
          (S
            (NP (PRP it))
            (VP (VB stand)
              (PP (IN at)
                (NP (DT that))))))))
    (. .)))

nsubj(allowed-2, I-1)
root(ROOT-0, allowed-2)
mark(satisfied-7, if-3)
det(paynim-5, the-4)
nsubjpass(satisfied-7, paynim-5)
auxpass(satisfied-7, was-6)
advcl(allowed-2, satisfied-7)
nsubj(was-9, I-8)
ccomp(satisfied-7, was-9)
nsubj(let-14, we-12)
aux(let-14, would-13)
conj_and(allowed-2, let-14)
nsubj(stand-16, it-15)
ccomp(let-14, stand-16)
prep_at(stand-16, that-18)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (NNP Tom) (PRP he))
    (VP (VBD got)
      (NP (PDT all) (DT that) (NN notion))
      (PRT (RP out))
      (PP (IN of)
        (NP
          (NP (NNP Walter) (NNP Scott) (POS 's))
          (NN book)))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADVP (RB always))
            (VP (VBG reading))))))
    (. .)))

advmod(got-4, Now-1)
nsubj(got-4, Tom-2)
dep(Tom-2, he-3)
root(ROOT-0, got-4)
predet(notion-7, all-5)
det(notion-7, that-6)
dobj(got-4, notion-7)
nn(Scott-11, Walter-10)
poss(book-13, Scott-11)
prep_out_of(got-4, book-13)
dobj(reading-19, which-15)
nsubj(reading-19, he-16)
aux(reading-19, was-17)
advmod(reading-19, always-18)
dep(got-4, reading-19)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBD WAS)
      (NP
        (NP (DT a) (JJ wild) (NN notion))
        (, ,)
        (SBAR
          (SBAR (IN because)
            (S
              (PP (IN in)
                (NP (PRP$ my) (NN opinion)))
              (NP (PRP he))
              (ADVP (RB never))
              (VP (MD could)
                (VP (VB 've)
                  (VP (VBN raised)
                    (NP (DT the) (NNS men)))))))
          (, ,)
          (CC and)
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD did))))
          (, ,)
          (SBAR (IN as)
            (S
              (PP (IN like)
                (NP (RB as) (RB not)))
              (NP (PRP he))
              (VP (MD would)
                (VP (VB 've)
                  (VP (VBN got)
                    (S
                      (ADJP (JJ licked)))))))))))
    (. .)))

cc(notion-6, And-1)
nsubj(notion-6, it-2)
cop(notion-6, WAS-3)
det(notion-6, a-4)
amod(notion-6, wild-5)
root(ROOT-0, notion-6)
mark(raised-16, because-8)
poss(opinion-11, my-10)
prep_in(raised-16, opinion-11)
nsubj(raised-16, he-12)
neg(raised-16, never-13)
aux(raised-16, could-14)
aux(raised-16, 've-15)
dep(notion-6, raised-16)
det(men-18, the-17)
dobj(raised-16, men-18)
mark(did-23, if-21)
nsubj(did-23, he-22)
dep(notion-6, did-23)
conj_and(raised-16, did-23)
mark(got-32, as-25)
prep(got-32, like-26)
advmod(not-28, as-27)
pobj(like-26, not-28)
nsubj(got-32, he-29)
aux(got-32, would-30)
aux(got-32, 've-31)
dep(notion-6, got-32)
conj_and(raised-16, got-32)
acomp(got-32, licked-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBD took)
          (NP (DT the) (NN book)))
        (CC and)
        (VP (VBD read)
          (NP (DT all))
          (PP (IN about)
            (NP (PRP it))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB as) (RB near)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (MD could)
              (VP (VB make)
                (NP (PRP it))
                (PRT (RP out)))))))
      (, ,)
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS folks))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD shook)
                  (S
                    (VP (VBG farming)
                      (S
                        (VP (TO to)
                          (VP (VB go)
                            (NP (NN crusading)))))))))))))
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ mighty) (JJ rocky) (NN time))
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

nsubj(took-2, I-1)
nsubj(read-6, I-1)
root(ROOT-0, took-2)
det(book-4, the-3)
dobj(took-2, book-4)
conj_and(took-2, read-6)
dobj(read-6, all-7)
prep_about(read-6, it-9)
advmod(near-13, as-12)
advmod(had-31, near-13)
mark(make-17, as-14)
nsubj(make-17, I-15)
aux(make-17, could-16)
ccomp(near-13, make-17)
dobj(make-17, it-18)
prt(make-17, out-19)
nsubj(had-31, most-21)
det(folks-24, the-23)
prep_of(most-21, folks-24)
nsubj(shook-26, folks-24)
rcmod(folks-24, shook-26)
xcomp(shook-26, farming-27)
aux(go-29, to-28)
xcomp(farming-27, go-29)
dobj(go-29, crusading-30)
conj_and(took-2, had-31)
det(time-35, a-32)
amod(time-35, mighty-33)
amod(time-35, rocky-34)
dobj(had-31, time-35)
prep_of(time-35, it-37)

(ROOT
  (NP (NNP CHAPTER) (NNP II) (. .)))

nn(II-2, CHAPTER-1)
root(ROOT-0, II-2)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP BALLOON) (NNP ASCENSION) (NNP WELL) (, ,) (NNP Tom))
      (VP (VBD got)
        (PRT (RP up))
        (NP (CD one) (NN thing))
        (PP (IN after)
          (NP (DT another)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP they))
        (ADVP (DT all))
        (VP (VBD had)
          (NP
            (NP (NN tender) (NNS spots))
            (PP (IN about)
              (NP (JJ 'em) (NNS somewheres))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB shove)
                (NP (PRP 'em))
                (ADVP (RB aside))))))))
    (. .)))

det(Tom-6, THE-1)
nn(Tom-6, BALLOON-2)
nn(Tom-6, ASCENSION-3)
nn(Tom-6, WELL-4)
nsubj(got-7, Tom-6)
root(ROOT-0, got-7)
prt(got-7, up-8)
num(thing-10, one-9)
dobj(got-7, thing-10)
prep_after(got-7, another-12)
nsubj(had-17, they-15)
advmod(had-17, all-16)
conj_but(got-7, had-17)
nn(spots-19, tender-18)
dobj(had-17, spots-19)
amod(somewheres-22, 'em-21)
prep_about(spots-19, somewheres-22)
nsubj(had-26, he-25)
nsubj(shove-28, he-25)
conj_but(got-7, had-26)
conj_and(had-17, had-26)
aux(shove-28, to-27)
xcomp(had-26, shove-28)
dobj(shove-28, 'em-29)
advmod(shove-28, aside-30)

(ROOT
  (S (RB So)
    (PP (IN at)
      (NP (JJ last)))
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (IN about)
        (PP (IN in)
          (NP (NN despair)))))
    (. .)))

advmod(about-6, So-1)
prep_at(about-6, last-3)
nsubj(about-6, he-4)
cop(about-6, was-5)
root(ROOT-0, about-6)
prep_in(about-6, despair-8)

(ROOT
  (S (RB Then)
    (S
      (NP (DT the) (NNP St.) (NNP Louis) (NNS papers))
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB talk)
              (NP (DT a) (JJ good) (NN deal))
              (PP (IN about)
                (NP
                  (NP (DT the) (NN balloon))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD was)
                        (VP (VBG going)
                          (S
                            (VP (TO to)
                              (VP (VB sail)
                                (PP (TO to)
                                  (NP (NNP Europe)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (ADVP (NN sort) (IN of))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB go)
                      (PRT (RP down)))
                    (CC and)
                    (VP (VB see)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP it))
                          (VP
                            (VP (VBD looked)
                              (PP (IN like)))
                            (, ,)
                            (CC but)
                            (VP (MD could) (RB n't)
                              (VP (VB make)
                                (PRT (RP up))
                                (NP (PRP$ his) (NN mind))))))))))))))))
    (. .)))

advmod(begun-6, Then-1)
det(papers-5, the-2)
nn(papers-5, St.-3)
nn(papers-5, Louis-4)
nsubj(begun-6, papers-5)
nsubj(talk-8, papers-5)
root(ROOT-0, begun-6)
aux(talk-8, to-7)
xcomp(begun-6, talk-8)
det(deal-11, a-9)
amod(deal-11, good-10)
dobj(talk-8, deal-11)
det(balloon-14, the-13)
prep_about(talk-8, balloon-14)
nsubj(going-17, balloon-14)
nsubj(sail-19, balloon-14)
aux(going-17, was-16)
rcmod(balloon-14, going-17)
aux(sail-19, to-18)
xcomp(going-17, sail-19)
prep_to(sail-19, Europe-21)
nsubj(thought-27, Tom-24)
dep(of-26, sort-25)
advmod(thought-27, of-26)
conj_and(begun-6, thought-27)
nsubj(wanted-29, he-28)
nsubj(go-31, he-28)
nsubj(see-34, he-28)
ccomp(thought-27, wanted-29)
aux(go-31, to-30)
xcomp(wanted-29, go-31)
prt(go-31, down-32)
xcomp(wanted-29, see-34)
conj_and(go-31, see-34)
prep_like(looked-37, what-35)
nsubj(looked-37, it-36)
nsubj(make-43, it-36)
ccomp(see-34, looked-37)
aux(make-43, could-41)
neg(make-43, n't-42)
ccomp(see-34, make-43)
conj_but(looked-37, make-43)
prt(make-43, up-44)
poss(mind-46, his-45)
dobj(make-43, mind-46)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NNS papers))
      (VP (VBD went)
        (PP (IN on)
          (S
            (VP (VBG talking))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP he))
      (VP (VBD allowed)
        (SBAR (IN that)
          (S
            (SBAR
              (ADVP (RB maybe))
              (IN if)
              (S
                (NP (PRP he))
                (VP (VBD did) (RB n't)
                  (VP (VB go)
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (MD might) (RB n't)
                          (ADVP (RB ever))
                          (VP (VB have)
                            (NP (DT another) (NN chance)
                              (S
                                (VP (TO to)
                                  (VP (VB see)
                                    (NP (DT a) (JJ balloon) (: ;)
                                      (CC and)
                                      (JJ next))))))))))))))
            (, ,)
            (NP (PRP he))
            (VP (VBD found)
              (PRT (RP out))
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (NNP Nat) (NNP Parsons))
                    (VP (VBD was)
                      (VP (VBG going)
                        (PRT (RP down))
                        (S
                          (VP (TO to)
                            (VP (VB see)
                              (NP (PRP it)))))))))
                (, ,)
                (CC and)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD decided)
                      (NP (PRP him))
                      (, ,)
                      (PP (IN of)
                        (NP (NN course))))))))))))
    (. .)))

det(papers-3, the-2)
nsubj(went-4, papers-3)
root(ROOT-0, went-4)
prepc_on(went-4, talking-6)
conj_and(went-4, so-9)
nsubj(allowed-11, he-10)
ccomp(went-4, allowed-11)
mark(found-35, that-12)
advmod(go-18, maybe-13)
mark(go-18, if-14)
nsubj(go-18, he-15)
aux(go-18, did-16)
neg(go-18, n't-17)
advcl(found-35, go-18)
nsubj(have-23, he-19)
aux(have-23, might-20)
neg(have-23, n't-21)
advmod(have-23, ever-22)
ccomp(go-18, have-23)
det(chance-25, another-24)
dobj(have-23, chance-25)
aux(see-27, to-26)
vmod(chance-25, see-27)
dep(balloon-29, a-28)
dobj(see-27, balloon-29)
dobj(see-27, next-32)
conj_and(balloon-29, next-32)
nsubj(found-35, he-34)
ccomp(allowed-11, found-35)
prt(found-35, out-36)
mark(going-41, that-37)
nn(Parsons-39, Nat-38)
nsubj(going-41, Parsons-39)
nsubj(see-44, Parsons-39)
aux(going-41, was-40)
ccomp(found-35, going-41)
prt(going-41, down-42)
aux(see-44, to-43)
xcomp(going-41, see-44)
dobj(see-44, it-45)
nsubj(decided-49, that-48)
ccomp(found-35, decided-49)
conj_and(going-41, decided-49)
dobj(decided-49, him-50)
prep_of(decided-49, course-53)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was) (RB n't)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (NNP Nat) (NNP Parsons))
                  (VP (VBG coming)
                    (PRT (RP back))
                    (NP (NN bragging))
                    (PP (IN about)
                      (S
                        (VP (VBG seeing)
                          (NP (DT the) (NN balloon)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP him))
      (VP (VBG having)
        (S
          (VP (TO to)
            (VP
              (VP (VB listen)
                (PP (TO to)
                  (NP (PRP it))))
              (CC and)
              (VP (VB keep)
                (ADJP (JJ quiet))))))))
    (. .)))

nsubj(going-4, He-1)
nsubj(have-6, He-1)
aux(going-4, was-2)
neg(going-4, n't-3)
root(ROOT-0, going-4)
aux(have-6, to-5)
xcomp(going-4, have-6)
nn(Parsons-8, Nat-7)
dobj(have-6, Parsons-8)
vmod(Parsons-8, coming-9)
prt(coming-9, back-10)
dobj(coming-9, bragging-11)
prepc_about(coming-9, seeing-13)
det(balloon-15, the-14)
dobj(seeing-13, balloon-15)
nsubj(having-19, him-18)
nsubj(listen-21, him-18)
nsubj(keep-25, him-18)
conj_and(going-4, having-19)
aux(listen-21, to-20)
xcomp(having-19, listen-21)
prep_to(listen-21, it-23)
xcomp(having-19, keep-25)
conj_and(listen-21, keep-25)
acomp(keep-25, quiet-26)

(ROOT
  (S (CC So)
    (S
      (NP (PRP he))
      (VP (VBD wanted)
        (S
          (NP (PRP me)
            (CC and)
            (NNP Jim))
          (VP (TO to)
            (VP (VB go)
              (ADVP (RB too)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD went)))
    (. .)))

nsubj(wanted-3, he-2)
root(ROOT-0, wanted-3)
dobj(wanted-3, me-4)
nsubj(go-8, me-4)
dobj(wanted-3, Jim-6)
conj_and(me-4, Jim-6)
nsubj(go-8, Jim-6)
aux(go-8, to-7)
xcomp(wanted-3, go-8)
advmod(go-8, too-9)
nsubj(went-13, we-12)
conj_and(wanted-3, went-13)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD was)
        (NP (DT a) (JJ noble) (JJ big) (NN balloon)))
      (, ,)
      (CC and)
      (VP (VBD had)
        (NP
          (NP (NNS wings)
            (CC and)
            (NNS fans))
          (CC and)
          (NP
            (NP (DT all) (NNS sorts))
            (PP (IN of)
              (NP (NNS things))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (RB n't)
          (PP (IN like)
            (NP
              (NP (DT any) (NN balloon))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP see)
                    (PP (IN in)
                      (NP (NNS pictures)))))))))))
    (. .)))

nsubj(balloon-6, It-1)
nsubj(had-9, It-1)
cop(balloon-6, was-2)
det(balloon-6, a-3)
amod(balloon-6, noble-4)
amod(balloon-6, big-5)
root(ROOT-0, balloon-6)
conj_and(balloon-6, had-9)
dobj(had-9, wings-10)
dobj(had-9, fans-12)
conj_and(wings-10, fans-12)
det(sorts-15, all-14)
dobj(had-9, sorts-15)
conj_and(wings-10, sorts-15)
prep_of(sorts-15, things-17)
aux(n't-21, was-20)
conj_and(balloon-6, n't-21)
det(balloon-24, any-23)
prep_like(n't-21, balloon-24)
nsubj(see-26, you-25)
rcmod(balloon-24, see-26)
prep_in(see-26, pictures-28)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (ADVP (RB away) (RB out))
          (PP (IN toward)
            (NP
              (NP (DT the) (NN edge))
              (PP (IN of)
                (NP (NN town)))))))
      (, ,)
      (S
        (PP (IN in)
          (NP (DT a) (JJ vacant) (NN lot)))
        (, ,)
        (NP
          (NP (NN corner))
          (PP (IN of)
            (NP (NNP Twelfth) (NN street)))))
      (: ;)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP
              (NP (DT a) (JJ big) (NN crowd))
              (PP (IN around)
                (NP
                  (NP (PRP it))
                  (, ,)
                  (VP
                    (VP (VBG making)
                      (NP
                        (NP (NN fun))
                        (PP (IN of)
                          (NP (PRP it)))))
                    (, ,)
                    (CC and)
                    (VP (VBG making)
                      (NP
                        (NP (NN fun))
                        (PP (IN of)
                          (NP (DT the) (NN man))))))
                  (, ,))))
            (: --)
            (NP
              (NP (DT a)
                (ADJP (JJ lean) (JJ pale))
                (NN feller))
              (PP (IN with)
                (NP
                  (NP (DT that) (JJ soft) (NN kind))
                  (PP (IN of)
                    (NP
                      (NP (NN moonlight))
                      (PP (IN in)
                        (NP (PRP$ his) (NNS eyes))))))))))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (, ,))
    (: --)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD kept)
        (S
          (VP (VBG saying)
            (SBAR
              (S
                (NP (PRP it))
                (VP (MD would) (RB n't)
                  (VP (VB go)))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(out-4, away-3)
advmod(was-2, out-4)
det(edge-7, the-6)
prep_toward(was-2, edge-7)
prep_of(edge-7, town-9)
dep(corner-16, in-11)
det(lot-14, a-12)
amod(lot-14, vacant-13)
pobj(in-11, lot-14)
conj_and(was-2, corner-16)
nn(street-19, Twelfth-18)
prep_of(corner-16, street-19)
expl(was-23, there-22)
conj_and(was-2, was-23)
det(crowd-26, a-24)
amod(crowd-26, big-25)
nsubj(was-23, crowd-26)
prep_around(crowd-26, it-28)
dep(it-28, making-30)
dobj(making-30, fun-31)
prep_of(fun-31, it-33)
dep(it-28, making-36)
conj_and(making-30, making-36)
dobj(making-36, fun-37)
det(man-40, the-39)
prep_of(fun-37, man-40)
det(feller-46, a-43)
amod(pale-45, lean-44)
amod(feller-46, pale-45)
dep(crowd-26, feller-46)
det(kind-50, that-48)
amod(kind-50, soft-49)
prep_with(feller-46, kind-50)
prep_of(kind-50, moonlight-52)
poss(eyes-55, his-54)
prep_in(moonlight-52, eyes-55)
nsubj(know-58, you-57)
dep(was-2, know-58)
nsubj(kept-63, they-62)
conj_and(was-2, kept-63)
xcomp(kept-63, saying-64)
nsubj(go-68, it-65)
aux(go-68, would-66)
neg(go-68, n't-67)
ccomp(saying-64, go-68)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD made)
          (S
            (NP (PRP him))
            (ADJP (JJ hot)
              (S
                (VP (TO to)
                  (VP (VB hear)
                    (NP (PRP them)))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP
            (VP (VB turn)
              (PP (IN on)
                (NP (PRP them))))
            (CC and)
            (VP
              (VP (VB shake)
                (NP (PRP$ his) (NN fist)))
              (CC and)
              (VP (VB say)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD was)
                      (UCP
                        (NP (NNS animals))
                        (CC and)
                        (ADJP (JJ blind))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT some) (NN day))
      (NP (PRP they))
      (VP (MD would)
        (VP (VB find)
          (S
            (S
              (NP (PRP they))
              (VP (VBD had)
                (VP (VBN stood)
                  (NP (NN face))
                  (S
                    (VP (TO to)
                      (VP (VB face)
                        (PP (IN with)
                          (NP
                            (NP (CD one))
                            (PP (IN of)
                              (NP
                                (NP
                                  (NP (DT the) (NNS men))
                                  (SBAR
                                    (WHNP (WDT that))
                                    (S
                                      (VP
                                        (VP (VBZ lifts)
                                          (PRT (RP up))
                                          (NP (NNS nations)))
                                        (CC and)
                                        (VP (VBZ makes)
                                          (NP (NNS civilizations)))
                                        (, ,)
                                        (CC and)
                                        (VP (VBD was)
                                          (ADJP (RB too) (JJ dull)
                                            (S
                                              (VP (TO to)
                                                (VP (VB know)
                                                  (NP (PRP it)))))))))))
                                (: ;)
                                (CC and)
                                (ADVP (RB right) (RB here)
                                  (PP (IN on)
                                    (NP (DT this) (NN spot))))
                                (NP (PRP$ their) (JJ own) (NNS children))))))))))))
            (CC and)
            (S
              (S
                (NP (NNS grandchildren))
                (VP (MD would)
                  (VP (VB build)
                    (NP
                      (NP (DT a) (NN monument))
                      (PP (TO to)
                        (NP (PRP him)))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD would)
                            (VP (VB outlast)
                              (NP (DT a) (CD thousand) (NNS years))))))))))
              (, ,)
              (CC but)
              (S
                (NP (PRP$ his) (NN name))
                (VP (MD would)
                  (VP (VB outlast)
                    (NP (DT the) (NN monument))))))))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
nsubj(hot-4, him-3)
nsubj(hear-6, him-3)
xcomp(made-2, hot-4)
aux(hear-6, to-5)
xcomp(hot-4, hear-6)
dobj(hear-6, them-7)
nsubj(turn-12, he-10)
nsubj(shake-16, he-10)
aux(turn-12, would-11)
conj_and(made-2, turn-12)
prep_on(turn-12, them-14)
conj_and(made-2, shake-16)
conj_and(turn-12, shake-16)
poss(fist-18, his-17)
dobj(shake-16, fist-18)
conj_and(turn-12, say-20)
conj_and(shake-16, say-20)
nsubj(animals-23, they-21)
nsubj(blind-25, they-21)
cop(animals-23, was-22)
ccomp(say-20, animals-23)
ccomp(say-20, blind-25)
conj_and(animals-23, blind-25)
det(day-29, some-28)
tmod(find-32, day-29)
nsubj(find-32, they-30)
aux(find-32, would-31)
conj_but(made-2, find-32)
nsubj(stood-35, they-33)
aux(stood-35, had-34)
dep(find-32, stood-35)
dobj(stood-35, face-36)
aux(face-38, to-37)
vmod(stood-35, face-38)
prep_with(face-38, one-40)
det(men-43, the-42)
prep_of(one-40, men-43)
nsubj(lifts-45, men-43)
nsubj(makes-49, men-43)
nsubj(dull-55, men-43)
nsubj(know-57, men-43)
rcmod(men-43, lifts-45)
prt(lifts-45, up-46)
dobj(lifts-45, nations-47)
rcmod(men-43, makes-49)
conj_and(lifts-45, makes-49)
dobj(makes-49, civilizations-50)
cop(dull-55, was-53)
advmod(dull-55, too-54)
rcmod(men-43, dull-55)
conj_and(lifts-45, dull-55)
aux(know-57, to-56)
xcomp(dull-55, know-57)
dobj(know-57, it-58)
advmod(here-62, right-61)
prep_of(one-40, here-62)
advmod(men-43, here-62)
conj_and(men-43, here-62)
nsubj(lifts-45, here-62)
det(spot-65, this-64)
prep_on(here-62, spot-65)
poss(children-68, their-66)
amod(children-68, own-67)
prep_of(one-40, children-68)
conj_and(men-43, children-68)
nsubj(lifts-45, children-68)
nsubj(build-72, grandchildren-70)
aux(build-72, would-71)
dep(find-32, build-72)
conj_and(stood-35, build-72)
det(monument-74, a-73)
dobj(build-72, monument-74)
nsubj(outlast-79, monument-74)
prep_to(monument-74, him-76)
aux(outlast-79, would-78)
rcmod(monument-74, outlast-79)
det(years-82, a-80)
num(years-82, thousand-81)
tmod(outlast-79, years-82)
poss(name-86, his-85)
nsubj(outlast-88, name-86)
aux(outlast-88, would-87)
conj_and(stood-35, outlast-88)
conj_but(build-72, outlast-88)
det(monument-90, the-89)
dobj(outlast-88, monument-90)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (NP (DT the) (NN crowd))
    (VP (MD would)
      (VP
        (VP (VB burst)
          (PRT (RP out))
          (PP (IN in)
            (NP (DT a) (NN laugh)))
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VB yell)
          (PP (IN at)
            (NP (PRP him))))
        (, ,)
        (CC and)
        (VP (VB ask)
          (NP (PRP him))
          (SBAR
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (NP (PRP$ his) (NN name))
                  (SBAR
                    (SBAR (IN before)
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (VP (VBN married)))))
                    (, ,)
                    (CC and)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP he))
                        (VP (MD would)
                          (VP (VB take)
                            (S
                              (VP (TO to)
                                (VP (RB not) (VB do)
                                  (NP (PRP it)))))))))))))
            (, ,)
            (CC and)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (NP
                    (NP
                      (NP
                        (NP (PRP$ his) (NN sister) (POS 's))
                        (NN cat))
                      (SBAR
                        (S
                          (VP (VBZ 's)
                            (NP
                              (NP (NN grandmother) (POS 's))
                              (NN name))))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (PDT all) (DT the) (NNS things))
                      (SBAR (IN that)
                        (S
                          (NP (DT a) (NN crowd))
                          (VP (VBZ says)
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (NP (PRP they))
                                (VP (VBP 've)
                                  (VP (VBN got)
                                    (NP
                                      (NP (NN hold))
                                      (PP (IN of)
                                        (NP (DT a) (NN feller))))
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP they))
                                        (VP (VBP see)
                                          (SBAR
                                            (S
                                              (NP (PRP they))
                                              (VP (MD can)
                                                (VP (VB plague))))))))))))))))))))))))
    (. .)))

advmod(burst-6, then-2)
det(crowd-4, the-3)
nsubj(burst-6, crowd-4)
nsubj(yell-14, crowd-4)
nsubj(ask-19, crowd-4)
aux(burst-6, would-5)
root(ROOT-0, burst-6)
prt(burst-6, out-7)
det(laugh-10, a-9)
prep_in(burst-6, laugh-10)
advmod(burst-6, again-11)
conj_and(burst-6, yell-14)
prep_at(yell-14, him-16)
conj_and(burst-6, ask-19)
dobj(ask-19, him-20)
nsubj(name-24, what-21)
cop(name-24, was-22)
poss(name-24, his-23)
dep(ask-19, name-24)
mark(married-28, before-25)
nsubjpass(married-28, he-26)
auxpass(married-28, was-27)
advcl(name-24, married-28)
dobj(take-34, what-31)
nsubj(do-37, what-31)
nsubj(take-34, he-32)
aux(take-34, would-33)
advcl(name-24, take-34)
conj_and(married-28, take-34)
aux(do-37, to-35)
neg(do-37, not-36)
xcomp(take-34, do-37)
dobj(do-37, it-38)
nsubj(cat-46, what-41)
cop(cat-46, was-42)
poss(sister-44, his-43)
poss(cat-46, sister-44)
dep(ask-19, cat-46)
conj_and(name-24, cat-46)
cop(name-50, 's-47)
poss(name-50, grandmother-48)
rcmod(cat-46, name-50)
predet(things-55, all-53)
det(things-55, the-54)
conj_and(name-24, things-55)
conj_and(cat-46, things-55)
mark(says-59, that-56)
det(crowd-58, a-57)
nsubj(says-59, crowd-58)
dep(things-55, says-59)
advmod(got-63, when-60)
nsubj(got-63, they-61)
aux(got-63, 've-62)
advcl(says-59, got-63)
dobj(got-63, hold-64)
det(feller-67, a-66)
prep_of(hold-64, feller-67)
mark(see-70, that-68)
nsubj(see-70, they-69)
ccomp(got-63, see-70)
nsubj(plague-73, they-71)
aux(plague-73, can-72)
ccomp(see-70, plague-73)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP
        (NP (DT some) (NNS things))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD said)))))
      (VP (VBD WAS)
        (ADJP (JJ funny)))
      (, ,))
    (: --)
    (S
      (INTJ (UH yes))
      (, ,)
      (S (CC and)
        (NP (JJ mighty))
        (VP (VBZ witty)
          (ADVP (RB too))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP ai) (RB n't)
          (VP (VBG denying)
            (NP (DT that)))))
      (, ,))
    (: --)
    (S (CC but)
      (ADVP (PDT all) (DT the) (JJ same))
      (NP (PRP it))
      (VP (VBP war) (RB n't)
        (ADJP (JJ fair)
          (CC nor)
          (JJ brave))
        (, ,)
        (NP
          (NP (DT all) (PRP them) (NNS people))
          (VP (VBG pitching)
            (PP (IN on)
              (NP (CD one)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (ADJP (RB so) (JJ glib)
        (CC and)
        (JJ sharp)))
    (, ,)
    (CC and)
    (S
      (NP (PRP him))
      (PP (IN without)
        (NP
          (NP (DT any) (NN gift))
          (PP (IN of)
            (NP (NN talk)))
          (S
            (VP (TO to)
              (VP (VB answer)
                (PRT (RP back))
                (PP (IN with))))))))
    (. .)))

discourse(funny-8, Well-1)
det(things-4, some-3)
nsubj(funny-8, things-4)
nsubj(glib-46, things-4)
nsubj(said-6, they-5)
rcmod(things-4, said-6)
cop(funny-8, WAS-7)
root(ROOT-0, funny-8)
discourse(witty-15, yes-11)
cc(witty-15, and-13)
nsubj(witty-15, mighty-14)
conj_and(funny-8, witty-15)
advmod(witty-15, too-16)
nsubj(denying-21, I-18)
aux(denying-21, ai-19)
neg(denying-21, n't-20)
parataxis(witty-15, denying-21)
dobj(denying-21, that-22)
cc(war-30, but-25)
dep(same-28, all-26)
det(same-28, the-27)
advmod(war-30, same-28)
nsubj(war-30, it-29)
conj_and(funny-8, war-30)
neg(war-30, n't-31)
acomp(war-30, fair-32)
acomp(war-30, brave-34)
conj_nor(fair-32, brave-34)
det(people-38, all-36)
dep(people-38, them-37)
dobj(war-30, people-38)
vmod(people-38, pitching-39)
prep_on(pitching-39, one-41)
dep(glib-46, they-44)
advmod(glib-46, so-45)
conj_and(funny-8, glib-46)
conj_and(funny-8, sharp-48)
conj_and(glib-46, sharp-48)
conj_and(funny-8, him-51)
dep(him-51, without-52)
det(gift-54, any-53)
pobj(without-52, gift-54)
prep_of(gift-54, talk-56)
aux(answer-58, to-57)
vmod(gift-54, answer-58)
prt(answer-58, back-59)
prep(answer-58, with-60)

(ROOT
  (FRAG (CC But)
    (, ,)
    (NP (JJ good) (NN land))
    (. !)))

cc(land-4, But-1)
amod(land-4, good-3)
root(ROOT-0, land-4)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (VBD did)
      (NP (PRP he))
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB sass)
              (PRT (RP back))
              (PP (IN for)))))))
    (. ?)))

dep(want-4, what-1)
aux(want-4, did-2)
nsubj(want-4, he-3)
nsubj(sass-6, he-3)
root(ROOT-0, want-4)
aux(sass-6, to-5)
xcomp(want-4, sass-6)
prt(sass-6, back-7)
prep(sass-6, for-8)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (PRN (, ,)
      (S
        (NP (PRP it))
        (VP (MD could) (RB n't)
          (VP (VB do)
            (S
              (NP (PRP him))
              (ADJP (RB no) (JJ good))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB just))
        (NP
          (NP (NNS nuts))
          (PP (IN for)
            (NP (PRP them))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
nsubj(do-7, it-4)
aux(do-7, could-5)
neg(do-7, n't-6)
dep(see-2, do-7)
nsubj(good-10, him-8)
neg(good-10, no-9)
xcomp(do-7, good-10)
nsubj(nuts-16, it-13)
cop(nuts-16, was-14)
advmod(nuts-16, just-15)
conj_and(see-2, nuts-16)
prep_for(nuts-16, them-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP HAD)
        (NP (PRP him))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .)))

nsubj(HAD-2, They-1)
ccomp(know-6, HAD-2)
dobj(HAD-2, him-3)
nsubj(know-6, you-5)
root(ROOT-0, know-6)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBD was)
      (NP (PRP$ his) (NN way)))
    (. .)))

cc(way-5, But-1)
nsubj(way-5, that-2)
cop(way-5, was-3)
poss(way-5, his-4)
root(ROOT-0, way-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP reckon)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could) (RB n't)
              (VP (VB help)
                (NP (PRP it))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN made)
          (SBAR (IN so) (, ,)
            (S
              (NP (PRP I))
              (VP (VBP judge)))))))
    (. .)))

nsubj(reckon-2, I-1)
root(ROOT-0, reckon-2)
nsubj(help-6, he-3)
aux(help-6, could-4)
neg(help-6, n't-5)
ccomp(reckon-2, help-6)
dobj(help-6, it-7)
nsubjpass(made-11, he-9)
auxpass(made-11, was-10)
parataxis(reckon-2, made-11)
mark(judge-15, so-12)
nsubj(judge-15, I-14)
advcl(made-11, judge-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD was)
          (NP
            (NP (DT a) (JJ good) (JJ enough) (NN sort))
            (PP (IN of)
              (NP (NN cretur)))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (RB n't) (DT no) (NN harm))
            (PP (IN in)
              (NP (PRP him)))))))
    (, ,)
    (CC and)
    (SINV (VBD was)
      (NP
        (NP (RB just) (DT a) (NN genius))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT the) (NNS papers))
            (VP (VBD said))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD was) (RB n't)
              (NP (PRP$ his) (NN fault)))))))
    (. .)))

nsubj(sort-6, He-1)
nsubj(had-11, He-1)
cop(sort-6, was-2)
det(sort-6, a-3)
amod(sort-6, good-4)
amod(sort-6, enough-5)
root(ROOT-0, sort-6)
prep_of(sort-6, cretur-8)
conj_and(sort-6, had-11)
neg(harm-14, n't-12)
neg(harm-14, no-13)
dobj(had-11, harm-14)
prep_in(harm-14, him-16)
dep(genius-22, was-19)
advmod(genius-22, just-20)
det(genius-22, a-21)
conj_and(sort-6, genius-22)
nsubj(fault-33, genius-22)
mark(said-27, as-24)
det(papers-26, the-25)
nsubj(said-27, papers-26)
rcmod(genius-22, said-27)
cop(fault-33, was-30)
neg(fault-33, n't-31)
poss(fault-33, his-32)
rcmod(genius-22, fault-33)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD ca) (RB n't)
        (ADVP (DT all))
        (VP (VB be)
          (ADJP (JJ sound)))))
    (: :)
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT the) (NN way))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBP 're)
                        (VP (VBN made))))))))))))
    (. .)))

nsubj(sound-6, We-1)
aux(sound-6, ca-2)
neg(sound-6, n't-3)
advmod(sound-6, all-4)
cop(sound-6, be-5)
root(ROOT-0, sound-6)
nsubj(got-10, we-8)
nsubj(way-14, we-8)
aux(got-10, 've-9)
parataxis(sound-6, got-10)
aux(way-14, to-11)
cop(way-14, be-12)
det(way-14, the-13)
xcomp(got-10, way-14)
nsubjpass(made-17, we-15)
auxpass(made-17, 're-16)
rcmod(way-14, made-17)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB near)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB make)
                (PRT (RP out)))))))
      (, ,)
      (NP (NNS geniuses))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP know)
              (S
                (NP (PRP it))
                (NP (DT all))))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP they))
      (VP (MD wo) (RB n't)
        (VP
          (VP (VB take)
            (NP
              (NP (NNS people) (POS 's))
              (NN advice)))
          (, ,)
          (CC but)
          (ADVP (RB always))
          (VP (VB go)
            (NP
              (NP (PRP$ their) (JJ own) (NN way))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ makes)
                    (S
                      (NP (NN everybody))
                      (VP
                        (VP (VB forsake)
                          (NP (PRP them)))
                        (CC and)
                        (VP (VB despise)
                          (NP (PRP them)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (ADJP (RB perfectly) (JJ natural))))
    (. .)))

advmod(near-2, As-1)
advmod(think-10, near-2)
mark(make-6, as-3)
nsubj(make-6, I-4)
aux(make-6, can-5)
ccomp(near-2, make-6)
prt(make-6, out-7)
nsubj(think-10, geniuses-9)
root(ROOT-0, think-10)
nsubj(know-12, they-11)
ccomp(think-10, know-12)
nsubj(all-14, it-13)
xcomp(know-12, all-14)
conj_and(think-10, so-17)
nsubj(take-21, they-18)
nsubj(go-28, they-18)
aux(take-21, wo-19)
neg(take-21, n't-20)
ccomp(think-10, take-21)
poss(advice-24, people-22)
dobj(take-21, advice-24)
advmod(go-28, always-27)
ccomp(think-10, go-28)
conj_but(take-21, go-28)
poss(way-31, their-29)
amod(way-31, own-30)
dobj(go-28, way-31)
nsubj(makes-34, way-31)
rcmod(way-31, makes-34)
nsubj(forsake-36, everybody-35)
nsubj(despise-39, everybody-35)
ccomp(makes-34, forsake-36)
dobj(forsake-36, them-37)
ccomp(makes-34, despise-39)
conj_and(forsake-36, despise-39)
dobj(despise-39, them-40)
nsubj(natural-46, that-43)
cop(natural-46, is-44)
advmod(natural-46, perfectly-45)
conj_and(think-10, natural-46)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP
          (VP (VBD was)
            (ADJP (JJ humbler)))
          (, ,)
          (CC and)
          (VP
            (VP (VBD listened))
            (CC and)
            (VP (VBD tried)
              (S
                (VP (TO to)
                  (VP (VB learn)))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJR better))
        (PP (IN for)
          (NP (PRP them)))))
    (. .)))

mark(humbler-4, If-1)
nsubj(humbler-4, they-2)
nsubj(listened-7, they-2)
cop(humbler-4, was-3)
advcl(better-16, humbler-4)
conj_and(humbler-4, listened-7)
advcl(better-16, listened-7)
conj_and(humbler-4, tried-9)
conj_and(listened-7, tried-9)
aux(learn-11, to-10)
xcomp(tried-9, learn-11)
nsubj(better-16, it-13)
aux(better-16, would-14)
cop(better-16, be-15)
root(ROOT-0, better-16)
prep_for(better-16, them-18)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN part))
        (SBAR
          (S
            (NP (DT the) (NN professor))
            (VP (VBD was)
              (PP (IN in))))))
      (VP
        (VP (VBD was)
          (PP (IN like)
            (NP (DT a) (NN boat))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (ADJP (JJ big)
            (CC and)
            (JJ roomy)))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP (JJ water-tight) (NNS lockers))
          (PP (IN around)
            (NP (DT the) (NN inside)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (NP
                      (NP (DT all) (NNS sorts))
                      (PP (IN of)
                        (NP (NNS things)))))))))
          (PP (IN in)))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN body))
      (VP (MD could)
        (VP
          (VP (VB sit)
            (PP (IN on)
              (NP (PRP them))))
          (, ,)
          (CC and)
          (VP (VB make)
            (NP (NNS beds))
            (PP (IN on)
              (NP (PRP them)))
            (, ,)
            (ADVP (RB too))))))
    (. .)))

det(part-2, The-1)
prep_in(was-5, part-2)
nsubj(was-7, part-2)
nsubj(big-14, part-2)
nsubj(had-19, part-2)
det(professor-4, the-3)
nsubj(was-5, professor-4)
rcmod(part-2, was-5)
root(ROOT-0, was-7)
det(boat-10, a-9)
prep_like(was-7, boat-10)
cop(big-14, was-13)
conj_and(was-7, big-14)
conj_and(was-7, roomy-16)
conj_and(big-14, roomy-16)
conj_and(was-7, had-19)
amod(lockers-21, water-tight-20)
dobj(had-19, lockers-21)
det(inside-24, the-23)
prep_around(had-19, inside-24)
aux(keep-26, to-25)
vmod(inside-24, keep-26)
det(sorts-28, all-27)
dobj(keep-26, sorts-28)
prep_of(sorts-28, things-30)
prep(had-19, in-31)
det(body-35, a-34)
nsubj(sit-37, body-35)
nsubj(make-42, body-35)
aux(sit-37, could-36)
conj_and(was-7, sit-37)
prep_on(sit-37, them-39)
conj_and(was-7, make-42)
conj_and(sit-37, make-42)
dobj(make-42, beds-43)
prep_on(make-42, them-45)
advmod(make-42, too-47)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD went)
        (ADVP (RB aboard))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (EX there))
        (VP (VBD was)
          (ADVP
            (NP (CD twenty) (NNS people))
            (RB there))
          (, ,)
          (S
            (VP
              (VP (VBG snooping)
                (PRT (RP around)))
              (CC and)
              (VP (VBG examining))))))
      (, ,)
      (CC and)
      (S
        (NP (JJ old) (NNP Nat) (NNP Parsons))
        (VP (VBD was)
          (ADVP (RB there))
          (, ,)
          (ADVP (RB too)))))
    (. .)))

nsubj(went-2, We-1)
nsubj(was-7, We-1)
root(ROOT-0, went-2)
advmod(went-2, aboard-3)
expl(was-7, there-6)
conj_and(went-2, was-7)
num(people-9, twenty-8)
npadvmod(there-10, people-9)
advmod(was-7, there-10)
ccomp(was-7, snooping-12)
prt(snooping-12, around-13)
ccomp(was-7, examining-15)
conj_and(snooping-12, examining-15)
amod(Parsons-20, old-18)
nn(Parsons-20, Nat-19)
nsubj(was-21, Parsons-20)
conj_and(went-2, was-21)
conj_and(was-7, was-21)
advmod(was-21, there-22)
advmod(was-21, too-24)

(ROOT
  (S
    (S
      (NP (DT The) (NN professor))
      (VP (VBD kept)
        (S
          (VP (VBG fussing)
            (PP (IN around)
              (S
                (VP (VBG getting)
                  (ADJP (JJ ready)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS people))
      (VP (VBD went)
        (ADVP (RB ashore))
        (, ,)
        (S
          (VP (VBG drifting)
            (PRT (RP out))
            (NP
              (NP
                (NP (CD one))
                (PP (IN at)
                  (NP (DT a) (NN time))))
              (, ,)
              (CC and)
              (NP
                (NP (JJ old) (NN Nat))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (NP (DT the) (JJ last)))))))))))
    (. .)))

det(professor-2, The-1)
nsubj(kept-3, professor-2)
root(ROOT-0, kept-3)
xcomp(kept-3, fussing-4)
dep(ready-7, getting-6)
prepc_around(fussing-4, ready-7)
det(people-11, the-10)
nsubj(went-12, people-11)
conj_and(kept-3, went-12)
advmod(went-12, ashore-13)
xcomp(went-12, drifting-15)
prt(drifting-15, out-16)
dobj(drifting-15, one-17)
det(time-20, a-19)
prep_at(one-17, time-20)
amod(Nat-24, old-23)
dobj(drifting-15, Nat-24)
conj_and(one-17, Nat-24)
nsubj(last-28, he-25)
cop(last-28, was-26)
det(last-28, the-27)
rcmod(Nat-24, last-28)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP it))
    (VP (MD would) (RB n't)
      (VP (VB do)
        (S
          (VP (TO to)
            (VP (VB let)
              (S
                (NP (PRP him))
                (VP (VB go)
                  (PRT (RP out))
                  (PP (IN behind)
                    (NP (NNP US))))))))))
    (. .)))

prep_of(do-6, course-2)
nsubj(do-6, it-3)
nsubj(let-8, it-3)
aux(do-6, would-4)
neg(do-6, n't-5)
root(ROOT-0, do-6)
aux(let-8, to-7)
xcomp(do-6, let-8)
nsubj(go-10, him-9)
ccomp(let-8, go-10)
prt(go-10, out-11)
prep_behind(go-10, US-13)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD must) (RB n't)
        (VP (VB budge)
          (SBAR (IN till)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBN gone))))))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (VP (MD could)
        (VP (VB be)
          (NP (JJ last) (NNS ourselves)))))
    (. .)))

nsubj(budge-4, We-1)
aux(budge-4, must-2)
neg(budge-4, n't-3)
root(ROOT-0, budge-4)
mark(gone-8, till-5)
nsubjpass(gone-8, he-6)
auxpass(gone-8, was-7)
advcl(budge-4, gone-8)
dep(budge-4, so-10)
nsubj(ourselves-15, we-11)
aux(ourselves-15, could-12)
cop(ourselves-15, be-13)
amod(ourselves-15, last-14)
parataxis(budge-4, ourselves-15)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBN gone)
        (ADVP (RB now))
        (, ,)
        (SBAR (IN so)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (NN time))
                (PP (IN for)
                  (NP (PRP us)))
                (S
                  (VP (TO to)
                    (VP (VB follow))))))))))
    (. .)))

cc(gone-4, But-1)
nsubjpass(gone-4, he-2)
auxpass(gone-4, was-3)
root(ROOT-0, gone-4)
advmod(gone-4, now-5)
mark(time-10, so-7)
nsubj(time-10, it-8)
cop(time-10, was-9)
advcl(gone-4, time-10)
prep_for(time-10, us-12)
aux(follow-14, to-13)
vmod(time-10, follow-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBD heard)
          (NP (DT a) (JJ big) (NN shout)))
        (, ,)
        (CC and)
        (VP (VBD turned)
          (PRT (RP around)))))
    (: --)
    (S
      (NP (DT the) (NN city))
      (VP (VBD was)
        (VP (VBG dropping)
          (PP (IN from)
            (PP (IN under)
              (NP (PRP us))))
          (PP (IN like)
            (NP (DT a) (NN shot))))))
    (. !)))

nsubj(heard-2, I-1)
nsubj(turned-8, I-1)
root(ROOT-0, heard-2)
det(shout-5, a-3)
amod(shout-5, big-4)
dobj(heard-2, shout-5)
conj_and(heard-2, turned-8)
prt(turned-8, around-9)
det(city-12, the-11)
nsubj(dropping-14, city-12)
aux(dropping-14, was-13)
parataxis(heard-2, dropping-14)
prep(dropping-14, from-15)
pcomp(from-15, under-16)
pobj(under-16, us-17)
det(shot-20, a-19)
prep_like(dropping-14, shot-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD made)
        (S
          (NP (PRP me))
          (ADJP (JJ sick)))
        (PP (DT all) (IN through))))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (RB so) (VBN scared)))
    (. .)))

nsubj(made-2, It-1)
ccomp(scared-11, made-2)
nsubj(sick-4, me-3)
xcomp(made-2, sick-4)
dep(through-6, all-5)
prep(made-2, through-6)
nsubjpass(scared-11, I-8)
auxpass(scared-11, was-9)
advmod(scared-11, so-10)
root(ROOT-0, scared-11)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP
        (VP (VBD turned)
          (S
            (ADJP (JJ gray))))
        (CC and)
        (VP (MD could) (RB n't)
          (VP (VB say)
            (NP (DT a) (NN word))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD did) (RB n't)
          (VP (VB say)
            (NP (NN nothing))))
        (, ,)
        (CC but)
        (VP (VBD looked)
          (S
            (ADJP (JJ excited))))))
    (. .)))

nsubj(turned-2, Jim-1)
nsubj(say-7, Jim-1)
root(ROOT-0, turned-2)
acomp(turned-2, gray-3)
aux(say-7, could-5)
neg(say-7, n't-6)
conj_and(turned-2, say-7)
det(word-9, a-8)
dobj(say-7, word-9)
nsubj(say-15, Tom-12)
nsubj(looked-19, Tom-12)
aux(say-15, did-13)
neg(say-15, n't-14)
conj_and(turned-2, say-15)
dobj(say-15, nothing-16)
conj_and(turned-2, looked-19)
conj_but(say-15, looked-19)
acomp(looked-19, excited-20)

(ROOT
  (S
    (S
      (NP (DT The) (NN city))
      (VP (VBD went)
        (PP (IN on)
          (UCP
            (VP (VBG dropping)
              (ADVP (RB down) (, ,)
                (CC and)
                (RB down) (, ,)))
            (CC and)
            (ADJP (IN down))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBD did) (RB n't)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP
                (VP (VB be)
                  (VP (VBG doing)
                    (NP (NN nothing))))
                (CONJP (CC but)
                  (RB just))
                (VP
                  (VP (VB hang)
                    (PP (IN in)
                      (NP (DT the) (NN air))))
                  (CC and)
                  (VP (VB stand)
                    (ADVP (RB still))))))))))
    (. .)))

det(city-2, The-1)
nsubj(went-3, city-2)
root(ROOT-0, went-3)
prep(went-3, on-4)
dep(on-4, dropping-5)
advmod(dropping-5, down-6)
advmod(dropping-5, down-9)
conj_and(down-6, down-9)
dep(on-4, down-12)
conj_and(dropping-5, down-12)
nsubj(seem-18, we-15)
nsubj(doing-21, we-15)
nsubj(hang-25, we-15)
aux(seem-18, did-16)
neg(seem-18, n't-17)
conj_but(went-3, seem-18)
aux(doing-21, to-19)
aux(doing-21, be-20)
xcomp(seem-18, doing-21)
dobj(doing-21, nothing-22)
xcomp(seem-18, hang-25)
conj_but(doing-21, hang-25)
det(air-28, the-27)
prep_in(hang-25, air-28)
conj_but(doing-21, stand-30)
conj_and(hang-25, stand-30)
advmod(stand-30, still-31)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS houses))
        (VP (VBD got)
          (S
            (ADJP (JJR smaller)
              (CC and)
              (JJR smaller)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN city))
          (VP (VBD pulled)
            (S
              (NP (PRP itself))
              (ADJP (RB together)))
            (, ,)
            (S
              (ADJP (JJR closer)
                (CC and)
                (JJR closer)))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NNS men)
            (CC and)
            (NNS wagons))
          (VP (VBD got)
            (PP (TO to)
              (S
                (VP (VBG looking)
                  (PP (IN like)
                    (NP
                      (NP (NNS ants)
                        (CC and)
                        (NNS bugs))
                      (VP (VBG crawling)
                        (PRT (RP around))))))))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NNS streets))
          (PP (IN like)
            (NP (NNS threads)
              (CC and)
              (NNS cracks))))))
    (: ;)
    (CC and)
    (ADVP (RB then))
    (S
      (S
        (NP (PRP it))
        (ADVP
          (NP (DT all) (NN kind))
          (IN of))
        (VP (VBD melted)
          (ADVP (RB together))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (EX there))
          (VP (VBD was) (RB n't)
            (NP
              (NP (DT any) (NN city))
              (ADJP (DT any) (JJR more))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP
                      (NP (RB only) (DT a) (JJ big) (NN scar))
                      (PP (IN on)
                        (NP (DT the) (NN earth))))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP it))
          (VP (VBD seemed)
            (PP (TO to)
              (NP (PRP me)))
            (SBAR
              (S
                (NP (DT a) (NN body))
                (VP (MD could)
                  (VP (VB see)
                    (PRT (RP up))
                    (NP
                      (NP (DT the) (NN river))
                      (CC and)
                      (ADVP (RB down)
                        (NP (DT the) (NN river)))
                      (RB about)
                      (NP (DT a) (CD thousand) (NNS miles))
                      (, ,)
                      (SBAR (IN though)
                        (S
                          (PP (IN of)
                            (NP (NN course)))
                          (NP (PRP it))
                          (VP (VBD was) (RB n't)
                            (ADJP (RB so) (JJ much))))))))))))))
    (. .)))

det(houses-2, The-1)
nsubj(got-3, houses-2)
root(ROOT-0, got-3)
acomp(got-3, smaller-4)
acomp(got-3, smaller-6)
conj_and(smaller-4, smaller-6)
det(city-10, the-9)
nsubj(pulled-11, city-10)
conj_and(got-3, pulled-11)
nsubj(together-13, itself-12)
xcomp(pulled-11, together-13)
dep(pulled-11, closer-15)
dep(pulled-11, closer-17)
conj_and(closer-15, closer-17)
det(men-21, the-20)
nsubj(got-24, men-21)
conj_and(men-21, wagons-23)
nsubj(got-24, wagons-23)
conj_and(got-3, got-24)
conj_and(pulled-11, got-24)
prepc_to(got-24, looking-26)
prep_like(looking-26, ants-28)
prep_like(looking-26, bugs-30)
conj_and(ants-28, bugs-30)
vmod(ants-28, crawling-31)
prt(crawling-31, around-32)
det(streets-36, the-35)
conj_and(got-3, streets-36)
conj_and(pulled-11, streets-36)
dep(streets-36, like-37)
pobj(like-37, threads-38)
pobj(like-37, cracks-40)
conj_and(threads-38, cracks-40)
advmod(melted-48, then-43)
nsubj(melted-48, it-44)
det(kind-46, all-45)
npadvmod(of-47, kind-46)
advmod(melted-48, of-47)
conj_and(got-3, melted-48)
advmod(melted-48, together-49)
expl(was-53, there-52)
conj_and(got-3, was-53)
conj_and(melted-48, was-53)
neg(was-53, n't-54)
det(city-56, any-55)
nsubj(was-53, city-56)
det(more-58, any-57)
amod(city-56, more-58)
nsubj(scar-64, it-59)
cop(scar-64, was-60)
advmod(scar-64, only-61)
det(scar-64, a-62)
amod(scar-64, big-63)
rcmod(city-56, scar-64)
det(earth-67, the-66)
prep_on(scar-64, earth-67)
nsubj(seemed-71, it-70)
conj_and(melted-48, seemed-71)
conj_and(was-53, seemed-71)
prep_to(seemed-71, me-73)
det(body-75, a-74)
nsubj(see-77, body-75)
aux(see-77, could-76)
ccomp(seemed-71, see-77)
prt(see-77, up-78)
det(river-80, the-79)
dobj(see-77, river-80)
dobj(see-77, down-82)
advmod(river-80, down-82)
conj_and(river-80, down-82)
det(river-84, the-83)
pobj(down-82, river-84)
dobj(see-77, about-85)
advmod(river-80, about-85)
conj_and(river-80, about-85)
det(miles-88, a-86)
num(miles-88, thousand-87)
dep(river-80, miles-88)
mark(much-97, though-90)
prep_of(much-97, course-92)
nsubj(much-97, it-93)
cop(much-97, was-94)
neg(much-97, n't-95)
advmod(much-97, so-96)
dobj(see-77, much-97)
conj_and(river-80, much-97)

(ROOT
  (S
    (PP (IN By)
      (PRN (CC and)
        (PP (IN by))))
    (NP (DT the) (NN earth))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (NN ball))
          (PRN (: --)
            (ADVP (RB just))
            (NP (DT a) (NN round) (NN ball))
            (, ,)))
        (PP (IN of)
          (NP (DT a) (JJ dull) (NN color))))
      (, ,)
      (PP (IN with)
        (NP
          (NP (JJ shiny) (NNS stripes))
          (VP
            (VP (VBG wriggling))
            (CC and)
            (VP (VBG winding)
              (PRT (RP around))
              (PP (IN over)
                (NP (PRP it)))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (NP (NNS rivers))))))))))
    (. .)))

prep(ball-8, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
det(earth-5, the-4)
nsubj(ball-8, earth-5)
cop(ball-8, was-6)
det(ball-8, a-7)
root(ROOT-0, ball-8)
dep(ball-13, just-10)
det(ball-13, a-11)
nn(ball-13, round-12)
dep(ball-8, ball-13)
det(color-18, a-16)
amod(color-18, dull-17)
prep_of(ball-8, color-18)
amod(stripes-22, shiny-21)
prep_with(ball-8, stripes-22)
dep(stripes-22, wriggling-23)
dep(stripes-22, winding-25)
conj_and(wriggling-23, winding-25)
prt(winding-25, around-26)
prep_over(winding-25, it-28)
nsubj(rivers-32, which-30)
cop(rivers-32, was-31)
ccomp(winding-25, rivers-32)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Widder) (NNP Douglas))
      (ADVP (RB always))
      (VP (VBD told)
        (NP (PRP me))
        (SBAR
          (S
            (NP (DT the) (NN earth))
            (VP (VBD was)
              (NP
                (NP (NN round))
                (PP (IN like)
                  (NP (DT a) (NN ball)))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP I))
        (ADVP (RB never))
        (VP (VBD took)
          (SBAR
            (S
              (NP
                (NP (DT any) (NN stock))
                (PP (IN in)
                  (NP
                    (NP (DT a) (NN lot))
                    (PP (IN of)
                      (NP (PRP them))))))
              (VP (VBZ superstitions)
                (NP
                  (NP (NNP o) (POS '))
                  (NNS hers)))))))
      (, ,)
      (CC and)
      (S
        (PP (IN of)
          (NP (NN course)))
        (NP (PRP I))
        (VP (VBD paid)
          (NP (DT no) (NN attention))
          (PP (TO to)
            (NP (DT that) (NN one)))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP I))
              (VP (MD could)
                (VP (VB see)
                  (NP (PRP myself))
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN world))
                      (VP (VBD was)
                        (UCP
                          (NP
                            (NP (DT the) (NN shape))
                            (PP (IN of)
                              (NP (DT a) (NN plate))))
                          (, ,)
                          (CC and)
                          (ADJP (JJ flat)))))))))))))
    (. .)))

det(Douglas-3, The-1)
nn(Douglas-3, Widder-2)
nsubj(told-5, Douglas-3)
advmod(told-5, always-4)
root(ROOT-0, told-5)
dobj(told-5, me-6)
det(earth-8, the-7)
nsubj(round-10, earth-8)
cop(round-10, was-9)
dep(told-5, round-10)
det(ball-13, a-12)
prep_like(round-10, ball-13)
nsubj(took-18, I-16)
neg(took-18, never-17)
conj_but(told-5, took-18)
det(stock-20, any-19)
nsubj(superstitions-26, stock-20)
det(lot-23, a-22)
prep_in(stock-20, lot-23)
prep_of(lot-23, them-25)
ccomp(took-18, superstitions-26)
poss(hers-29, o-27)
dobj(superstitions-26, hers-29)
prep_of(paid-35, course-33)
nsubj(paid-35, I-34)
conj_but(told-5, paid-35)
conj_and(took-18, paid-35)
neg(attention-37, no-36)
dobj(paid-35, attention-37)
det(one-40, that-39)
prep_to(paid-35, one-40)
mark(see-45, because-42)
nsubj(see-45, I-43)
aux(see-45, could-44)
advcl(paid-35, see-45)
dobj(see-45, myself-46)
mark(shape-52, that-47)
det(world-49, the-48)
nsubj(shape-52, world-49)
nsubj(flat-58, world-49)
cop(shape-52, was-50)
det(shape-52, the-51)
ccomp(see-45, shape-52)
det(plate-55, a-54)
prep_of(shape-52, plate-55)
ccomp(see-45, flat-58)
conj_and(shape-52, flat-58)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB go)
              (PRT (RP up))
              (PP (IN on)
                (NP (DT the) (NN hill))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP
          (VP (VB take)
            (NP (DT a) (NN look))
            (ADVP (RB around)))
          (CC and)
          (VP (VB prove)
            (NP (PRP it))
            (PP (IN for)
              (NP (PRP myself)))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (VBP reckon)
                  (S
                    (NP (DT the) (JJS best) (NN way))
                    (VP (TO to)
                      (VP (VB get)
                        (NP (DT a) (JJ sure) (NN thing))
                        (PP (IN on)
                          (NP (DT a) (NN fact))))))))))))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP
              (VP (VB go)
                (CC and)
                (VB examine)
                (PP (IN for)
                  (NP (PRP yourself))))
              (, ,)
              (CC and)
              (RB not)
              (VP (VB take)
                (NP
                  (NP (NN anybody) (POS 's))
                  (NN say-so))))))))
    (. .)))

nsubj(used-2, I-1)
nsubj(go-4, I-1)
root(ROOT-0, used-2)
aux(go-4, to-3)
xcomp(used-2, go-4)
prt(go-4, up-5)
det(hill-8, the-7)
prep_on(go-4, hill-8)
csubj(is-35, take-11)
det(look-13, a-12)
dobj(take-11, look-13)
advmod(take-11, around-14)
conj_and(take-11, prove-16)
csubj(is-35, prove-16)
dobj(prove-16, it-17)
prep_for(prove-16, myself-19)
mark(reckon-23, because-21)
nsubj(reckon-23, I-22)
advcl(prove-16, reckon-23)
det(way-26, the-24)
amod(way-26, best-25)
dobj(reckon-23, way-26)
nsubj(get-28, way-26)
aux(get-28, to-27)
xcomp(reckon-23, get-28)
det(thing-31, a-29)
amod(thing-31, sure-30)
dobj(get-28, thing-31)
det(fact-34, a-33)
prep_on(get-28, fact-34)
conj_and(used-2, is-35)
aux(go-37, to-36)
xcomp(is-35, go-37)
xcomp(is-35, examine-39)
conj_and(go-37, examine-39)
prep_for(go-37, yourself-41)
neg(take-45, not-44)
xcomp(is-35, take-45)
conj_and(go-37, take-45)
poss(say-so-48, anybody-46)
dobj(take-45, say-so-48)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB give)
            (PRT (RP in))
            (ADVP (RB now))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN widder))
                (VP (VBD was)
                  (ADJP (JJ right)))))))))
    (. .)))

cc(had-3, But-1)
nsubj(had-3, I-2)
nsubj(give-5, I-2)
root(ROOT-0, had-3)
aux(give-5, to-4)
xcomp(had-3, give-5)
prt(give-5, in-6)
advmod(give-5, now-7)
mark(right-12, that-8)
det(widder-10, the-9)
nsubj(right-12, widder-10)
cop(right-12, was-11)
ccomp(give-5, right-12)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ is) (, ,)
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD was)
              (ADVP (RB right) (RB as))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN rest))
                  (PP (IN of)
                    (NP (DT the) (NN world))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBP war) (RB n't)
        (ADJP (JJ right)
          (PP (IN about)
            (NP
              (NP (DT the) (NN part))
              (SBAR
                (S
                  (NP (PRP$ our) (NN village))
                  (VP (VBZ is)
                    (PP (IN in))))))))))
    (: ;)
    (S
      (NP (DT that) (NN part))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN shape))
          (PP (IN of)
            (NP (DT a) (NN plate))))))
    (, ,)
    (CC and)
    (S
      (S
        (ADJP (JJ flat)))
      (, ,)
      (NP (PRP I))
      (VP (VBP take)
        (NP (PRP$ my) (NN oath))))
    (. !)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
nsubj(was-5, she-4)
ccomp(is-2, was-5)
advmod(was-5, right-6)
det(rest-10, the-9)
prep_as_to(was-5, rest-10)
det(world-13, the-12)
prep_of(rest-10, world-13)
nsubj(war-17, she-16)
conj_but(is-2, war-17)
neg(war-17, n't-18)
acomp(war-17, right-19)
det(part-22, the-21)
prep_about(right-19, part-22)
prep_in(is-25, part-22)
poss(village-24, our-23)
nsubj(is-25, village-24)
rcmod(part-22, is-25)
det(part-29, that-28)
nsubj(shape-32, part-29)
cop(shape-32, is-30)
det(shape-32, the-31)
conj_but(is-2, shape-32)
det(plate-35, a-34)
prep_of(shape-32, plate-35)
ccomp(take-41, flat-38)
nsubj(take-41, I-40)
conj_and(is-2, take-41)
poss(oath-43, my-42)
dobj(take-41, oath-43)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN professor))
        (VP (VBD had)
          (VP (VBN been)
            (ADJP (JJ quiet))
            (NP (PDT all) (DT this) (NN time))
            (, ,)
            (SBAR (RB as) (IN if)
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (ADJP (RB asleep))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBD broke)
          (ADVP (RB loose))
          (ADVP (RB now)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RB mighty) (JJ bitter))))
    (. .)))

det(professor-2, The-1)
nsubj(quiet-5, professor-2)
aux(quiet-5, had-3)
cop(quiet-5, been-4)
root(ROOT-0, quiet-5)
predet(time-8, all-6)
det(time-8, this-7)
dep(quiet-5, time-8)
advmod(asleep-14, as-10)
mark(asleep-14, if-11)
nsubj(asleep-14, he-12)
cop(asleep-14, was-13)
advcl(quiet-5, asleep-14)
nsubj(broke-18, he-17)
conj_but(quiet-5, broke-18)
advmod(broke-18, loose-19)
advmod(broke-18, now-20)
nsubj(bitter-26, he-23)
cop(bitter-26, was-24)
advmod(bitter-26, mighty-25)
conj_and(quiet-5, bitter-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (NP (NN something))
      (PP (IN like)
        (NP
          (NP (DT this))
          (: :) (`` ``)
          (NP (NNP Idiots)))))
    (. !)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
dobj(says-2, something-3)
prep_like(says-2, this-5)
dep(this-5, Idiots-8)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would) (RB n't)
              (VP (VB go)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP
              (VP (VB examine)
                (NP (PRP it)))
              (, ,)
              (CC and)
              (VP
                (VP (VB spy)
                  (PRT (RP around)))
                (CC and)
                (VP (VB get)
                  (NP
                    (NP (DT the) (NN secret))
                    (PP (IN of)
                      (NP (PRP it)))
                    (PP (RB out) (IN of)
                      (NP (PRP me)))))))))))
    (. .)))

nsubj(said-2, They-1)
root(ROOT-0, said-2)
nsubj(go-6, it-3)
aux(go-6, would-4)
neg(go-6, n't-5)
ccomp(said-2, go-6)
nsubj(wanted-10, they-9)
nsubj(examine-12, they-9)
nsubj(spy-16, they-9)
conj_and(said-2, wanted-10)
aux(examine-12, to-11)
xcomp(wanted-10, examine-12)
dobj(examine-12, it-13)
xcomp(wanted-10, spy-16)
conj_and(examine-12, spy-16)
prt(spy-16, around-17)
conj_and(examine-12, get-19)
conj_and(spy-16, get-19)
det(secret-21, the-20)
dobj(get-19, secret-21)
prep_of(secret-21, it-23)
prep_out_of(secret-21, me-26)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD beat)
      (NP (PRP them)))
    (. .)))

cc(beat-3, But-1)
nsubj(beat-3, I-2)
root(ROOT-0, beat-3)
dobj(beat-3, them-4)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (VBZ knows)
      (NP
        (NP (DT the) (NN secret))
        (PP (CC but)
          (NP (PRP me)))))
    (. .)))

nsubj(knows-2, Nobody-1)
root(ROOT-0, knows-2)
det(secret-4, the-3)
dobj(knows-2, secret-4)
prep(secret-4, but-5)
pobj(but-5, me-6)

(ROOT
  (S
    (S
      (NP (NN Nobody))
      (VP (VBZ knows)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ makes)
              (S
                (NP (PRP it))
                (VP (VB move)
                  (PP (CC but)
                    (NP (PRP me))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT a) (JJ new) (NN power))
            (: --)
            (NP (DT a) (JJ new) (NN power)))
          (, ,)
          (CC and)
          (NP
            (NP
              (QP (DT a) (CD thousand) (NNS times)))
            (NP (DT the) (JJS strongest))))
        (PP (IN in)
          (NP (DT the) (NN earth)))))
    (. !)))

nsubj(knows-2, Nobody-1)
root(ROOT-0, knows-2)
nsubj(makes-4, what-3)
ccomp(knows-2, makes-4)
nsubj(move-6, it-5)
ccomp(makes-4, move-6)
prep(move-6, but-7)
pobj(but-7, me-8)
nsubj(power-15, it-11)
cop(power-15, 's-12)
det(power-15, a-13)
amod(power-15, new-14)
conj_and(knows-2, power-15)
det(power-19, a-17)
amod(power-19, new-18)
dep(power-15, power-19)
quantmod(times-24, a-22)
number(times-24, thousand-23)
conj_and(knows-2, times-24)
conj_and(power-15, times-24)
det(strongest-26, the-25)
dep(times-24, strongest-26)
det(earth-29, the-28)
prep_in(power-15, earth-29)

(ROOT
  (S
    (NP (NNP Steam) (POS 's))
    (VP (VBZ foolishness)
      (PP (TO to)
        (NP (PRP it))))
    (. !)))

nsubj(foolishness-3, Steam-1)
possessive(Steam-1, 's-2)
root(ROOT-0, foolishness-3)
prep_to(foolishness-3, it-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD could) (RB n't)
            (VP (VB go)
              (PP (TO to)
                (NP (NNP Europe))))))))
    (. .)))

nsubj(said-2, They-1)
root(ROOT-0, said-2)
nsubj(go-6, I-3)
aux(go-6, could-4)
neg(go-6, n't-5)
ccomp(said-2, go-6)
prep_to(go-6, Europe-8)

(ROOT
  (FRAG
    (PP (TO To)
      (NP (NNP Europe)))
    (. !)))

root(ROOT-0, To-1)
pobj(To-1, Europe-2)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (NN power))
          (ADVP (IN aboard)
            (PP (TO to)
              (NP (JJ last) (CD five) (NNS years)))))
        (, ,)
        (CC and)
        (NP
          (NP (NN feed))
          (PP (IN for)
            (NP (CD three) (NNS months))))))
    (. .)))

discourse('s-4, Why-1)
expl('s-4, there-3)
root(ROOT-0, 's-4)
nsubj('s-4, power-5)
advmod(power-5, aboard-6)
amod(years-10, last-8)
num(years-10, five-9)
prep_to(aboard-6, years-10)
nsubj('s-4, feed-13)
conj_and(power-5, feed-13)
num(months-16, three-15)
prep_for(feed-13, months-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (NP (NNS fools)))
    (. !)))

nsubj(fools-3, They-1)
cop(fools-3, are-2)
root(ROOT-0, fools-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP they))
      (VP (VB know)
        (PP (IN about)
          (NP (PRP it)))))
    (. ?)))

dobj(know-4, What-1)
aux(know-4, do-2)
nsubj(know-4, they-3)
root(ROOT-0, know-4)
prep_about(know-4, it-6)

(ROOT
  (FRAG
    (NP (NNP Yes))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP$ my) (NN air-ship))
            (VP (VBD was)
              (ADJP (JJ flimsy)))))))
    (. .)))

root(ROOT-0, Yes-1)
cc(Yes-1, and-3)
nsubj(said-5, they-4)
dep(Yes-1, said-5)
poss(air-ship-7, my-6)
nsubj(flimsy-9, air-ship-7)
cop(flimsy-9, was-8)
ccomp(said-5, flimsy-9)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP she))
    (VP (VBZ 's)
      (ADJP (JJ good)
        (PP (IN for)
          (NP (JJ fifty) (NNS years)))))
    (. !)))

discourse(good-5, Why-1)
nsubj(good-5, she-3)
cop(good-5, 's-4)
root(ROOT-0, good-5)
amod(years-8, fifty-7)
prep_for(good-5, years-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP
        (VP (VB sail)
          (NP (DT the) (NNS skies))
          (NP (PDT all) (PRP$ my) (NN life))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP want)
                (PP (TO to))))))
        (, ,)
        (CC and)
        (VP (VB steer)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP I))
              (VP
                (VP (VBP please)
                  (PRN (, ,)
                    (SBAR (IN though)
                      (S
                        (NP (PRP they))
                        (VP (VBD laughed)
                          (PP (IN at)
                            (NP (DT that))))))
                    (, ,)))
                (CC and)
                (VP (VBD said)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD could) (RB n't)))))))))))
    (. .)))

nsubj(sail-3, I-1)
nsubj(steer-15, I-1)
aux(sail-3, can-2)
root(ROOT-0, sail-3)
det(skies-5, the-4)
iobj(sail-3, skies-5)
predet(life-8, all-6)
poss(life-8, my-7)
dobj(sail-3, life-8)
mark(want-11, if-9)
nsubj(want-11, I-10)
advcl(sail-3, want-11)
prep(want-11, to-12)
conj_and(sail-3, steer-15)
advmod(please-18, where-16)
nsubj(please-18, I-17)
nsubj(said-27, I-17)
advcl(steer-15, please-18)
mark(laughed-22, though-20)
nsubj(laughed-22, they-21)
parataxis(please-18, laughed-22)
prep_at(laughed-22, that-24)
advcl(steer-15, said-27)
conj_and(please-18, said-27)
nsubj(could-29, I-28)
ccomp(said-27, could-29)
neg(could-29, n't-30)

(ROOT
  (S
    (VP (MD Could) (RB n't)
      (VP (VB steer)))
    (. !)))

aux(steer-3, Could-1)
neg(steer-3, n't-2)
root(ROOT-0, steer-3)

(ROOT
  (S
    (PP (VBN Come)
      (NP
        (NP (RB here))
        (, ,)
        (NP (NN boy))))
    (: ;)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB see)))
    (. .)))

prep(see-8, Come-1)
pobj(Come-1, here-2)
appos(here-2, boy-4)
nsubj(see-8, we-6)
aux(see-8, 'll-7)
root(ROOT-0, see-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP press)
      (NP (DT these) (NNS buttons))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP tell)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(press-2, You-1)
root(ROOT-0, press-2)
det(buttons-4, these-3)
dobj(press-2, buttons-4)
mark(tell-7, as-5)
nsubj(tell-7, I-6)
advcl(press-2, tell-7)
dobj(tell-7, you-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD made)
          (S
            (NP (NNP Tom))
            (VP (VB steer)
              (NP
                (NP (DT the) (NN ship))
                (ADJP
                  (ADVP (RB all)
                    (PP (IN about)
                      (NP (NNP and))))
                  (DT every))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (NN way))))))))
        (, ,)
        (CC and)
        (VP (VBD learnt)
          (S
            (NP (PRP him))
            (NP
              (NP (DT the) (JJ whole) (NN thing))
              (PP (IN in)
                (NP (RB nearly) (DT no) (NN time))))))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP (RB perfectly) (JJ easy)))))))
    (. .)))

nsubj(made-2, He-1)
nsubj(learnt-15, He-1)
root(ROOT-0, made-2)
nsubj(steer-4, Tom-3)
ccomp(made-2, steer-4)
det(ship-6, the-5)
dobj(steer-4, ship-6)
dep(way-12, ship-6)
advmod(every-10, all-7)
prep_about(all-7, and-9)
amod(ship-6, every-10)
rcmod(ship-6, way-12)
conj_and(made-2, learnt-15)
nsubj(thing-19, him-16)
det(thing-19, the-17)
amod(thing-19, whole-18)
xcomp(learnt-15, thing-19)
advmod(time-23, nearly-21)
neg(time-23, no-22)
prep_in(thing-19, time-23)
nsubj(said-27, Tom-26)
conj_and(made-2, said-27)
nsubj(easy-31, it-28)
cop(easy-31, was-29)
advmod(easy-31, perfectly-30)
ccomp(said-27, easy-31)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP him))
            (VP
              (VP (VBP fetch)
                (NP (DT the) (NN ship))
                (PP (IN down) (`` `)
                  (NP
                    (NP (JJS most))
                    (PP (TO to)
                      (NP (DT the) (NN earth))))))
              (, ,)
              (CC and)
              (VP (VBD had)
                (S
                  (NP (PRP him))
                  (VP
                    (VP (VB spin)
                      (NP (PRP her))
                      (PRT (RP along))
                      (ADVP
                        (ADVP (RB so) (JJ close)
                          (PP (TO to)
                            (NP (DT the) (NNP Illinois) (NNS prairies))))
                        (SBAR (IN that)
                          (S
                            (NP (DT a) (NN body))
                            (VP (MD could)
                              (VP (VB talk)
                                (PP (TO to)
                                  (NP (DT the) (NNS farmers)))))))))
                    (, ,)
                    (CC and)
                    (VP (VB hear)
                      (NP
                        (NP (NN everything))
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (VBD said)
                              (ADJP (RB perfectly) (JJ plain)))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBG flung)
        (PRT (RP out))
        (NP
          (NP (VBN printed) (NNS bills))
          (PP (TO to)
            (NP (PRP them)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP
                (VP (VBD told)
                  (PP (IN about)
                    (NP (DT the) (NN balloon))))
                (, ,)
                (CC and)
                (VP (VBD said)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (VP (VBG going)
                          (PP (TO to)
                            (NP (NNP Europe))))))))))))))
    (. .)))

nsubj(made-2, He-1)
root(ROOT-0, made-2)
nsubj(fetch-4, him-3)
nsubj(had-15, him-3)
ccomp(made-2, fetch-4)
det(ship-6, the-5)
dobj(fetch-4, ship-6)
prep_down(fetch-4, most-9)
det(earth-12, the-11)
prep_to(most-9, earth-12)
ccomp(made-2, had-15)
conj_and(fetch-4, had-15)
nsubj(spin-17, him-16)
nsubj(hear-36, him-16)
ccomp(had-15, spin-17)
dobj(spin-17, her-18)
prt(spin-17, along-19)
advmod(spin-17, so-20)
det(prairies-25, the-23)
nn(prairies-25, Illinois-24)
prep_close_to(spin-17, prairies-25)
mark(talk-30, that-26)
det(body-28, a-27)
nsubj(talk-30, body-28)
aux(talk-30, could-29)
advcl(spin-17, talk-30)
ccomp(spin-17, talk-30)
det(farmers-33, the-32)
prep_to(talk-30, farmers-33)
ccomp(had-15, hear-36)
conj_and(spin-17, hear-36)
dobj(hear-36, everything-37)
nsubj(said-39, they-38)
rcmod(everything-37, said-39)
advmod(plain-41, perfectly-40)
acomp(said-39, plain-41)
nsubj(flung-45, he-44)
conj_and(made-2, flung-45)
prt(flung-45, out-46)
amod(bills-48, printed-47)
dobj(flung-45, bills-48)
nsubj(told-52, bills-48)
nsubj(said-58, bills-48)
prep_to(bills-48, them-50)
rcmod(bills-48, told-52)
det(balloon-55, the-54)
prep_about(told-52, balloon-55)
rcmod(bills-48, said-58)
conj_and(told-52, said-58)
nsubj(going-61, it-59)
aux(going-61, was-60)
ccomp(said-58, going-61)
prep_to(going-61, Europe-63)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD got)
        (SBAR (IN so)
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB steer)
                (ADVP (RB straight))
                (PP (IN for)
                  (NP (DT a) (NN tree)))
                (SBAR (IN till)
                  (S
                    (NP (PRP he))
                    (VP (VBD got)
                      (ADVP (RB nearly))
                      (PP (TO to)
                        (NP (PRP it))))))))))))
    (, ,)
    (CC and)
    (RB then)
    (S
      (VP
        (VP (VBG dart)
          (PRT (RP up)))
        (CC and)
        (VP (VBG skin)
          (ADVP (RB right) (RB along))
          (PP (IN over)
            (NP
              (NP (DT the) (NN top))
              (PP (IN of)
                (NP (PRP it))))))))
    (. .)))

nsubj(got-2, Tom-1)
nsubj(dart-20, Tom-1)
root(ROOT-0, got-2)
mark(steer-6, so-3)
nsubj(steer-6, he-4)
aux(steer-6, could-5)
advcl(got-2, steer-6)
advmod(steer-6, straight-7)
det(tree-10, a-9)
prep_for(steer-6, tree-10)
mark(got-13, till-11)
nsubj(got-13, he-12)
advcl(steer-6, got-13)
advmod(got-13, nearly-14)
prep_to(got-13, it-16)
advmod(dart-20, then-19)
conj_and(got-2, dart-20)
prt(dart-20, up-21)
conj_and(got-2, skin-23)
conj_and(dart-20, skin-23)
advmod(along-25, right-24)
advmod(skin-23, along-25)
det(top-28, the-27)
prep_over(skin-23, top-28)
prep_of(top-28, it-30)

(ROOT
  (S
    (ADVP (RB Yes))
    (, ,)
    (S (CC and)
      (NP (PRP he))
      (VP (VBD showed)
        (NP (NNP Tom))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB land)
                (NP (PRP her))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBN done)
          (S
            (NP (PRP it))
            (ADJP
              (ADJP (JJ first-rate))
              (PRN (, ,)
                (ADVP (RB too))
                (, ,)))))
        (CC and)
        (VP (VBD set)
          (NP (PRP her))
          (PRT (RP down))
          (PP (IN in)
            (NP
              (NP (DT the) (NNS prairies))
              (ADJP (RB as) (JJ soft))))
          (PP (IN as)
            (NP (NN wool))))))
    (. .)))

advmod(showed-5, Yes-1)
nsubj(showed-5, he-4)
root(ROOT-0, showed-5)
dobj(showed-5, Tom-6)
nsubj(land-9, Tom-6)
advmod(land-9, how-7)
aux(land-9, to-8)
xcomp(showed-5, land-9)
dobj(land-9, her-10)
nsubj(done-14, he-13)
nsubj(set-21, he-13)
conj_and(showed-5, done-14)
nsubj(first-rate-16, it-15)
xcomp(done-14, first-rate-16)
dep(first-rate-16, too-18)
conj_and(showed-5, set-21)
conj_and(done-14, set-21)
dobj(set-21, her-22)
prt(set-21, down-23)
det(prairies-26, the-25)
prep_in(set-21, prairies-26)
advmod(soft-28, as-27)
amod(prairies-26, soft-28)
prep_as(set-21, wool-30)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN minute))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD started)
            (S
              (VP (TO to)
                (VP (VB skip)
                  (PRT (RP out))
                  (NP (DT the) (NN professor)))))))))
    (VP (VBZ says) (, ,) (`` ``)
      (S
        (INTJ (UH No))
        (, ,)
        (NP (PRP you))
        (VP (VBP do) (RB n't))))
    (. !) ('' '')))

cc(says-11, But-1)
det(minute-3, the-2)
nsubj(says-11, minute-3)
nsubj(started-5, we-4)
nsubj(skip-7, we-4)
rcmod(minute-3, started-5)
aux(skip-7, to-6)
xcomp(started-5, skip-7)
prt(skip-7, out-8)
det(professor-10, the-9)
dobj(skip-7, professor-10)
root(ROOT-0, says-11)
discourse(do-17, No-14)
nsubj(do-17, you-16)
ccomp(says-11, do-17)
neg(do-17, n't-18)

(ROOT
  (S
    (NP (NNP and))
    (VP (VBD shot)
      (NP (PRP her))
      (PRT (RP up))
      (PP (IN in)
        (NP (DT the) (NN air)))
      (ADVP (RB again)))
    (. .)))

nsubj(shot-2, and-1)
root(ROOT-0, shot-2)
dobj(shot-2, her-3)
prt(shot-2, up-4)
det(air-7, the-6)
prep_in(shot-2, air-7)
advmod(shot-2, again-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ awful)))
    (. .)))

nsubj(awful-3, It-1)
cop(awful-3, was-2)
root(ROOT-0, awful-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB beg)))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB so))
          (VBD did)
          (NP (NNP Jim)))))
    (: ;)
    (S
      (S (CC but)
        (NP (PRP it))
        (ADVP (RB only))
        (VP (VBP give)
          (NP (PRP$ his) (NN temper))
          (NP (DT a) (NN rise))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP he))
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP
                  (VP (VB rage)
                    (PRT (RP around)))
                  (CC and)
                  (VP (VB look)
                    (NP
                      (NP (JJ wild) (NN out))
                      (PP (IN of)
                        (NP (PRP$ his) (NNS eyes))))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBN scared)
              (PP (IN of)
                (NP (PRP him))))))))
    (. .)))

nsubj(begun-2, I-1)
nsubj(beg-4, I-1)
nsubj(did-8, I-1)
root(ROOT-0, begun-2)
aux(beg-4, to-3)
xcomp(begun-2, beg-4)
advmod(did-8, so-7)
conj_and(begun-2, did-8)
dobj(did-8, Jim-9)
nsubj(give-14, it-12)
advmod(give-14, only-13)
parataxis(begun-2, give-14)
poss(temper-16, his-15)
dep(give-14, temper-16)
det(rise-18, a-17)
dobj(give-14, rise-18)
nsubj(begun-22, he-21)
nsubj(rage-24, he-21)
nsubj(look-27, he-21)
parataxis(begun-2, begun-22)
conj_and(give-14, begun-22)
aux(rage-24, to-23)
xcomp(begun-22, rage-24)
prt(rage-24, around-25)
xcomp(begun-22, look-27)
conj_and(rage-24, look-27)
amod(out-29, wild-28)
dobj(look-27, out-29)
poss(eyes-32, his-31)
prep_of(out-29, eyes-32)
nsubjpass(scared-37, I-35)
auxpass(scared-37, was-36)
conj_and(give-14, scared-37)
conj_and(begun-22, scared-37)
prep_of(scared-37, him-39)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP
        (VP (VBD got)
          (PRT (RP on))
          (PP (TO to)
            (NP (PRP$ his) (NNS troubles)))
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VBD mourned)
          (CC and)
          (VBD grumbled)
          (NP
            (NP (RB about) (DT the) (NN way))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (VP (VBN treated)))))))
        (, ,)
        (CC and)
        (VP (MD could) (RB n't)
          (VP (VB seem)
            (S
              (VP (TO to)
                (VP (VB git)
                  (PRT (RP over))
                  (NP (PRP it)))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB especially))
      (NP (NNS people))
      (VP (VBZ 's)
        (VP (VBG saying)
          (SBAR
            (S
              (NP (PRP$ his) (NN ship))
              (VP (VBD was)
                (ADJP (JJ flimsy))))))))
    (. .)))

advmod(got-5, Well-1)
advmod(got-5, then-3)
nsubj(got-5, he-4)
nsubj(mourned-13, he-4)
nsubj(seem-26, he-4)
nsubj(git-28, he-4)
root(ROOT-0, got-5)
prt(got-5, on-6)
poss(troubles-9, his-8)
prep_to(got-5, troubles-9)
advmod(got-5, again-10)
conj_and(got-5, mourned-13)
conj_and(got-5, grumbled-15)
conj_and(mourned-13, grumbled-15)
advmod(way-18, about-16)
det(way-18, the-17)
dobj(mourned-13, way-18)
nsubjpass(treated-21, he-19)
auxpass(treated-21, was-20)
rcmod(way-18, treated-21)
aux(seem-26, could-24)
neg(seem-26, n't-25)
conj_and(got-5, seem-26)
aux(git-28, to-27)
xcomp(seem-26, git-28)
prt(git-28, over-29)
dobj(git-28, it-30)
advmod(saying-36, especially-33)
nsubj(saying-36, people-34)
aux(saying-36, 's-35)
conj_and(got-5, saying-36)
poss(ship-38, his-37)
nsubj(flimsy-40, ship-38)
cop(flimsy-40, was-39)
ccomp(saying-36, flimsy-40)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD scoffed)
        (PP (IN at)
          (NP (DT that)))))
    (, ,)
    (CC and)
    (S
      (PP (IN at)
        (NP (PRP$ their) (NN saying)))
      (NP (PRP she))
      (VP
        (VP (VBP war) (RB n't)
          (ADJP (JJ simple)))
        (CC and)
        (VP (MD would)
          (VP (VB be)
            (ADVP (RB always))
            (VP (VBG getting)
              (PRT (RP out))
              (PP (IN of)
                (NP (NN order))))))))
    (. .)))

nsubj(scoffed-2, He-1)
root(ROOT-0, scoffed-2)
prep_at(scoffed-2, that-4)
poss(saying-9, their-8)
prep_at(war-11, saying-9)
nsubj(war-11, she-10)
nsubj(getting-18, she-10)
conj_and(scoffed-2, war-11)
neg(war-11, n't-12)
acomp(war-11, simple-13)
aux(getting-18, would-15)
aux(getting-18, be-16)
advmod(getting-18, always-17)
conj_and(scoffed-2, getting-18)
conj_and(war-11, getting-18)
prep_out_of(getting-18, order-21)

(ROOT
  (S
    (VP (VB Get)
      (PRT (RP out))
      (PP (IN of)
        (NP (NN order))))
    (. !)))

root(ROOT-0, Get-1)
prep_out_of(Get-1, order-4)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD graveled)
        (NP (PRP him))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (MD could) (RB n't)
              (ADVP (DT any) (RBR more))
              (VP (VB get)
                (PRT (RP out))
                (PP (IN of)
                  (NP
                    (NP (NN order))
                    (PP (IN than)
                      (NP (DT the) (JJ solar) (NN sister)))))))))))
    (. .)))

nsubj(graveled-2, That-1)
root(ROOT-0, graveled-2)
dobj(graveled-2, him-3)
nsubj(said-6, he-5)
parataxis(graveled-2, said-6)
mark(get-13, that-7)
nsubj(get-13, she-8)
aux(get-13, could-9)
neg(get-13, n't-10)
dep(more-12, any-11)
advmod(get-13, more-12)
ccomp(said-6, get-13)
prep_out_of(get-13, order-16)
det(sister-20, the-18)
amod(sister-20, solar-19)
prep_than(order-16, sister-20)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD got)
        (S
          (ADJP (JJR worse)
            (CC and)
            (JJR worse)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP see)
        (S
          (NP (DT a) (NN person))
          (VP (VB take)
            (ADVP (RB on) (RB so))))))
    (. .)))

nsubj(got-2, He-1)
root(ROOT-0, got-2)
acomp(got-2, worse-3)
acomp(got-2, worse-5)
conj_and(worse-3, worse-5)
nsubj(see-10, I-8)
neg(see-10, never-9)
conj_and(got-2, see-10)
det(person-12, a-11)
nsubj(take-13, person-12)
ccomp(see-10, take-13)
advmod(so-15, on-14)
advmod(take-13, so-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBP give)
        (NP (PRP me))
        (NP (DT the) (JJ cold) (NNS shivers)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP him))))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP it))
      (VP (VBD did)
        (NP (NNP Jim))))
    (. .)))

nsubj(give-2, It-1)
root(ROOT-0, give-2)
iobj(give-2, me-3)
det(shivers-6, the-4)
amod(shivers-6, cold-5)
dobj(give-2, shivers-6)
aux(see-8, to-7)
vmod(shivers-6, see-8)
dobj(see-8, him-9)
conj_and(give-2, so-12)
nsubj(did-14, it-13)
ccomp(give-2, did-14)
dobj(did-14, Jim-15)

(ROOT
  (S
    (S
      (S
        (PP (IN By)
          (PRN (CC and)
            (PP (IN by))))
        (NP (PRP he))
        (VP (VBD got)
          (PP (TO to)
            (S
              (VP (VBG yelling)
                (CC and)
                (VBG screaming))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP he))
        (VP (VBD swore)
          (SBAR
            (S
              (NP (DT the) (NN world))
              (VP (MD should) (RB n't)
                (ADVP (RB ever))
                (VP (VB have)
                  (NP
                    (NP (PRP$ his) (NN secret))
                    (PP (IN at)
                      (NP (DT all))))
                  (ADVP (RB now)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD had)
      (VP (VBN treated)
        (S
          (NP (PRP him))
          (RB so)
          (VP (VB mean)))))
    (. .)))

prep(got-5, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
nsubj(got-5, he-4)
ccomp(treated-29, got-5)
prepc_to(got-5, yelling-7)
prepc_to(got-5, screaming-9)
conj_and(yelling-7, screaming-9)
advmod(swore-14, then-12)
nsubj(swore-14, he-13)
conj_and(got-5, swore-14)
ccomp(treated-29, swore-14)
det(world-16, the-15)
nsubj(have-20, world-16)
aux(have-20, should-17)
neg(have-20, n't-18)
advmod(have-20, ever-19)
ccomp(swore-14, have-20)
poss(secret-22, his-21)
dobj(have-20, secret-22)
prep_at(secret-22, all-24)
advmod(have-20, now-25)
nsubj(treated-29, it-27)
aux(treated-29, had-28)
root(ROOT-0, treated-29)
nsubj(mean-32, him-30)
advmod(mean-32, so-31)
ccomp(treated-29, mean-32)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB sail)
                (NP (PRP$ his) (NN balloon))
                (PP (IN around)
                  (NP (DT the) (NN globe) (RB just)))
                (S
                  (VP (TO to)
                    (VP (VB show)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (MD could)
                            (VP (VB do))))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (MD would)
        (VP
          (VP (VB sink)
            (NP (PRP it))
            (PP (IN in)
              (NP (DT the) (NN sea))))
          (, ,)
          (CC and)
          (VP (VB sink)
            (NP (PRP us))
            (ADVP (DT all) (IN along))
            (PP (IN with)
              (NP (PRP it)))
            (, ,)
            (ADVP (RB too))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(sail-5, he-3)
aux(sail-5, would-4)
ccomp(said-2, sail-5)
poss(balloon-7, his-6)
dobj(sail-5, balloon-7)
det(globe-10, the-9)
prep_around(sail-5, globe-10)
advmod(globe-10, just-11)
aux(show-13, to-12)
vmod(sail-5, show-13)
dobj(do-17, what-14)
nsubj(do-17, he-15)
aux(do-17, could-16)
ccomp(show-13, do-17)
advmod(sink-23, then-20)
nsubj(sink-23, he-21)
nsubj(sink-30, he-21)
aux(sink-23, would-22)
conj_and(said-2, sink-23)
dobj(sink-23, it-24)
det(sea-27, the-26)
prep_in(sink-23, sea-27)
conj_and(said-2, sink-30)
conj_and(sink-23, sink-30)
dobj(sink-30, us-31)
dep(sink-30, all-32)
prep_along_with(sink-30, it-35)
advmod(sink-30, too-37)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT the) (JJ awfulest) (NN fix)
          (S
            (VP (TO to)
              (VP (VB be)
                (PP (IN in))))))))
    (, ,)
    (CC and)
    (S
      (NP (RB here))
      (VP (VBD was)
        (NP
          (NP (NN night))
          (VP (VBG coming)
            (PRT (RP on))))))
    (. !)))

discourse(fix-7, Well-1)
nsubj(fix-7, it-3)
cop(fix-7, was-4)
det(fix-7, the-5)
amod(fix-7, awfulest-6)
root(ROOT-0, fix-7)
aux(be-9, to-8)
vmod(fix-7, be-9)
prep(be-9, in-10)
nsubj(night-15, here-13)
cop(night-15, was-14)
conj_and(fix-7, night-15)
vmod(night-15, coming-16)
prt(coming-16, on-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBP give)
        (NP (PRP us))
        (NP (NN something)
          (S
            (VP (TO to)
              (VP
                (VP (VB eat))
                (, ,)
                (CC and)
                (VP (VBD made)
                  (SBAR
                    (S
                      (NP (PRP us))
                      (VP (VBP go)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (JJ other) (NN end))
                            (PP (IN of)
                              (NP (DT the) (NN boat)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD laid)
          (PRT (RP down))
          (PP (IN on)
            (NP
              (NP (DT a) (NN locker))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB boss)
                      (NP (PDT all) (DT the) (NNS works)))))))))
        (, ,)
        (CC and)
        (VP (VBD put)
          (NP (PRP$ his) (JJ old) (JJ pepper-box) (NN revolver))
          (PP (IN under)
            (NP (PRP$ his) (NN head))))
        (, ,)
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (SBAR (IN if)
                (S
                  (NP (NN anybody))
                  (VP (VBP come)
                    (S
                      (VP (VBG fooling)
                        (PP (IN around)
                          (S
                            (NP (EX there))
                            (VP (VBG trying)
                              (S
                                (VP (TO to)
                                  (VP (VB land)
                                    (NP (PRP her)))))))))))))
              (, ,)
              (NP (PRP he))
              (VP (MD would)
                (VP (VB kill)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(give-2, He-1)
root(ROOT-0, give-2)
iobj(give-2, us-3)
dobj(give-2, something-4)
aux(eat-6, to-5)
vmod(something-4, eat-6)
vmod(something-4, made-9)
conj_and(eat-6, made-9)
nsubj(go-11, us-10)
ccomp(made-9, go-11)
det(end-15, the-13)
amod(end-15, other-14)
prep_to(go-11, end-15)
det(boat-18, the-17)
prep_of(end-15, boat-18)
nsubj(laid-22, he-21)
nsubj(put-37, he-21)
nsubj(said-47, he-21)
conj_and(give-2, laid-22)
prt(laid-22, down-23)
det(locker-26, a-25)
prep_on(laid-22, locker-26)
advmod(boss-31, where-28)
nsubj(boss-31, he-29)
aux(boss-31, could-30)
rcmod(locker-26, boss-31)
predet(works-34, all-32)
det(works-34, the-33)
dobj(boss-31, works-34)
conj_and(give-2, put-37)
conj_and(laid-22, put-37)
poss(revolver-41, his-38)
amod(revolver-41, old-39)
amod(revolver-41, pepper-box-40)
dobj(put-37, revolver-41)
poss(head-44, his-43)
prep_under(put-37, head-44)
conj_and(give-2, said-47)
conj_and(laid-22, said-47)
mark(come-50, if-48)
nsubj(come-50, anybody-49)
advcl(kill-61, come-50)
xcomp(come-50, fooling-51)
expl(trying-54, there-53)
prepc_around(fooling-51, trying-54)
aux(land-56, to-55)
xcomp(trying-54, land-56)
dobj(land-56, her-57)
nsubj(kill-61, he-59)
aux(kill-61, would-60)
ccomp(said-47, kill-61)
dobj(kill-61, him-62)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD set)
          (SBAR
            (S
              (VP
                (VP (VBD scrunched)
                  (PRT (RP up))
                  (ADVP (RB together)))
                (, ,)
                (CC and)
                (VP (VBD thought)
                  (S
                    (ADJP (JJ considerable))))))))
        (, ,)
        (CC but)
        (VP (VBD did) (RB n't)
          (VP (VB say)
            (ADVP (RB much) (: --) (RB only))
            (PP
              (ADVP
                (NP (RB just) (DT a) (NN word))
                (RB once))
              (IN in)
              (NP
                (NP (DT a) (NN while))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT a) (NN body))
                    (VP (VBD had)
                      (S
                        (VP (TO to)
                          (VP (VB say)
                            (NP (NN something)
                              (CC or)
                              (NN bust))))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBD was)
      (ADJP (RB so) (JJ scared)
        (CC and)
        (JJ worried)))
    (. .)))

nsubj(set-2, We-1)
nsubj(say-14, We-1)
ccomp(scared-38, set-2)
ccomp(set-2, scrunched-3)
prt(scrunched-3, up-4)
advmod(scrunched-3, together-5)
ccomp(set-2, thought-8)
conj_and(scrunched-3, thought-8)
acomp(thought-8, considerable-9)
aux(say-14, did-12)
neg(say-14, n't-13)
conj_but(set-2, say-14)
ccomp(scared-38, say-14)
advmod(only-17, much-15)
advmod(say-14, only-17)
advmod(word-20, just-18)
det(word-20, a-19)
npadvmod(once-21, word-20)
advmod(say-14, once-21)
det(while-24, a-23)
prep_in(say-14, while-24)
tmod(had-28, while-24)
advmod(had-28, when-25)
det(body-27, a-26)
nsubj(had-28, body-27)
nsubj(say-30, body-27)
rcmod(while-24, had-28)
aux(say-30, to-29)
xcomp(had-28, say-30)
dobj(say-30, something-31)
dobj(say-30, bust-33)
conj_or(something-31, bust-33)
nsubj(scared-38, we-35)
nsubj(worried-40, we-35)
cop(scared-38, was-36)
advmod(scared-38, so-37)
root(ROOT-0, scared-38)
conj_and(scared-38, worried-40)

(ROOT
  (S
    (NP (DT The) (NN night))
    (VP (VBD dragged)
      (PRT (RP along))
      (S
        (ADJP (JJ slow)
          (CC and)
          (JJ lonesome))))
    (. .)))

det(night-2, The-1)
nsubj(dragged-3, night-2)
root(ROOT-0, dragged-3)
prt(dragged-3, along-4)
dep(dragged-3, slow-5)
dep(dragged-3, lonesome-7)
conj_and(slow-5, lonesome-7)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD was)
        (ADJP (RB pretty) (JJ low))
        (ADVP (RB down))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (NN moonshine))
        (VP (VBD made)
          (NP
            (NP (NN everything))
            (ADJP (JJ soft)
              (CC and)
              (JJ pretty)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NNS farmhouses))
          (VP (VBD looked)
            (ADJP (JJ snug)
              (CC and)
              (JJ homeful))))
        (, ,)
        (CC and)
        (S
          (NP (PRP we))
          (VP (MD could)
            (VP (VB hear)
              (SBAR
                (S
                  (NP (DT the) (NN farm))
                  (VP
                    (VP (VBZ sounds))
                    (, ,)
                    (CC and)
                    (VP (VBD wished)
                      (SBAR
                        (S
                          (NP (PRP we))
                          (VP (MD could)
                            (VP (VB be)
                              (PP (IN down)
                                (NP
                                  (NP (RB there))
                                  (: ;)
                                  (ADVP (CC but))
                                  (, ,)
                                  (NP (NNS laws)))))))))))))))))
    (. !)))

nsubj(low-4, We-1)
cop(low-4, was-2)
advmod(low-4, pretty-3)
root(ROOT-0, low-4)
advmod(low-4, down-5)
det(moonshine-9, the-8)
nsubj(made-10, moonshine-9)
conj_and(low-4, made-10)
dobj(made-10, everything-11)
amod(everything-11, soft-12)
amod(everything-11, pretty-14)
conj_and(soft-12, pretty-14)
det(farmhouses-18, the-17)
nsubj(looked-19, farmhouses-18)
conj_and(low-4, looked-19)
conj_and(made-10, looked-19)
acomp(looked-19, snug-20)
acomp(looked-19, homeful-22)
conj_and(snug-20, homeful-22)
nsubj(hear-27, we-25)
aux(hear-27, could-26)
conj_and(made-10, hear-27)
conj_and(looked-19, hear-27)
det(farm-29, the-28)
nsubj(sounds-30, farm-29)
nsubj(wished-33, farm-29)
ccomp(hear-27, sounds-30)
ccomp(hear-27, wished-33)
conj_and(sounds-30, wished-33)
nsubj(be-36, we-34)
aux(be-36, could-35)
ccomp(wished-33, be-36)
prep(be-36, down-37)
pobj(down-37, there-38)
advmod(there-38, but-40)
appos(there-38, laws-42)

(ROOT
  (S
    (NP (PRP we))
    (ADVP (RB just))
    (VP
      (VP (VBD slipped)
        (PRT (RP along))
        (PP (IN over)
          (NP (PRP them)))
        (PP (IN like)
          (NP (DT a) (NN ghost))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB never))
        (VBD left)
        (NP (DT a) (NN track))))
    (. .)))

nsubj(slipped-3, we-1)
nsubj(left-13, we-1)
advmod(slipped-3, just-2)
root(ROOT-0, slipped-3)
prt(slipped-3, along-4)
prep_over(slipped-3, them-6)
det(ghost-9, a-8)
prep_like(slipped-3, ghost-9)
neg(left-13, never-12)
conj_and(slipped-3, left-13)
det(track-15, a-14)
dobj(left-13, track-15)

(ROOT
  (S
    (ADVP (RB Away)
      (PP (IN in)
        (NP (DT the) (NN night))))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (S
          (NP (PDT all) (DT the) (NNS sounds))
          (VP (VBD was)
            (NP (JJ late) (NNS sounds))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN air))
          (VP (VBD had)
            (NP
              (NP (DT a) (JJ late) (NN feel))
              (, ,)
              (CC and)
              (NP
                (NP (DT a) (JJ late) (NN smell))
                (, ,)
                (ADVP (RB too)))
              (: --))
            (PP (IN about)
              (NP (DT a) (JJ two-o'clock) (NN feel)))))))
    (, ,)
    (ADVP (RB as) (RB near)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB make)
              (PRT (RP out)))))))
    (PRN (: --)
      (S
        (NP (NNP Tom))
        (VP (VBD said)
          (SBAR
            (S
              (NP (DT the) (NN professor))
              (VP (VBD was)
                (ADJP (RB so) (JJ quiet))
                (NP (DT this) (NN time))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD must)
                      (VP (VB be)
                        (ADJP (RB asleep)))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP we))
                    (VP (VBD 'd)
                      (NP (JJR better))))))))))
      (: --))
    (`` ``)
    (VP (VBZ Better)
      (WHNP (WP what)))
    (. ?) ('' '')))

advmod(Better-62, Away-1)
det(night-4, the-3)
prep_in(Away-1, night-4)
advmod(sounds-12, when-6)
predet(sounds-9, all-7)
det(sounds-9, the-8)
nsubj(sounds-12, sounds-9)
cop(sounds-12, was-10)
amod(sounds-12, late-11)
advcl(Better-62, sounds-12)
det(air-16, the-15)
nsubj(had-17, air-16)
conj_and(sounds-12, had-17)
advcl(Better-62, had-17)
det(feel-20, a-18)
amod(feel-20, late-19)
dobj(had-17, feel-20)
det(smell-25, a-23)
amod(smell-25, late-24)
dobj(had-17, smell-25)
conj_and(feel-20, smell-25)
advmod(smell-25, too-27)
det(feel-32, a-30)
amod(feel-32, two-o'clock-31)
prep_about(had-17, feel-32)
advmod(near-35, as-34)
advmod(Better-62, near-35)
mark(make-39, as-36)
nsubj(make-39, I-37)
aux(make-39, could-38)
ccomp(near-35, make-39)
prt(make-39, out-40)
nsubj(said-43, Tom-42)
parataxis(Better-62, said-43)
det(professor-45, the-44)
nsubj(quiet-48, professor-45)
cop(quiet-48, was-46)
advmod(quiet-48, so-47)
ccomp(said-43, quiet-48)
det(time-50, this-49)
dep(quiet-48, time-50)
nsubj(asleep-54, he-51)
aux(asleep-54, must-52)
cop(asleep-54, be-53)
dep(quiet-48, asleep-54)
nsubj('d-58, we-57)
dep(quiet-48, 'd-58)
conj_and(asleep-54, 'd-58)
dobj('d-58, better-59)
root(ROOT-0, Better-62)
dobj(Better-62, what-63)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ says)
        (PP (IN in)
          (NP (DT a) (NN whisper)))))
    (, ,)
    (CC and)
    (S
      (VP (VBG feeling)
        (ADJP (JJ sick))
        (ADVP (DT all) (RP over))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBD knowed)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG thinking) (IN about))))))))))
    (. .)))

nsubj(says-2, I-1)
nsubj(feeling-8, I-1)
root(ROOT-0, says-2)
det(whisper-5, a-4)
prep_in(says-2, whisper-5)
conj_and(says-2, feeling-8)
acomp(feeling-8, sick-9)
dep(over-11, all-10)
advmod(feeling-8, over-11)
mark(knowed-15, because-13)
nsubj(knowed-15, I-14)
advcl(feeling-8, knowed-15)
dobj(thinking-19, what-16)
nsubj(thinking-19, he-17)
aux(thinking-19, was-18)
ccomp(knowed-15, thinking-19)
dep(thinking-19, about-20)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Better))
      (VP
        (VP (VB slip)
          (ADVP (RB back) (RB there)))
        (CC and)
        (VP (VB tie)
          (NP (PRP him)))
        (, ,)
        (CC and)
        (VP (VB land)
          (NP (DT the) (NN ship)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBZ says))
    (. .)))

nsubj(slip-3, Better-2)
nsubj(tie-7, Better-2)
nsubj(land-11, Better-2)
ccomp(says-17, slip-3)
advmod(there-5, back-4)
advmod(slip-3, there-5)
conj_and(slip-3, tie-7)
ccomp(says-17, tie-7)
dobj(tie-7, him-8)
conj_and(slip-3, land-11)
ccomp(says-17, land-11)
det(ship-13, the-12)
dobj(land-11, ship-13)
nsubj(says-17, he-16)
root(ROOT-0, says-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ says)))
    (: :)
    (FRAG
      (INTJ (`` ``) (UH No))
      (, ,)
      (NP (NN sir)))
    (. !)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
discourse(sir-7, No-5)
dep(says-2, sir-7)

(ROOT
  (S
    (NP (NNP Don) (POS '))
    (PRN
      (S
        (NP (PRP you))
        (VP (VB budge)))
      (, ,))
    (VP (VBZ Tom)
      (NP (NNP Sawyer)))
    (. .) ('' '')))

nsubj(Tom-6, Don-1)
nsubj(budge-4, you-3)
parataxis(Tom-6, budge-4)
root(ROOT-0, Tom-6)
dobj(Tom-6, Sawyer-7)

(ROOT
  (S
    (S (CC And)
      (NP
        (NP (NNP Jim))
        (PRN (: --)
          (FRAG
            (INTJ (UH well))
            (, ,)
            (NP (NNP Jim)))))
      (VP (VBD was)
        (NP
          (NP (NN kind) (NN o) (POS '))
          (NN gasping))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB so) (VBN scared)))
    (. .)))

cc(gasping-11, And-1)
nsubj(gasping-11, Jim-2)
discourse(Jim-6, well-4)
dep(Jim-2, Jim-6)
cop(gasping-11, was-7)
nn(o-9, kind-8)
poss(gasping-11, o-9)
ccomp(scared-16, gasping-11)
nsubjpass(scared-16, he-13)
auxpass(scared-16, was-14)
advmod(scared-16, so-15)
root(ROOT-0, scared-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (INTJ (UH Oh))
        (, ,)
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (NP (NNP DO))
        (VP (VBZ N'T))))
    (. !)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
discourse(N'T-11, Oh-5)
nn(Tom-8, Mars-7)
nsubj(N'T-11, Tom-8)
nsubj(N'T-11, DO-10)
ccomp(says-2, N'T-11)

(ROOT
  (S
    (S
      (S
        (VP (VB Ef)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBZ teches)
                (NP (PRP him)))))))
      (, ,)
      (NP (PRP we))
      (VP (VBZ 's)
        (VP (VBN gone))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBZ 's)
        (VP (VBN gone)
          (S
            (NP (NNP sho) (POS '))))))
    (. !)))

ccomp(gone-8, Ef-1)
nsubj(teches-3, you-2)
ccomp(Ef-1, teches-3)
dobj(teches-3, him-4)
nsubjpass(gone-8, we-6)
auxpass(gone-8, 's-7)
root(ROOT-0, gone-8)
nsubjpass(gone-12, we-10)
auxpass(gone-12, 's-11)
parataxis(gone-8, gone-12)
xcomp(gone-12, sho-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ai) (RB n't)
      (ADJP (JJ gwine))
      (S
        (VP (VB anear)
          (NP (PRP him))))
      (, ,)
      (ADVP (RB not)
        (PP (IN for)
          (NP
            (NP (NN nothin))
            ('' ')
            (PP (IN in)
              (NP (NN dis))))))
      (ADJP (JJ worl))
      ('' '))
    (. .)))

nsubj(gwine-4, I-1)
cop(gwine-4, ai-2)
neg(gwine-4, n't-3)
root(ROOT-0, gwine-4)
ccomp(gwine-4, anear-5)
dobj(anear-5, him-6)
neg(gwine-4, not-8)
prep_for(not-8, nothin-10)
prep_in(nothin-10, dis-13)
acomp(gwine-4, worl-14)

(ROOT
  (S
    (NP (NNP Mars) (NNP Tom))
    (, ,)
    (NP (PRP he))
    (VP (VBZ 's)
      (ADJP (RB plumb) (JJ crazy)))
    (. .) ('' '')))

nn(Tom-2, Mars-1)
nsubj(crazy-7, Tom-2)
nsubj(crazy-7, he-4)
cop(crazy-7, 's-5)
advmod(crazy-7, plumb-6)
root(ROOT-0, crazy-7)

(ROOT
  (S
    (NP (NNP Tom))
    (VP
      (VP (VBZ whispers))
      (CC and)
      (VP (VBZ says) (: --) (`` ``)
        (S
          (NP (DT That))
          (VP (VBZ 's)
            (SBAR
              (WHADVP (WRB WHY))
              (S
                (NP (PRP we))
                (VP (VBP 've)
                  (VP (VBN got)
                    (S
                      (VP (TO to)
                        (VP (VB do)
                          (NP (NN something)))))))))))))
    (. .)))

nsubj(whispers-2, Tom-1)
nsubj(says-4, Tom-1)
root(ROOT-0, whispers-2)
conj_and(whispers-2, says-4)
nsubj('s-8, That-7)
ccomp(says-4, 's-8)
advmod(got-12, WHY-9)
nsubj(got-12, we-10)
nsubj(do-14, we-10)
aux(got-12, 've-11)
advcl('s-8, got-12)
aux(do-14, to-13)
xcomp(got-12, do-14)
dobj(do-14, something-15)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBD was) (RB n't)
            (ADJP (JJ crazy)))))
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (VP (VB give)
          (S
            (NP (NNP shucks))
            (VP (TO to)
              (VP (VB be)
                (ADVP (RB anywhere)
                  (CC but)
                  (RB here))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD could) (RB n't)
        (VP (VB hire)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB get)
                (PRT (RP out)))))
          (PRN (: --)
            (SBAR
              (ADVP (RB now))
              (IN that)
              (S
                (NP (PRP I))
                (VP (VBP 've)
                  (VP (VBN got)
                    (S
                      (VP (VBN used)
                        (PP
                          (PP (TO to)
                            (NP (DT this) (NN balloon)))
                          (CC and)
                          (PP (IN over)
                            (NP
                              (NP (DT the) (NN scare))
                              (PP (IN of)
                                (S
                                  (VP (VBG being)
                                    (VP (VBN cut)
                                      (ADVP (RB loose))
                                      (PP (IN from)
                                        (NP (DT the) (JJ solid) (NN ground))))))))))))))))
            (: --))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (PP (IN in)
                  (NP (PRP$ his) (JJ right) (NN mind)))))))))
    (. .)))

mark(crazy-5, If-1)
nsubj(crazy-5, he-2)
cop(crazy-5, was-3)
neg(crazy-5, n't-4)
advcl(give-9, crazy-5)
nsubj(give-9, I-6)
aux(give-9, would-7)
neg(give-9, n't-8)
root(ROOT-0, give-9)
dobj(give-9, shucks-10)
nsubj(be-12, shucks-10)
aux(be-12, to-11)
xcomp(give-9, be-12)
advmod(be-12, anywhere-13)
advmod(be-12, here-15)
conj_but(anywhere-13, here-15)
nsubj(hire-20, you-17)
aux(hire-20, could-18)
neg(hire-20, n't-19)
parataxis(give-9, hire-20)
dobj(hire-20, me-21)
nsubj(get-23, me-21)
aux(get-23, to-22)
xcomp(hire-20, get-23)
prt(get-23, out-24)
advmod(got-30, now-26)
mark(got-30, that-27)
nsubj(got-30, I-28)
aux(got-30, 've-29)
parataxis(hire-20, got-30)
dep(got-30, used-31)
dep(got-30, used-31')
conj_and(used-31, used-31')
det(balloon-34, this-33)
prep_to(used-31, balloon-34)
det(scare-38, the-37)
prep_over(used-31', scare-38)
auxpass(cut-41, being-40)
prepc_of(scare-38, cut-41)
advmod(cut-41, loose-42)
det(ground-46, the-44)
amod(ground-46, solid-45)
prep_from(cut-41, ground-46)
mark(was-50, if-48)
nsubj(was-50, he-49)
advcl(hire-20, was-50)
poss(mind-54, his-52)
amod(mind-54, right-53)
prep_in(was-50, mind-54)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (JJ good) (NNS politics))
        (, ,)
        (S
          (S
            (VP (VBG sailing)
              (PRT (RP around))
              (PP (IN like)
                (NP
                  (NP (DT this))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (NN person))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP
                            (VP (VBZ 's)
                              (ADVP (RB out))
                              (PP (IN of)
                                (NP (PRP$ his) (NN head))))
                            (, ,)
                            (CC and)
                            (VP (VBZ says)
                              (SBAR
                                (S
                                  (NP (PRP he))
                                  (VP (VBZ 's)
                                    (VP (VBG going)
                                      (ADVP (RB round)
                                        (NP (DT the) (NN world)))))))))))))))))
          (CC and)
          (ADVP (RB then))
          (S
            (VP (VB drown)
              (S
                (NP (PRP us))
                (NP (DT all))))))))
    (. .)))

cc(politics-6, But-1)
nsubj(politics-6, it-2)
cop(politics-6, 's-3)
neg(politics-6, no-4)
amod(politics-6, good-5)
root(ROOT-0, politics-6)
dep(politics-6, sailing-8)
prt(sailing-8, around-9)
prep_like(sailing-8, this-11)
det(person-14, a-13)
prep_with(this-11, person-14)
nsubj('s-16, person-14)
nsubj(says-23, person-14)
rcmod(person-14, 's-16)
poss(head-20, his-19)
prep_out_of('s-16, head-20)
rcmod(person-14, says-23)
conj_and('s-16, says-23)
nsubj(going-26, he-24)
aux(going-26, 's-25)
ccomp(says-23, going-26)
advmod(going-26, round-27)
det(world-29, the-28)
pobj(round-27, world-29)
advmod(drown-32, then-31)
dep(politics-6, drown-32)
conj_and(sailing-8, drown-32)
nsubj(all-34, us-33)
xcomp(drown-32, all-34)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (S
          (NP (NNP GOT))
          (VP (TO to)
            (VP (VB do)
              (NP (NN something)))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP
          (VP (VBP tell)
            (NP (PRP you)))
          (, ,)
          (CC and)
          (VP (VBP do)
            (NP (PRP it))
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBZ wakes)
                  (PRT (RP up))
                  (, ,)
                  (ADVP (RB too))))))))
      (, ,))
    (CC or)
    (S
      (NP (PRP we))
      (VP (MD may) (RB n't)
        (ADVP (RB ever))
        (VP (VB get)
          (NP (DT another) (NN chance)))))
    (. .)))

nsubj('ve-2, We-1)
root(ROOT-0, 've-2)
dobj('ve-2, GOT-3)
nsubj(do-5, GOT-3)
aux(do-5, to-4)
ccomp('ve-2, do-5)
xcomp('ve-2, do-5)
dobj(do-5, something-6)
nsubj(tell-9, I-8)
nsubj(do-13, I-8)
dep('ve-2, tell-9)
dobj(tell-9, you-10)
dep('ve-2, do-13)
conj_and(tell-9, do-13)
dobj(do-13, it-14)
mark(wakes-17, before-15)
nsubj(wakes-17, he-16)
advcl(do-13, wakes-17)
prt(wakes-17, up-18)
advmod(wakes-17, too-20)
nsubj(get-27, we-23)
aux(get-27, may-24)
neg(get-27, n't-25)
advmod(get-27, ever-26)
conj_or('ve-2, get-27)
det(chance-29, another-28)
dobj(get-27, chance-29)

(ROOT
  (S
    (VP (VB Come))
    (. !) ('' '')))

root(ROOT-0, Come-1)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP us))
            (VP (VBP turn)
              (ADJP
                (ADJP (JJ cold))
                (CC and)
                (ADJP (RB creepy) (RB just)
                  (S
                    (VP (TO to)
                      (VP (VB think)
                        (PP (IN of)
                          (NP (PRP it)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD would) (RB n't)
              (VP (VB budge)))))))
    (. .)))

nsubj(made-3, it-2)
root(ROOT-0, made-3)
nsubj(turn-5, us-4)
ccomp(made-3, turn-5)
acomp(turn-5, cold-6)
advmod(just-9, creepy-8)
acomp(turn-5, just-9)
conj_and(cold-6, just-9)
aux(think-11, to-10)
xcomp(just-9, think-11)
prep_of(think-11, it-13)
nsubj(said-17, we-16)
conj_and(made-3, said-17)
nsubj(budge-21, we-18)
aux(budge-21, would-19)
neg(budge-21, n't-20)
ccomp(said-17, budge-21)

(ROOT
  (S (IN So)
    (NP (NNP Tom))
    (VP (VBD was)
      (PP (IN for)
        (S
          (VP (VBG slipping)
            (ADVP (RB back) (RB there))
            (PP (IN by)
              (NP (PRP himself)))
            (S
              (VP (TO to)
                (VP (VB see)
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (MD could) (RB n't)
                        (VP
                          (VP (VB get)
                            (PP (IN at)
                              (NP (DT the) (NN steering-gear))))
                          (CC and)
                          (VP (VB land)
                            (NP (DT the) (NN ship))))))))))))))
    (. .)))

dep(was-3, So-1)
nsubj(was-3, Tom-2)
root(ROOT-0, was-3)
prepc_for(was-3, slipping-5)
advmod(there-7, back-6)
advmod(slipping-5, there-7)
prep_by(slipping-5, himself-9)
aux(see-11, to-10)
xcomp(slipping-5, see-11)
mark(get-16, if-12)
nsubj(get-16, he-13)
nsubj(land-21, he-13)
aux(get-16, could-14)
neg(get-16, n't-15)
advcl(see-11, get-16)
det(steering-gear-19, the-18)
prep_at(get-16, steering-gear-19)
advcl(see-11, land-21)
conj_and(get-16, land-21)
det(ship-23, the-22)
dobj(land-21, ship-23)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBN begged))
        (CC and)
        (VP (VBN begged)
          (S
            (NP (PRP him)))
          (SBAR (RB not)
            (S
              (VP (TO to)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBD war) (RB n't)
          (NP (DT no) (NN use))))
      (: ;) (RB so)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD got)
            (PRT (RP down))
            (PP (IN on)
              (NP (PRP$ his) (NNS hands)
                (CC and)
                (NNS knees))))
          (, ,)
          (CC and)
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB crawl)
                  (NP
                    (NP (DT an) (NN inch))
                    (PP (IN at)
                      (NP (DT a) (NN time))))
                  (, ,)
                  (S
                    (NP (PRP we))
                    (VP
                      (VP (VBG a-holding)
                        (NP (PRP$ our) (NN breath)))
                      (CC and)
                      (VP (VBG watching)))))))))))
    (. .)))

nsubj(begged-2, We-1)
nsubj(begged-4, We-1)
nsubj(to-7, We-1)
root(ROOT-0, begged-2)
conj_and(begged-2, begged-4)
xcomp(begged-4, him-5)
dep(to-7, not-6)
ccomp(begged-4, to-7)
xcomp(begged-4, to-7)
nsubj(war-11, it-10)
conj_but(begged-2, war-11)
neg(war-11, n't-12)
neg(use-14, no-13)
dobj(war-11, use-14)
advmod(war-11, so-16)
nsubj(got-18, he-17)
nsubj(begun-27, he-17)
nsubj(crawl-29, he-17)
parataxis(war-11, got-18)
prt(got-18, down-19)
poss(hands-22, his-21)
prep_on(got-18, hands-22)
prep_on(got-18, knees-24)
conj_and(hands-22, knees-24)
parataxis(war-11, begun-27)
conj_and(got-18, begun-27)
aux(crawl-29, to-28)
xcomp(begun-27, crawl-29)
det(inch-31, an-30)
dobj(crawl-29, inch-31)
det(time-34, a-33)
prep_at(inch-31, time-34)
nsubj(a-holding-37, we-36)
nsubj(watching-41, we-36)
dep(crawl-29, a-holding-37)
poss(breath-39, our-38)
dobj(a-holding-37, breath-39)
dep(crawl-29, watching-41)
conj_and(a-holding-37, watching-41)

(ROOT
  (S
    (S
      (SBAR (IN After)
        (S
          (NP (PRP he))
          (VP (VBD got)
            (PP (TO to)
              (NP
                (NP (DT the) (NN middle))
                (PP (IN of)
                  (NP (DT the) (NN boat))))))))
      (NP (PRP he))
      (VP (VBD crept)
        (ADVP (RBR slower) (IN than) (RB ever))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD did)
        (VP (VB seem)
          (PP (IN like)
            (NP (NNS years)))
          (PP (TO to)
            (NP (PRP me))))))
    (. .)))

mark(got-3, After-1)
nsubj(got-3, he-2)
advcl(crept-11, got-3)
det(middle-6, the-5)
prep_to(got-3, middle-6)
det(boat-9, the-8)
prep_of(middle-6, boat-9)
nsubj(crept-11, he-10)
root(ROOT-0, crept-11)
advmod(than-13, slower-12)
advmod(crept-11, than-13)
advmod(than-13, ever-14)
nsubj(seem-19, it-17)
aux(seem-19, did-18)
conj_and(crept-11, seem-19)
prep_like(seem-19, years-21)
prep_to(seem-19, me-23)

(ROOT
  (S (CC But)
    (PP (IN at)
      (NP (JJ last)))
    (NP (PRP we))
    (VP (VBP see)
      (S
        (NP (PRP him))
        (VP
          (VP
            (VP (VB get)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN professor) (POS 's))
                  (NN head))))
            (, ,)
            (CC and)
            (ADVP (NN sort) (IN of))
            (VP (VB raise)
              (PRT (RP up))
              (ADJP (JJ soft))))
          (CC and)
          (VP (VB look)
            (NP (DT a) (JJ good) (NN spell))
            (PP (IN in)
              (NP (PRP$ his) (NN face))))
          (CC and)
          (VP (VB listen)))))
    (. .)))

cc(see-5, But-1)
prep_at(see-5, last-3)
nsubj(see-5, we-4)
root(ROOT-0, see-5)
nsubj(get-7, him-6)
nsubj(raise-17, him-6)
nsubj(look-21, him-6)
nsubj(listen-29, him-6)
ccomp(see-5, get-7)
det(professor-10, the-9)
poss(head-12, professor-10)
prep_to(get-7, head-12)
dep(of-16, sort-15)
ccomp(see-5, of-16)
advmod(get-7, of-16)
conj_and(get-7, of-16)
ccomp(see-5, raise-17)
conj_and(get-7, raise-17)
prt(raise-17, up-18)
acomp(raise-17, soft-19)
ccomp(see-5, look-21)
conj_and(get-7, look-21)
det(spell-24, a-22)
amod(spell-24, good-23)
dobj(look-21, spell-24)
poss(face-27, his-26)
prep_in(look-21, face-27)
ccomp(see-5, listen-29)
conj_and(get-7, listen-29)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP (VBP see)
      (S
        (NP (PRP him))
        (VP (VB begin)
          (S
            (VP (TO to)
              (VP (VB inch)
                (PRT (RP along))
                (ADVP (RB again))
                (PP (IN toward)
                  (NP
                    (NP (DT the) (NN professor) (POS 's))
                    (NNS feet))))))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NNS steering-buttons))
              (VP (VBD was)))))))
    (. .)))

advmod(see-3, Then-1)
nsubj(see-3, we-2)
root(ROOT-0, see-3)
nsubj(begin-5, him-4)
nsubj(inch-7, him-4)
ccomp(see-3, begin-5)
aux(inch-7, to-6)
xcomp(begin-5, inch-7)
prt(inch-7, along-8)
advmod(inch-7, again-9)
det(professor-12, the-11)
poss(feet-14, professor-12)
prep_toward(inch-7, feet-14)
advmod(was-18, where-15)
det(steering-buttons-17, the-16)
nsubj(was-18, steering-buttons-17)
advcl(begin-5, was-18)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD got)
            (S
              (NP (EX there))
              (ADJP (RB all) (JJ safe))))
          (, ,)
          (CC and)
          (VP (VBD was)
            (VP (VBG reaching)
              (ADJP (JJ slow)
                (CC and)
                (JJ steady))
              (PP (IN toward)
                (NP (DT the) (NNS buttons)))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBD knocked)
          (PRT (RP down))
          (NP
            (NP (NN something))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD made)
                  (NP (DT a) (NN noise)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP him))
            (VP
              (VP (VBP slump)
                (PRT (RP down))
                (NP
                  (NP (JJ flat))
                  (, an) ('' ')
                  (ADJP (JJ soft)
                    (PP (IN in)
                      (NP (DT the) (NN bottom))))))
              (, ,)
              (CC and)
              (VP (VBD lay)
                (ADVP (RB still))))))))
    (. .)))

discourse(got-4, Well-1)
nsubj(got-4, he-3)
nsubj(reaching-11, he-3)
root(ROOT-0, got-4)
expl(safe-7, there-5)
nsubj(safe-7, there-5)
advmod(safe-7, all-6)
xcomp(got-4, safe-7)
aux(reaching-11, was-10)
conj_and(got-4, reaching-11)
acomp(reaching-11, slow-12)
acomp(reaching-11, steady-14)
conj_and(slow-12, steady-14)
det(buttons-17, the-16)
prep_toward(reaching-11, buttons-17)
nsubj(knocked-21, he-20)
conj_but(got-4, knocked-21)
prt(knocked-21, down-22)
dobj(knocked-21, something-23)
nsubj(made-25, something-23)
rcmod(something-23, made-25)
det(noise-27, a-26)
dobj(made-25, noise-27)
nsubj(see-31, we-30)
conj_and(got-4, see-31)
nsubj(slump-33, him-32)
nsubj(lay-44, him-32)
ccomp(see-31, slump-33)
prt(slump-33, down-34)
dobj(slump-33, flat-35)
punct(flat-35, an-36)
amod(flat-35, soft-38)
det(bottom-41, the-40)
prep_in(soft-38, bottom-41)
ccomp(see-31, lay-44)
conj_and(slump-33, lay-44)
advmod(lay-44, still-45)

(ROOT
  (S
    (NP (DT The) (NN professor))
    (VP
      (VP (VBD stirred))
      (, ,)
      (CC and)
      (VP (VBZ says))
      (, ,)
      (SBAR (`` ``)
        (WHNP (WP What))
        (S
          (VP (VBZ 's)
            (NP (DT that))))))
    (. ?) ('' '')))

det(professor-2, The-1)
nsubj(stirred-3, professor-2)
nsubj(says-6, professor-2)
root(ROOT-0, stirred-3)
conj_and(stirred-3, says-6)
nsubj(that-11, What-9)
cop(that-11, 's-10)
ccomp(stirred-3, that-11)
conj_and(stirred-3, that-11)

(ROOT
  (S
    (S
      (S (CC But)
        (NP (NN everybody))
        (VP (VBD kept)
          (PRT (RP dead))
          (UCP
            (ADVP (RB still))
            (CC and)
            (ADJP (JJ quiet)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP he))
          (VP (VBN begun)
            (PP (TO to)
              (NP (NN mutter)
                (CC and)
                (NN mumble)
                (CC and)
                (NN nestle)))
            (, ,)
            (PP (IN like)
              (NP
                (NP (DT a) (NN person))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (VP (VBG going)
                        (PP (TO to)
                          (NP (NN wake)))
                        (ADVP (RB up))))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD was)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB die))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (RB so) (JJ worried)
        (CC and)
        (JJ scared)))
    (. .)))

nsubj(kept-3, everybody-2)
ccomp(worried-41, kept-3)
prt(kept-3, dead-4)
advmod(kept-3, still-5)
advmod(kept-3, quiet-7)
conj_and(still-5, quiet-7)
nsubj(begun-11, he-10)
conj_and(kept-3, begun-11)
ccomp(worried-41, begun-11)
prep_to(begun-11, mutter-13)
prep_to(begun-11, mumble-15)
conj_and(mutter-13, mumble-15)
prep_to(begun-11, nestle-17)
conj_and(mutter-13, nestle-17)
det(person-21, a-20)
prep_like(begun-11, person-21)
nsubj(going-24, person-21)
aux(going-24, 's-23)
rcmod(person-21, going-24)
prep_to(going-24, wake-26)
advmod(going-24, up-27)
nsubj(thought-31, I-30)
conj_and(kept-3, thought-31)
conj_and(begun-11, thought-31)
nsubj(going-34, I-32)
nsubj(die-36, I-32)
aux(going-34, was-33)
ccomp(thought-31, going-34)
aux(die-36, to-35)
xcomp(going-34, die-36)
nsubj(worried-41, I-38)
nsubj(scared-43, I-38)
cop(worried-41, was-39)
advmod(worried-41, so-40)
root(ROOT-0, worried-41)
conj_and(worried-41, scared-43)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (DT a) (NN cloud))
      (VP (VBD slid)
        (PP (IN over)
          (NP (DT the) (NN moon)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (`` `)
      (ADJP (RBS most) (JJ cried)))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADJP (RB so) (JJ glad))))
    (. .)))

advmod(slid-4, Then-1)
det(cloud-3, a-2)
nsubj(slid-4, cloud-3)
nsubj(cried-13, cloud-3)
root(ROOT-0, slid-4)
det(moon-7, the-6)
prep_over(slid-4, moon-7)
dep(cried-13, I-10)
advmod(cried-13, most-12)
conj_and(slid-4, cried-13)
nsubj(glad-18, I-15)
cop(glad-18, was-16)
advmod(glad-18, so-17)
conj_and(slid-4, glad-18)
parataxis(slid-4, glad-18)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD buried)
        (S
          (NP (PRP herself))
          (ADJP (JJR deeper)
            (CC and)
            (JJR deeper)))
        (PP (IN into)
          (NP (DT the) (NN cloud)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD got)
        (ADJP (RB so) (JJ dark))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD could) (RB n't)
              (VP (VB see)
                (NP (NNP Tom))))))))
    (. .)))

nsubj(buried-2, She-1)
root(ROOT-0, buried-2)
nsubj(deeper-4, herself-3)
nsubj(deeper-6, herself-3)
xcomp(buried-2, deeper-4)
xcomp(buried-2, deeper-6)
conj_and(deeper-4, deeper-6)
det(cloud-9, the-8)
prep_into(buried-2, cloud-9)
nsubj(dark-15, it-12)
dep(dark-15, got-13)
advmod(dark-15, so-14)
conj_and(buried-2, dark-15)
nsubj(see-19, we-16)
aux(see-19, could-17)
neg(see-19, n't-18)
ccomp(dark-15, see-19)
dobj(see-19, Tom-20)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP it))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB sprinkle)
              (NP (NN rain)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD could)
        (VP (VB hear)
          (NP (DT the) (NN professor))
          (S
            (VP
              (VP (VBG fussing)
                (PP (IN at)
                  (NP (PRP$ his) (NNS ropes)
                    (CC and)
                    (NNS things))))
              (CC and)
              (VP (VBG abusing)
                (NP (DT the) (NN weather))))))))
    (. .)))

advmod(began-3, Then-1)
nsubj(began-3, it-2)
nsubj(sprinkle-5, it-2)
root(ROOT-0, began-3)
aux(sprinkle-5, to-4)
xcomp(began-3, sprinkle-5)
dobj(sprinkle-5, rain-6)
nsubj(hear-11, we-9)
aux(hear-11, could-10)
conj_and(began-3, hear-11)
det(professor-13, the-12)
dobj(hear-11, professor-13)
dep(hear-11, fussing-14)
poss(ropes-17, his-16)
prep_at(fussing-14, ropes-17)
prep_at(fussing-14, things-19)
conj_and(ropes-17, things-19)
dep(hear-11, abusing-21)
conj_and(fussing-14, abusing-21)
det(weather-23, the-22)
dobj(abusing-21, weather-23)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD was)
        (ADJP (JJ afraid))
        (NP (DT every) (NN minute))))
    (PRN
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP (VB touch)
            (NP (NNP Tom)))))
      (, ,))
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (NNS goners))
            (, ,)
            (CC and)
            (NP (DT no) (NN help))))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (NNP Tom))
        (VP (VBD was)
          (ADVP (RB already))
          (PP (IN on)
            (NP (PRP$ his) (NN way) (NN back)))))
      (, ,)
      (CC and)
      (S
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP we))
              (VP (VBD felt)
                (NP (PRP$ his) (NNS hands))
                (PP (IN on)
                  (NP (PRP$ our) (NNS knees))))))
          (NP (PRP$ my) (NN breath))
          (VP (VBD stopped)
            (ADJP (JJ sudden))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (PRP$ my) (NN heart))
            (VP (VBD fell)
              (PRT (RP down))
              (`` `)
              (S
                (VP (VB mongst)
                  (NP (PRP$ my) (JJ other) (NNS works))
                  (, ,)
                  (SBAR (IN because)
                    (S
                      (NP (PRP I))
                      (VP (MD could) (RB n't)
                        (VP (VB tell)
                          (PP (IN in)
                            (NP (DT the) (NN dark)))))))))))
          (CC but)
          (S
            (NP (PRP it))
            (VP (MD might)
              (VP (VB be)
                (NP (DT the) (NN professor))))))))
    (. !)))

nsubj(afraid-3, We-1)
cop(afraid-3, was-2)
root(ROOT-0, afraid-3)
det(minute-5, every-4)
dep(afraid-3, minute-5)
nsubj(touch-8, he-6)
aux(touch-8, would-7)
dep(afraid-3, touch-8)
dobj(touch-8, Tom-9)
advmod(goners-16, then-12)
nsubj(goners-16, we-13)
aux(goners-16, would-14)
cop(goners-16, be-15)
conj_and(afraid-3, goners-16)
neg(help-20, no-19)
conj_and(afraid-3, help-20)
conj_and(goners-16, help-20)
nsubj(was-24, Tom-23)
conj_but(afraid-3, was-24)
advmod(was-24, already-25)
poss(back-29, his-27)
nn(back-29, way-28)
prep_on(was-24, back-29)
advmod(felt-34, when-32)
nsubj(felt-34, we-33)
advcl(stopped-42, felt-34)
poss(hands-36, his-35)
dobj(felt-34, hands-36)
poss(knees-39, our-38)
prep_on(felt-34, knees-39)
poss(breath-41, my-40)
nsubj(stopped-42, breath-41)
conj_but(afraid-3, stopped-42)
conj_and(was-24, stopped-42)
acomp(stopped-42, sudden-43)
poss(heart-47, my-46)
nsubj(fell-48, heart-47)
conj_and(was-24, fell-48)
conj_and(stopped-42, fell-48)
prt(fell-48, down-49)
ccomp(fell-48, mongst-51)
poss(works-54, my-52)
amod(works-54, other-53)
dobj(mongst-51, works-54)
mark(tell-60, because-56)
nsubj(tell-60, I-57)
aux(tell-60, could-58)
neg(tell-60, n't-59)
advcl(mongst-51, tell-60)
det(dark-63, the-62)
prep_in(tell-60, dark-63)
nsubj(professor-69, it-65)
aux(professor-69, might-66)
cop(professor-69, be-67)
det(professor-69, the-68)
conj_and(stopped-42, professor-69)
conj_but(fell-48, professor-69)

(ROOT
  (S
    (SBAR
      (WHNP (WDT which))
      (S
        (NP (PRP I))
        (VP (VBD thought))))
    (NP (PRP it))
    (VP (VBD WAS))
    (. .)))

dobj(thought-3, which-1)
nsubj(thought-3, I-2)
advcl(WAS-5, thought-3)
nsubj(WAS-5, it-4)
root(ROOT-0, WAS-5)

(ROOT
  (INTJ (UH Dear) (. !)))

root(ROOT-0, Dear-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (RB so) (JJ glad)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (PRP him))
              (SBAR
                (ADVP (RB back))
                (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (ADVP (RB just))
                    (ADJP (RB as) (RB near) (JJ happy))
                    (SBAR (IN as)
                      (S
                        (NP (DT a) (NN person))
                        (VP (MD could)
                          (VP (VB be)
                            (SBAR (IN that)
                              (S
                                (VP (VBD was)
                                  (ADVP (RB up)
                                    (PP (IN in)
                                      (NP
                                        (NP (DT the) (NN air))
                                        (NP (DT that) (NN way)))))
                                  (PP (IN with)
                                    (NP (DT a) (JJ deranged) (NN man))))))))))))))))))
    (. .)))

nsubj(glad-4, I-1)
nsubj(have-6, I-1)
cop(glad-4, was-2)
advmod(glad-4, so-3)
root(ROOT-0, glad-4)
aux(have-6, to-5)
xcomp(glad-4, have-6)
dobj(have-6, him-7)
advmod(happy-15, back-8)
mark(happy-15, that-9)
nsubj(happy-15, I-10)
cop(happy-15, was-11)
advmod(happy-15, just-12)
advmod(happy-15, as-13)
advmod(happy-15, near-14)
dep(have-6, happy-15)
mark(be-20, as-16)
det(person-18, a-17)
nsubj(be-20, person-18)
aux(be-20, could-19)
advcl(happy-15, be-20)
mark(was-22, that-21)
ccomp(be-20, was-22)
advmod(was-22, up-23)
det(air-26, the-25)
prep_in(up-23, air-26)
det(way-28, that-27)
dep(air-26, way-28)
det(man-32, a-30)
amod(man-32, deranged-31)
prep_with(was-22, man-32)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD ca) (RB n't)
        (VP (VB land)
          (NP
            (NP (DT a) (NN balloon))
            (PP (IN in)
              (NP (DT the) (NN dark)))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP I))
      (VP (VBD hoped)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB keep)
                (PP (IN on)
                  (NP (NN raining)))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP I))
                    (VP (VBD did) (RB n't)
                      (VP (VB want)
                        (S
                          (NP (NNP Tom))
                          (VP (TO to)
                            (VP
                              (VP (VB go)
                                (NP (NN meddling))
                                (ADVP (DT any) (RBR more)))
                              (CC and)
                              (VP (VB make)
                                (S
                                  (NP (PRP us))
                                  (ADJP
                                    (ADJP (RB so) (JJ awful))
                                    (JJ uncomfortable)))))))))))))))))
    (. .)))

nsubj(land-4, You-1)
aux(land-4, ca-2)
neg(land-4, n't-3)
root(ROOT-0, land-4)
det(balloon-6, a-5)
dobj(land-4, balloon-6)
det(dark-9, the-8)
prep_in(balloon-6, dark-9)
conj_and(land-4, so-12)
nsubj(hoped-14, I-13)
ccomp(land-4, hoped-14)
nsubj(keep-17, it-15)
aux(keep-17, would-16)
ccomp(hoped-14, keep-17)
prep_on(keep-17, raining-19)
mark(want-25, for-21)
nsubj(want-25, I-22)
aux(want-25, did-23)
neg(want-25, n't-24)
advcl(keep-17, want-25)
dobj(want-25, Tom-26)
nsubj(go-28, Tom-26)
nsubj(make-33, Tom-26)
aux(go-28, to-27)
xcomp(want-25, go-28)
dobj(go-28, meddling-29)
dep(more-31, any-30)
advmod(go-28, more-31)
xcomp(want-25, make-33)
conj_and(go-28, make-33)
nsubj(uncomfortable-37, us-34)
advmod(awful-36, so-35)
dep(uncomfortable-37, awful-36)
xcomp(make-33, uncomfortable-37)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBD got)
      (NP (PRP$ my) (NN wish)))
    (. .)))

discourse(got-4, Well-1)
nsubj(got-4, I-3)
root(ROOT-0, got-4)
poss(wish-6, my-5)
dobj(got-4, wish-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBN drizzled)
      (CC and)
      (VBN drizzled)
      (PP (IN along)
        (NP
          (NP
            (NP
              (NP (DT the) (NN rest))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN night))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD was) (RB n't)
                        (ADJP (JJ long))
                        (, ,)
                        (SBAR (IN though)
                          (S
                            (S
                              (NP (PRP it))
                              (VP (VBD did)
                                (S
                                  (VP (VB seem)
                                    (ADVP (RB so))))))
                            (: ;)
                            (CC and)
                            (S
                              (PP (IN at)
                                (NP (NN daybreak)))
                              (NP (PRP it))
                              (VP (VBD cleared)))
                            (, ,)
                            (CC and)
                            (S
                              (NP (DT the) (NN world))
                              (VP (VBD looked)))))))))))
            (ADJP
              (ADJP (RB mighty) (JJ soft))
              (CC and)
              (ADJP (JJ gray)
                (CC and)
                (JJ pretty)))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NNS forests)
                (CC and)
                (NNS fields))
              (ADJP (RB so) (JJ good)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (ADVP (RB again))))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NNS horses)
              (CC and)
              (NNS cattle))
            (VP
              (VP (VBG standing)
                (ADJP (JJ sober)))
              (CC and)
              (VP (VBG thinking)))))))
    (. .)))

nsubj(drizzled-2, It-1)
nsubj(drizzled-4, It-1)
root(ROOT-0, drizzled-2)
conj_and(drizzled-2, drizzled-4)
det(rest-7, the-6)
prep_along(drizzled-2, rest-7)
det(night-10, the-9)
prep_of(rest-7, night-10)
nsubj(long-15, night-10)
nsubj(did-19, night-10)
cop(long-15, was-13)
neg(long-15, n't-14)
rcmod(night-10, long-15)
mark(did-19, though-17)
nsubj(did-19, it-18)
advcl(long-15, did-19)
ccomp(did-19, seem-20)
advmod(seem-20, so-21)
prep_at(cleared-27, daybreak-25)
nsubj(cleared-27, it-26)
advcl(long-15, cleared-27)
conj_and(did-19, cleared-27)
det(world-31, the-30)
nsubj(looked-32, world-31)
advcl(long-15, looked-32)
conj_and(did-19, looked-32)
advmod(soft-34, mighty-33)
amod(rest-7, soft-34)
amod(rest-7, gray-36)
conj_and(soft-34, gray-36)
conj_and(soft-34, pretty-38)
conj_and(gray-36, pretty-38)
det(forests-42, the-41)
prep_along(drizzled-2, forests-42)
conj_and(rest-7, forests-42)
conj_and(rest-7, fields-44)
conj_and(forests-42, fields-44)
advmod(good-46, so-45)
amod(forests-42, good-46)
aux(see-48, to-47)
xcomp(good-46, see-48)
advmod(see-48, again-49)
det(horses-53, the-52)
prep_along(drizzled-2, horses-53)
conj_and(rest-7, horses-53)
conj_and(rest-7, cattle-55)
conj_and(horses-53, cattle-55)
dep(horses-53, standing-56)
acomp(standing-56, sober-57)
dep(horses-53, thinking-59)
conj_and(standing-56, thinking-59)

(ROOT
  (S
    (ADVP (RB Next))
    (, ,)
    (S
      (S
        (NP (DT the) (NN sun))
        (VP (VBP come)
          (S
            (VP (VBG a-blazing)
              (PP (IN up)
                (NP (JJ gay)
                  (CC and)
                  (JJ splendid)))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP we))
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB feel)
                (ADJP (JJ rusty)
                  (CC and)
                  (JJ stretchy))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB first))
      (NP (PRP we))
      (VP (VBD knowed)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD was) (RB all)
              (ADJP (RB asleep)))))))
    (. .)))

advmod(come-5, Next-1)
det(sun-4, the-3)
nsubj(come-5, sun-4)
root(ROOT-0, come-5)
xcomp(come-5, a-blazing-6)
prep_up(a-blazing-6, gay-8)
prep_up(a-blazing-6, splendid-10)
conj_and(gay-8, splendid-10)
advmod(began-15, then-13)
nsubj(began-15, we-14)
nsubj(feel-17, we-14)
conj_and(come-5, began-15)
aux(feel-17, to-16)
xcomp(began-15, feel-17)
acomp(feel-17, rusty-18)
acomp(feel-17, stretchy-20)
conj_and(rusty-18, stretchy-20)
advmod(knowed-25, first-23)
nsubj(knowed-25, we-24)
conj_and(come-5, knowed-25)
nsubj(asleep-29, we-26)
cop(asleep-29, was-27)
advmod(asleep-29, all-28)
ccomp(knowed-25, asleep-29)

(ROOT
  (NP (NNP CHAPTER) (NNP III) (. .)))

nn(III-2, CHAPTER-1)
root(ROOT-0, III-2)

(ROOT
  (S
    (NP (NNP TOM) (NNP EXPLAINS) (NNP WE))
    (VP
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB sleep)
              (PP (IN about)
                (NP (CD four) (RB o'clock)))))))
      (, ,)
      (CC and)
      (VP (VBD woke)
        (PRT (RP up))
        (PP (IN about)
          (NP (CD eight)))))
    (. .)))

nn(WE-3, TOM-1)
nn(WE-3, EXPLAINS-2)
nsubj(went-4, WE-3)
nsubj(sleep-6, WE-3)
nsubj(woke-12, WE-3)
root(ROOT-0, went-4)
aux(sleep-6, to-5)
xcomp(went-4, sleep-6)
prep_about(sleep-6, four-8)
advmod(four-8, o'clock-9)
conj_and(went-4, woke-12)
prt(woke-12, up-13)
prep_about(woke-12, eight-15)

(ROOT
  (S
    (NP (DT The) (NN professor))
    (VP (VBD was)
      (VP (VBG setting)
        (ADVP (RB back) (RB there))
        (PP (IN at)
          (NP (PRP$ his) (NN end)))
        (, ,)
        (S
          (VP (VBG looking)
            (NP (NN glum))))))
    (. .)))

det(professor-2, The-1)
nsubj(setting-4, professor-2)
aux(setting-4, was-3)
root(ROOT-0, setting-4)
advmod(there-6, back-5)
advmod(setting-4, there-6)
poss(end-9, his-8)
prep_at(setting-4, end-9)
vmod(setting-4, looking-11)
dobj(looking-11, glum-12)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD pitched)
        (S
          (NP (PRP us))
          (NP (DT some) (NN breakfast)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD told)
        (S
          (NP (PRP us))
          (RB not)
          (VP (TO to)
            (VP (VB come)
              (VP (VB abaft)
                (NP (DT the) (NN midship) (NNS compass))))))))
    (. .)))

nsubj(pitched-2, He-1)
root(ROOT-0, pitched-2)
nsubj(breakfast-5, us-3)
det(breakfast-5, some-4)
xcomp(pitched-2, breakfast-5)
nsubj(told-9, he-8)
conj_but(pitched-2, told-9)
dobj(told-9, us-10)
nsubj(come-13, us-10)
neg(come-13, not-11)
aux(come-13, to-12)
xcomp(told-9, come-13)
xcomp(come-13, abaft-14)
det(compass-17, the-15)
nn(compass-17, midship-16)
dobj(abaft-14, compass-17)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (PP (IN about)
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP (DT the) (NN boat))))))
    (. .)))

nsubj(was-2, That-1)
root(ROOT-0, was-2)
det(middle-5, the-4)
prep_about(was-2, middle-5)
det(boat-8, the-7)
prep_of(middle-5, boat-8)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADJP (JJ sharp-set))))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (VB eat)
            (CC and)
            (VB satisfy)
            (NP (PRP yourself))))))
    (, ,)
    (NP (NN everything))
    (VP (VBZ looks)
      (ADJP (RB pretty) (JJ different)
        (PP (IN from)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBN done)
                (ADVP (RB before))))))))
    (. .)))

advmod(looks-16, Well-1)
advmod(sharp-set-6, when-3)
nsubj(sharp-set-6, you-4)
cop(sharp-set-6, are-5)
advcl(looks-16, sharp-set-6)
nsubj(eat-10, you-9)
nsubj(satisfy-12, you-9)
conj_and(sharp-set-6, eat-10)
advcl(looks-16, eat-10)
conj_and(sharp-set-6, satisfy-12)
conj_and(eat-10, satisfy-12)
dobj(eat-10, yourself-13)
nsubj(looks-16, everything-15)
root(ROOT-0, looks-16)
advmod(different-18, pretty-17)
acomp(looks-16, different-18)
dobj(done-22, what-20)
nsubj(done-22, it-21)
prepc_from(different-18, done-22)
advmod(done-22, before-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (DT a) (NN body))
          (VP (VBP feel)
            (ADJP (RB pretty) (RB near) (JJ comfortable))
            (, ,)
            (SBAR (RB even)
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBZ is)
                  (ADVP (RB up)
                    (PP (IN in)
                      (NP (DT a) (NN balloon))))
                  (PP (IN with)
                    (NP (DT a) (NN genius))))))))))
    (. .)))

nsubj(makes-2, It-1)
root(ROOT-0, makes-2)
det(body-4, a-3)
nsubj(feel-5, body-4)
ccomp(makes-2, feel-5)
advmod(comfortable-8, pretty-6)
advmod(comfortable-8, near-7)
acomp(feel-5, comfortable-8)
advmod(is-13, even-10)
advmod(is-13, when-11)
nsubj(is-13, he-12)
advcl(feel-5, is-13)
advmod(is-13, up-14)
det(balloon-17, a-16)
prep_in(up-14, balloon-17)
det(genius-20, a-19)
prep_with(is-13, genius-20)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD got)
      (PP (TO to)
        (S
          (VP (VBG talking)
            (ADVP (RB together))))))
    (. .)))

nsubj(got-2, We-1)
root(ROOT-0, got-2)
prepc_to(got-2, talking-4)
advmod(talking-4, together-5)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (CD one) (NN thing))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD kept)
                (S
                  (VP (VBG bothering)
                    (NP (PRP me))))))))))
    (, ,)
    (CC and)
    (S
      (PP
        (PP (IN by))
        (CC and)
        (PP (IN by)
          (S
            (NP (PRP I))
            (VP (VBZ says) (: :) (`` ``)
              (S
                (NP (NNP Tom) (, ,))
                (VP (VBD did) (RB n't)))))))
      (NP (PRP we))
      (VP (VBP start)
        (ADVP (RB east))))
    (. ?) ('' '')))

expl(was-2, There-1)
root(ROOT-0, was-2)
num(thing-4, one-3)
nsubj(was-2, thing-4)
nsubj(kept-6, thing-4)
rcmod(thing-4, kept-6)
xcomp(kept-6, bothering-7)
dobj(bothering-7, me-8)
prep(start-23, by-11)
conj_and(by-11, by-13)
prep(start-23, by-13)
nsubj(says-15, I-14)
pcomp(by-13, says-15)
nsubj(did-20, Tom-18)
ccomp(says-15, did-20)
neg(did-20, n't-21)
nsubj(start-23, we-22)
conj_and(was-2, start-23)
advmod(start-23, east-24)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How) (RB fast))
    (SQ (VBP have)
      (NP (PRP we))
      (VP (VBN been)
        (VP (VBG going))))
    (. ?) ('' '')))

advmod(fast-3, How-2)
advmod(going-7, fast-3)
aux(going-7, have-4)
nsubj(going-7, we-5)
aux(going-7, been-6)
root(ROOT-0, going-7)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP you))
    (VP (VBD heard)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT the) (NN professor))
          (VP (VBD said)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (VP (VBG raging)
                    (NP (NN round))))))))))
    (. .)))

discourse(heard-5, Well-2)
nsubj(heard-5, you-4)
root(ROOT-0, heard-5)
dobj(said-9, what-6)
det(professor-8, the-7)
nsubj(said-9, professor-8)
ccomp(heard-5, said-9)
advmod(raging-13, when-10)
nsubj(raging-13, he-11)
aux(raging-13, was-12)
advcl(said-9, raging-13)
dobj(raging-13, round-14)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,))
    (S
      (NP (PRP we))
      (VP (VBD was)
        (VP (VBG making)
          (NP
            (NP (JJ fifty) (NNS miles))
            (NP (DT an) (NN hour))))))
    (, ,)
    (ADVP (RB sometimes))
    (S
      (NP
        (NP (NNP ninety))
        (, ,)
        (ADVP (RB sometimes))
        (NP (DT a) (CD hundred))
        (: ;))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (PP (IN with)
              (NP (DT a) (NN gale)
                (S
                  (VP (TO to)
                    (VP (VB help)
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP
                            (VP (MD could)
                              (VP (VB make)
                                (NP
                                  (QP (CD three) (CD hundred)))
                                (NP (DT any) (NN time))))
                            (, ,)
                            (CC and)
                            (VP (VBD said)
                              (SBAR (IN if)
                                (S
                                  (NP (PRP he))
                                  (VP
                                    (VP (VBD wanted)
                                      (NP (DT the) (NN gale)))
                                    (, ,)
                                    (CC and)
                                    (VP (VBD wanted)
                                      (S
                                        (NP (PRP it))
                                        (VP (VBG blowing)
                                          (NP (DT the) (JJ right) (NN direction)))))))))))))))))
            (, ,)
            (NP (PRP he))
            (ADVP (RB only))
            (VP (VBD had)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (ADVP
                      (ADVP (RB up) (JJR higher))
                      (CC or)
                      (ADVP (RB down) (JJR lower)))
                    (S
                      (VP (TO to)
                        (VP (VB find)
                          (NP (PRP it)))))))))))))
    (. .) ('' '')))

advmod(making-8, Sometimes-1)
nsubj(said-4, he-3)
dep(making-8, said-4)
nsubj(making-8, we-6)
aux(making-8, was-7)
root(ROOT-0, making-8)
amod(miles-10, fifty-9)
dobj(making-8, miles-10)
iobj(making-8, miles-10)
det(hour-12, an-11)
dep(miles-10, hour-12)
advmod(said-21, sometimes-14)
nsubj(said-21, ninety-15)
advmod(hundred-19, sometimes-17)
det(hundred-19, a-18)
appos(ninety-15, hundred-19)
parataxis(making-8, said-21)
mark(had-54, that-22)
det(gale-25, a-24)
prep_with(had-54, gale-25)
aux(help-27, to-26)
vmod(gale-25, help-27)
nsubj(make-30, he-28)
nsubj(said-37, he-28)
aux(make-30, could-29)
ccomp(help-27, make-30)
number(hundred-32, three-31)
iobj(make-30, hundred-32)
det(time-34, any-33)
dobj(make-30, time-34)
ccomp(help-27, said-37)
conj_and(make-30, said-37)
mark(wanted-40, if-38)
nsubj(wanted-40, he-39)
nsubj(wanted-45, he-39)
advcl(said-37, wanted-40)
det(gale-42, the-41)
dobj(wanted-40, gale-42)
advcl(said-37, wanted-45)
conj_and(wanted-40, wanted-45)
nsubj(blowing-47, it-46)
dep(wanted-45, blowing-47)
det(direction-50, the-48)
amod(direction-50, right-49)
dobj(blowing-47, direction-50)
nsubj(had-54, he-52)
nsubj(go-56, he-52)
nsubj(find-63, he-52)
advmod(had-54, only-53)
ccomp(said-21, had-54)
aux(go-56, to-55)
xcomp(had-54, go-56)
advmod(higher-58, up-57)
advmod(go-56, higher-58)
advmod(lower-61, down-60)
advmod(go-56, lower-61)
conj_or(higher-58, lower-61)
aux(find-63, to-62)
xcomp(go-56, find-63)
dobj(find-63, it-64)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR (RB just) (IN as)
        (S
          (NP (PRP I))
          (VP (VBN reckoned)))))
    (. .)))

discourse('s-7, Well-2)
advmod('s-7, then-4)
nsubj('s-7, it-6)
root(ROOT-0, 's-7)
advmod(reckoned-11, just-8)
mark(reckoned-11, as-9)
nsubj(reckoned-11, I-10)
advcl('s-7, reckoned-11)

(ROOT
  (S
    (NP (DT The) (NN professor))
    (VP (VBD lied))
    (. .) ('' '')))

det(professor-2, The-1)
nsubj(lied-3, professor-2)
root(ROOT-0, lied-3)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (SINV (`` ``)
    (SBAR (IN Because)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (VP (VBD was)
              (VP (VBG going)
                (ADVP (RB so) (RB fast))))))
        (NP (PRP we))
        (VP (MD ought)
          (S
            (VP (TO to)
              (VP (VB be)
                (PP (IN past)
                  (NP (NNP Illinois)))))))))
    (, ,)
    (VP (MD ought) (RB n't))
    (NP (PRP we))
    (. ?) ('' '')))

mark(ought-10, Because-2)
mark(going-6, if-3)
nsubj(going-6, we-4)
aux(going-6, was-5)
advcl(ought-10, going-6)
advmod(fast-8, so-7)
advmod(going-6, fast-8)
nsubj(ought-10, we-9)
nsubj(be-12, we-9)
advcl(ought-16, ought-10)
aux(be-12, to-11)
xcomp(ought-10, be-12)
prep_past(be-12, Illinois-14)
root(ROOT-0, ought-16)
neg(ought-16, n't-17)
nsubj(ought-16, we-18)

(ROOT
  (INTJ (`` ``) (UH Certainly) (. .) ('' '')))

root(ROOT-0, Certainly-2)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP we))
    (VP (VBP ai) (RB n't))
    (. .) ('' '')))

discourse(ai-5, Well-2)
nsubj(ai-5, we-4)
root(ROOT-0, ai-5)
neg(ai-5, n't-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN reason))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP ai) (RB n't))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(reason-5, the-4)
nsubj(What-2, reason-5)
nsubj(ai-7, we-6)
rcmod(reason-5, ai-7)
neg(ai-7, n't-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP know)
      (PP (IN by)
        (NP (DT the) (NN color))))
    (. .)))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
det(color-6, the-5)
prep_by(know-3, color-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (ADVP (RB right)
        (PP (IN over)
          (NP (NNP Illinois))))
      (ADVP (RB yet)))
    (. .)))

nsubj('re-2, We-1)
root(ROOT-0, 're-2)
advmod('re-2, right-3)
prep_over(right-3, Illinois-5)
advmod('re-2, yet-6)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB see)
        (PP (IN for)
          (NP (PRP yourself)))
        (SBAR (IN that)
          (S
            (NP (NNP Indiana))
            (VP (VBP ai) (RB n't)
              (PP (IN in)
                (NP (NN sight))))))))
    (. .) ('' '')))

cc(see-4, And-1)
nsubj(see-4, you-2)
aux(see-4, can-3)
root(ROOT-0, see-4)
prep_for(see-4, yourself-6)
mark(ai-9, that-7)
nsubj(ai-9, Indiana-8)
ccomp(see-4, ai-9)
neg(ai-9, n't-10)
prep_in(ai-9, sight-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (NP
              (NP (DT the) (NN matter))
              (PP (IN with)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (NNP Huck)))))))))
    (. .)))

nsubj(wonder-3, I-2)
root(ROOT-0, wonder-3)
nsubj(matter-7, what-4)
cop(matter-7, 's-5)
det(matter-7, the-6)
ccomp(wonder-3, matter-7)
prep_with(matter-7, you-9)
appos(you-9, Huck-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know)
      (PP (IN by)
        (NP (DT the) (NN COLOR))))
    (. ?) ('' '')))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
det(COLOR-5, the-4)
prep_by(know-2, COLOR-5)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (VBP do))
    (. .) ('' '')))

discourse(do-7, Yes-2)
prep_of(do-7, course-5)
nsubj(do-7, I-6)
root(ROOT-0, do-7)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT the) (NN color))
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (PRP it))))))))
    (. ?) ('' '')))

dep(got-6, What-2)
auxpass(got-6, 's-3)
det(color-5, the-4)
nsubjpass(got-6, color-5)
nsubj(do-8, color-5)
root(ROOT-0, got-6)
aux(do-8, to-7)
xcomp(got-6, do-8)
prep_with(do-8, it-10)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (VP (VBN got)
        (NP (NN everything))
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (PRP it))))))))
    (. .)))

nsubjpass(got-4, It-2)
auxpass(got-4, 's-3)
root(ROOT-0, got-4)
dobj(got-4, everything-5)
aux(do-7, to-6)
vmod(got-4, do-7)
prep_with(do-7, it-9)

(ROOT
  (S
    (S
      (NP (NNP Illinois))
      (VP (VBZ is)
        (ADJP (JJ green))))
    (, ,)
    (NP (NNP Indiana))
    (VP (VBZ is)
      (ADJP (JJ pink)))
    (. .)))

nsubj(green-3, Illinois-1)
cop(green-3, is-2)
ccomp(pink-7, green-3)
nsubj(pink-7, Indiana-5)
cop(pink-7, is-6)
root(ROOT-0, pink-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP show)
      (NP (PRP me))
      (ADVP
        (NP (DT any) (NN pink))
        (RB down) (RB here))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (MD can)))))
    (. .)))

nsubj(show-2, You-1)
root(ROOT-0, show-2)
dobj(show-2, me-3)
det(pink-5, any-4)
dep(here-7, pink-5)
advmod(here-7, down-6)
advmod(show-2, here-7)
mark(can-11, if-9)
nsubj(can-11, you-10)
advcl(show-2, can-11)

(ROOT
  (S
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NN sir)))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ green))))
    (. .) ('' '')))

discourse(sir-3, No-1)
dep(green-7, sir-3)
nsubj(green-7, it-5)
cop(green-7, 's-6)
root(ROOT-0, green-7)

(ROOT
  (S (`` ``)
    (NP (NNP Indiana))
    (VP (VBD PINK))
    (. ?)))

nsubj(PINK-3, Indiana-2)
root(ROOT-0, PINK-3)

(ROOT
  (S
    (ADVP (WRB Why))
    (, ,)
    (X (WP what))
    (NP (SYM a))
    (VP (VBP lie))
    (. !) ('' '')))

advmod(lie-5, Why-1)
dep(lie-5, what-3)
nsubj(lie-5, a-4)
root(ROOT-0, lie-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN lie))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN seen)
          (NP (PRP it))
          (PP (IN on)
            (NP (DT the) (NN map))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ pink))))
    (. .) ('' '')))

nsubj(lie-6, It-2)
cop(lie-6, ai-3)
neg(lie-6, n't-4)
neg(lie-6, no-5)
root(ROOT-0, lie-6)
nsubj(seen-10, I-8)
aux(seen-10, 've-9)
conj_and(lie-6, seen-10)
dobj(seen-10, it-11)
det(map-14, the-13)
prep_on(seen-10, map-14)
nsubj(pink-19, it-17)
cop(pink-19, 's-18)
conj_and(lie-6, pink-19)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB never))
    (VP (VBP see)
      (ADVP
        (NP (DT a) (NN person))
        (RB so))
      (VP (VBN aggravated)
        (CC and)
        (VBN disgusted)))
    (. .)))

nsubj(see-3, You-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
det(person-5, a-4)
npadvmod(so-6, person-5)
advmod(see-3, so-6)
dep(see-3, aggravated-7)
dep(see-3, disgusted-9)
conj_and(aggravated-7, disgusted-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (INTJ (UH Well))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (NP (PDT such) (DT a) (NN numbskull))
              (PP (IN as)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (NNP Huck) (NNP Finn)))))))
        (, ,)
        (NP (PRP I))
        (VP (MD would)
          (VP (VB jump)
            (PRT (RP over))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
discourse(jump-21, Well-5)
mark(numbskull-12, if-7)
nsubj(numbskull-12, I-8)
cop(numbskull-12, was-9)
predet(numbskull-12, such-10)
det(numbskull-12, a-11)
advcl(jump-21, numbskull-12)
prep_as(numbskull-12, you-14)
nn(Finn-17, Huck-16)
appos(you-14, Finn-17)
nsubj(jump-21, I-19)
aux(jump-21, would-20)
ccomp(says-2, jump-21)
prt(jump-21, over-22)

(ROOT
  (S
    (VP (VB Seen)
      (NP (PRP it))
      (PP (IN on)
        (NP (DT the) (NN map))))
    (. !)))

root(ROOT-0, Seen-1)
dobj(Seen-1, it-2)
det(map-5, the-4)
prep_on(Seen-1, map-5)

(ROOT
  (S
    (NP (NNP Huck) (NNP Finn))
    (PRN (, ,)
      (SINV (VBD did)
        (NP (PRP you))))
    (VP (VBP reckon)
      (SBAR
        (S
          (NP (DT the) (NNPS States))
          (VP (VBD was)
            (NP (DT the) (JJ same) (NN color) (NNS out-of-doors))
            (SBAR (IN as)
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (PP (IN on)
                    (NP (DT the) (NN map))))))))))
    (. ?) ('' '')))

nn(Finn-2, Huck-1)
nsubj(reckon-6, Finn-2)
parataxis(reckon-6, did-4)
nsubj(did-4, you-5)
root(ROOT-0, reckon-6)
det(States-8, the-7)
nsubj(out-of-doors-13, States-8)
cop(out-of-doors-13, was-9)
det(out-of-doors-13, the-10)
amod(out-of-doors-13, same-11)
nn(out-of-doors-13, color-12)
ccomp(reckon-6, out-of-doors-13)
mark(are-16, as-14)
nsubj(are-16, they-15)
advcl(out-of-doors-13, are-16)
det(map-19, the-18)
prep_on(are-16, map-19)

(ROOT
  (SBARQ
    (SBAR (`` ``)
      (S
        (NP (NNP Tom))
        (VP (VBZ Sawyer))))
    (, ,)
    (WHNP (WP what))
    (SQ (VBZ 's)
      (NP
        (NP (DT a) (NN map))
        (PP (IN for))))
    (. ?)))

nsubj(Sawyer-3, Tom-2)
dep(what-5, Sawyer-3)
root(ROOT-0, what-5)
cop(what-5, 's-6)
det(map-8, a-7)
nsubj(what-5, map-8)
prep(map-8, for-9)

(ROOT
  (FRAG
    (S
      (VP (VBD Ai) (RB n't)
        (VP
          (NP (PRP it))
          (S
            (VP (TO to)
              (VP (VB learn)
                (S
                  (NP (PRP you))
                  (NP (NNS facts)))))))))
    (. ?) ('' '')))

aux(it-3, Ai-1)
neg(it-3, n't-2)
root(ROOT-0, it-3)
aux(learn-5, to-4)
vmod(it-3, learn-5)
nsubj(facts-7, you-6)
xcomp(learn-5, facts-7)

(ROOT
  (S (`` ``)
    (VP (VB Of)
      (NP (NN course)))
    (. .) ('' '')))

root(ROOT-0, Of-2)
dobj(Of-2, course-3)

(ROOT
  (SBARQ
    (FRAG
      (INTJ (`` ``) (UH Well))
      (, ,)
      (ADVP (RB then)))
    (, ,)
    (SBARQ
      (WHADVP (WRB how))
      (SQ (VBZ 's)
        (NP (PRP it))
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB do)
                (SBAR (IN that)
                  (S
                    (SBAR (IN if)
                      (S
                        (NP (PRP it))
                        (VP (VBZ tells))))
                    (VP (VBZ lies))))))))))
    (. ?)))

discourse(then-4, Well-2)
dep(going-9, then-4)
advmod(going-9, how-6)
aux(going-9, 's-7)
nsubj(going-9, it-8)
nsubj(do-11, it-8)
root(ROOT-0, going-9)
aux(do-11, to-10)
xcomp(going-9, do-11)
mark(lies-16, that-12)
mark(tells-15, if-13)
nsubj(tells-15, it-14)
csubj(lies-16, tells-15)
ccomp(do-11, lies-16)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB know))))))))
    (. .) ('' '')))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
dobj(want-5, what-3)
nsubj(know-7, what-3)
nsubj(want-5, I-4)
ccomp('s-2, want-5)
aux(know-7, to-6)
xcomp(want-5, know-7)

(ROOT
  (S (`` ``)
    (NP (NNP Shucks))
    (, ,)
    (NP (PRP you))
    (VP (VBZ muggins))
    (. !)))

nsubj(muggins-5, Shucks-2)
nsubj(muggins-5, you-4)
root(ROOT-0, muggins-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBP do) (RB n't)
      (VP (VB tell)
        (NP (NNS lies))))
    (. .) ('' '')))

nsubj(tell-4, It-1)
aux(tell-4, do-2)
neg(tell-4, n't-3)
root(ROOT-0, tell-4)
dobj(tell-4, lies-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBP do) (RB n't)))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP (PRP it))
    (. ?) ('' '')))

nsubj(do-3, It-2)
ccomp(do-6, do-3)
neg(do-3, n't-4)
root(ROOT-0, do-6)
neg(do-6, n't-7)
nsubj(do-6, it-8)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP it))
    (VP (VBP do) (RB n't))
    (. .) ('' '')))

discourse(do-5, No-2)
nsubj(do-5, it-4)
root(ROOT-0, do-5)
neg(do-5, n't-6)

(ROOT
  (NP
    (NP
      (NP (`` ``) (DT All) (NN right))
      (, ,)
      (ADVP (RB then)))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBP do) (RB n't))))
      (, ,)
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (ADVP (RB no)
          (NP (CD two) (NNS States)))
        (NP (DT the) (JJ same) (NN color))))
    (. .)))

det(right-3, All-2)
root(ROOT-0, right-3)
advmod(right-3, then-5)
mark(do-9, if-7)
nsubj(do-9, it-8)
advcl(ai-13, do-9)
neg(do-9, n't-10)
expl(ai-13, there-12)
dep(right-3, ai-13)
neg(ai-13, n't-14)
advmod(ai-13, no-15)
num(States-17, two-16)
pobj(no-15, States-17)
det(color-20, the-18)
amod(color-20, same-19)
nsubj(ai-13, color-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP git)
      (PP (IN around)
        (NP
          (NP
            (NP (NNP THAT))
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (MD can)))))
          (, ,)
          (NP (NNP Tom) (NNP Sawyer)))))
    (. .) ('' '')))

nsubj(git-2, You-1)
root(ROOT-0, git-2)
prep_around(git-2, THAT-4)
mark(can-7, if-5)
nsubj(can-7, you-6)
rcmod(THAT-4, can-7)
nn(Sawyer-10, Tom-9)
appos(THAT-4, Sawyer-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD had)
              (NP (PRP him)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Jim))
      (VP (VBP see)
        (NP (PRP it))
        (ADVP (RB too))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP tell)
        (NP (PRP you))
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBD felt)
              (ADJP (RB pretty) (JJ good))))
          (, ,))
        (SBAR (IN for)
          (S
            (NP (NNP Tom) (NNP Sawyer))
            (VP (VBD was)
              (ADVP (RB always))
              (NP (DT a) (JJ hard) (NN person)
                (S
                  (VP (TO to)
                    (VP (VB git)
                      (ADVP (RB ahead))
                      (PP (IN of)))))))))))
    (. .)))

nsubj(see-2, He-1)
root(ROOT-0, see-2)
nsubj(had-4, I-3)
ccomp(see-2, had-4)
dobj(had-4, him-5)
nsubj(see-9, Jim-8)
conj_and(see-2, see-9)
dobj(see-9, it-10)
advmod(see-9, too-11)
nsubj(tell-15, I-14)
conj_and(see-2, tell-15)
dobj(tell-15, you-16)
nsubj(felt-19, I-18)
parataxis(tell-15, felt-19)
advmod(good-21, pretty-20)
acomp(felt-19, good-21)
mark(person-30, for-23)
nn(Sawyer-25, Tom-24)
nsubj(person-30, Sawyer-25)
cop(person-30, was-26)
advmod(person-30, always-27)
det(person-30, a-28)
amod(person-30, hard-29)
advcl(tell-15, person-30)
aux(git-32, to-31)
vmod(person-30, git-32)
advmod(git-32, ahead-33)
prep(git-32, of-34)

(ROOT
  (S
    (NP (NNP Jim))
    (VP
      (VP (VBD slapped)
        (NP (PRP$ his) (NN leg)))
      (CC and)
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (PRP I))
          (VP (VB tell)
            (NP (PRP YOU))))))
    (. !)))

nsubj(slapped-2, Jim-1)
nsubj(says-6, Jim-1)
root(ROOT-0, slapped-2)
poss(leg-4, his-3)
dobj(slapped-2, leg-4)
conj_and(slapped-2, says-6)
nsubj(tell-10, I-9)
ccomp(says-6, tell-10)
dobj(tell-10, YOU-11)

(ROOT
  (S
    (NP
      (NP (NNP dat) (POS 's))
      (ADJP (JJ smart))
      (, ,) (NN dat))
    (VP (VBZ 's)
      (ADVP (RB right) (RB down))
      (ADJP (JJ smart)))
    (. .)))

poss(dat-5, dat-1)
amod(dat-5, smart-3)
nsubj(smart-9, dat-5)
cop(smart-9, 's-6)
advmod(down-8, right-7)
advmod(smart-9, down-8)
root(ROOT-0, smart-9)

(ROOT
  (S
    (S
      (VP (VBG Ai)
        (PRN (RB n't)
          (NP
            (NP (DT no) (NN use))
            (, ,)
            (NP (NNP Mars) (NNP Tom))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD got)
        (NP (PRP you))
        (NP (NNP DIS) (NN time))
        (, ,)
        (ADJP (JJ sho) ('' '))))
    (. !) ('' '')))

root(ROOT-0, Ai-1)
dep(use-4, n't-2)
neg(use-4, no-3)
dep(Ai-1, use-4)
nn(Tom-7, Mars-6)
appos(use-4, Tom-7)
nsubj(sho-15, he-9)
dep(sho-15, got-10)
iobj(sho-15, you-11)
nn(time-13, DIS-12)
dobj(sho-15, time-13)
parataxis(Ai-1, sho-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD slapped)
          (NP (PRP$ his) (NN leg))
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VBZ says) (, ,) (`` ``)
          (S
            (VP (VBG My)
              (NP (NNP LAN) (POS ')))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ smart)
          (NP (CD one)))))
    (. !) ('' '')))

nsubj(slapped-2, He-1)
nsubj(says-8, He-1)
root(ROOT-0, slapped-2)
poss(leg-4, his-3)
dobj(slapped-2, leg-4)
advmod(slapped-2, again-5)
conj_and(slapped-2, says-8)
xcomp(says-8, My-11)
dobj(My-11, LAN-12)
nsubj(smart-18, it-16)
cop(smart-18, was-17)
conj_but(slapped-2, smart-18)
dep(smart-18, one-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD felt)
        (ADJP (RB so) (JJ good))
        (PP (IN in)
          (NP (PRP$ my) (NN life)))))
    (: ;)
    (CC and)
    (ADVP (RB yet))
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD was)
                (VP (VBG saying)
                  (NP (NN anything))
                  (SBAR (RB much) (IN till)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADVP (RB out))))))))))))
    (. .)))

nsubj(felt-3, I-1)
neg(felt-3, never-2)
root(ROOT-0, felt-3)
advmod(good-5, so-4)
acomp(felt-3, good-5)
poss(life-8, my-7)
prep_in(felt-3, life-8)
advmod(know-15, yet-11)
nsubj(know-15, I-12)
aux(know-15, did-13)
neg(know-15, n't-14)
conj_and(felt-3, know-15)
nsubj(saying-18, I-16)
aux(saying-18, was-17)
ccomp(know-15, saying-18)
dobj(saying-18, anything-19)
advmod(was-23, much-20)
mark(was-23, till-21)
nsubj(was-23, it-22)
advcl(saying-18, was-23)
advmod(was-23, out-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADVP (RB just))
      (VP (VBG mooning)
        (PRT (RP along))
        (, ,)
        (UCP
          (ADJP (RB perfectly) (JJ careless))
          (, ,)
          (CC and)
          (VP (RB not) (VBG expecting)
            (NP
              (NP (NN anything))
              (SBAR
                (S
                  (VP (VBD was)
                    (VP
                      (VP (VBG going)
                        (S
                          (VP (TO to)
                            (VP (VB happen)))))
                      (, ,)
                      (CC and)
                      (VP
                        (ADVP (RB never))
                        (VBG THINKING)
                        (PP (IN of)
                          (NP (PDT such) (DT a) (NN thing)))
                        (ADVP (IN at) (DT all))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB when))
                          (, ,)
                          (S
                            (NP
                              (NP (DT all))
                              (PP (IN of)
                                (NP
                                  (NP (DT a) (JJ sudden))
                                  (, ,)
                                  (PP (IN out)
                                    (NP (PRP it))))))
                            (VP (VBD came))))))))))))))
    (. .)))

nsubj(mooning-4, I-1)
aux(mooning-4, was-2)
advmod(mooning-4, just-3)
root(ROOT-0, mooning-4)
prt(mooning-4, along-5)
advmod(careless-8, perfectly-7)
acomp(mooning-4, careless-8)
neg(expecting-12, not-11)
acomp(mooning-4, expecting-12)
conj_and(careless-8, expecting-12)
dobj(expecting-12, anything-13)
aux(going-15, was-14)
rcmod(anything-13, going-15)
aux(happen-17, to-16)
xcomp(going-15, happen-17)
neg(THINKING-21, never-20)
rcmod(anything-13, THINKING-21)
conj_and(going-15, THINKING-21)
predet(thing-25, such-23)
det(thing-25, a-24)
prep_of(THINKING-21, thing-25)
advmod(THINKING-21, at-26)
pobj(at-26, all-27)
advmod(came-38, when-29)
nsubj(came-38, all-31)
det(sudden-34, a-33)
prep_of(all-31, sudden-34)
prep_out(sudden-34, it-37)
advcl(THINKING-21, came-38)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB just))
      (PP (IN as)
        (NP
          (NP (RB much) (DT a) (NN surprise))
          (PP (TO to)
            (NP (PRP me)))))
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (PP (TO to)
              (NP
                (NP (DT any))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (. .)))

discourse(was-4, Why-1)
nsubj(was-4, it-3)
root(ROOT-0, was-4)
advmod(was-4, just-5)
advmod(surprise-9, much-7)
det(surprise-9, a-8)
prep_as(was-4, surprise-9)
prep_to(surprise-9, me-11)
mark(was-14, as-12)
nsubj(was-14, it-13)
advcl(was-4, was-14)
prep_to(was-14, any-16)
prep_of(any-16, them-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB just))
        (NP
          (NP (DT the) (JJ same) (NN way))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT a) (NN person))
                    (VP (VBZ is)
                      (VP
                        (VP (VBG munching)
                          (PRT (RP along))
                          (PP (IN on)
                            (NP
                              (NP (DT a) (NN hunk))
                              (PP (IN of)
                                (NP (NN corn-pone))))))
                        (, ,)
                        (CC and)
                        (VP (RB not) (VBG thinking)
                          (PP (IN about)
                            (NP (NN anything))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ sudden) (NNS bites))
            (PP (IN into)
              (NP (DT a) (FW di))))))
      (`` `)
      (VP (VBD mond)))
    (. .)))

nsubj(way-6, It-1)
cop(way-6, was-2)
advmod(way-6, just-3)
det(way-6, the-4)
amod(way-6, same-5)
root(ROOT-0, way-6)
nsubj(is-8, it-7)
rcmod(way-6, is-8)
advmod(munching-13, when-9)
det(person-11, a-10)
nsubj(munching-13, person-11)
nsubj(thinking-23, person-11)
aux(munching-13, is-12)
advcl(is-8, munching-13)
prt(munching-13, along-14)
det(hunk-17, a-16)
prep_on(munching-13, hunk-17)
prep_of(hunk-17, corn-pone-19)
neg(thinking-23, not-22)
advcl(is-8, thinking-23)
conj_and(munching-13, thinking-23)
prep_about(thinking-23, anything-25)
nsubj(mond-37, all-28)
det(bites-32, a-30)
amod(bites-32, sudden-31)
prep_of(all-28, bites-32)
det(di-35, a-34)
prep_into(bites-32, di-35)
conj_and(way-6, mond-37)

(ROOT
  (S
    (ADVP (RB Now) (RB all)
      (SBAR (IN that)
        (S
          (NP (PRP HE))
          (VP (VBZ knows)
            (S
              (S
                (NP (JJ first))
                (ADVP (RB off))
                (VP (VBZ is)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (NP
                          (NP (DT some) (NN kind))
                          (PP (IN of)
                            (NP (NN gravel)))
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBZ 's)
                                (ADJP (NN bit)
                                  (PP (IN into))))))))))))
              (: ;)
              (CC but)
              (S
                (NP (PRP he))
                (VP (VBP do) (RB n't)
                  (VP (VB find)
                    (PRT (RP out))))))))))
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR
        (S
          (S
            (NP (DT a) (FW di))
            (VP (`` `)
              (VP (VBD mond)
                (SBAR (IN till)
                  (S
                    (NP (PRP he))
                    (VP (VBZ gits)
                      (NP (PRP it))
                      (PRT (RP out))))))
              (CC and)
              (VP (VBZ brushes)
                (PRT (RP off))
                (NP
                  (NP
                    (NP (DT the) (NN sand))
                    (CC and)
                    (NP (NNS crumbs)))
                  (CC and)
                  (NP
                    (NP (CD one) (NN thing))
                    (CC or)
                    (NP (DT another)))))
              (, ,)
              (CC and)
              (VP (VBZ has)
                (NP
                  (NP (DT a) (NN look))
                  (PP (IN at)
                    (NP (PRP it)))))))
          (, ,)
          (CC and)
          (S
            (ADVP (RB then))
            (NP (PRP he))
            (VP (VBZ 's)
              (ADJP
                (ADJP (JJ surprised)
                  (CC and)
                  (JJ glad))
                (: --)
                (ADJP (JJ yes))
                (, ,)
                (CC and)
                (ADJP (JJ proud) (RB too)))))
          (: ;)
          (SBAR (IN though)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBP come)
                    (S
                      (VP (TO to)
                        (VP (VB look)
                          (NP (DT the) (NN thing))
                          (PP (RB straight) (IN in)
                            (NP (DT the) (NN eye)))))))))
              (, ,)
              (NP (PRP he))
              (VP (VBP ai) (RB n't)
                (VP (VBN entitled)
                  (PP (TO to)
                    (NP
                      (QP (RB as) (JJ much))
                      (NN credit)))
                  (SBAR (IN as)
                    (S
                      (NP (PRP he))
                      (VP (MD would)
                        (S
                          (NP (`` `)
                            (NP (SYM a))
                            ('' ')
                            (VP (VBN been)
                              (SBAR (IN if)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD 'd)
                                    (VP (VBN been)
                                      (VP (VBG HUNTING)
                                        (NP (FW di))
                                        (`` `)
                                        (NP (NNS monds))))))))))))))))))))
    (. .)))

advmod(all-2, Now-1)
advmod('s-28, all-2)
mark(knows-5, that-3)
nsubj(knows-5, HE-4)
ccomp(all-2, knows-5)
nsubj(is-8, first-6)
advmod(is-8, off-7)
dep(knows-5, is-8)
mark(kind-13, that-9)
nsubj(kind-13, it-10)
cop(kind-13, 's-11)
det(kind-13, some-12)
ccomp(is-8, kind-13)
prep_into(bit-18, kind-13)
prep_of(kind-13, gravel-15)
nsubj(bit-18, he-16)
cop(bit-18, 's-17)
rcmod(kind-13, bit-18)
nsubj(find-25, he-22)
aux(find-25, do-23)
neg(find-25, n't-24)
dep(knows-5, find-25)
conj_but(is-8, find-25)
prt(find-25, out-26)
nsubj('s-28, it-27)
root(ROOT-0, 's-28)
det(di-30, a-29)
nsubj(mond-32, di-30)
nsubj(brushes-39, di-30)
nsubj(has-52, di-30)
dep('s-28, mond-32)
mark(gits-35, till-33)
nsubj(gits-35, he-34)
advcl(mond-32, gits-35)
dobj(gits-35, it-36)
prt(gits-35, out-37)
dep('s-28, brushes-39)
conj_and(mond-32, brushes-39)
prt(brushes-39, off-40)
det(sand-42, the-41)
dobj(brushes-39, sand-42)
dobj(brushes-39, crumbs-44)
conj_and(sand-42, crumbs-44)
num(thing-47, one-46)
dobj(brushes-39, thing-47)
conj_and(sand-42, thing-47)
conj_and(sand-42, another-49)
conj_or(thing-47, another-49)
dep('s-28, has-52)
conj_and(mond-32, has-52)
det(look-54, a-53)
dobj(has-52, look-54)
prep_at(look-54, it-56)
advmod(surprised-62, then-59)
nsubj(surprised-62, he-60)
nsubj(glad-64, he-60)
nsubj(yes-66, he-60)
nsubj(proud-69, he-60)
cop(surprised-62, 's-61)
dep('s-28, surprised-62)
conj_and(mond-32, surprised-62)
conj_and(mond-32, glad-64)
conj_and(surprised-62, glad-64)
conj_and(mond-32, yes-66)
conj_and(surprised-62, yes-66)
conj_and(mond-32, proud-69)
conj_and(surprised-62, proud-69)
advmod(proud-69, too-70)
mark(entitled-88, though-72)
advmod(come-75, when-73)
nsubj(come-75, you-74)
nsubj(look-77, you-74)
advcl(entitled-88, come-75)
aux(look-77, to-76)
xcomp(come-75, look-77)
det(thing-79, the-78)
dobj(look-77, thing-79)
advmod(look-77, straight-80)
det(eye-83, the-82)
prep_in(look-77, eye-83)
nsubjpass(entitled-88, he-85)
auxpass(entitled-88, ai-86)
neg(entitled-88, n't-87)
dep('s-28, entitled-88)
conj_and(mond-32, entitled-88)
quantmod(much-91, as-90)
num(credit-92, much-91)
prep_to(entitled-88, credit-92)
mark(would-95, as-93)
nsubj(would-95, he-94)
advcl(entitled-88, would-95)
dep(would-95, a-97)
vmod(a-97, been-99)
mark(HUNTING-104, if-100)
nsubj(HUNTING-104, he-101)
aux(HUNTING-104, 'd-102)
aux(HUNTING-104, been-103)
advcl(been-99, HUNTING-104)
dobj(HUNTING-104, di-105)
dobj(HUNTING-104, monds-107)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB see)
        (S
          (NP (DT the) (NN difference))
          (ADJP (JJ easy))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP think)
                (NP (PRP it))
                (PRT (RP over))))))))
    (. .)))

nsubj(see-3, You-1)
aux(see-3, can-2)
root(ROOT-0, see-3)
det(difference-5, the-4)
nsubj(think-9, difference-5)
dep(think-9, easy-6)
mark(think-9, if-7)
nsubj(think-9, you-8)
xcomp(see-3, think-9)
dobj(think-9, it-10)
prt(think-9, over-11)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (NP
      (NP (DT an) (NN accident))
      (, ,)
      (NP (DT that) (NN way))
      (, ,))
    (VP (VBP ai) (RB n't)
      (ADJP (RB fairly) (RB as))
      (ADVP (JJ big)
        (NP (DT a) (NN thing))
        (PP (IN as)
          (NP
            (NP (DT a) (NN thing))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's)
                  (VP (VBN done)
                    (S
                      (ADJP (JJ a-purpose)))))))))))
    (. .)))

nsubj(see-2, You-1)
ccomp(as-13, see-2)
det(accident-5, an-4)
nsubj(as-13, accident-5)
det(way-8, that-7)
appos(accident-5, way-8)
cop(as-13, ai-10)
neg(as-13, n't-11)
advmod(as-13, fairly-12)
root(ROOT-0, as-13)
advmod(as-13, big-14)
det(thing-16, a-15)
dep(big-14, thing-16)
det(thing-19, a-18)
prep_as(big-14, thing-19)
nsubjpass(done-22, thing-19)
auxpass(done-22, 's-21)
rcmod(thing-19, done-22)
xcomp(done-22, a-purpose-23)

(ROOT
  (S
    (S
      (NP (NN Anybody))
      (VP (MD could)
        (VP (VB find)
          (SBAR (IN that)
            (S
              (NP (FW di))
              (`` `)
              (VP (VBD mond)
                (PP (IN in)
                  (NP (DT that) (NN corn-pone)))))))))
    (: ;)
    (CC but)
    (S
      (S
        (VP (VB mind)
          (NP (PRP you))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (NN somebody))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ 's)
                        (VP (VBN got)
                          (NP
                            (NP (NNP THAT) (NNP KIND))
                            (PP (IN OF)
                              (NP (DT A) (NN CORN-PONE)))))))))))))))
    (. .)))

nsubj(find-3, Anybody-1)
aux(find-3, could-2)
root(ROOT-0, find-3)
mark(mond-7, that-4)
nsubj(mond-7, di-5)
ccomp(find-3, mond-7)
det(corn-pone-10, that-9)
prep_in(mond-7, corn-pone-10)
ccomp(got-18, mind-13)
dobj(mind-13, you-14)
nsubjpass(got-18, it-16)
nsubj(somebody-21, it-16)
auxpass(got-18, 's-17)
conj_but(find-3, got-18)
aux(somebody-21, to-19)
cop(somebody-21, be-20)
xcomp(got-18, somebody-21)
nsubjpass(got-24, somebody-21)
auxpass(got-24, 's-23)
rcmod(somebody-21, got-24)
nn(KIND-26, THAT-25)
dobj(got-24, KIND-26)
det(CORN-PONE-29, A-28)
prep_of(KIND-26, CORN-PONE-29)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT that) (NN feller) (POS 's))
              (NN credit))
            (VP (VBZ comes)
              (SBAR (IN in) (, ,)
                (S
                  (NP (PRP you))
                  (VP (VBP see)))))))
        (: ;)
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP mine))
                  (VP (VBZ comes)
                    (PRT (RP in))))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(comes-8, where-3)
det(feller-5, that-4)
poss(credit-7, feller-5)
nsubj(comes-8, credit-7)
advcl('s-2, comes-8)
mark(see-12, in-9)
nsubj(see-12, you-11)
advcl(comes-8, see-12)
nsubj('s-16, that-15)
advcl('s-2, 's-16)
conj_and(comes-8, 's-16)
advmod(comes-19, where-17)
nsubj(comes-19, mine-18)
advcl('s-16, comes-19)
prt(comes-19, in-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB claim)
          (NP (DT no) (JJ great) (NNS things)))))
    (PRN (: --)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB reckon)
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD could)
                  (S
                    (NP (`` `)
                      (NP (SYM a))
                      ('' ')
                      (VP (VBN done)
                        (S
                          (NP (PRP it))
                          (ADVP (RB again))))))))))))
      (: --))
    (CC but)
    (S
      (S
        (NP (PRP I))
        (VP (VBN done)
          (NP (PRP it))
          (NP (DT that) (NN time))))
      (: ;)
      (S
        (NP (DT that))
        (VP (VBZ 's)
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP claim))))))))
    (. .)))

nsubj(claim-4, I-1)
aux(claim-4, do-2)
neg(claim-4, n't-3)
root(ROOT-0, claim-4)
neg(things-7, no-5)
amod(things-7, great-6)
dobj(claim-4, things-7)
nsubj(reckon-12, I-9)
aux(reckon-12, do-10)
neg(reckon-12, n't-11)
dep(claim-4, reckon-12)
nsubj(could-14, I-13)
ccomp(reckon-12, could-14)
dep(could-14, a-16)
vmod(a-16, done-18)
dep(done-18, it-19)
advmod(it-19, again-20)
nsubj(done-24, I-23)
conj_but(claim-4, done-24)
iobj(done-24, it-25)
det(time-27, that-26)
dobj(done-24, time-27)
nsubj(all-31, that-29)
cop(all-31, 's-30)
parataxis(done-24, all-31)
nsubj(claim-33, I-32)
rcmod(all-31, claim-33)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (VBD had) (RB n't)
        (ADVP (DT no) (RBR more))
        (VP (VBN idea)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD could)
                (VP (VB do)
                  (NP (PDT such) (DT a) (NN thing)))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN war))
      (VP
        (VP (RB n't)
          (ADVP (DT any) (RBR more))
          (VBG thinking) (IN about)
          (NP (PRP it)))
        (CC or)
        (VP (VBG trying)
          (PP (TO to))
          (, ,)
          (SBAR (IN than)
            (S
              (NP (PRP you))
              (VP (VB be)
                (NP (DT this) (NN minute))))))))
    (. .)))

nsubj(idea-7, I-2)
aux(idea-7, had-3)
neg(idea-7, n't-4)
neg(more-6, no-5)
advmod(idea-7, more-6)
root(ROOT-0, idea-7)
nsubj(do-10, I-8)
aux(do-10, could-9)
ccomp(idea-7, do-10)
predet(thing-13, such-11)
det(thing-13, a-12)
dobj(do-10, thing-13)
nsubj(thinking-20, war-16)
nsubj(trying-24, war-16)
neg(thinking-20, n't-17)
dep(more-19, any-18)
advmod(thinking-20, more-19)
conj_and(idea-7, thinking-20)
dep(thinking-20, about-21)
dobj(thinking-20, it-22)
conj_and(idea-7, trying-24)
conj_or(thinking-20, trying-24)
prep(trying-24, to-25)
mark(minute-31, than-27)
nsubj(minute-31, you-28)
cop(minute-31, be-29)
det(minute-31, this-30)
advcl(trying-24, minute-31)

(ROOT
  (S
    (S
      (INTJ (WRB Why))
      (, ,)
      (NP (PRP I))
      (VP (VBD was)
        (SBAR (RB just) (IN as)
          (S
            (VP (MD ca)
              (VP (VBP 'm)))))))
    (PRN (, ,)
      (S
        (NP (DT a) (NN body))
        (VP (MD could) (RB n't)
          (VP (VB be)
            (NP
              (NP (DT any))
              (SBAR
                (S
                  (VP (MD ca) (`` `)
                    (VP (VB mer)))))))))
      (, ,))
    (CC and)
    (ADVP (RB yet))
    (, ,)
    (S
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (DT a) (JJ sudden)))))
    (, ,)
    (S
      (ADVP (RB out))
      (NP (PRP it))
      (VP (VBP come)))
    (. .)))

discourse(was-4, Why-1)
nsubj(was-4, I-3)
root(ROOT-0, was-4)
advmod('m-8, just-5)
mark('m-8, as-6)
aux('m-8, ca-7)
advcl(was-4, 'm-8)
det(body-11, a-10)
nsubj(any-15, body-11)
aux(any-15, could-12)
neg(any-15, n't-13)
cop(any-15, be-14)
dep(was-4, any-15)
aux(mer-18, ca-16)
rcmod(any-15, mer-18)
advmod(was-4, yet-21)
conj_and(was-4, yet-21)
ccomp(was-4, all-23)
det(sudden-26, a-25)
prep_of(all-23, sudden-26)
advmod(come-30, out-28)
nsubj(come-30, it-29)
parataxis(was-4, come-30)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB often))
        (VP (VBN thought)
          (WHPP (IN of)
            (WHNP (WDT that) (NN time))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB remember)
          (SBAR (RB just)
            (S
              (NP (DT the) (NN way) (NN everything))
              (VP (VBD looked) (, ,)
                (S
                  (ADJP (JJ same))
                  (SBAR (RB as) (IN if)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (NP (RB only) (JJ last) (NN week))))))))))))
    (. .)))

nsubj(thought-4, I-1)
aux(thought-4, 've-2)
advmod(thought-4, often-3)
root(ROOT-0, thought-4)
det(time-7, that-6)
prep_of(thought-4, time-7)
nsubj(remember-12, I-10)
aux(remember-12, can-11)
conj_and(thought-4, remember-12)
advmod(looked-17, just-13)
det(everything-16, the-14)
nn(everything-16, way-15)
nsubj(looked-17, everything-16)
ccomp(remember-12, looked-17)
dep(week-26, same-19)
advmod(week-26, as-20)
mark(week-26, if-21)
nsubj(week-26, it-22)
cop(week-26, was-23)
advmod(week-26, only-24)
amod(week-26, last-25)
dep(looked-17, week-26)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB see)
          (NP
            (NP
              (NP
                (NP
                  (NP (PRP it))
                  (NP (DT all)))
                (: :)
                (NP
                  (NP (JJ beautiful) (VBG rolling) (NN country))
                  (PP (IN with)
                    (NP (NNS woods)
                      (CC and)
                      (NNS fields))))
                (CC and)
                (NP
                  (NP (NNS lakes))
                  (PP (IN for)
                    (NP
                      (NP (NNS hundreds)
                        (CC and)
                        (NNS hundreds))
                      (PP (IN of)
                        (NP
                          (NP (NNS miles))
                          (ADVP (DT all) (IN around))))))))
              (, ,)
              (CC and)
              (NP
                (NP (NNS towns)
                  (CC and)
                  (NNS villages))
                (VP (VBN scattered)
                  (NP (NNS everywheres))
                  (PP (IN under)
                    (NP (PRP us)))
                  (, ,)
                  (ADVP (RB here)))))
            (CC and)
            (NP
              (NP (RB there))
              (CC and)
              (NP (NN yonder)))
            (: ;)
            (CC and)
            (NP
              (NP (DT the) (NN professor))
              (VP (VBG mooning)
                (PP (IN over)
                  (NP
                    (NP (DT a) (NN chart))
                    (PP (IN on)
                      (NP (PRP$ his) (JJ little) (NN table)))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Tom) (POS 's))
        (NN cap))
      (VP (VBG flopping)
        (PP (IN in)
          (NP
            (NP (DT the) (NN rigging))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBN hung)
                    (PRT (RP up))
                    (S
                      (VP (TO to)
                        (VP (VB dry))))))))))))
    (. .)))

nsubj(see-3, I-1)
aux(see-3, can-2)
root(ROOT-0, see-3)
dobj(see-3, it-4)
det(it-4, all-5)
amod(country-9, beautiful-7)
amod(country-9, rolling-8)
dobj(see-3, country-9)
conj_and(it-4, country-9)
prep_with(country-9, woods-11)
prep_with(country-9, fields-13)
conj_and(woods-11, fields-13)
dobj(see-3, lakes-15)
conj_and(it-4, lakes-15)
prep_for(lakes-15, hundreds-17)
prep_for(lakes-15, hundreds-19)
conj_and(hundreds-17, hundreds-19)
prep_of(hundreds-17, miles-21)
dep(around-23, all-22)
advmod(miles-21, around-23)
dobj(see-3, towns-26)
conj_and(it-4, towns-26)
conj_and(it-4, villages-28)
conj_and(towns-26, villages-28)
vmod(towns-26, scattered-29)
dobj(scattered-29, everywheres-30)
prep_under(scattered-29, us-32)
advmod(scattered-29, here-34)
dobj(see-3, there-36)
conj_and(it-4, there-36)
conj_and(it-4, yonder-38)
conj_and(there-36, yonder-38)
det(professor-42, the-41)
dobj(see-3, professor-42)
conj_and(it-4, professor-42)
vmod(professor-42, mooning-43)
det(chart-46, a-45)
prep_over(mooning-43, chart-46)
poss(table-50, his-48)
amod(table-50, little-49)
prep_on(chart-46, table-50)
poss(cap-55, Tom-53)
nsubj(flopping-56, cap-55)
conj_and(see-3, flopping-56)
det(rigging-59, the-58)
prep_in(flopping-56, rigging-59)
advmod(hung-63, where-60)
nsubjpass(hung-63, it-61)
nsubj(dry-66, it-61)
auxpass(hung-63, was-62)
rcmod(rigging-59, hung-63)
prt(hung-63, up-64)
aux(dry-66, to-65)
xcomp(hung-63, dry-66)

(ROOT
  (S (CC And)
    (S
      (NP
        (NP (CD one) (NN thing))
        (PP (IN in)
          (NP (NN particular))))
      (VP (VBD was)
        (PP
          (ADVP
            (NP (DT a) (NN bird))
            (RB right))
          (IN alongside) (, ,)
          (ADVP
            (NP (RB not) (CD ten) (NN foot))
            (RB off))
          (, ,))
        (S
          (VP
            (VP (VBG going)
              (NP (PRP$ our) (NN way)))
            (CC and)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (PRT (RP up))))))))))
    (, ,)
    (CC but)
    (S
      (VP (VBG losing)
        (NP (NN ground))
        (NP (PDT all) (DT the) (NN time))))
    (: ;)
    (CC and)
    (S
      (NP (DT a) (NN railroad))
      (VP (VBP train)
        (S
          (VP
            (VP (VBG doing)
              (NP (DT the) (JJ same) (NN thing))
              (ADVP (RB down) (RB there)))
            (, ,)
            (VP (VBG sliding)
              (PP (IN among)
                (NP (DT the) (NNS trees)
                  (CC and)
                  (NNS farms))))
            (, ,)
            (CC and)
            (VP (VBG pouring)
              (PP (IN out)
                (NP
                  (NP
                    (NP (DT a) (JJ long) (NN cloud))
                    (PP (IN of)
                      (NP (JJ black) (NN smoke))))
                  (CC and)
                  (ADVP (RB now)
                    (CC and)
                    (RB then))
                  (NP
                    (NP (DT a) (JJ little) (NN puff))
                    (PP (IN of)
                      (NP (JJ white)))))))))))
    (: ;)
    (CC and)
    (S
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (JJ white))
            (VP (VBD was)
              (VP (VBN gone)
                (ADVP (RB so) (RB long)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBD had)
                        (ADVP (RB almost))
                        (VP (VBN forgot)
                          (NP (PRP it)))))))))))
        (, ,)
        (NP (PRP you))
        (VP (MD would)
          (VP (VB hear)
            (NP (DT a)
              (ADJP (RB little) (JJ faint))
              (NN toot)))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBD was)
          (NP (DT the) (NN whistle)))))
    (. .)))

num(thing-3, one-2)
nsubj(was-6, thing-3)
nsubj(losing-27, thing-3)
prep_in(thing-3, particular-5)
root(ROOT-0, was-6)
det(bird-8, a-7)
npadvmod(right-9, bird-8)
advmod(alongside-10, right-9)
prep(was-6, alongside-10)
neg(foot-14, not-12)
num(foot-14, ten-13)
npadvmod(off-15, foot-14)
dep(alongside-10, off-15)
ccomp(was-6, going-17)
poss(way-19, our-18)
dobj(going-17, way-19)
ccomp(was-6, trying-21)
conj_and(going-17, trying-21)
aux(keep-23, to-22)
xcomp(trying-21, keep-23)
prt(keep-23, up-24)
conj_but(was-6, losing-27)
iobj(losing-27, ground-28)
predet(time-31, all-29)
det(time-31, the-30)
dobj(losing-27, time-31)
det(railroad-35, a-34)
nsubj(train-36, railroad-35)
conj_and(was-6, train-36)
ccomp(train-36, doing-37)
det(thing-40, the-38)
amod(thing-40, same-39)
dobj(doing-37, thing-40)
advmod(there-42, down-41)
advmod(doing-37, there-42)
ccomp(train-36, sliding-44)
conj_and(doing-37, sliding-44)
det(trees-47, the-46)
prep_among(sliding-44, trees-47)
prep_among(sliding-44, farms-49)
conj_and(trees-47, farms-49)
ccomp(train-36, pouring-52)
conj_and(doing-37, pouring-52)
det(cloud-56, a-54)
amod(cloud-56, long-55)
prep_out(pouring-52, cloud-56)
amod(smoke-59, black-58)
prep_of(cloud-56, smoke-59)
prep_out(pouring-52, now-61)
advmod(cloud-56, now-61)
conj_and(cloud-56, now-61)
advmod(cloud-56, then-63)
conj_and(cloud-56, then-63)
conj_and(now-61, then-63)
det(puff-66, a-64)
amod(puff-66, little-65)
prep_out(pouring-52, puff-66)
conj_and(cloud-56, puff-66)
prep_of(puff-66, white-68)
advmod(gone-75, when-71)
det(white-73, the-72)
nsubjpass(gone-75, white-73)
auxpass(gone-75, was-74)
advcl(hear-86, gone-75)
advmod(long-77, so-76)
advmod(gone-75, long-77)
nsubj(forgot-81, you-78)
aux(forgot-81, had-79)
advmod(forgot-81, almost-80)
dep(long-77, forgot-81)
dobj(forgot-81, it-82)
nsubj(hear-86, you-84)
aux(hear-86, would-85)
conj_and(was-6, hear-86)
det(toot-90, a-87)
advmod(faint-89, little-88)
amod(toot-90, faint-89)
dobj(hear-86, toot-90)
nsubj(whistle-96, that-93)
cop(whistle-96, was-94)
det(whistle-96, the-95)
conj_and(was-6, whistle-96)
conj_and(hear-86, whistle-96)

(ROOT
  (S (CC And)
    (NP (PRP we))
    (VP
      (VP (VBD left)
        (NP
          (NP (DT the) (NN bird))
          (CC and)
          (NP (DT the) (NN train)))
        (PP (DT both) (IN behind))
        (, ,)
        (S
          (VP (`` `) (VB WAY)
            (ADVP (RB behind))))
        (, ,))
      (CC and)
      (VP (VBN done)
        (NP (PRP it))
        (ADVP (RB easy))
        (, ,)
        (ADVP (RB too))))
    (. .)))

nsubj(left-3, we-2)
nsubj(done-17, we-2)
root(ROOT-0, left-3)
det(bird-5, the-4)
dobj(left-3, bird-5)
det(train-8, the-7)
dobj(left-3, train-8)
conj_and(bird-5, train-8)
dep(behind-10, both-9)
prep(left-3, behind-10)
dep(left-3, WAY-13)
advmod(WAY-13, behind-14)
conj_and(left-3, done-17)
dobj(done-17, it-18)
advmod(done-17, easy-19)
advmod(done-17, too-21)

(ROOT
  (S
    (S (CC But)
      (S
        (NP (NNP Tom) (PRP he))
        (VP
          (VP (VBD was)
            (ADVP (RB huffy)))
          (, ,)
          (CC and)
          (VP (VBD said)
            (NP (PRP me)))))
      (CC and)
      (S
        (S
          (NP (NNP Jim))
          (VP (VBD was)
            (NP
              (NP (DT a) (NN couple))
              (PP (IN of)
                (NP (JJ ignorant) (NNS blatherskites))))))
        (, ,)
        (CC and)
        (RB then)
        (S
          (NP (PRP he))
          (VP (VBZ says) (: :) (`` ``)
            (S
              (VP (VB Suppose)
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBZ 's)
                      (NP
                        (NP (DT a) (JJ brown) (NN calf))
                        (CC and)
                        (NP (DT a) (JJ big) (JJ brown) (NN dog))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT an) (NN artist))
      (VP (VBZ is)
        (VP (VBG making)
          (NP
            (NP (DT a) (NN picture))
            (PP (IN of)
              (NP (PRP them)))))))
    (. .)))

nsubj(was-4, Tom-2)
nsubj(said-8, Tom-2)
dep(Tom-2, he-3)
root(ROOT-0, was-4)
advmod(was-4, huffy-5)
conj_and(was-4, said-8)
dobj(said-8, me-9)
nsubj(couple-14, Jim-11)
cop(couple-14, was-12)
det(couple-14, a-13)
conj_and(was-4, couple-14)
amod(blatherskites-17, ignorant-16)
prep_of(couple-14, blatherskites-17)
advmod(says-22, then-20)
nsubj(says-22, he-21)
conj_and(was-4, says-22)
conj_and(couple-14, says-22)
ccomp(says-22, Suppose-25)
expl('s-27, there-26)
ccomp(Suppose-25, 's-27)
det(calf-30, a-28)
amod(calf-30, brown-29)
nsubj('s-27, calf-30)
det(dog-35, a-32)
amod(dog-35, big-33)
amod(dog-35, brown-34)
nsubj('s-27, dog-35)
conj_and(calf-30, dog-35)
det(artist-39, an-38)
nsubj(making-41, artist-39)
aux(making-41, is-40)
conj_and(was-4, making-41)
det(picture-43, a-42)
dobj(making-41, picture-43)
prep_of(picture-43, them-45)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NNP MAIN) (NN thing))
        (SBAR (IN that)
          (S
            (NP (DT that) (NN artist))
            (VP (VBZ has)
              (VP (VBN got)
                (S
                  (VP (TO to)
                    (VP (VB do))))))))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(thing-5, the-3)
nn(thing-5, MAIN-4)
nsubj(What-1, thing-5)
mark(got-10, that-6)
det(artist-8, that-7)
nsubj(got-10, artist-8)
nsubj(do-12, artist-8)
aux(got-10, has-9)
dep(thing-5, got-10)
aux(do-12, to-11)
xcomp(got-10, do-12)

(ROOT
  (SINV
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB paint)
                (NP (PRP them))
                (SBAR (IN so)
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (VP (VB tell)
                        (NP (PRP them))
                        (PRT (RP apart))
                        (NP (DT the) (NN minute)))))))))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP look)
                (PP (IN at)
                  (NP (PRP them)))))))))
    (, ,)
    (VP (VBP hai) (RB n't))
    (NP (PRP he))
    (. ?)))

nsubj(got-3, He-1)
nsubj(paint-5, He-1)
aux(got-3, has-2)
ccomp(hai-20, got-3)
aux(paint-5, to-4)
xcomp(got-3, paint-5)
dobj(paint-5, them-6)
mark(tell-10, so-7)
nsubj(tell-10, you-8)
aux(tell-10, can-9)
advcl(paint-5, tell-10)
dobj(tell-10, them-11)
prt(tell-10, apart-12)
det(minute-14, the-13)
dobj(tell-10, minute-14)
nsubj(look-16, you-15)
ccomp(got-3, look-16)
prep_at(look-16, them-18)
root(ROOT-0, hai-20)
neg(hai-20, n't-21)
nsubj(hai-20, he-22)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course)))
    (. .)))

root(ROOT-0, Of-1)
pobj(Of-1, course-2)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (NP (PRP him))
              (VP (TO to)
                (VP (VB go)
                  (CC and)
                  (VB paint)
                  (NP
                    (ADJP (JJ BOTH)
                      (PP (IN of)
                        (NP (PRP them))))
                    (JJ brown)))))))))
    (. ?)))

discourse(do-5, Well-1)
advmod(do-5, then-3)
root(ROOT-0, do-5)
nsubj(want-7, you-6)
ccomp(do-5, want-7)
dobj(want-7, him-8)
nsubj(go-10, him-8)
nsubj(paint-12, him-8)
aux(go-10, to-9)
xcomp(want-7, go-10)
xcomp(want-7, paint-12)
conj_and(go-10, paint-12)
dobj(go-10, BOTH-13)
prep_of(BOTH-13, them-15)
amod(BOTH-13, brown-16)

(ROOT
  (S
    (ADVP (RB Certainly))
    (NP (PRP you))
    (VP (VBP do) (RB n't))
    (. .)))

advmod(do-3, Certainly-1)
nsubj(do-3, you-2)
root(ROOT-0, do-3)
neg(do-3, n't-4)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ paints)
        (S
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (PRP them))))
          (ADJP (JJ blue)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB make)
          (NP (DT no) (NN mistake)))))
    (. .)))

nsubj(paints-2, He-1)
root(ROOT-0, paints-2)
nsubj(blue-6, one-3)
prep_of(one-3, them-5)
xcomp(paints-2, blue-6)
advmod(make-13, then-9)
nsubj(make-13, you-10)
aux(make-13, ca-11)
neg(make-13, n't-12)
conj_and(paints-2, make-13)
neg(mistake-15, no-14)
dobj(make-13, mistake-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (RB just) (DT the) (JJ same))
        (PP (IN with)
          (NP (DT the) (NNS maps)))))
    (. .)))

nsubj(same-5, It-1)
cop(same-5, 's-2)
advmod(same-5, just-3)
det(same-5, the-4)
root(ROOT-0, same-5)
det(maps-8, the-7)
prep_with(same-5, maps-8)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP they))
            (VP (VBP make)
              (NP
                (NP
                  (NP (DT every) (NN State))
                  (NP (DT a) (JJ different) (NN color)))
                (: ;)
                (S
                  (NP (PRP it))
                  (VP (VBZ ai) (RB n't)
                    (S
                      (VP (TO to)
                        (VP (VB deceive)
                          (NP (PRP you)))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (S
        (VP (TO to)
          (VP (VB keep)
            (NP (PRP you))
            (PP (IN from)
              (S
                (VP (VBG deceiving)
                  (NP (PRP yourself)))))))))
    (. .) ('' '')))

nsubj('s-2, That-1)
ccomp('s-20, 's-2)
advmod(make-5, why-3)
nsubj(make-5, they-4)
advcl('s-2, make-5)
det(State-7, every-6)
dobj(make-5, State-7)
det(color-10, a-8)
amod(color-10, different-9)
dep(State-7, color-10)
nsubj(ai-13, it-12)
nsubj(deceive-16, it-12)
dep(State-7, ai-13)
neg(ai-13, n't-14)
aux(deceive-16, to-15)
xcomp(ai-13, deceive-16)
dobj(deceive-16, you-17)
nsubj('s-20, it-19)
nsubj(keep-22, it-19)
root(ROOT-0, 's-20)
aux(keep-22, to-21)
xcomp('s-20, keep-22)
dobj(keep-22, you-23)
prepc_from(keep-22, deceiving-25)
dobj(deceiving-25, yourself-26)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB see)
          (NP (DT no) (NN argument))
          (PP (IN about)
            (NP (DT that))))))
    (, ,)
    (CC and)
    (S
      (NP (DT neither))
      (VP (MD could)
        (VP (VB Jim))))
    (. .)))

nsubj(see-5, I-2)
aux(see-5, could-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
neg(argument-7, no-6)
dobj(see-5, argument-7)
prep_about(see-5, that-9)
nsubj(Jim-14, neither-12)
aux(Jim-14, could-13)
conj_and(see-5, Jim-14)

(ROOT
  (S
    (NP (NNP Jim))
    (VP
      (VP (VBD shook)
        (NP (PRP$ his) (NN head)))
      (, ,)
      (CC and)
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (WRB Why))
          (, ,)
          (NP (NNP Mars) (NNP Tom))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBD knowed)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (JJ chuckle-heads) (NN dem) (NNS painters))
                    (VP (VBZ is)))))))
          (, ,)
          (NP (PRP you))
          (VP (MD 'd)
            (VP (VB wait)
              (NP (DT a) (JJ long) (NN time))
              (SBAR (IN before)
                (S
                  (NP (PRP you))
                  (VP (MD 'd)
                    (VP (VB fetch)
                      (NP (CD one) (NN er) (NN DEM))
                      (PRT (RP in))
                      (S
                        (VP (TO to)
                          (VP (VB back)
                            (PRT (RP up))
                            (NP (DT a) (NN fac) ('' '))))))))))))))
    (. .)))

nsubj(shook-2, Jim-1)
nsubj(says-7, Jim-1)
root(ROOT-0, shook-2)
poss(head-4, his-3)
dobj(shook-2, head-4)
conj_and(shook-2, says-7)
discourse(wait-26, Why-10)
nn(Tom-13, Mars-12)
nsubj(wait-26, Tom-13)
mark(knowed-17, if-15)
nsubj(knowed-17, you-16)
advcl(wait-26, knowed-17)
dobj(is-22, what-18)
amod(painters-21, chuckle-heads-19)
nn(painters-21, dem-20)
nsubj(is-22, painters-21)
ccomp(knowed-17, is-22)
nsubj(wait-26, you-24)
aux(wait-26, 'd-25)
ccomp(says-7, wait-26)
det(time-29, a-27)
amod(time-29, long-28)
dobj(wait-26, time-29)
mark(fetch-33, before-30)
nsubj(fetch-33, you-31)
aux(fetch-33, 'd-32)
advcl(wait-26, fetch-33)
num(DEM-36, one-34)
nn(DEM-36, er-35)
dobj(fetch-33, DEM-36)
prt(fetch-33, in-37)
aux(back-39, to-38)
vmod(fetch-33, back-39)
prt(back-39, up-40)
det(fac-42, a-41)
dobj(back-39, fac-42)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ 's)
        (ADJP (JJ gwine)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP you))))))))
    (, ,)
    (NP (NN den) (NN you) (NN kin))
    (VP (VBP see)
      (SBAR (IN for)
        (S
          (NP (PRP you))
          (`` `)
          (VP (VBZ self)))))
    (. .)))

nsubj(gwine-3, I-1)
nsubj(tell-5, I-1)
cop(gwine-3, 's-2)
ccomp(see-11, gwine-3)
aux(tell-5, to-4)
xcomp(gwine-3, tell-5)
dobj(tell-5, you-6)
nn(kin-10, den-8)
nn(kin-10, you-9)
nsubj(see-11, kin-10)
root(ROOT-0, see-11)
mark(self-15, for-12)
nsubj(self-15, you-13)
advcl(see-11, self-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP see)
        (SBAR
          (S
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (JJ 'em) (NN a-paintin))
                  ('' ')
                  (SBAR
                    (S
                      (ADVP (RB away))
                      (, ,)
                      (NP
                        (NP (CD one) (NN day))
                        (, ,)
                        (ADVP (RB down)
                          (PP (IN in)
                            (NP (NN ole))))
                        (NP
                          (NP (NNP Hank) (NNP Wilson) (POS 's))
                          (JJ back) (NN lot))
                        (, ,))
                      (VP (VBD en)
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (VBD went)
                              (PRT (RP down))
                              (S
                                (VP (TO to)
                                  (VP (VB see))))))))))
                  (, ,)
                  (PP (IN en)
                    (NP (PRP he))))))
            (VP (VBD was)
              (NP
                (NP
                  (NP
                    (NP (NN paintin) (POS '))
                    (NN dat))
                  (NP (JJ old) (JJ brindle) (NN cow) (NN wid)))
                (IN de)
                (NP
                  (NP (JJ near) (NN horn))
                  (VP (VBN gone)))))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (VBZ knows)
        (NP
          (NP (NNP de) (CD one))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBZ means)))))))
    (. .)))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
nsubj(dat-34, one-3)
amod(a-paintin-6, 'em-5)
prep_of(one-3, a-paintin-6)
advmod(en-22, away-8)
num(day-11, one-10)
nsubj(en-22, day-11)
advmod(day-11, down-13)
prep_in(down-13, ole-15)
nn(Wilson-17, Hank-16)
poss(lot-20, Wilson-17)
amod(lot-20, back-19)
dep(day-11, lot-20)
rcmod(a-paintin-6, en-22)
nsubj(went-24, I-23)
nsubj(see-27, I-23)
ccomp(en-22, went-24)
prt(went-24, down-25)
aux(see-27, to-26)
xcomp(went-24, see-27)
prep_en(a-paintin-6, he-30)
cop(dat-34, was-31)
poss(dat-34, paintin-32)
ccomp(see-2, dat-34)
amod(wid-38, old-35)
amod(wid-38, brindle-36)
nn(wid-38, cow-37)
dep(dat-34, wid-38)
amod(dat-34, de-39)
amod(horn-41, near-40)
dep(dat-34, horn-41)
vmod(horn-41, gone-42)
nsubj(knows-45, you-44)
parataxis(see-2, knows-45)
dobj(knows-45, de-46)
num(de-46, one-47)
nsubj(means-49, I-48)
rcmod(de-46, means-49)

(ROOT
  (S
    (S
      (VP (VB En)
        (S
          (NP (PRP I))
          (VP (VB ast)
            (NP (PRP him))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBZ 's)
                  (VP (VBN paintin) ('' ')
                    (NP (PRP her))
                    (PP (IN for))
                    (, ,)
                    (PP (IN en)
                      (S
                        (NP (PRP he))
                        (VP (VBP say)
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP he))
                              (VP (VBP git)
                                (SBAR
                                  (S
                                    (NP (PRP her))
                                    (VP (VBD painted))))))))))))))))))
    (, ,)
    (NP (IN de) (NN picture))
    (VP (VBZ 's)
      (ADVP (RB wuth))
      (NP (DT a) (CD hundred) (NNS dollars)))
    (. .)))

ccomp(dollars-28, En-1)
nsubj(ast-3, I-2)
ccomp(En-1, ast-3)
dobj(ast-3, him-4)
prep_for(paintin-8, what-5)
nsubjpass(paintin-8, he-6)
auxpass(paintin-8, 's-7)
dep(ast-3, paintin-8)
dobj(paintin-8, her-10)
nsubj(say-15, he-14)
prepc_en(paintin-8, say-15)
advmod(git-18, when-16)
nsubj(git-18, he-17)
advcl(say-15, git-18)
nsubj(painted-20, her-19)
ccomp(git-18, painted-20)
amod(picture-23, de-22)
nsubj(dollars-28, picture-23)
cop(dollars-28, 's-24)
advmod(dollars-28, wuth-25)
det(dollars-28, a-26)
num(dollars-28, hundred-27)
root(ROOT-0, dollars-28)

(ROOT
  (S
    (NP (NNP Mars) (NNP Tom))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (MD could) (DT a)
          (VP (VBD got)
            (S
              (NP (IN de) (NN cow) (NN fer))
              (ADJP (JJ fifteen))))))
      (, ,))
    (VP (VBD en)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP tole)
            (NP (PRP him))
            (ADVP (RB so))))))
    (. .)))

nn(Tom-2, Mars-1)
nsubj(en-13, Tom-2)
nsubj(got-7, he-4)
aux(got-7, could-5)
dep(got-7, a-6)
parataxis(en-13, got-7)
amod(fer-10, de-8)
nn(fer-10, cow-9)
nsubj(fifteen-11, fer-10)
xcomp(got-7, fifteen-11)
root(ROOT-0, en-13)
nsubj(tole-15, I-14)
ccomp(en-13, tole-15)
dobj(tole-15, him-16)
advmod(tole-15, so-17)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (ADVP (RB sah))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD 'll)
          (VP (VB b) (`` `)
            (S
              (S
                (ADVP (RB lieve))
                (NP (PRP me)))
              (, ,)
              (S
                (NP (PRP he))
                (ADVP (RB jes))))
            ('' ')
            (S
              (VP (VB shuck)
                (NP (PRP$ his) (NN head))))))))
    (, ,)
    (NP (NN dat) (NN painter))
    (VP
      (VP (VBD did))
      (, ,)
      (ADVP (IN en))
      (VP (VBD went)
        (PP (IN on)
          (NP (NN a-dobbin) (POS ')))))
    (. .)))

discourse(did-22, Well-1)
advmod(did-22, sah-3)
mark(b-8, if-5)
nsubj(b-8, you-6)
aux(b-8, 'll-7)
advcl(did-22, b-8)
advmod(me-11, lieve-10)
dep(b-8, me-11)
parataxis(me-11, he-13)
advmod(he-13, jes-14)
ccomp(b-8, shuck-16)
poss(head-18, his-17)
dobj(shuck-16, head-18)
nn(painter-21, dat-20)
nsubj(did-22, painter-21)
root(ROOT-0, did-22)
advmod(did-22, en-24)
dep(did-22, went-25)
prep_on(went-25, a-dobbin-27)

(ROOT
  (S
    (S
      (VP (VB Bless)
        (NP (PRP you))))
    (, ,)
    (NP (NNP Mars) (NNP Tom) (, ,) (NNP DEY))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (NNP nothin) (POS '))))
    (. .) ('' '')))

ccomp(know-10, Bless-1)
dobj(Bless-1, you-2)
nn(DEY-7, Mars-4)
nn(DEY-7, Tom-5)
nsubj(know-10, DEY-7)
aux(know-10, do-8)
neg(know-10, n't-9)
root(ROOT-0, know-10)
dobj(know-10, nothin-11)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD lost)
      (NP (PRP$ his) (NN temper)))
    (. .)))

nsubj(lost-2, Tom-1)
root(ROOT-0, lost-2)
poss(temper-4, his-3)
dobj(lost-2, temper-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP notice)
      (SBAR
        (S
          (NP (DT a) (NN person))
          (`` `)
          (ADVP (RBS most) (RB always))
          (VP (VBZ does)
            (SBAR (IN that)
              (S
                (NP (PRP 's))
                (VP (VBD got)
                  (VP (VBN laid)
                    (PRT (RP out))
                    (PP (IN in)
                      (NP (DT an) (NN argument)))))))))))
    (. .)))

nsubj(notice-2, I-1)
root(ROOT-0, notice-2)
det(person-4, a-3)
nsubj(does-8, person-4)
advmod(always-7, most-6)
advmod(does-8, always-7)
ccomp(notice-2, does-8)
mark(laid-12, that-9)
nsubjpass(laid-12, 's-10)
auxpass(laid-12, got-11)
ccomp(does-8, laid-12)
prt(laid-12, out-13)
det(argument-16, an-15)
prep_in(laid-12, argument-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD told)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB shut)
              (PRT (RP up)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB maybe))
      (NP (PRP we))
      (VP (MD 'd)
        (VP (VB feel)
          (ADVP (RBR better)))))
    (. .)))

nsubj(told-2, He-1)
root(ROOT-0, told-2)
dobj(told-2, us-3)
nsubj(shut-5, us-3)
aux(shut-5, to-4)
xcomp(told-2, shut-5)
prt(shut-5, up-6)
advmod(feel-12, maybe-9)
nsubj(feel-12, we-10)
aux(feel-12, 'd-11)
conj_and(told-2, feel-12)
advmod(feel-12, better-13)

(ROOT
  (S (RB Then)
    (S
      (S
        (NP (PRP he))
        (VP (VBP see)
          (NP (DT a) (NN town) (NN clock))
          (ADVP (RB away) (RB off) (RB down))
          (ADVP (RB yonder))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP
          (VP
            (VP (VBD took)
              (PRT (RP up))
              (NP (DT the) (NN glass)))
            (CC and)
            (VP (VBD looked)
              (PP (IN at)
                (NP (PRP it))))
            (, ,)
            (CC and)
            (ADVP (RB then))
            (VP (VBD looked)
              (PP
                (PP (IN at)
                  (NP (PRP$ his) (JJ silver) (NN turnip)))
                (, ,)
                (CC and)
                (ADVP (RB then))
                (PP (IN at)
                  (NP (DT the) (NN clock)))
                (, ,)
                (CC and)
                (RB then)
                (PP (IN at)
                  (NP (DT the) (NN turnip))))
              (ADVP (RB again))))
          (, ,)
          (CC and)
          (VP (VBZ says)))))
    (: :) (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ funny))))
    (. !)))

advmod(see-3, Then-1)
nsubj(see-3, he-2)
root(ROOT-0, see-3)
det(clock-6, a-4)
nn(clock-6, town-5)
dobj(see-3, clock-6)
advmod(down-9, away-7)
advmod(down-9, off-8)
advmod(see-3, down-9)
advmod(see-3, yonder-10)
nsubj(took-14, he-13)
nsubj(looked-19, he-13)
nsubj(looked-25, he-13)
nsubj(says-45, he-13)
conj_and(see-3, took-14)
prt(took-14, up-15)
det(glass-17, the-16)
dobj(took-14, glass-17)
conj_and(see-3, looked-19)
conj_and(took-14, looked-19)
prep_at(looked-19, it-21)
advmod(looked-25, then-24)
conj_and(see-3, looked-25)
conj_and(took-14, looked-25)
poss(turnip-29, his-27)
amod(turnip-29, silver-28)
prep_at(looked-25, turnip-29)
cc(looked-25, and-31)
advmod(looked-25, then-32)
det(clock-35, the-34)
prep_at(looked-25, clock-35)
conj_and(turnip-29, clock-35)
advmod(looked-25, then-38)
det(turnip-41, the-40)
prep_at(looked-25, turnip-41)
conj_and(turnip-29, turnip-41)
advmod(looked-25, again-42)
conj_and(see-3, says-45)
conj_and(took-14, says-45)
nsubj(funny-50, That-48)
cop(funny-50, 's-49)
parataxis(see-3, funny-50)

(ROOT
  (S
    (NP (DT That) (NN clock))
    (VP (VBZ 's)
      (PP (IN near)
        (NP
          (QP (RB about) (DT an) (NN hour)))
        (ADVP (RB fast))))
    (. .) ('' '')))

det(clock-2, That-1)
nsubj('s-3, clock-2)
root(ROOT-0, 's-3)
quantmod(hour-7, about-5)
quantmod(hour-7, an-6)
prep_near('s-3, hour-7)
advmod('s-3, fast-8)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD put)
      (PRT (RP up))
      (NP (PRP$ his) (NN turnip)))
    (. .)))

dep(put-3, So-1)
nsubj(put-3, he-2)
root(ROOT-0, put-3)
prt(put-3, up-4)
poss(turnip-6, his-5)
dobj(put-3, turnip-6)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP
        (VP (VBP see)
          (NP (DT another) (NN clock)))
        (, ,)
        (CC and)
        (VP (VBD took)
          (NP (DT a) (NN look)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT an) (NN hour))
        (ADVP (RB fast) (RB too))))
    (. .)))

advmod(see-3, Then-1)
nsubj(see-3, he-2)
nsubj(took-8, he-2)
root(ROOT-0, see-3)
det(clock-5, another-4)
dobj(see-3, clock-5)
conj_and(see-3, took-8)
det(look-10, a-9)
dobj(took-8, look-10)
nsubj(hour-16, it-13)
cop(hour-16, was-14)
det(hour-16, an-15)
conj_and(see-3, hour-16)
advmod(too-18, fast-17)
advmod(hour-16, too-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD puzzled)
      (NP (PRP him)))
    (. .)))

nsubj(puzzled-2, That-1)
root(ROOT-0, puzzled-2)
dobj(puzzled-2, him-3)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP (DT a) (JJ mighty) (JJ curious) (NN thing))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBZ says))
    (. .)))

nsubj(thing-7, That-2)
cop(thing-7, 's-3)
det(thing-7, a-4)
amod(thing-7, mighty-5)
amod(thing-7, curious-6)
ccomp(says-11, thing-7)
nsubj(says-11, he-10)
root(ROOT-0, says-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB understand)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(understand-5, I-2)
aux(understand-5, do-3)
neg(understand-5, n't-4)
root(ROOT-0, understand-5)
dobj(understand-5, it-6)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP
        (VP (VBD took)
          (NP (DT the) (NN glass)))
        (CC and)
        (VP (VBN hunted)
          (PRT (RP up))
          (NP (DT another) (NN clock)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB sure) (RB enough))
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT an) (NN hour))
        (ADVP (RB fast) (RB too))))
    (. .)))

advmod(took-3, Then-1)
nsubj(took-3, he-2)
nsubj(hunted-7, he-2)
root(ROOT-0, took-3)
det(glass-5, the-4)
dobj(took-3, glass-5)
conj_and(took-3, hunted-7)
prt(hunted-7, up-8)
det(clock-10, another-9)
dobj(hunted-7, clock-10)
advmod(enough-14, sure-13)
advmod(hour-18, enough-14)
nsubj(hour-18, it-15)
cop(hour-18, was-16)
det(hour-18, an-17)
conj_and(took-3, hour-18)
advmod(too-20, fast-19)
advmod(hour-18, too-20)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP$ his) (NNS eyes))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB spread))))))
    (CC and)
    (S
      (S
        (NP (PRP$ his) (NN breath)
          (S
            (VP (TO to)
              (VP (VB come)
                (PRT (RP out))
                (NP (JJR kinder) (NN gaspy))))))
        (VP (VBP like)))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBZ says) (: :)
          (S (`` ``)
            (NP (NNP Ger-reat) (NNP Scott))
            (, ,)
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (DT the) (NN LONGITUDE)))))))
    (. !) ('' '')))

advmod(began-4, Then-1)
poss(eyes-3, his-2)
nsubj(began-4, eyes-3)
nsubj(spread-6, eyes-3)
root(ROOT-0, began-4)
aux(spread-6, to-5)
xcomp(began-4, spread-6)
poss(breath-9, his-8)
nsubj(like-15, breath-9)
aux(come-11, to-10)
vmod(breath-9, come-11)
prt(come-11, out-12)
amod(gaspy-14, kinder-13)
dobj(come-11, gaspy-14)
conj_and(began-4, like-15)
nsubj(says-19, he-18)
conj_and(began-4, says-19)
conj_and(like-15, says-19)
nn(Scott-23, Ger-reat-22)
nsubj(LONGITUDE-28, Scott-23)
nsubj(LONGITUDE-28, it-25)
cop(LONGITUDE-28, 's-26)
det(LONGITUDE-28, the-27)
ccomp(says-19, LONGITUDE-28)
parataxis(says-19, LONGITUDE-28)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBZ says))
        (, ,)
        (VP
          (ADVP (RB considerably))
          (JJ scared))))
    (: :) (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (WDT what))
      (VP (VBZ 's)
        (VP
          (VP (VBN been))
          (CC and)
          (VP (VBN gone)
            (CC and)
            (VBN happened)
            (ADVP (RB now))))))
    (. ?) ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
advmod(scared-5, considerably-4)
dep(says-2, scared-5)
discourse(been-12, Well-8)
nsubjpass(been-12, what-10)
nsubjpass(gone-14, what-10)
auxpass(been-12, 's-11)
parataxis(says-2, been-12)
parataxis(says-2, gone-14)
conj_and(been-12, gone-14)
conj_and(been-12, happened-16)
conj_and(gone-14, happened-16)
advmod(gone-14, now-17)

(ROOT
  (S (`` ``)
    (S
      (INTJ (WRB Why))
      (, ,)
      (S
        (NP
          (NP (DT the) (NN thing))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (VP (VBN happened))))))
        (VP (VBZ is)
          (SBAR (IN that)
            (S
              (NP (DT this) (JJ old) (NN bladder))
              (VP (VBZ has)
                (VP (VBN slid)
                  (PP (IN over)
                    (NP (NNP Illinois)
                      (CC and)
                      (NNP Indiana)))))))))
      (CC and)
      (S
        (NP (NNP Ohio))
        (VP (VBP like)
          (NP (NN nothing)))))
    (, ,)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP
            (NP (DT the) (JJ east) (NN end))
            (PP (IN of)
              (NP (NNP Pennsylvania)
                (CC or)
                (NNP New) (NNP York))))
          (, ,)
          (CC or)
          (NP
            (NP (NNS somewheres))
            (PP (IN around)
              (NP (RB there)))))))
    (. .) ('' '')))

discourse(is-9, Why-2)
det(thing-5, the-4)
nsubjpass(happened-8, thing-5)
nsubj(is-9, thing-5)
auxpass(happened-8, 's-7)
rcmod(thing-5, happened-8)
root(ROOT-0, is-9)
mark(slid-15, that-10)
det(bladder-13, this-11)
amod(bladder-13, old-12)
nsubj(slid-15, bladder-13)
aux(slid-15, has-14)
ccomp(is-9, slid-15)
prep_over(slid-15, Illinois-17)
prep_over(slid-15, Indiana-19)
conj_and(Illinois-17, Indiana-19)
nsubj(like-22, Ohio-21)
conj_and(is-9, like-22)
dobj(like-22, nothing-23)
nsubj(end-30, this-26)
cop(end-30, is-27)
det(end-30, the-28)
amod(end-30, east-29)
conj_and(is-9, end-30)
nn(York-35, Pennsylvania-32)
conj_or(Pennsylvania-32, New-34)
nn(York-35, New-34)
prep_of(end-30, York-35)
conj_and(is-9, somewheres-38)
conj_or(end-30, somewheres-38)
prep(somewheres-38, around-39)
pobj(around-39, there-40)

(ROOT
  (S (`` ``)
    (NP (NNP Tom) (NNP Sawyer))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (NP (PRP it))))
    (. !) ('' '')))

nn(Sawyer-3, Tom-2)
nsubj(mean-8, Sawyer-3)
nsubj(mean-8, you-5)
aux(mean-8, do-6)
neg(mean-8, n't-7)
root(ROOT-0, mean-8)
dobj(mean-8, it-9)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (RB dead) (JJ sure))))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
nsubj(sure-11, it-8)
cop(sure-11, 's-9)
advmod(sure-11, dead-10)
conj_and(do-5, sure-11)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN covered)
          (PP (IN about)
            (NP
              (NP (CD fifteen) (NNS degrees))
              (PP (IN of)
                (NP (NN longitude)))))
          (SBAR (IN since)
            (S
              (NP (PRP we))
              (VP (VBD left)
                (NP (NNP St.) (NNP Louis))
                (NP (NN yesterday) (NN afternoon))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP them))
      (VP (VBZ clocks)
        (SBAR
          (S
            (VP (VBP are)
              (ADJP (JJ right)))))))
    (. .)))

nsubj(covered-3, We-1)
aux(covered-3, 've-2)
root(ROOT-0, covered-3)
num(degrees-6, fifteen-5)
prep_about(covered-3, degrees-6)
prep_of(degrees-6, longitude-8)
mark(left-11, since-9)
nsubj(left-11, we-10)
advcl(covered-3, left-11)
nn(Louis-13, St.-12)
iobj(left-11, Louis-13)
nn(afternoon-15, yesterday-14)
dobj(left-11, afternoon-15)
nsubj(clocks-19, them-18)
conj_and(covered-3, clocks-19)
cop(right-21, are-20)
ccomp(clocks-19, right-21)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN come)
        (ADVP (RB close) (RB on))
        (PP (TO to)
          (NP
            (QP (CD eight) (CD hundred))
            (NNS miles)))))
    (. .) ('' '')))

nsubj(come-3, We-1)
aux(come-3, 've-2)
root(ROOT-0, come-3)
advmod(on-5, close-4)
advmod(come-3, on-5)
number(hundred-8, eight-7)
num(miles-9, hundred-8)
prep_to(come-3, miles-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB believe)
          (NP (PRP it)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD made)
        (S
          (NP (DT the) (JJ cold) (NNS streaks))
          (VP (VB trickle)
            (PRT (RP down))
            (NP
              (NP (PRP$ my) (NN back))
              (NP (RB just) (DT the) (JJ same)))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, did-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
dobj(believe-4, it-5)
nsubj(made-9, it-8)
conj_but(believe-4, made-9)
det(streaks-12, the-10)
amod(streaks-12, cold-11)
nsubj(trickle-13, streaks-12)
ccomp(made-9, trickle-13)
prt(trickle-13, down-14)
poss(back-16, my-15)
dobj(trickle-13, back-16)
advmod(same-19, just-17)
det(same-19, the-18)
dep(back-16, same-19)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN experience)))
    (NP (PRP I))
    (VP (VBD knowed)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would) (RB n't)
            (VP (VB take)
              (ADVP (RB much) (RB short))
              (PP (IN of)
                (NP (CD two) (NNS weeks)))
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP (PRP it))
                    (PP (IN down)
                      (NP
                        (NP (DT the) (NNP Mississippi))
                        (PP (IN on)
                          (NP (DT a) (NN raft)))))))))))))
    (. .)))

poss(experience-3, my-2)
prep_in(knowed-5, experience-3)
nsubj(knowed-5, I-4)
root(ROOT-0, knowed-5)
nsubj(take-9, it-6)
nsubj(do-16, it-6)
aux(take-9, would-7)
neg(take-9, n't-8)
ccomp(knowed-5, take-9)
advmod(short-11, much-10)
advmod(take-9, short-11)
num(weeks-14, two-13)
prep_of(take-9, weeks-14)
aux(do-16, to-15)
xcomp(take-9, do-16)
dobj(do-16, it-17)
det(Mississippi-20, the-19)
prep_down(do-16, Mississippi-20)
det(raft-23, a-22)
prep_on(Mississippi-20, raft-23)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD was)
      (VP
        (VP (VBG working)
          (NP (PRP$ his) (NN mind)))
        (CC and)
        (VP (VBG studying))))
    (. .)))

nsubj(working-3, Jim-1)
nsubj(studying-7, Jim-1)
aux(working-3, was-2)
root(ROOT-0, working-3)
poss(mind-5, his-4)
dobj(working-3, mind-5)
conj_and(working-3, studying-7)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Pretty))
        (SBAR
          (S
            (ADVP (RB soon))
            (NP (PRP he))
            (VP (VBZ says)))))
      (: :) (`` ``)
      (NP (NNP Mars) (NNP Tom))
      (, ,))
    (VP (VBD did)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP say)
            (NP (DT dem) (JJ clocks) (NN uz) (NN right))))))
    (. ?) ('' '')))

nsubj(did-10, Pretty-1)
advmod(says-4, soon-2)
nsubj(says-4, he-3)
rcmod(Pretty-1, says-4)
nn(Tom-8, Mars-7)
dep(Pretty-1, Tom-8)
root(ROOT-0, did-10)
nsubj(say-12, you-11)
ccomp(did-10, say-12)
det(right-16, dem-13)
amod(right-16, clocks-14)
nn(right-16, uz-15)
dobj(say-12, right-16)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP they))
    (VP (VBP 're)
      (ADJP (JJ right)))
    (. .) ('' '')))

discourse(right-6, Yes-2)
nsubj(right-6, they-4)
cop(right-6, 're-5)
root(ROOT-0, right-6)

(ROOT
  (S (`` ``)
    (VP (VB Ai) (RB n't)
      (ADVP
        (NP
          (NP (NNP yo) (POS '))
          (NN watch))
        (RB right))
      (, ,)
      (ADVP (RB too)))
    (. ?) ('' '')))

root(ROOT-0, Ai-2)
neg(Ai-2, n't-3)
poss(watch-6, yo-4)
npadvmod(right-7, watch-6)
advmod(Ai-2, right-7)
advmod(Ai-2, too-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP She))
      (VP (VBZ 's)
        (ADJP (JJ right)
          (PP (IN for)
            (NP (NNP St.) (NNP Louis))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBZ 's)
        (ADJP
          (NP (DT an) (NN hour))
          (JJ wrong)
          (PP (IN for)
            (ADVP (RB here))))))
    (. .) ('' '')))

nsubj(right-4, She-2)
cop(right-4, 's-3)
root(ROOT-0, right-4)
nn(Louis-7, St.-6)
prep_for(right-4, Louis-7)
nsubj(wrong-14, she-10)
cop(wrong-14, 's-11)
det(hour-13, an-12)
npadvmod(wrong-14, hour-13)
conj_but(right-4, wrong-14)
prep(wrong-14, for-15)
pcomp(for-15, here-16)
pobj(for-15, here-16)

(ROOT
  (S (`` ``)
    (NP (NNP Mars) (NNP Tom))
    (PRN (, ,)
      (SINV
        (VP (VBZ is)
          (NP (PRP you))
          (S
            (ADJP (JJ tryin) ('' ')
              (S
                (VP (TO to)
                  (VP (VB let)
                    (PP (IN on)
                      (NP (NN dat)))))))))
        (NP (NNP de) (NN time))))
    (VP (VBP ai) (RB n't)
      (NP (IN de) (NN SAME) (NNS everywheres)))
    (. ?) ('' '')))

nn(Tom-3, Mars-2)
nsubj(everywheres-19, Tom-3)
cop(you-6, is-5)
parataxis(everywheres-19, you-6)
dep(you-6, tryin-7)
aux(let-10, to-9)
xcomp(tryin-7, let-10)
prep_on(let-10, dat-12)
nn(time-14, de-13)
nsubj(you-6, time-14)
cop(everywheres-19, ai-15)
neg(everywheres-19, n't-16)
amod(everywheres-19, de-17)
nn(everywheres-19, SAME-18)
root(ROOT-0, everywheres-19)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP it))
    (VP (VBP ai) (RB n't)
      (NP (DT the) (JJ same) (NNS everywheres))
      (, ,)
      (PP (IN by)
        (NP (DT a) (JJ long) (NN shot))))
    (. .) ('' '')))

discourse(everywheres-9, No-2)
nsubj(everywheres-9, it-4)
cop(everywheres-9, ai-5)
neg(everywheres-9, n't-6)
det(everywheres-9, the-7)
amod(everywheres-9, same-8)
root(ROOT-0, everywheres-9)
det(shot-14, a-12)
amod(shot-14, long-13)
prep_by(everywheres-9, shot-14)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP
        (VP (VBD looked)
          (S
            (ADJP (JJ distressed))))
        (, ,)
        (CC and)
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP (PRP It))
            (VP (VBZ grieves)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB hear)
                    (S
                      (NP (PRP you))
                      (VP (VB talk)
                        (PP (IN like)
                          (NP
                            (NP (NN dat))
                            (, ,)
                            (NP (NNP Mars) (NNP Tom))))))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBZ 's)
        (ADVP (RB right) (RB down))
        (ADJP (JJ ashamed)
          (S
            (VP (TO to)
              (VP (VB hear)
                (S
                  (NP (PRP you))
                  (VP (VB talk)
                    (PP (IN like)
                      (NP
                        (NP (NN dat) (, ,) (NN arter) (IN de) (NN way))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBZ 's)
                              (VP (VBN been)
                                (VP (VBN raised))))))))))))))))
    (. .)))

nsubj(looked-2, Jim-1)
nsubj(says-6, Jim-1)
root(ROOT-0, looked-2)
acomp(looked-2, distressed-3)
conj_and(looked-2, says-6)
nsubj(grieves-10, It-9)
ccomp(says-6, grieves-10)
dobj(grieves-10, me-11)
nsubj(hear-13, me-11)
aux(hear-13, to-12)
xcomp(grieves-10, hear-13)
nsubj(talk-15, you-14)
ccomp(hear-13, talk-15)
prep_like(talk-15, dat-17)
nn(Tom-20, Mars-19)
appos(dat-17, Tom-20)
nsubj(ashamed-26, I-22)
nsubj(hear-28, I-22)
cop(ashamed-26, 's-23)
advmod(down-25, right-24)
advmod(ashamed-26, down-25)
parataxis(looked-2, ashamed-26)
aux(hear-28, to-27)
xcomp(ashamed-26, hear-28)
nsubj(talk-30, you-29)
ccomp(hear-28, talk-30)
nn(way-36, dat-32)
dep(way-36, arter-34)
amod(way-36, de-35)
prep_like(talk-30, way-36)
nsubjpass(raised-40, you-37)
auxpass(raised-40, 's-38)
auxpass(raised-40, been-39)
rcmod(way-36, raised-40)

(ROOT
  (S
    (ADVP (RB Yassir))
    (, ,)
    (NP (PRP it))
    (VP (MD 'd)
      (VP (VB break)
        (NP
          (NP
            (NP (NNP yo) (POS '))
            (NNP Aunt) (NNP Polly) (POS 's))
          (NN heart)
          (S
            (VP (TO to)
              (VP (VB hear)
                (NP (PRP you))))))))
    (. .) ('' '')))

advmod(break-5, Yassir-1)
nsubj(break-5, it-3)
aux(break-5, 'd-4)
root(ROOT-0, break-5)
poss(Polly-9, yo-6)
nn(Polly-9, Aunt-8)
poss(heart-11, Polly-9)
dobj(break-5, heart-11)
aux(hear-13, to-12)
vmod(heart-11, hear-13)
dobj(hear-13, you-14)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD was)
      (VP (VBN astonished)))
    (. .)))

nsubjpass(astonished-3, Tom-1)
auxpass(astonished-3, was-2)
root(ROOT-0, astonished-3)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD looked)
          (NP (NNP Jim))
          (PP (IN over)
            (S
              (VP (VBG wondering)))))
        (, ,)
        (CC and)
        (VP (VBD did) (RB n't)
          (VP (VB say)
            (NP (NN nothing))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Jim))
      (VP (VBD went)
        (PP (IN on) (: :)
          (NP (`` ``)
            (NP (NNP Mars) (NNP Tom))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD put)
                  (NP (NNP de) (NNS people))
                  (PP (IN out)
                    (NP (NN yonder)))
                  (PP (IN in)
                    (NP (NNP St.) (NNP Louis))))))))))
    (. ?)))

nsubj(looked-2, He-1)
nsubj(say-10, He-1)
root(ROOT-0, looked-2)
dobj(looked-2, Jim-3)
prepc_over(looked-2, wondering-5)
aux(say-10, did-8)
neg(say-10, n't-9)
conj_and(looked-2, say-10)
dobj(say-10, nothing-11)
nsubj(went-15, Jim-14)
conj_and(looked-2, went-15)
nn(Tom-20, Mars-19)
prep_on(went-15, Tom-20)
nsubj(put-23, Tom-20)
rcmod(Tom-20, put-23)
nn(people-25, de-24)
dobj(put-23, people-25)
prep_out(put-23, yonder-27)
nn(Louis-30, St.-29)
prep_in(put-23, Louis-30)

(ROOT
  (S
    (NP (NNP De) (NNP Lord))
    (VP (VBN done)
      (NP (PRP it)))
    (. .)))

nn(Lord-2, De-1)
nsubj(done-3, Lord-2)
root(ROOT-0, done-3)
dobj(done-3, it-4)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBD put)
        (SBAR
          (S
            (NP (NNP de) (NNS people))
            (ADVP (RB here))
            (VP (VBP whar)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBZ is)))))))))
    (. ?)))

nsubj(put-2, Who-1)
root(ROOT-0, put-2)
nn(people-4, de-3)
nsubj(whar-6, people-4)
advmod(whar-6, here-5)
ccomp(put-2, whar-6)
nsubj(is-8, we-7)
ccomp(whar-6, is-8)

(ROOT
  (S
    (NP (NNP De) (NNP Lord))
    (VP (VBN done)
      (NP (PRP it)))
    (. .)))

nn(Lord-2, De-1)
nsubj(done-3, Lord-2)
root(ROOT-0, done-3)
dobj(done-3, it-4)

(ROOT
  (S
    (NP
      (NP (NNP Ain) (POS '))
      (NN dey))
    (VP (VBP bofe)
      (NP (PRP$ his) (NNS children)))
    (. ?)))

poss(dey-3, Ain-1)
nsubj(bofe-4, dey-3)
root(ROOT-0, bofe-4)
poss(children-6, his-5)
dobj(bofe-4, children-6)

(ROOT
  (S (`` `)
    (NP (NNP Cose) (NNP dey))
    (VP (VBZ is))
    (. .)))

nn(dey-3, Cose-2)
nsubj(is-4, dey-3)
root(ROOT-0, is-4)

(ROOT
  (NP
    (NP (NNP WELL))
    (, ,)
    (NP (NN den))
    (. !)))

root(ROOT-0, WELL-1)
appos(WELL-1, den-3)

(ROOT
  (SQ (VBZ is)
    (NP (PRP he))
    (ADJP (JJ gwine)
      (S
        (VP (TO to)
          (ADVP (RB SCRIMINATE))
          (`` `)
          (VP (VB twixt)
            (NP (PRP 'em))))))
    (. ?) ('' '')))

cop(gwine-3, is-1)
nsubj(gwine-3, he-2)
nsubj(twixt-7, he-2)
root(ROOT-0, gwine-3)
aux(twixt-7, to-4)
advmod(twixt-7, SCRIMINATE-5)
xcomp(gwine-3, twixt-7)
dobj(twixt-7, 'em-8)

(ROOT
  (S (`` ``)
    (VP (VB Scriminate))
    (. !)))

root(ROOT-0, Scriminate-2)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD heard)
      (NP (JJ such) (NN ignorance)))
    (. .)))

nsubj(heard-3, I-1)
neg(heard-3, never-2)
root(ROOT-0, heard-3)
amod(ignorance-5, such-4)
dobj(heard-3, ignorance-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP ai) (RB n't)
      (NP
        (NP (DT no) (NN discriminating))
        (PP (IN about)
          (NP (PRP it)))))
    (. .)))

expl(ai-2, There-1)
root(ROOT-0, ai-2)
neg(ai-2, n't-3)
neg(discriminating-5, no-4)
nsubj(ai-2, discriminating-5)
prep_about(discriminating-5, it-7)

(ROOT
  (SBARQ
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP
          (VP (VBZ makes)
            (S
              (NP
                (NP (PRP you))
                (CC and)
                (NP
                  (NP (DT some) (JJR more))
                  (PP (IN of)
                    (NP (PRP$ his) (NNS children)))))
              (ADJP (JJ black))))
          (, ,)
          (CC and)
          (VP (VBZ makes)
            (S
              (NP
                (NP (DT the) (NN rest))
                (PP (IN of)
                  (NP (PRP us))))
              (ADJP (JJ white)))))))
    (, ,)
    (WHNP (WP what))
    (SQ
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP call)
              (NP (DT that)))))))
    (. ?) ('' '')))

advmod(makes-3, When-1)
nsubj(makes-3, he-2)
nsubj(makes-14, he-2)
dep(do-22, makes-3)
nsubj(black-11, you-4)
det(more-7, some-6)
conj_and(you-4, more-7)
nsubj(black-11, more-7)
poss(children-10, his-9)
prep_of(more-7, children-10)
xcomp(makes-3, black-11)
conj_and(makes-3, makes-14)
dep(do-22, makes-14)
det(rest-16, the-15)
nsubj(white-19, rest-16)
prep_of(rest-16, us-18)
xcomp(makes-14, white-19)
nsubj(do-22, what-21)
root(ROOT-0, do-22)
nsubj(call-24, you-23)
ccomp(do-22, call-24)
dobj(call-24, that-25)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBP see)
      (S
        (NP (DT the) (NN p))
        (`` `)
        (ADJP (JJ int))))
    (. .)))

nsubj(see-2, Jim-1)
root(ROOT-0, see-2)
det(p-4, the-3)
dep(int-6, p-4)
dep(see-2, int-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBN stuck)))
    (. .)))

nsubjpass(stuck-3, He-1)
auxpass(stuck-3, was-2)
root(ROOT-0, stuck-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could) (RB n't)
      (VP (VB answer)))
    (. .)))

nsubj(answer-4, He-1)
aux(answer-4, could-2)
neg(answer-4, n't-3)
root(ROOT-0, answer-4)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (S
            (NP (PRP He))
            (VP (VBZ does)
              (ADJP (JJ discriminate))
              (PRN (, ,)
                (S
                  (NP (PRP you))
                  (VP (VBP see)))
                (, ,))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBZ wants)
                    (PP (TO to)))))))
          (: ;)
          (CC but)
          (S
            (NP (DT this) (NN case))
            (ADVP (RB HERE))
            (VP (VBP ai) (RB n't)
              (NP
                (NP (DT no) (NN discrimination))
                (PP (IN of)
                  (NP (PRP$ his)))))))))
    (, ,)
    (NP
      (NP (PRP it) (POS 's))
      (NN man))
    (VP (VBZ 's))
    (. .)))

nsubj(says-2, Tom-1)
ccomp('s-31, says-2)
nsubj(discriminate-7, He-5)
dep(discriminate-7, does-6)
dep(says-2, discriminate-7)
nsubj(see-10, you-9)
parataxis(discriminate-7, see-10)
advmod(wants-14, when-12)
nsubj(wants-14, he-13)
advcl(discriminate-7, wants-14)
prep(wants-14, to-15)
det(case-19, this-18)
nsubj(discrimination-24, case-19)
advmod(discrimination-24, HERE-20)
cop(discrimination-24, ai-21)
neg(discrimination-24, n't-22)
neg(discrimination-24, no-23)
dep(says-2, discrimination-24)
conj_but(discriminate-7, discrimination-24)
prep_of(discrimination-24, his-26)
poss(man-30, it-28)
nsubj('s-31, man-30)
root(ROOT-0, 's-31)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Lord))
      (VP (VBD made)
        (NP (DT the) (NN day))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD made)
        (NP (DT the) (NN night))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP (VBD did) (RB n't)
          (VP (VB invent)
            (NP (DT the) (NNS hours)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD did) (RB n't)
          (VP (VB distribute)
            (NP (PRP them))
            (ADVP (RB around))))))
    (. .)))

det(Lord-2, The-1)
nsubj(made-3, Lord-2)
root(ROOT-0, made-3)
det(day-5, the-4)
tmod(made-3, day-5)
nsubj(made-9, he-8)
conj_and(made-3, made-9)
det(night-11, the-10)
tmod(made-9, night-11)
nsubj(invent-17, he-14)
aux(invent-17, did-15)
neg(invent-17, n't-16)
conj_but(made-3, invent-17)
det(hours-19, the-18)
dobj(invent-17, hours-19)
nsubj(distribute-25, he-22)
aux(distribute-25, did-23)
neg(distribute-25, n't-24)
conj_but(made-3, distribute-25)
conj_and(invent-17, distribute-25)
dobj(distribute-25, them-26)
advmod(distribute-25, around-27)

(ROOT
  (S
    (NP (NNP Man))
    (VP (VBD did)
      (NP (DT that)))
    (. .) ('' '')))

nsubj(did-2, Man-1)
root(ROOT-0, did-2)
dobj(did-2, that-3)

(ROOT
  (S (`` ``)
    (PP (IN Mars)
      (NP (NNP Tom)))
    (, ,)
    (VP (VBZ is)
      (VP (VBN dat)
        (ADVP (RB so))))
    (. ?)))

prep_mars(dat-6, Tom-3)
auxpass(dat-6, is-5)
root(ROOT-0, dat-6)
advmod(dat-6, so-7)

(ROOT
  (FRAG
    (NP
      (NP (NN Man))
      (VP (VBN done)
        (NP (PRP it))))
    (. ?) ('' '')))

root(ROOT-0, Man-1)
vmod(Man-1, done-2)
dobj(done-2, it-3)

(ROOT
  (INTJ (`` ``) (UH Certainly) (. .) ('' '')))

root(ROOT-0, Certainly-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBD tole)
        (NP (PRP him))
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could))))))
    (. ?) ('' '')))

nsubj(tole-3, Who-2)
root(ROOT-0, tole-3)
dobj(tole-3, him-4)
nsubj(could-6, he-5)
dep(tole-3, could-6)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Nobody))
    (. .)))

root(ROOT-0, Nobody-2)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP (VBD asked))
    (. .) ('' '')))

nsubj(asked-3, He-1)
neg(asked-3, never-2)
root(ROOT-0, asked-3)

(ROOT
  (S
    (NP (NNP Jim))
    (VP
      (VP (VBD studied)
        (NP (DT a) (NN minute)))
      (, ,)
      (CC and)
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (NP (NN dat))
          (VP (VBP do)
            (VP (VB beat)
              (NP (PRP me)))))))
    (. .)))

nsubj(studied-2, Jim-1)
nsubj(says-7, Jim-1)
root(ROOT-0, studied-2)
det(minute-4, a-3)
dobj(studied-2, minute-4)
conj_and(studied-2, says-7)
discourse(beat-14, Well-10)
nsubj(beat-14, dat-12)
aux(beat-14, do-13)
ccomp(says-7, beat-14)
dobj(beat-14, me-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (S
        (NP (`` `)
          (NP (SYM a))
          ('' ')
          (VP (VBN tuck)
            (NP (DT no) (JJ sich) (NN resk))))))
    (. .)))

nsubj(would-2, I-1)
root(ROOT-0, would-2)
neg(would-2, n't-3)
dep(would-2, a-5)
vmod(a-5, tuck-7)
neg(resk-10, no-8)
amod(resk-10, sich-9)
dobj(tuck-7, resk-10)

(ROOT
  (S (CC But)
    (NP (DT some) (NNS people))
    (VP (VBP ai) (RB n't)
      (VP (VBN scared)
        (NP
          (NP (NNP o) (POS '))
          (NN nothin))))
    ('' ') (. .)))

cc(scared-6, But-1)
det(people-3, some-2)
nsubjpass(scared-6, people-3)
auxpass(scared-6, ai-4)
neg(scared-6, n't-5)
root(ROOT-0, scared-6)
poss(nothin-9, o-7)
dobj(scared-6, nothin-9)

(ROOT
  (S
    (S
      (NP (NNP Dey))
      (VP (VBZ bangs)
        (ADVP (RB right) (RB ahead))))
    (: ;)
    (S
      (NP (NNP DEY))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ happens)))))))
    (. .)))

nsubj(bangs-2, Dey-1)
root(ROOT-0, bangs-2)
advmod(ahead-4, right-3)
advmod(bangs-2, ahead-4)
nsubj(care-9, DEY-6)
aux(care-9, do-7)
neg(care-9, n't-8)
parataxis(bangs-2, care-9)
nsubj(happens-11, what-10)
ccomp(care-9, happens-11)

(ROOT
  (S (IN So)
    (NP (NN den) (NN dey))
    (VP (VBZ 's)
      (VP (VBN allays)
        (NP
          (NP (DT an) (NN hour) (POS 's))
          (NN diff))
        (`` `)
        (NP
          (NP (JJ unce) (NN everywhah))
          (, ,)
          (NP (NNP Mars) (NNP Tom)))))
    (. ?) ('' '')))

dep(allays-5, So-1)
nn(dey-3, den-2)
nsubjpass(allays-5, dey-3)
auxpass(allays-5, 's-4)
root(ROOT-0, allays-5)
det(hour-7, an-6)
poss(diff-9, hour-7)
dobj(allays-5, diff-9)
amod(everywhah-12, unce-11)
dobj(allays-5, everywhah-12)
nn(Tom-15, Mars-14)
appos(everywhah-12, Tom-15)

(ROOT
  (NP (`` ``) (DT An) (NN hour) (. ?)))

det(hour-3, An-2)
root(ROOT-0, hour-3)

(ROOT
  (INTJ (UH No) (. !)))

root(ROOT-0, No-1)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (CD four) (NNS minutes))
          (NN difference)
          (PP (IN for)
            (NP (DT every) (NN degree)))
          (PP (IN of)
            (NP (NN longitude))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .)))

nsubj(difference-5, It-1)
cop(difference-5, 's-2)
num(minutes-4, four-3)
nn(difference-5, minutes-4)
ccomp(know-13, difference-5)
det(degree-8, every-7)
prep_for(difference-5, degree-8)
prep_of(difference-5, longitude-10)
nsubj(know-13, you-12)
root(ROOT-0, know-13)

(ROOT
  (S
    (NP
      (NP (NNP Fifteen))
      (PP (IN of)
        (NP (PRP 'em))))
    (VP (VBZ 's)
      (NP
        (NP (DT an) (NN hour))
        (, ,)
        (NP
          (NP (CD thirty))
          (PP (IN of)
            (NP
              (NP (NNP 'em) (POS 's))
              (CD two) (NNS hours))))
        (, ,)
        (CC and)
        (ADVP (RB so) (RB on))))
    (. .)))

nsubj(hour-6, Fifteen-1)
prep_of(Fifteen-1, 'em-3)
cop(hour-6, 's-4)
det(hour-6, an-5)
root(ROOT-0, hour-6)
conj_and(hour-6, thirty-8)
poss(hours-13, 'em-10)
num(hours-13, two-12)
prep_of(thirty-8, hours-13)
advmod(on-17, so-16)
advmod(hour-6, on-17)
conj_and(hour-6, on-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (CD one) (JJ clock) (NNP Tuesday) (NN morning))
            (PP (IN in)
              (NP (NNP England)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (CD eight))
        (NP (RB o'clock) (DT the) (NN night))
        (PP (RB before) (IN in)
          (NP (NNP New) (NNP York)))))
    (. .) ('' '')))

advmod(morning-7, When-1)
nsubj(morning-7, it-2)
cop(morning-7, 's-3)
num(morning-7, one-4)
amod(morning-7, clock-5)
nn(morning-7, Tuesday-6)
advcl(eight-13, morning-7)
prep_in(morning-7, England-9)
nsubj(eight-13, it-11)
cop(eight-13, 's-12)
root(ROOT-0, eight-13)
advmod(night-16, o'clock-14)
det(night-16, the-15)
dep(eight-13, night-16)
advmod(eight-13, before-17)
nn(York-20, New-19)
prep_in(eight-13, York-20)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD moved)
        (NP (DT a) (JJ little) (NN way))
        (PP (IN along)
          (NP (DT the) (NN locker)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB see)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBN insulted))))))))
    (. .)))

nsubj(moved-2, Jim-1)
root(ROOT-0, moved-2)
det(way-5, a-3)
amod(way-5, little-4)
dobj(moved-2, way-5)
det(locker-8, the-7)
prep_along(moved-2, locker-8)
nsubj(see-13, you-11)
aux(see-13, could-12)
conj_and(moved-2, see-13)
nsubjpass(insulted-16, he-14)
auxpass(insulted-16, was-15)
ccomp(see-13, insulted-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD kept)
        (S
          (VP
            (VP (VBG shaking)
              (NP (PRP$ his) (NN head)))
            (CC and)
            (VP (VBG muttering))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (S
        (NP (PRP I))
        (VP
          (VP (VBD slid)
            (PRT (RP along))
            (PP (TO to)
              (NP (PRP him))))
          (CC and)
          (VP (VBD patted)
            (NP (PRP him))
            (PP (IN on)
              (NP (DT the) (NN leg))))
          (, ,)
          (CC and)
          (VP (VBD petted)
            (NP (PRP him))
            (PRT (RP up)))
          (, ,)
          (CC and)
          (VP (VBD got)
            (NP (PRP him))
            (PP (IN over)
              (NP
                (NP (DT the) (JJS worst))
                (PP (IN of)
                  (NP (PRP$ his) (NNS feelings))))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP he))
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP
              (NP (NNP Mars) (NNP Tom) (NNP talkin) (POS '))
              (NN sich))
            (VP (VB talk)
              (PP (IN as)
                (NP (NN dat))))))))
    (. !)))

nsubj(kept-2, He-1)
root(ROOT-0, kept-2)
ccomp(kept-2, shaking-3)
poss(head-5, his-4)
dobj(shaking-3, head-5)
ccomp(kept-2, muttering-7)
conj_and(shaking-3, muttering-7)
conj_and(kept-2, so-10)
nsubj(slid-12, I-11)
nsubj(patted-17, I-11)
nsubj(petted-24, I-11)
nsubj(got-29, I-11)
ccomp(kept-2, slid-12)
prt(slid-12, along-13)
prep_to(slid-12, him-15)
ccomp(kept-2, patted-17)
conj_and(slid-12, patted-17)
dobj(patted-17, him-18)
det(leg-21, the-20)
prep_on(patted-17, leg-21)
ccomp(kept-2, petted-24)
conj_and(slid-12, petted-24)
dobj(petted-24, him-25)
prt(petted-24, up-26)
ccomp(kept-2, got-29)
conj_and(slid-12, got-29)
dobj(got-29, him-30)
det(worst-33, the-32)
prep_over(got-29, worst-33)
poss(feelings-36, his-35)
prep_of(worst-33, feelings-36)
advmod(says-41, then-39)
nsubj(says-41, he-40)
ccomp(kept-2, says-41)
conj_and(slid-12, says-41)
nn(talkin-46, Mars-44)
nn(talkin-46, Tom-45)
poss(sich-48, talkin-46)
nsubj(talk-49, sich-48)
ccomp(says-41, talk-49)
prep_as(talk-49, dat-51)

(ROOT
  (FRAG
    (NP
      (NP (NNP Choosday))
      (PP (IN in)
        (ADVP
          (NP (CD one) (NN place))
          (IN en))))
    (NP (NNP Monday))
    (PP (IN in)
      (NP
        (NP (NN t))
        (ADJP (`` `) (JJ other) (, ,) (JJ bofe))
        (PP (IN in)
          (NP (DT the) (JJ same) (NN day)))))
    (. !)))

root(ROOT-0, Choosday-1)
prep(Choosday-1, in-2)
num(place-4, one-3)
npadvmod(en-5, place-4)
pcomp(in-2, en-5)
dep(Choosday-1, Monday-6)
prep_in(Choosday-1, t-8)
amod(bofe-12, other-10)
amod(t-8, bofe-12)
det(day-16, the-14)
amod(day-16, same-15)
prep_in(t-8, day-16)

(ROOT
  (S
    (ADVP (RB Huck))
    (, ,)
    (NP (NN dis))
    (VP (VBZ ai) (RB n't)
      (NP (DT no) (NN place)
        (S
          (VP (TO to)
            (VP (VB joke)))))
      (: --)
      (ADVP (RB up) (RB here)
        (S
          (VP (VB whah)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBZ is))))))))
    (. .)))

advmod(place-7, Huck-1)
nsubj(place-7, dis-3)
cop(place-7, ai-4)
neg(place-7, n't-5)
neg(place-7, no-6)
root(ROOT-0, place-7)
aux(joke-9, to-8)
vmod(place-7, joke-9)
advmod(here-12, up-11)
advmod(place-7, here-12)
dep(here-12, whah-13)
nsubj(is-15, we-14)
ccomp(whah-13, is-15)

(ROOT
  (NP
    (NP (CD Two) (NNS days))
    (PP (IN in)
      (NP (CD one) (NN day)))
    (. !)))

num(days-2, Two-1)
root(ROOT-0, days-2)
num(day-5, one-4)
prep_in(days-2, day-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ
      (NP (PRP you))
      (VP (VB gwine)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (CD two) (NNS days))
              (NP (JJ inter) (CD one) (NN day)))))))
    (. ?)))

advmod(gwine-3, How-1)
nsubj(gwine-3, you-2)
nsubj(get-5, you-2)
root(ROOT-0, gwine-3)
aux(get-5, to-4)
xcomp(gwine-3, get-5)
num(days-7, two-6)
dobj(get-5, days-7)
tmod(get-5, days-7)
amod(day-10, inter-8)
num(day-10, one-9)
tmod(get-5, day-10)

(ROOT
  (SQ (VBD Ca) (RB n't)
    (NP
      (NP (NN git))
      (SBAR
        (S
          (NP (CD two) (NNS hours))
          (VP (VBP inter)
            (NP (CD one) (NN hour))
            (, ,)
            (ADVP (RB kin))))))
    (NP (PRP you))
    (. ?)))

root(ROOT-0, Ca-1)
neg(Ca-1, n't-2)
nsubj(Ca-1, git-3)
num(hours-5, two-4)
nsubj(inter-6, hours-5)
rcmod(git-3, inter-6)
num(hour-8, one-7)
dobj(inter-6, hour-8)
advmod(inter-6, kin-10)
dep(Ca-1, you-11)

(ROOT
  (SQ (MD Ca) (RB n't)
    (NP (NNP git) (CD two))
    (ADVP (RB niggers))
    (VP
      (VP (VB inter)
        (NP (CD one) (NN nigger) (NN skin)))
      (, ,)
      (VP (VB kin)
        (NP (PRP you))))
    (. ?)))

aux(inter-6, Ca-1)
neg(inter-6, n't-2)
nsubj(inter-6, git-3)
num(git-3, two-4)
advmod(inter-6, niggers-5)
root(ROOT-0, inter-6)
num(skin-9, one-7)
nn(skin-9, nigger-8)
dobj(inter-6, skin-9)
dep(inter-6, kin-11)
dobj(kin-11, you-12)

(ROOT
  (SQ (VBD Ca) (RB n't)
    (NP
      (NP (NN git))
      (SBAR
        (S
          (NP
            (NP (CD two) (NNS gallons))
            (PP (IN of)
              (NP (NN whisky))))
          (VP (VBP inter)
            (NP (DT a) (JJ one-gallon) (NN jug))
            (, ,)
            (ADVP (RB kin))))))
    (NP (PRP you))
    (. ?)))

root(ROOT-0, Ca-1)
neg(Ca-1, n't-2)
nsubj(Ca-1, git-3)
num(gallons-5, two-4)
nsubj(inter-8, gallons-5)
prep_of(gallons-5, whisky-7)
rcmod(git-3, inter-8)
det(jug-11, a-9)
amod(jug-11, one-gallon-10)
dobj(inter-8, jug-11)
advmod(inter-8, kin-13)
dep(Ca-1, you-14)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (VP (`` `) (VBD twould)
      (NP
        (NP (NN strain))
        (IN de)
        (NP (NN jug))))
    (. .)))

discourse(twould-6, No-1)
advmod(twould-6, sir-3)
root(ROOT-0, twould-6)
dobj(twould-6, strain-7)
iobj(twould-6, strain-7)
amod(strain-7, de-8)
dep(strain-7, jug-9)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (FW en))
      (ADVP (RB even))
      (VP (VBD den)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD could) (RB n't))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)))
    (. .)))

discourse(den-5, Yes-1)
nsubj(den-5, en-3)
advmod(den-5, even-4)
ccomp(believe-13, den-5)
nsubj(could-7, you-6)
ccomp(den-5, could-7)
neg(could-7, n't-8)
nsubj(believe-13, I-10)
aux(believe-13, do-11)
neg(believe-13, n't-12)
root(ROOT-0, believe-13)

(ROOT
  (S
    (S
      (INTJ (WRB Why))
      (, ,)
      (VP (VB looky)
        (ADVP (RB here))))
    (, ,)
    (NP (NNP Huck) (, ,) (NNP s) (`` `) (NNP posen) (FW de) (NNP Choosday))
    (VP (VBD was)
      (NP
        (NP (NNP New)
          (NP (NNP Year) (POS 's)))
        (: --)
        (NP (RB now) (NN den))))
    (. !)))

discourse(looky-3, Why-1)
ccomp(New-14, looky-3)
advmod(looky-3, here-4)
nn(Choosday-12, Huck-6)
appos(Choosday-12, s-8)
nn(Choosday-12, posen-10)
nn(Choosday-12, de-11)
nsubj(New-14, Choosday-12)
cop(New-14, was-13)
root(ROOT-0, New-14)
poss(New-14, Year-15)
advmod(den-19, now-18)
dep(New-14, den-19)

(ROOT
  (SQ (VBZ is)
    (NP (PRP you))
    (ADJP (JJ gwine))
    (S
      (VP (TO to)
        (VP (VB tell)
          (NP (PRP me))
          (NP
            (NP
              (NP (PRP it) (POS 's))
              (NN dis) (NN year))
            (PP (IN in)
              (NP
                (NP (CD one) (NN place))
                (PP (IN en)
                  (NP
                    (NP (NNP las) (POS '))
                    (NN year)))))
            (PP (IN in)
              (NP (NN t)))
            (ADJP (`` `) (JJ other) (, ,) (JJ bofe)))
          (PP (IN in)
            (NP (IN de)
              (NP (JJ identical) (JJ same) (NN minute)))))))
    (. ?)))

cop(gwine-3, is-1)
nsubj(gwine-3, you-2)
root(ROOT-0, gwine-3)
aux(tell-5, to-4)
dep(gwine-3, tell-5)
iobj(tell-5, me-6)
poss(year-10, it-7)
nn(year-10, dis-9)
dobj(tell-5, year-10)
num(place-13, one-12)
prep_in(year-10, place-13)
poss(year-17, las-15)
prep_en(place-13, year-17)
prep_in(year-10, t-19)
amod(bofe-23, other-21)
amod(year-10, bofe-23)
amod(minute-28, de-25)
amod(minute-28, identical-26)
amod(minute-28, same-27)
prep_in(tell-5, minute-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (IN de) (NN beatenest) (NNS rubbage)))
    (. !)))

nsubj(rubbage-5, It-1)
cop(rubbage-5, 's-2)
amod(rubbage-5, de-3)
nn(rubbage-5, beatenest-4)
root(ROOT-0, rubbage-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB stan) ('' ')
          (NP (PRP it)))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB stan) (`` ')
          (S
            (VP (TO to)
              (VP (VB hear)
                (VP (VB tell) (`` `)
                  (S
                    (VP (VBG bout)
                      (NP (PRP it)))))))))))
    (. .) ('' '')))

nsubj(stan-4, I-1)
aux(stan-4, ca-2)
neg(stan-4, n't-3)
root(ROOT-0, stan-4)
dobj(stan-4, it-6)
nsubj(stan-11, I-8)
nsubj(hear-14, I-8)
aux(stan-11, ca-9)
neg(stan-11, n't-10)
parataxis(stan-4, stan-11)
aux(hear-14, to-13)
xcomp(stan-11, hear-14)
xcomp(hear-14, tell-15)
xcomp(tell-15, bout-17)
dobj(bout-17, it-18)

(ROOT
  (S (RB Then)
    (S
      (NP (PRP he))
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP
              (VP (VB shiver))
              (CC and)
              (VP (VB turn)
                (ADJP (JJ gray))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (RB NOW) (WDT what))
          (VP (VBZ 's)
            (NP (DT the) (NN matter))))))
    (. ?)))

advmod(begun-3, Then-1)
nsubj(begun-3, he-2)
nsubj(shiver-5, he-2)
nsubj(turn-7, he-2)
root(ROOT-0, begun-3)
aux(shiver-5, to-4)
xcomp(begun-3, shiver-5)
xcomp(begun-3, turn-7)
conj_and(shiver-5, turn-7)
acomp(turn-7, gray-8)
nsubj(says-12, Tom-11)
conj_and(begun-3, says-12)
advmod(what-16, NOW-15)
nsubj(matter-19, what-16)
cop(matter-19, 's-17)
det(matter-19, the-18)
ccomp(says-12, matter-19)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT the) (NN trouble)))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, 's-2)
det(trouble-4, the-3)
nsubj(What-1, trouble-4)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (MD could)
        (ADVP (RB hardly))
        (VP (VB speak))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBZ says) (: :)
        (S (`` ``)
          (NP (NNP Mars) (NNP Tom))
          (, ,)
          (NP (PRP you))
          (VP (VBP ai) (RB n't)
            (ADJP (JJ jokin) ('' '))
            (, ,)
            (PP (IN en)
              (NP
                (NP (PRP it) (POS 's))
                (NNP SO)))))))
    (. ?) ('' '')))

nsubj(speak-4, Jim-1)
aux(speak-4, could-2)
advmod(speak-4, hardly-3)
root(ROOT-0, speak-4)
nsubj(says-8, he-7)
conj_but(speak-4, says-8)
nn(Tom-12, Mars-11)
nsubj(jokin-17, Tom-12)
nsubj(jokin-17, you-14)
cop(jokin-17, ai-15)
neg(jokin-17, n't-16)
ccomp(says-8, jokin-17)
parataxis(says-8, jokin-17)
poss(SO-23, it-21)
prep_en(jokin-17, SO-23)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB so))))
    (. .) ('' '')))

discourse('m-5, No-2)
nsubj('m-5, I-4)
root(ROOT-0, 'm-5)
neg('m-5, not-6)
nsubj(is-10, it-9)
conj_and('m-5, is-10)
advmod(is-10, so-11)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP
        (VP (VBD shivered)
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP (NNP Den) (NNP dat) (NNP Monday))
            (VP (MD could)
              (VP (VB be)
                (NP
                  (NP (NNP de) (NNP las) (POS '))
                  (NN day))))))
        (, ,)
        (PP (IN en)
          (NP
            (NP (NN dey))
            (SBAR
              (S
                (VP (MD would) (RB n't)
                  (VP (VB be)
                    (NP
                      (NP
                        (NP (DT no) (NN las) (POS '))
                        (NN day))
                      (PP (IN in)
                        (NP (NNP England))))))))))))
    (, ,)
    (NP (FW en) (FW de) (NN dead))
    (VP (MD would) (RB n't)
      (VP (VB be)
        (VP (VBN called))))
    (. .)))

nsubj(shivered-2, Jim-1)
nsubj(says-6, Jim-1)
ccomp(called-37, shivered-2)
advmod(shivered-2, again-3)
conj_and(shivered-2, says-6)
ccomp(called-37, says-6)
nn(Monday-11, Den-9)
nn(Monday-11, dat-10)
nsubj(day-17, Monday-11)
aux(day-17, could-12)
cop(day-17, be-13)
nn(las-15, de-14)
poss(day-17, las-15)
ccomp(says-6, day-17)
conj_and(shivered-2, en-19)
ccomp(called-37, en-19)
prep_en(shivered-2, dey-20)
aux(day-27, would-21)
neg(day-27, n't-22)
cop(day-27, be-23)
neg(las-25, no-24)
poss(day-27, las-25)
rcmod(dey-20, day-27)
prep_in(day-27, England-29)
nn(dead-33, en-31)
nn(dead-33, de-32)
nsubjpass(called-37, dead-33)
aux(called-37, would-34)
neg(called-37, n't-35)
auxpass(called-37, be-36)
root(ROOT-0, called-37)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must) (RB n't)
      (VP (VB go)
        (PP (IN over)
          (NP
            (NP (NN dah))
            (, ,)
            (NP (NNP Mars) (NNP Tom))))))
    (. .)))

nsubj(go-4, We-1)
aux(go-4, must-2)
neg(go-4, n't-3)
root(ROOT-0, go-4)
prep_over(go-4, dah-6)
nn(Tom-9, Mars-8)
appos(dah-6, Tom-9)

(ROOT
  (S
    (INTJ (UH Please))
    (VP
      (VP (VB git)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB turn)
              (NP
                (NP (NN back))
                (PRN (: ;)
                  (S
                    (NP (PRP I))
                    (VP (VBZ wants)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ whah)))))))
                  (: --)))
              ('' '')
              (NP
                (NP (DT All))
                (PP (IN of)
                  (NP (DT a) (JJ sudden)))
                (SBAR
                  (S
                    (S
                      (NP (PRP we))
                      (VP (VBP see)
                        (NP (NN something))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (DT all))
                      (VP
                        (VP (VBD jumped)
                          (PRT (RP up)))
                        (, ,)
                        (CC and)
                        (VP (VBD forgot)
                          (NP (NN everything))))))))))))
      (CC and)
      (VP (VBN begun)
        (PP (TO to)
          (NP (NNP gaze)))))
    (. .)))

discourse(git-2, Please-1)
root(ROOT-0, git-2)
dobj(git-2, him-3)
nsubj(turn-5, him-3)
aux(turn-5, to-4)
xcomp(git-2, turn-5)
dobj(turn-5, back-6)
nsubj(wants-9, I-8)
nsubj(whah-12, I-8)
dep(back-6, wants-9)
aux(whah-12, to-10)
cop(whah-12, be-11)
xcomp(wants-9, whah-12)
dobj(turn-5, All-15)
det(sudden-18, a-17)
prep_of(All-15, sudden-18)
nsubj(see-20, we-19)
rcmod(All-15, see-20)
dobj(see-20, something-21)
nsubj(jumped-25, all-24)
nsubj(forgot-29, all-24)
rcmod(All-15, jumped-25)
conj_and(see-20, jumped-25)
prt(jumped-25, up-26)
conj_and(see-20, forgot-29)
conj_and(jumped-25, forgot-29)
dobj(forgot-29, everything-30)
conj_and(git-2, begun-32)
prep_to(begun-32, gaze-34)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBZ says) (: :) (`` ``)
        (NP
          (NP (NNP Ai))
          (S
            (VP (RB n't)
              (NP (RB that) (DT the)))))))
    (: --) ('' '')
    (PRN
      (S
        (NP (PRP He))
        (VP
          (VP (VBD catched)
            (NP (PRP$ his) (NN breath)))
          (, ,)
          (ADVP (RB then))
          (VP (VBZ says)))))
    (: :) (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ IS) (, ,)
        (ADVP (RB sure))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP live))))))
    (. !)))

nsubj(says-2, Tom-1)
root(ROOT-0, says-2)
dobj(says-2, Ai-5)
neg(the-8, n't-6)
advmod(the-8, that-7)
dep(Ai-5, the-8)
nsubj(catched-12, He-11)
dep(says-2, catched-12)
poss(breath-14, his-13)
dobj(catched-12, breath-14)
advmod(says-17, then-16)
dep(catched-12, says-17)
nsubj(IS-21, It-20)
parataxis(says-2, IS-21)
advmod(IS-21, sure-23)
mark(live-26, as-24)
nsubj(live-26, you-25)
advcl(IS-21, live-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT the) (NN ocean)))
    (. !) ('' '')))

nsubj(ocean-4, It-1)
cop(ocean-4, 's-2)
det(ocean-4, the-3)
root(ROOT-0, ocean-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP me)
            (CC and)
            (NNP Jim))
          (VP (VBP catch)
            (NP (PRP$ our) (NN breath))
            (, ,)
            (ADVP (RB too))))))
    (. .)))

nsubj(made-2, That-1)
root(ROOT-0, made-2)
nsubj(catch-6, me-3)
conj_and(me-3, Jim-5)
nsubj(catch-6, Jim-5)
ccomp(made-2, catch-6)
poss(breath-8, our-7)
dobj(catch-6, breath-8)
advmod(catch-6, too-10)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP
      (VP
        (ADVP (DT all))
        (VBD stood)
        (ADJP (JJ petrified)
          (CC but)
          (JJ happy))
        (, ,)
        (SBAR (IN for)
          (S
            (NP
              (NP (NN none))
              (PP (IN of)
                (NP (PRP us))))
            (VP (VBD had)
              (ADVP (RB ever))
              (VP (VBN seen)
                (NP (DT an) (NN ocean)))))))
      (, ,)
      (CC or)
      (ADVP (RB ever))
      (VP (VBN expected)
        (S
          (VP (TO to)))))
    (. .)))

advmod(stood-4, Then-1)
nsubj(stood-4, we-2)
nsubj(expected-21, we-2)
nsubj(to-22, we-2)
advmod(stood-4, all-3)
root(ROOT-0, stood-4)
acomp(stood-4, petrified-5)
acomp(stood-4, happy-7)
conj_but(petrified-5, happy-7)
mark(seen-15, for-9)
nsubj(seen-15, none-10)
prep_of(none-10, us-12)
aux(seen-15, had-13)
advmod(seen-15, ever-14)
advcl(stood-4, seen-15)
det(ocean-17, an-16)
dobj(seen-15, ocean-17)
advmod(expected-21, ever-20)
conj_or(stood-4, expected-21)
xcomp(expected-21, to-22)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD kept)
      (NP
        (NP (NN muttering))
        (: :) (`` ``)
        (NP (NNP Atlantic) (NNP Ocean))
        (: --)
        (NP (NNP Atlantic))))
    (. .)))

nsubj(kept-2, Tom-1)
root(ROOT-0, kept-2)
dobj(kept-2, muttering-3)
nn(Ocean-7, Atlantic-6)
dep(muttering-3, Ocean-7)
dep(muttering-3, Atlantic-9)

(ROOT
  (SINV
    (FRAG
      (NP (NNP Land)))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP
      (NP (PRP it))
      (ADJP (JJ sound) (JJ great)))
    (. !)))

dep(do-3, Land-1)
root(ROOT-0, do-3)
neg(do-3, n't-4)
nsubj(do-3, it-5)
amod(great-7, sound-6)
amod(it-5, great-7)

(ROOT
  (FRAG (CC And)
    (SBAR (IN that)
      (S
        (VP (VBZ 's)
          (NP (PRP IT))
          (PRN (: --)
            (CC and)
            (S
              (NP (NNP WE))
              (VP (VBP are)
                (VP (VBG looking)
                  (PP (IN at)
                    (NP (PRP it))))))
            (: --)))
        (NP (PRP we))))
    (. !)))

cc(IT-4, And-1)
mark(IT-4, that-2)
cop(IT-4, 's-3)
root(ROOT-0, IT-4)
cc(looking-9, and-6)
nsubj(looking-9, WE-7)
aux(looking-9, are-8)
parataxis(IT-4, looking-9)
prep_at(looking-9, it-11)
dep(IT-4, we-13)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB just))
      (ADJP (RB too) (JJ splendid))
      (S
        (VP (TO to)
          (VP (VB believe)))))
    (. !) ('' '')))

discourse(splendid-7, Why-1)
nsubj(splendid-7, it-3)
nsubj(believe-9, it-3)
cop(splendid-7, 's-4)
advmod(splendid-7, just-5)
advmod(splendid-7, too-6)
root(ROOT-0, splendid-7)
aux(believe-9, to-8)
xcomp(splendid-7, believe-9)

(ROOT
  (S (RB Then)
    (S
      (S
        (NP (PRP we))
        (VP (VBP see)
          (NP
            (NP (DT a) (JJ big) (NN bank))
            (PP (IN of)
              (NP (JJ black) (NN smoke))))))
      (: ;)
      (CC and)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VBD got)
              (NP (NNS nearer)))))
        (, ,)
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN city))
            (: --)
            (CC and)
            (NP
              (NP (DT a) (NN monster))
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD was) (, ,)
                    (ADVP (RB too))
                    (, ,)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (JJ thick) (NN fringe))
                        (PP (IN of)
                          (NP
                            (NP (NNS ships))
                            (PP (IN around)
                              (NP (CD one) (NN edge))))))))))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP we))
        (VP
          (VP (VBD wondered)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (NP (NNP New) (NNP York))))))
          (, ,)
          (CC and)
          (VP (VBN begun)
            (PP (TO to)
              (NP (NN jaw)
                (CC and)
                (NN dispute)))
            (PP (IN about)
              (NP (PRP it)))))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (ADVP (RB first))
      (NP (PRP we))
      (VP (VBD knowed)))
    (, ,)
    (S
      (NP (PRP it))
      (VP
        (VP (VBD slid)
          (PP (IN from)
            (PP (IN under)
              (NP (PRP us)))))
        (CC and)
        (VP (VBD went)
          (S
            (VP (VBG flying)
              (PRT (RP behind)))))))
    (, ,)
    (CC and)
    (ADVP (RB here))
    (S
      (NP (PRP we))
      (VP (VBD was) (, ,)
        (ADVP (RB out))
        (PP (IN over)
          (NP
            (NP (DT the) (JJ very) (NN ocean))
            (UCP
              (NP (PRP itself))
              (, ,)
              (CC and)
              (VP (VBG going)
                (PP (IN like)
                  (NP (DT a) (NN cyclone)))))))))
    (. .)))

advmod(see-3, Then-1)
nsubj(see-3, we-2)
root(ROOT-0, see-3)
det(bank-6, a-4)
amod(bank-6, big-5)
dobj(see-3, bank-6)
amod(smoke-9, black-8)
prep_of(bank-6, smoke-9)
advmod(got-14, when-12)
nsubj(got-14, we-13)
advcl(city-20, got-14)
dobj(got-14, nearer-15)
nsubj(city-20, it-17)
cop(city-20, was-18)
det(city-20, a-19)
conj_and(see-3, city-20)
det(monster-24, a-23)
conj_and(see-3, monster-24)
conj_and(city-20, monster-24)
nsubj(was-26, she-25)
rcmod(monster-24, was-26)
advmod(was-26, too-28)
det(fringe-33, a-31)
amod(fringe-33, thick-32)
prep_with(was-26, fringe-33)
prep_of(fringe-33, ships-35)
num(edge-38, one-37)
prep_around(ships-35, edge-38)
nsubj(wondered-42, we-41)
nsubj(begun-50, we-41)
conj_and(see-3, wondered-42)
mark(York-47, if-43)
nsubj(York-47, it-44)
cop(York-47, was-45)
nn(York-47, New-46)
advcl(wondered-42, York-47)
conj_and(see-3, begun-50)
conj_and(wondered-42, begun-50)
prep_to(begun-50, jaw-52)
prep_to(begun-50, dispute-54)
conj_and(jaw-52, dispute-54)
prep_about(begun-50, it-56)
advmod(knowed-62, first-60)
nsubj(knowed-62, we-61)
conj_and(see-3, knowed-62)
nsubj(slid-65, it-64)
nsubj(went-70, it-64)
ccomp(see-3, slid-65)
conj_and(see-3, slid-65)
prep(slid-65, from-66)
pcomp(from-66, under-67)
pobj(under-67, us-68)
ccomp(see-3, went-70)
conj_and(see-3, went-70)
conj_and(slid-65, went-70)
xcomp(went-70, flying-71)
prt(flying-71, behind-72)
advmod(was-77, here-75)
nsubj(was-77, we-76)
conj_and(see-3, was-77)
advmod(was-77, out-79)
det(ocean-83, the-81)
amod(ocean-83, very-82)
prep_over(was-77, ocean-83)
dep(ocean-83, itself-84)
dep(ocean-83, going-87)
conj_and(itself-84, going-87)
vmod(itself-84, going-87)
det(cyclone-90, a-89)
prep_like(going-87, cyclone-90)

(ROOT
  (S (RB Then)
    (PRN
      (S
        (NP (PRP we))
        (VP (VBD woke)
          (PRT (RP up))))
      (, ,))
    (NP (PRP I))
    (VP (VB tell)
      (NP (PRP you)))
    (. !)))

advmod(tell-7, Then-1)
nsubj(woke-3, we-2)
parataxis(tell-7, woke-3)
prt(woke-3, up-4)
nsubj(tell-7, I-6)
root(ROOT-0, tell-7)
dobj(tell-7, you-8)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD made)
          (NP (DT a) (NN break) (NN aft)))
        (CC and)
        (VP
          (VP (VBD raised)
            (NP (DT a) (NN wail)))
          (, ,)
          (CC and)
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB beg)
                  (NP (DT the) (NN professor)
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB turn)
                            (ADVP (RB back)))
                          (CC and)
                          (VP (VB land)
                            (NP (PRP us))))))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP
          (VP (VBN jerked)
            (PP (IN out)
              (NP (PRP$ his) (NN pistol))))
          (CC and)
          (VP (VBN motioned)
            (S
              (NP (PRP us))
              (ADVP (RB back))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP we))
          (VP (VBD went)))
        (, ,)
        (CC but)
        (S
          (NP (NN nobody))
          (VP (MD will)
            (ADVP (RB ever))
            (VP (VB know)
              (SBAR
                (WHADJP (WRB how) (JJ bad))
                (S
                  (NP (PRP we))
                  (VP (VBD felt)))))))))
    (. .)))

nsubj(made-2, We-1)
nsubj(raised-7, We-1)
root(ROOT-0, made-2)
det(aft-5, a-3)
nn(aft-5, break-4)
dobj(made-2, aft-5)
conj_and(made-2, raised-7)
det(wail-9, a-8)
dobj(raised-7, wail-9)
conj_and(made-2, begun-12)
conj_and(raised-7, begun-12)
aux(beg-14, to-13)
xcomp(begun-12, beg-14)
det(professor-16, the-15)
dobj(beg-14, professor-16)
aux(turn-18, to-17)
vmod(professor-16, turn-18)
advmod(turn-18, back-19)
vmod(professor-16, land-21)
conj_and(turn-18, land-21)
dobj(land-21, us-22)
nsubj(jerked-26, he-25)
nsubj(motioned-31, he-25)
conj_but(made-2, jerked-26)
poss(pistol-29, his-28)
prep_out(jerked-26, pistol-29)
conj_but(made-2, motioned-31)
conj_and(jerked-26, motioned-31)
dep(motioned-31, us-32)
advmod(us-32, back-33)
nsubj(went-37, we-36)
conj_but(made-2, went-37)
conj_and(jerked-26, went-37)
nsubj(know-43, nobody-40)
aux(know-43, will-41)
advmod(know-43, ever-42)
conj_and(jerked-26, know-43)
conj_but(went-37, know-43)
advmod(bad-45, how-44)
dep(felt-47, bad-45)
nsubj(felt-47, we-46)
ccomp(know-43, felt-47)

(ROOT
  (S
    (NP (DT The) (NN land))
    (VP (VBD was)
      (VP
        (VP (VBN gone))
        (, ,)
        (VP
          (ADVP (DT all)
            (CC but))
          (NP (DT a) (JJ little) (NN streak)))
        (, ,)
        (PP (IN like)
          (NP
            (NP
              (NP (DT a) (NN snake))
              (, ,)
              (SBAR
                (SBAR
                  (UCP
                    (PP
                      (ADVP (RB away) (RB off))
                      (IN on)
                      (NP
                        (NP (DT the) (NN edge))
                        (PP (IN of)
                          (NP (DT the) (NN water)))))
                    (, ,)
                    (CC and)
                    (ADVP (RB down) (IN under)))
                  (S
                    (NP (PRP us))
                    (VP (VBD was)
                      (NP
                        (NP (RB just)
                          (NP (NN ocean))
                          (, ,)
                          (NP (NN ocean))
                          (, ,)
                          (NP
                            (NP (NN ocean))
                            (: --)
                            (NP
                              (NP (NNS millions))
                              (PP (IN of)
                                (NP
                                  (NP (NNS miles))
                                  (PP (IN of)
                                    (NP (PRP it)))
                                  (, ,)
                                  (VP (VBG heaving)
                                    (CC and)
                                    (VBG pitching)))))
                            (CC and)
                            (NP (VBG squirming))))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (JJ white) (NNS sprays))
                          (VP
                            (VP (VBG blowing)
                              (PP (IN from)
                                (NP
                                  (NP (DT the) (NNS wave-tops))
                                  (, ,)
                                  (CC and)
                                  (RB only)
                                  (NP
                                    (NP (DT a) (JJ few) (NNS ships))
                                    (PP (IN in)
                                      (NP (NN sight)))))))
                            (, ,)
                            (VP (VBG wallowing)
                              (PRT (RP around)))
                            (CC and)
                            (VP (VBG laying)
                              (PRT (RP over))
                              (, ,)
                              (UCP
                                (ADJP (JJ first)
                                  (PP (IN on)
                                    (NP (CD one) (NN side))))
                                (CC and)
                                (PP (RB then) (IN on)
                                  (VP (VB t)
                                    (ADJP (`` `) (JJ other))))))
                            (, ,)
                            (CC and)
                            (VP (VBG sticking)
                              (NP (PRP$ their) (NNS bows))
                              (PP (IN under)
                                (FRAG (CC and)
                                  (RB then)
                                  (NP (PRP$ their) (NN sterns)))))))))))
                (: ;)
                (CC and)
                (SBAR (IN before)
                  (S
                    (S
                      (ADVP (RB long))
                      (NP (EX there))
                      (VP (VBD war) (RB n't)
                        (VP
                          (NP (DT no) (NNS ships))
                          (ADVP (IN at) (DT all)))))
                    (, ,)
                    (CC and)
                    (S
                      (S
                        (NP (PRP we))
                        (VP (VBD had)
                          (NP
                            (NP (DT the) (NN sky))
                            (CC and)
                            (NP
                              (NP (DT the) (JJ whole) (NN ocean))
                              (NP (DT all))))
                          (PP (TO to)
                            (NP (PRP ourselves)))))
                      (, ,)
                      (CC and)
                      (S
                        (NP (DT the) (NN roomiest))
                        (VP (VBP place)
                          (SBAR
                            (S
                              (NP (PRP I))
                              (ADVP (RB ever))
                              (VP (VBP see)))))))))))
            (CC and)
            (NP (DT the) (NN lonesomest))))))
    (. .)))

det(land-2, The-1)
nsubj(gone-4, land-2)
aux(gone-4, was-3)
root(ROOT-0, gone-4)
mwe(but-7, all-6)
advmod(streak-10, but-7)
det(streak-10, a-8)
amod(streak-10, little-9)
dep(gone-4, streak-10)
det(snake-14, a-13)
prep_like(gone-4, snake-14)
advmod(off-17, away-16)
advmod(on-18, off-17)
dep(ocean-31, on-18)
det(edge-20, the-19)
pobj(on-18, edge-20)
det(water-23, the-22)
prep_of(edge-20, water-23)
advmod(under-27, down-26)
conj_and(on-18, under-27)
dep(ocean-31, under-27)
nsubj(ocean-31, us-28)
cop(ocean-31, was-29)
advmod(ocean-31, just-30)
dep(snake-14, ocean-31)
appos(ocean-31, ocean-33)
appos(ocean-31, ocean-35)
appos(ocean-31, millions-37)
conj_and(ocean-35, millions-37)
prep_of(millions-37, miles-39)
prep_of(miles-39, it-41)
vmod(miles-39, heaving-43)
vmod(miles-39, pitching-45)
conj_and(heaving-43, pitching-45)
appos(ocean-31, squirming-47)
conj_and(ocean-35, squirming-47)
amod(sprays-51, white-50)
dep(snake-14, sprays-51)
conj_and(ocean-31, sprays-51)
dep(sprays-51, blowing-52)
det(wave-tops-55, the-54)
prep_from(blowing-52, wave-tops-55)
prep_from(blowing-52, only-58)
advmod(wave-tops-55, only-58)
conj_and(wave-tops-55, only-58)
det(ships-61, a-59)
amod(ships-61, few-60)
dep(wave-tops-55, ships-61)
prep_in(ships-61, sight-63)
dep(sprays-51, wallowing-65)
conj_and(blowing-52, wallowing-65)
prt(wallowing-65, around-66)
dep(sprays-51, laying-68)
conj_and(blowing-52, laying-68)
prt(laying-68, over-69)
acomp(laying-68, first-71)
num(side-74, one-73)
prep_on(first-71, side-74)
advmod(on-77, then-76)
acomp(laying-68, on-77)
conj_and(first-71, on-77)
dep(on-77, t-78)
acomp(t-78, other-80)
dep(sprays-51, sticking-83)
conj_and(blowing-52, sticking-83)
poss(bows-85, their-84)
dobj(sticking-83, bows-85)
prep(sticking-83, under-86)
cc(then-88, and-87)
dep(under-86, then-88)
poss(sterns-90, their-89)
dep(then-88, sterns-90)
mark(war-96, before-93)
advmod(war-96, long-94)
expl(war-96, there-95)
dep(snake-14, war-96)
conj_and(ocean-31, war-96)
neg(war-96, n't-97)
neg(ships-99, no-98)
nsubj(war-96, ships-99)
advmod(ships-99, at-100)
pobj(at-100, all-101)
nsubj(had-105, we-104)
conj_and(ocean-31, had-105)
conj_and(war-96, had-105)
det(sky-107, the-106)
dobj(had-105, sky-107)
det(ocean-111, the-109)
amod(ocean-111, whole-110)
dobj(had-105, ocean-111)
conj_and(sky-107, ocean-111)
dep(ocean-111, all-112)
prep_to(had-105, ourselves-114)
det(roomiest-118, the-117)
nsubj(place-119, roomiest-118)
conj_and(war-96, place-119)
conj_and(had-105, place-119)
nsubj(see-122, I-120)
advmod(see-122, ever-121)
ccomp(place-119, see-122)
det(lonesomest-125, the-124)
prep_like(gone-4, lonesomest-125)
conj_and(snake-14, lonesomest-125)

(ROOT
  (NP (NNP CHAPTER) (NNP IV) (. .)))

nn(IV-2, CHAPTER-1)
root(ROOT-0, IV-2)

(ROOT
  (S
    (NP (NNP STORM) (NNP AND) (PRP it))
    (VP (VBD got)
      (NP (NN lonesomer)
        (CC and)
        (NN lonesomer)))
    (. .)))

nn(AND-2, STORM-1)
nsubj(got-4, AND-2)
dep(AND-2, it-3)
root(ROOT-0, got-4)
dobj(got-4, lonesomer-5)
dobj(got-4, lonesomer-7)
conj_and(lonesomer-5, lonesomer-7)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (DT the) (JJ big) (NN sky))
        (ADVP (RB up) (RB there))
        (, ,)
        (ADJP (JJ empty))))
    (CC and)
    (S
      (NP (JJ awful))
      (ADJP (JJ deep)))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN ocean))
      (PP
        (ADVP (RB down) (RB there))
        (IN without)
        (NP
          (NP
            (NP (DT a) (NN thing))
            (PP (IN on)
              (NP (PRP it))))
          (CONJP (CC but)
            (RB just))
          (NP (DT the) (NNS waves)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(sky-5, the-3)
amod(sky-5, big-4)
nsubj(was-2, sky-5)
nsubj(deep-12, sky-5)
advmod(there-7, up-6)
advmod(was-2, there-7)
acomp(was-2, empty-9)
dep(deep-12, awful-11)
conj_and(was-2, deep-12)
det(ocean-16, the-15)
conj_and(was-2, ocean-16)
advmod(there-18, down-17)
advmod(without-19, there-18)
dep(ocean-16, without-19)
det(thing-21, a-20)
pobj(without-19, thing-21)
prep_on(thing-21, it-23)
det(waves-27, the-26)
pobj(without-19, waves-27)
conj_but(thing-21, waves-27)

(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (PP (IN around)
          (NP (PRP us))))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN ring))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP
                (NP (DT the) (NN sky))
                (CC and)
                (NP (DT the) (NN water)))
              (VP (VBP come)
                (ADVP (RB together))))))))
    (: ;)
    (S
      (FRAG
        (INTJ (UH yes))
        (, ,)
        (NP (DT a) (JJ monstrous) (JJ big) (NN ring)))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP
          (PRN (, ,)
            (CC and)
            (ADVP (PRP we) (RB right))
            (PP (IN in)
              (NP
                (NP (DT the) (JJ dead) (NN center))
                (PP (IN of)
                  (NP (PRP it)))))
            (: --))
          (JJ plumb))
        (PP (IN in)
          (NP (DT the) (NN center)))))
    (. .)))

nsubj(ring-6, All-1)
prep_around(All-1, us-3)
cop(ring-6, was-4)
det(ring-6, a-5)
root(ROOT-0, ring-6)
advmod(come-14, where-8)
det(sky-10, the-9)
nsubj(come-14, sky-10)
det(water-13, the-12)
conj_and(sky-10, water-13)
nsubj(come-14, water-13)
rcmod(ring-6, come-14)
advmod(come-14, together-15)
discourse(ring-22, yes-17)
det(ring-22, a-19)
amod(ring-22, monstrous-20)
amod(ring-22, big-21)
dep(plumb-36, ring-22)
nsubj(plumb-36, it-23)
cop(plumb-36, was-24)
cc(in-29, and-26)
dep(right-28, we-27)
dep(in-29, right-28)
dep(plumb-36, in-29)
det(center-32, the-30)
amod(center-32, dead-31)
pobj(in-29, center-32)
prep_of(center-32, it-34)
parataxis(ring-6, plumb-36)
det(center-39, the-38)
prep_in(plumb-36, center-39)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBD was)
          (VP (VBG racing)
            (PRT (RP along))
            (PP (IN like)
              (NP (DT a) (JJ prairie) (NN fire))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (ADVP (RB never))
        (VP (VBD made)
          (NP (DT any) (NN difference)))))
    (, ,)
    (NP (PRP we))
    (VP (MD could) (RB n't)
      (VP (VB seem)
        (S
          (VP (TO to)
            (VP (VB git)
              (PP (IN past)
                (NP
                  (NP (DT that) (NN center))
                  (NP (DT no) (NN way)))))))))
    (. .)))

nsubj(racing-3, We-1)
aux(racing-3, was-2)
ccomp(seem-20, racing-3)
prt(racing-3, along-4)
det(fire-8, a-6)
amod(fire-8, prairie-7)
prep_like(racing-3, fire-8)
nsubj(made-13, it-11)
neg(made-13, never-12)
conj_but(racing-3, made-13)
ccomp(seem-20, made-13)
det(difference-15, any-14)
dobj(made-13, difference-15)
nsubj(seem-20, we-17)
nsubj(git-22, we-17)
aux(seem-20, could-18)
neg(seem-20, n't-19)
root(ROOT-0, seem-20)
aux(git-22, to-21)
xcomp(seem-20, git-22)
det(center-25, that-24)
prep_past(git-22, center-25)
neg(way-27, no-26)
dep(center-25, way-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could) (RB n't)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (ADVP (RB ever))
            (VP (VBD gained)
              (NP (DT an) (NN inch))
              (PP (IN on)
                (NP (DT that) (NN ring))))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, could-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
mark(gained-8, that-5)
nsubj(gained-8, we-6)
advmod(gained-8, ever-7)
ccomp(see-4, gained-8)
det(inch-10, an-9)
dobj(gained-8, inch-10)
det(ring-13, that-12)
prep_on(gained-8, ring-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD made)
        (SBAR
          (S
            (NP (DT a) (NN body))
            (VP (VBP feel)
              (ADVP (RB creepy)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (RB so) (JJ curious)
        (CC and)
        (JJ unaccountable)))
    (. .)))

nsubj(made-2, It-1)
ccomp(curious-11, made-2)
det(body-4, a-3)
nsubj(feel-5, body-4)
ccomp(made-2, feel-5)
advmod(feel-5, creepy-6)
nsubj(curious-11, it-8)
nsubj(unaccountable-13, it-8)
cop(curious-11, was-9)
advmod(curious-11, so-10)
root(ROOT-0, curious-11)
conj_and(curious-11, unaccountable-13)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (NN everything))
      (VP (VBD was)
        (ADJP
          (ADJP
            (ADJP
              (ADJP (RB so) (JJ awful))
              (SBAR
                (ADVP (RB still))
                (IN that)
                (S
                  (NP (PRP we))
                  (VP
                    (VP (VBD got)
                      (PP (TO to)
                        (S
                          (VP (VBG talking)
                            (PP (IN in)
                              (NP (DT a)
                                (ADJP (RB very) (JJ low))
                                (NN voice)))))))
                    (, ,)
                    (CC and)
                    (VP (VBD kept)
                      (PP (IN on)
                        (S
                          (VP (VBG getting)
                            (NP (NN creepier)
                              (CC and)
                              (NN lonesomer))))))))))
            (CC and)
            (ADJP (JJR less)))
          (CC and)
          (ADJP (RBR less) (JJ talky)))
        (, ,)
        (SBAR (IN till)
          (S
            (PP (IN at)
              (NP (JJ last)))
            (NP (DT the) (NN talk))
            (VP (VBD ran)
              (ADJP (JJ dry))
              (ADVP (RB altogether)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (ADVP (RB just))
      (VP (VBD set)
        (NP
          (NP (RB there))
          (CC and)
          (NP (`` ``)
            (NP (NN thunk))
            (, ,) ('' '')
            (SBAR (IN as)
              (S
                (NP (NNP Jim))
                (VP
                  (VP (VBZ calls)
                    (NP (PRP it)))
                  (, ,)
                  (CC and)
                  (VP
                    (ADVP (RB never))
                    (VBD said)
                    (S
                      (NP (DT a) (NN word))
                      (NP (DT the) (JJS longest) (NN time)))))))))))
    (. .)))

discourse(awful-6, Well-1)
nsubj(awful-6, everything-3)
nsubj(less-27, everything-3)
nsubj(talky-30, everything-3)
cop(awful-6, was-4)
advmod(awful-6, so-5)
root(ROOT-0, awful-6)
advmod(got-10, still-7)
mark(got-10, that-8)
nsubj(got-10, we-9)
nsubj(kept-20, we-9)
ccomp(awful-6, got-10)
prepc_to(got-10, talking-12)
det(voice-17, a-14)
advmod(low-16, very-15)
amod(voice-17, low-16)
prep_in(talking-12, voice-17)
ccomp(awful-6, kept-20)
conj_and(got-10, kept-20)
prepc_on(kept-20, getting-22)
dobj(getting-22, creepier-23)
dobj(getting-22, lonesomer-25)
conj_and(creepier-23, lonesomer-25)
conj_and(awful-6, less-27)
advmod(talky-30, less-29)
conj_and(awful-6, talky-30)
mark(ran-37, till-32)
prep_at(ran-37, last-34)
det(talk-36, the-35)
nsubj(ran-37, talk-36)
advcl(awful-6, ran-37)
acomp(ran-37, dry-38)
advmod(ran-37, altogether-39)
nsubj(set-44, we-42)
advmod(set-44, just-43)
conj_and(awful-6, set-44)
dobj(set-44, there-45)
dobj(set-44, thunk-48)
conj_and(there-45, thunk-48)
mark(calls-53, as-51)
nsubj(calls-53, Jim-52)
nsubj(said-58, Jim-52)
dep(thunk-48, calls-53)
dobj(calls-53, it-54)
neg(said-58, never-57)
dep(thunk-48, said-58)
conj_and(calls-53, said-58)
det(word-60, a-59)
nsubj(time-63, word-60)
det(time-63, the-61)
amod(time-63, longest-62)
xcomp(said-58, time-63)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN professor))
        (ADVP (RB never))
        (VP (VBD stirred)
          (SBAR (IN till)
            (S
              (NP (DT the) (NN sun))
              (VP (VBD was)
                (ADVP (RB overhead)))))))
      (, ,) (RB then)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD stood)
            (PRT (RP up)))
          (CC and)
          (VP (VBD put)
            (NP
              (NP (DT a) (NN kind))
              (PP (IN of)
                (NP (NN triangle))))
            (PP (TO to)
              (NP (PRP$ his) (NN eye)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBD said)
        (SBAR
          (S
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (DT a) (NN sextant))))
            (CC and)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBG taking)
                  (NP (DT the) (NN sun)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP
                            (NP (NN whereabouts))
                            (SBAR
                              (S
                                (NP (DT the) (NN balloon))
                                (VP (VBD was))))))))))))))))
    (. .)))

det(professor-2, The-1)
nsubj(stirred-4, professor-2)
neg(stirred-4, never-3)
root(ROOT-0, stirred-4)
mark(was-8, till-5)
det(sun-7, the-6)
nsubj(was-8, sun-7)
advcl(stirred-4, was-8)
advmod(was-8, overhead-9)
advmod(stood-13, then-11)
nsubj(stood-13, he-12)
nsubj(put-16, he-12)
parataxis(stirred-4, stood-13)
prt(stood-13, up-14)
parataxis(stirred-4, put-16)
conj_and(stood-13, put-16)
det(kind-18, a-17)
dobj(put-16, kind-18)
prep_of(kind-18, triangle-20)
poss(eye-23, his-22)
prep_to(put-16, eye-23)
nsubj(said-27, Tom-26)
conj_and(stirred-4, said-27)
nsubj(sextant-31, it-28)
cop(sextant-31, was-29)
det(sextant-31, a-30)
dep(said-27, sextant-31)
nsubj(taking-35, he-33)
aux(taking-35, was-34)
dep(said-27, taking-35)
conj_and(sextant-31, taking-35)
det(sun-37, the-36)
dobj(taking-35, sun-37)
aux(see-39, to-38)
vmod(sun-37, see-39)
dobj(see-39, whereabouts-40)
det(balloon-42, the-41)
nsubj(was-43, balloon-42)
rcmod(whereabouts-40, was-43)

(ROOT
  (S (RB Then)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD ciphered)
          (NP (DT a) (JJ little)))
        (CC and)
        (VP (VBD looked)
          (PP (IN in)
            (NP (DT a) (NN book))))))
    (, ,)
    (CC and)
    (RB then)
    (S
      (NP (PRP he))
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB carry)
              (PRT (RP on))
              (ADVP (RB again)))))))
    (. .)))

advmod(ciphered-3, Then-1)
nsubj(ciphered-3, he-2)
nsubj(looked-7, he-2)
root(ROOT-0, ciphered-3)
det(little-5, a-4)
dobj(ciphered-3, little-5)
conj_and(ciphered-3, looked-7)
det(book-10, a-9)
prep_in(looked-7, book-10)
advmod(begun-15, then-13)
nsubj(begun-15, he-14)
nsubj(carry-17, he-14)
conj_and(ciphered-3, begun-15)
aux(carry-17, to-16)
xcomp(begun-15, carry-17)
prt(carry-17, on-18)
advmod(carry-17, again-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (NP
          (NP (NNS lots))
          (PP (IN of)
            (NP (JJ wild) (NNS things))))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (PP (IN among)
        (NP (NNS others)))
      (, ,)
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB keep)
                (PRT (RP up))
                (NP (DT this) (JJ hundred-mile) (NN gait))
                (PP (IN till)
                  (NP
                    (NP (DT the) (NN middle))
                    (PP (IN of)
                      (NP (JJ to-morrow) (NN afternoon)))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (MD 'd)
        (VP (VB land)
          (PP (IN in)
            (NP (NNP London))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
dobj(said-2, lots-3)
amod(things-6, wild-5)
prep_of(lots-3, things-6)
prep_among(said-14, others-11)
nsubj(said-14, he-13)
conj_and(said-2, said-14)
nsubj(keep-17, he-15)
aux(keep-17, would-16)
ccomp(said-14, keep-17)
prt(keep-17, up-18)
det(gait-21, this-19)
amod(gait-21, hundred-mile-20)
dobj(keep-17, gait-21)
det(middle-24, the-23)
prep_till(keep-17, middle-24)
amod(afternoon-27, to-morrow-26)
prep_of(middle-24, afternoon-27)
advmod(land-33, then-30)
nsubj(land-33, he-31)
aux(land-33, 'd-32)
conj_and(said-2, land-33)
prep_in(land-33, London-35)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD would)
            (VP (VB be)
              (ADJP (RB humbly) (JJ thankful)))))))
    (. .)))

nsubj(said-2, We-1)
root(ROOT-0, said-2)
nsubj(thankful-7, we-3)
aux(thankful-7, would-4)
cop(thankful-7, be-5)
advmod(thankful-7, humbly-6)
ccomp(said-2, thankful-7)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD was)
          (VP (VBG turning)
            (PRT (RP away)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBD whirled)
          (PRT (RP around))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP we))
              (VP
                (VP (VBD said)
                  (WHNP (WDT that)))
                (, ,)
                (CC and)
                (VP (VB give)
                  (NP (PRP us))
                  (NP
                    (NP (DT a) (JJ long) (NN look))
                    (PP (IN of)
                      (NP (PRP$ his) (JJS blackest) (NN kind)))))))))))
    (: --)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (NN maliciousest)
            (CC and)
            (NN suspiciousest))))
      (VP (VBZ looks)
        (SBAR
          (S
            (NP (PRP I))
            (ADVP (RB ever))
            (VP (VBP see))))))
    (. .)))

nsubj(turning-3, He-1)
aux(turning-3, was-2)
root(ROOT-0, turning-3)
prt(turning-3, away-4)
nsubj(whirled-8, he-7)
conj_but(turning-3, whirled-8)
prt(whirled-8, around-9)
advmod(said-12, when-10)
nsubj(said-12, we-11)
nsubj(give-16, we-11)
advcl(whirled-8, said-12)
dobj(said-12, that-13)
advcl(whirled-8, give-16)
conj_and(said-12, give-16)
iobj(give-16, us-17)
det(look-20, a-18)
amod(look-20, long-19)
dobj(give-16, look-20)
poss(kind-24, his-22)
amod(kind-24, blackest-23)
prep_of(look-20, kind-24)
nsubj(looks-32, one-26)
det(maliciousest-29, the-28)
prep_of(one-26, maliciousest-29)
prep_of(one-26, suspiciousest-31)
conj_and(maliciousest-29, suspiciousest-31)
parataxis(turning-3, looks-32)
nsubj(see-35, I-33)
advmod(see-35, ever-34)
ccomp(looks-32, see-35)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (PRP You))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB leave)
                (NP (PRP me))))))))
    (. .)))

advmod(says-3, Then-1)
nsubj(says-3, he-2)
root(ROOT-0, says-3)
nsubj(want-7, You-6)
nsubj(leave-9, You-6)
ccomp(says-3, want-7)
aux(leave-9, to-8)
xcomp(want-7, leave-9)
dobj(leave-9, me-10)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB deny)
              (NP (PRP it)))))))
    (. .) ('' '')))

aux(try-3, Do-1)
neg(try-3, n't-2)
root(ROOT-0, try-3)
aux(deny-5, to-4)
xcomp(try-3, deny-5)
dobj(deny-5, it-6)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (TO to)
                (VP (VB say))))))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (VP
        (VP (VBD held)
          (PRT (RP in)))
        (CC and)
        (VP (VBD did) (RB n't)
          (VP (VB say)
            (NP (NN nothing))
            (ADVP (IN at) (DT all))))))
    (. .)))

nsubj(know-4, We-1)
aux(know-4, did-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
nsubj(say-7, what-5)
aux(say-7, to-6)
ccomp(know-4, say-7)
xcomp(know-4, say-7)
dep(know-4, so-9)
nsubj(held-11, we-10)
nsubj(say-16, we-10)
parataxis(know-4, held-11)
prt(held-11, in-12)
aux(say-16, did-14)
neg(say-16, n't-15)
parataxis(know-4, say-16)
conj_and(held-11, say-16)
dobj(say-16, nothing-17)
advmod(say-16, at-18)
pobj(at-18, all-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD went)
          (NP (JJ aft)))
        (CC and)
        (VP (VBD set)
          (PRT (RP down)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD could) (RB n't)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB git)
                (NP (DT that) (NN thing))
                (PRT (RP out))
                (PP (IN of)
                  (NP (PRP$ his) (NN mind)))))))))
    (. .)))

nsubj(went-2, He-1)
nsubj(set-5, He-1)
root(ROOT-0, went-2)
dobj(went-2, aft-3)
conj_and(went-2, set-5)
prt(set-5, down-6)
nsubj(seem-12, he-9)
nsubj(git-14, he-9)
aux(seem-12, could-10)
neg(seem-12, n't-11)
conj_but(went-2, seem-12)
aux(git-14, to-13)
xcomp(seem-12, git-14)
det(thing-16, that-15)
dobj(git-14, thing-16)
poss(mind-20, his-19)
prep_out_of(git-14, mind-20)

(ROOT
  (S
    (S
      (ADVP
        (ADVP (RB Every) (RB now))
        (CC and)
        (ADVP (RB then)))
      (NP (PRP he))
      (VP (MD would)
        (VP
          (VP (VB rip)
            (PRT (RP out))
            (NP
              (NP (NN something))
              (PP (IN about)
                (NP (PRP it)))))
          (, ,)
          (CC and)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB make)
                  (S
                    (NP (PRP us))
                    (VP (VB answer)
                      (NP (PRP him)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP das) (RB n't)))
    (. .)))

advmod(now-2, Every-1)
advmod(rip-7, now-2)
conj_and(now-2, then-4)
advmod(rip-7, then-4)
nsubj(rip-7, he-5)
nsubj(try-14, he-5)
nsubj(make-16, he-5)
aux(rip-7, would-6)
root(ROOT-0, rip-7)
prt(rip-7, out-8)
dobj(rip-7, something-9)
prep_about(something-9, it-11)
conj_and(rip-7, try-14)
aux(make-16, to-15)
xcomp(try-14, make-16)
nsubj(answer-18, us-17)
ccomp(make-16, answer-18)
dobj(answer-18, him-19)
nsubj(das-23, we-22)
conj_but(rip-7, das-23)
neg(das-23, n't-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD got)
        (NP (NN lonesomer)
          (CC and)
          (NN lonesomer))
        (ADVP (RB right) (RB along))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD did)
        (SBAR
          (S
            (VP (VBP seem)
              (PP (TO to)
                (NP (PRP me)))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD could) (RB n't)
                    (VP (VB stand)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(got-2, It-1)
root(ROOT-0, got-2)
dobj(got-2, lonesomer-3)
dobj(got-2, lonesomer-5)
conj_and(lonesomer-3, lonesomer-5)
advmod(along-7, right-6)
advmod(got-2, along-7)
nsubj(did-11, it-10)
conj_and(got-2, did-11)
ccomp(did-11, seem-12)
prep_to(seem-12, me-14)
nsubj(stand-18, I-15)
aux(stand-18, could-16)
neg(stand-18, n't-17)
ccomp(seem-12, stand-18)
dobj(stand-18, it-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP
        (ADJP (RB still) (JJR worse))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN night))
            (VP (VBN begun)
              (S
                (VP (TO to)
                  (VP (VB come)
                    (PRT (RP on))))))))))
    (. .)))

nsubj(worse-4, It-1)
cop(worse-4, was-2)
advmod(worse-4, still-3)
root(ROOT-0, worse-4)
advmod(begun-7, when-5)
nsubj(begun-7, night-6)
nsubj(come-9, night-6)
ccomp(worse-4, begun-7)
aux(come-9, to-8)
xcomp(begun-7, come-9)
prt(come-9, on-10)

(ROOT
  (FRAG
    (PP (IN By)
      (CC and)
      (IN by)
      (NP
        (NP
          (NP (NNP Tom) (NNP pinched))
          (NP (PRP me)))
        (CC and)
        (NP (NNS whispers))))
    (: :) (`` ``)
    (NP (NN Look))
    (. !) ('' '')))

nn(pinched-5, Tom-4)
prep_by(Look-11, pinched-5)
prep_by(Look-11', pinched-5)
dep(pinched-5, me-6)
conj_and(pinched-5, whispers-8)
prep_by(Look-11, whispers-8)
root(ROOT-0, Look-11)
conj_and(Look-11, Look-11')

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD took)
        (NP (DT a) (NN glance) (NN aft)))
      (, ,)
      (CC and)
      (VP (VBP see)
        (NP (DT the) (NN professor))
        (S
          (VP (VBG taking)
            (NP (DT a) (NN whet))
            (PRT (RP out))
            (PP (IN of)
              (NP (DT a) (NN bottle)))))))
    (. .)))

nsubj(took-2, I-1)
nsubj(see-8, I-1)
root(ROOT-0, took-2)
det(aft-5, a-3)
nn(aft-5, glance-4)
dobj(took-2, aft-5)
conj_and(took-2, see-8)
det(professor-10, the-9)
dobj(see-8, professor-10)
xcomp(see-8, taking-11)
det(whet-13, a-12)
dobj(taking-11, whet-13)
det(bottle-17, a-16)
prep_out_of(taking-11, bottle-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB like)
        (NP
          (NP (DT the) (NNS looks))
          (PP (IN of)
            (NP (DT that))))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, did-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
det(looks-6, the-5)
dobj(like-4, looks-6)
prep_of(looks-6, that-8)

(ROOT
  (S
    (S
      (PP (IN By)
        (PRN (CC and)
          (PP (IN by))))
      (NP (PRP he))
      (VP (VBD took)
        (NP (DT another) (NN drink))))
    (, ,)
    (CC and)
    (ADVP (RB pretty) (RB soon))
    (S
      (NP (PRP he))
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB sing))))))
    (. .)))

prep(took-5, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
nsubj(took-5, he-4)
root(ROOT-0, took-5)
det(drink-7, another-6)
dobj(took-5, drink-7)
advmod(soon-11, pretty-10)
advmod(took-5, soon-11)
conj_and(took-5, soon-11)
nsubj(begun-13, he-12)
nsubj(sing-15, he-12)
conj_and(took-5, begun-13)
aux(sing-15, to-14)
xcomp(begun-13, sing-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (UCP
        (ADJP (JJ dark) (RB now))
        (, ,)
        (CC and)
        (VP (VBG getting)
          (ADJP (JJ black)
            (CC and)
            (JJ stormy)))))
    (. .)))

nsubj(dark-3, It-1)
nsubj(black-8, It-1)
cop(dark-3, was-2)
root(ROOT-0, dark-3)
advmod(dark-3, now-4)
dep(black-8, getting-7)
conj_and(dark-3, black-8)
conj_and(dark-3, stormy-10)
conj_and(black-8, stormy-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD went)
        (PP (IN on)
          (NP (NN singing) (, ,) (NN wilder)
            (CC and)
            (NN wilder)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (NN thunder))
        (VP (VBN begun)
          (PP (TO to)
            (NP
              (NP (NN mutter))
              (, ,)
              (CC and)
              (NP (DT the) (NN wind))))
          (S
            (VP (TO to)
              (VP (VB wheeze)
                (CC and)
                (VB moan)
                (PP (IN among)
                  (NP (DT the) (NNS ropes))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB altogether))
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ awful)))))
    (. .)))

nsubj(went-2, He-1)
root(ROOT-0, went-2)
prep_on(went-2, singing-4)
prep_on(went-2, wilder-6)
conj_and(singing-4, wilder-6)
prep_on(went-2, wilder-8)
conj_and(singing-4, wilder-8)
det(thunder-12, the-11)
nsubj(begun-13, thunder-12)
nsubj(wheeze-21, thunder-12)
nsubj(moan-23, thunder-12)
conj_and(went-2, begun-13)
prep_to(begun-13, mutter-15)
det(wind-19, the-18)
prep_to(begun-13, wind-19)
conj_and(mutter-15, wind-19)
aux(wheeze-21, to-20)
xcomp(begun-13, wheeze-21)
xcomp(begun-13, moan-23)
conj_and(wheeze-21, moan-23)
det(ropes-26, the-25)
prep_among(wheeze-21, ropes-26)
advmod(awful-32, altogether-29)
nsubj(awful-32, it-30)
cop(awful-32, was-31)
conj_and(went-2, awful-32)
conj_and(begun-13, awful-32)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD got)
        (ADJP (RB so) (JJ black))
        (SBAR
          (S
            (NP (PRP we))
            (VP
              (VP (MD could) (RB n't)
                (VP (VB see)
                  (NP (PRP him))
                  (ADVP (DT any) (RBR more))))
              (, ,)
              (CC and)
              (VP (VBD wished)
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (MD could) (RB n't)
                      (VP (VB hear)
                        (NP (PRP him))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD could)))
    (. .)))

nsubj(black-4, It-1)
dep(black-4, got-2)
advmod(black-4, so-3)
root(ROOT-0, black-4)
nsubj(see-8, we-5)
nsubj(wished-14, we-5)
aux(see-8, could-6)
neg(see-8, n't-7)
ccomp(black-4, see-8)
dobj(see-8, him-9)
dep(more-11, any-10)
advmod(see-8, more-11)
ccomp(black-4, wished-14)
conj_and(see-8, wished-14)
nsubj(hear-18, we-15)
aux(hear-18, could-16)
neg(hear-18, n't-17)
ccomp(wished-14, hear-18)
dobj(hear-18, him-19)
nsubj(could-23, we-22)
conj_but(black-4, could-23)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD got)
        (ADVP (RB still))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD war) (RB n't)
          (VP
            (ADVP (RB still))
            (NP (CD ten) (NNS minutes))
            (SBAR (IN till)
              (S
                (NP (PRP we))
                (VP (VBD got)
                  (ADJP (JJ suspicious)))))))
        (, ,)
        (CC and)
        (VP (VBD wished)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB start)
                  (PRT (RP up))
                  (NP (PRP$ his) (NN noise))
                  (ADVP (RB again))
                  (, ,)
                  (SBAR (IN so)
                    (S
                      (NP (PRP we))
                      (VP (MD could)
                        (VP (VB tell)
                          (SBAR
                            (WHADVP (WRB where))
                            (S
                              (NP (PRP he))
                              (VP (VBD was)))))))))))))))
    (. .)))

advmod(got-3, Then-1)
nsubj(got-3, he-2)
root(ROOT-0, got-3)
advmod(got-3, still-4)
nsubj(war-8, he-7)
nsubj(wished-19, he-7)
conj_but(got-3, war-8)
neg(war-8, n't-9)
advmod(minutes-12, still-10)
num(minutes-12, ten-11)
dep(war-8, minutes-12)
mark(suspicious-16, till-13)
nsubj(suspicious-16, we-14)
dep(suspicious-16, got-15)
advcl(minutes-12, suspicious-16)
conj_but(got-3, wished-19)
conj_and(war-8, wished-19)
nsubj(start-22, he-20)
aux(start-22, would-21)
ccomp(wished-19, start-22)
prt(start-22, up-23)
poss(noise-25, his-24)
dobj(start-22, noise-25)
advmod(start-22, again-26)
mark(tell-31, so-28)
nsubj(tell-31, we-29)
aux(tell-31, could-30)
advcl(start-22, tell-31)
advmod(was-34, where-32)
nsubj(was-34, he-33)
ccomp(tell-31, was-34)

(ROOT
  (S
    (S
      (S
        (PP (IN By)
          (PRN (CC and)
            (PP (IN by))))
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN flash))
            (PP (IN of)
              (NP (NN lightning))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP (VBP see)
          (SBAR
            (S
              (NP (PRP him))
              (VP (VBP start)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (PRT (RP up)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD staggered))
        (CC and)
        (VP (VBD fell)
          (PRT (RP down)))))
    (. .)))

prep(was-5, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
expl(was-5, there-4)
root(ROOT-0, was-5)
det(flash-7, a-6)
nsubj(was-5, flash-7)
prep_of(flash-7, lightning-9)
nsubj(see-13, we-12)
conj_and(was-5, see-13)
nsubj(start-15, him-14)
nsubj(get-17, him-14)
ccomp(see-13, start-15)
aux(get-17, to-16)
xcomp(start-15, get-17)
prt(get-17, up-18)
nsubj(staggered-22, he-21)
nsubj(fell-24, he-21)
conj_but(was-5, staggered-22)
conj_but(was-5, fell-24)
conj_and(staggered-22, fell-24)
prt(fell-24, down-25)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD heard)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP scream)
              (PRT (RP out))
              (PP (IN in)
                (NP (DT the) (NN dark))))))))
    (: :) (`` ``)
    (S
      (NP (PRP They))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB go)
                (PP (TO to)
                  (NP (NNP England)))))))))
    (. .)))

nsubj(heard-2, We-1)
root(ROOT-0, heard-2)
nsubj(scream-4, him-3)
ccomp(heard-2, scream-4)
prt(scream-4, out-5)
det(dark-8, the-7)
prep_in(scream-4, dark-8)
nsubj(want-14, They-11)
nsubj(go-16, They-11)
aux(want-14, do-12)
neg(want-14, n't-13)
parataxis(heard-2, want-14)
aux(go-16, to-15)
xcomp(want-14, go-16)
prep_to(go-16, England-18)

(ROOT
  (S
    (ADVP (DT All) (NN right))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB change)
        (NP (DT the) (NN course))))
    (. .)))

det(right-2, All-1)
advmod(change-6, right-2)
nsubj(change-6, I-4)
aux(change-6, 'll-5)
root(ROOT-0, change-6)
det(course-8, the-7)
dobj(change-6, course-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB leave)
            (NP (PRP me))))))
    (. .)))

nsubj(want-2, They-1)
nsubj(leave-4, They-1)
root(ROOT-0, want-2)
aux(leave-4, to-3)
xcomp(want-2, leave-4)
dobj(leave-4, me-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP do)))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(do-4, they-3)
ccomp(know-2, do-4)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP they))
      (VP (MD shall)))
    (: --)
    (CC and)
    (ADVP (RB NOW))
    (. !) ('' '')))

discourse(shall-4, Well-1)
nsubj(shall-4, they-3)
root(ROOT-0, shall-4)
advmod(shall-4, NOW-7)
conj_and(shall-4, NOW-7)

(ROOT
  (S
    (NP (PRP I))
    (`` `)
    (VP
      (ADVP (RBS most))
      (VBD died)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD said)
            (NP (DT that))))))
    (. .)))

nsubj(died-4, I-1)
advmod(died-4, most-3)
root(ROOT-0, died-4)
advmod(said-7, when-5)
nsubj(said-7, he-6)
advcl(died-4, said-7)
dobj(said-7, that-8)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD was)
        (ADVP (RB still))
        (ADVP (RB again))))
    (: --)
    (S
      (S
        (ADVP (RB still))
        (ADVP (RB so) (RB long))
        (NP (PRP I))
        (VP (MD could) (RB n't)
          (VP (VB bear)
            (NP (PRP it)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD did)
          (SBAR
            (S
              (VP (VBP seem)
                (PP (TO to)
                  (NP (PRP me)))
                (SBAR
                  (S
                    (NP (DT the) (NN lightning))
                    (VP (MD would) (RB n't)
                      (ADVP (RB EVER))
                      (VP (VB come)
                        (ADVP (RB again))))))))))))
    (. .)))

advmod(was-3, Then-1)
nsubj(was-3, he-2)
root(ROOT-0, was-3)
advmod(was-3, still-4)
advmod(was-3, again-5)
advmod(bear-13, still-7)
advmod(long-9, so-8)
advmod(bear-13, long-9)
nsubj(bear-13, I-10)
aux(bear-13, could-11)
neg(bear-13, n't-12)
parataxis(was-3, bear-13)
dobj(bear-13, it-14)
nsubj(did-18, it-17)
parataxis(was-3, did-18)
conj_and(bear-13, did-18)
ccomp(did-18, seem-19)
prep_to(seem-19, me-21)
det(lightning-23, the-22)
nsubj(come-27, lightning-23)
aux(come-27, would-24)
neg(come-27, n't-25)
advmod(come-27, EVER-26)
ccomp(seem-19, come-27)
advmod(come-27, again-28)

(ROOT
  (S (CC But)
    (PP (IN at)
      (NP (JJ last)))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ blessed) (NN flash))
        (, ,)
        (CC and)
        (NP
          (NP (RB there))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was) (, ,)
                (PP (IN on)
                  (NP (PRP$ his) (NNS hands)
                    (CC and)
                    (NNS knees)))
                (S
                  (VP (VBG crawling)))))))
        (, ,)
        (CC and)
        (ADVP (RB not)
          (NP (CD four) (NNS feet))
          (PP (IN from)
            (NP (PRP us))))))
    (. .)))

cc(was-5, But-1)
prep_at(was-5, last-3)
expl(was-5, there-4)
root(ROOT-0, was-5)
det(flash-8, a-6)
amod(flash-8, blessed-7)
nsubj(was-5, flash-8)
nsubj(was-5, there-11)
conj_and(flash-8, there-11)
nsubj(was-13, he-12)
rcmod(there-11, was-13)
poss(hands-17, his-16)
prep_on(was-13, hands-17)
prep_on(was-13, knees-19)
conj_and(hands-17, knees-19)
xcomp(was-13, crawling-20)
nsubj(was-5, not-23)
advmod(flash-8, not-23)
conj_and(flash-8, not-23)
num(feet-25, four-24)
dep(not-23, feet-25)
prep_from(not-23, us-27)

(ROOT
  (FRAG
    (NP (NNP My))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ his) (NNS eyes))
      (VP (VBD was)
        (ADJP (JJ terrible))))
    (. !)))

root(ROOT-0, My-1)
cc(My-1, but-3)
poss(eyes-5, his-4)
nsubj(terrible-7, eyes-5)
cop(terrible-7, was-6)
dep(My-1, terrible-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD made)
        (NP (DT a) (NN lunge))
        (PP (IN for)
          (NP (NNP Tom))))
      (, ,)
      (CC and)
      (VP (VBZ says) (, ,) (`` ``)
        (S
          (NP (NNP Overboard) (NNP YOU))
          (VP (VB go)))))
    (. !) ('' '')))

nsubj(made-2, He-1)
nsubj(says-9, He-1)
root(ROOT-0, made-2)
det(lunge-4, a-3)
dobj(made-2, lunge-4)
prep_for(made-2, Tom-6)
conj_and(made-2, says-9)
nn(YOU-13, Overboard-12)
nsubj(go-14, YOU-13)
ccomp(says-9, go-14)

(ROOT
  (S (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB already) (JJ pitch-dark))
        (ADVP (RB again))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (MD could) (RB n't)
          (VP (VB see)
            (SBAR (IN whether)
              (S
                (NP (PRP he))
                (VP (VBD got)
                  (NP (PRP him))))
              (CC or)
              (RB not)))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Tom))
        (VP (VBD did) (RB n't)
          (VP (VB make)
            (NP (DT a) (NN sound))))))
    (. .)))

nsubj(pitch-dark-5, it-2)
cop(pitch-dark-5, was-3)
advmod(pitch-dark-5, already-4)
root(ROOT-0, pitch-dark-5)
advmod(pitch-dark-5, again-6)
nsubj(see-12, I-9)
aux(see-12, could-10)
neg(see-12, n't-11)
conj_and(pitch-dark-5, see-12)
mark(got-15, whether-13)
nsubj(got-15, he-14)
ccomp(see-12, got-15)
dobj(got-15, him-16)
ccomp(see-12, not-18)
conj_or(got-15, not-18)
nsubj(make-24, Tom-21)
aux(make-24, did-22)
neg(make-24, n't-23)
conj_and(pitch-dark-5, make-24)
conj_and(see-12, make-24)
det(sound-26, a-25)
dobj(make-24, sound-26)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD was)
          (NP (DT another) (JJ long) (, ,) (JJ horrible) (NN wait))))
      (: ;) (RB then)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a) (NN flash)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP see)
        (S
          (NP
            (NP (NNP Tom) (POS 's))
            (NN head))
          (VP
            (VP (VB sink)
              (PRT (RP down))
              (PP (IN outside)
                (NP (DT the) (NN boat))))
            (CC and)
            (VP (VB disappear))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(wait-7, another-3)
amod(wait-7, long-4)
amod(wait-7, horrible-6)
nsubj(was-2, wait-7)
advmod(was-2, then-9)
expl(was-11, there-10)
parataxis(was-2, was-11)
det(flash-13, a-12)
nsubj(was-11, flash-13)
nsubj(see-17, I-16)
conj_and(was-2, see-17)
poss(head-20, Tom-18)
nsubj(sink-21, head-20)
nsubj(disappear-27, head-20)
ccomp(see-17, sink-21)
prt(sink-21, down-22)
det(boat-25, the-24)
prep_outside(sink-21, boat-25)
ccomp(see-17, disappear-27)
conj_and(sink-21, disappear-27)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (PP (IN on)
        (NP
          (NP (DT the) (NN rope-ladder))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBN dangled)
                (PRT (RP down))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN air))
                    (PP (IN from)
                      (NP (DT the) (NN gunnel)))))))))))
    (. .)))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
det(rope-ladder-5, the-4)
prep_on(was-2, rope-ladder-5)
nsubj(dangled-7, rope-ladder-5)
rcmod(rope-ladder-5, dangled-7)
prt(dangled-7, down-8)
det(air-11, the-10)
prep_in(dangled-7, air-11)
det(gunnel-14, the-13)
prep_from(air-11, gunnel-14)

(ROOT
  (S
    (S
      (NP (DT The) (NN professor))
      (VP
        (VP (VBD let)
          (PRT (RP off))
          (NP (DT a) (NN shout)))
        (CC and)
        (VP (VBD jumped)
          (PP (IN for)
            (NP (PRP him))))))
    (, ,)
    (CC and)
    (S
      (S
        (ADVP (RB straight))
        (ADVP (RB off))
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ pitch-dark))
          (ADVP (RB again))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP
            (NP (NNP Jim))
            (VP (VBN groaned)
              (PRT (RP out))))
          (, ,) (`` ``)
          (NP
            (NP (NNP Po) (POS '))
            (NNP Mars) (NNP Tom))
          (, ,))
        (NP (PRP he))
        (VP (VBZ 's)
          (NP (DT a) (NN goner)))))
    (. !) ('' '')))

det(professor-2, The-1)
nsubj(let-3, professor-2)
nsubj(jumped-8, professor-2)
root(ROOT-0, let-3)
prt(let-3, off-4)
det(shout-6, a-5)
dobj(let-3, shout-6)
conj_and(let-3, jumped-8)
prep_for(jumped-8, him-10)
advmod(pitch-dark-17, straight-13)
advmod(pitch-dark-17, off-14)
nsubj(pitch-dark-17, it-15)
cop(pitch-dark-17, was-16)
conj_and(let-3, pitch-dark-17)
advmod(pitch-dark-17, again-18)
nsubj(goner-34, Jim-21)
vmod(Jim-21, groaned-22)
prt(groaned-22, out-23)
poss(Tom-29, Po-26)
nn(Tom-29, Mars-28)
dep(Jim-21, Tom-29)
nsubj(goner-34, he-31)
cop(goner-34, 's-32)
det(goner-34, a-33)
conj_and(let-3, goner-34)
conj_and(pitch-dark-17, goner-34)

(ROOT
  (S
    (S
      (NP (NNP and))
      (VP (VBD made)
        (NP (DT a) (NN jump))
        (PP (IN for)
          (NP (DT the) (NN professor)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN professor))
      (VP (VBD war) (RB n't)
        (VP
          (ADVP (RB there)))))
    (. .)))

nsubj(made-2, and-1)
root(ROOT-0, made-2)
det(jump-4, a-3)
dobj(made-2, jump-4)
det(professor-7, the-6)
prep_for(made-2, professor-7)
det(professor-11, the-10)
nsubj(war-12, professor-11)
conj_but(made-2, war-12)
neg(war-12, n't-13)
dep(war-12, there-14)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (PRP we))
        (VP (VBD heard)
          (NP
            (NP (DT a) (NN couple))
            (PP (IN of)
              (NP (JJ terrible) (NNS screams))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (ADVP
          (NP (DT another) (RB not))
          (RB so))
        (ADJP (JJ loud))))
    (, ,)
    (S
      (FRAG (CC and)
        (RB then)
        (NP (DT another)))
      (NP (DT that))
      (VP (VBD was) (`` `)
        (ADVP (NN way) (IN below))
        (, ,)))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD could)
        (ADVP (RB only) (RB JUST))
        (VP (VB hear)
          (NP (PRP it)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD heard)
        (SBAR
          (S
            (NP (NNP Jim))
            (VP (VBP say) (, ,)
              (S
                (ADJP (`` ``) (JJ Po) ('' '))
                (NP (NNP Mars) (NNP Tom))))))))
    (. !) ('' '')))

advmod(heard-3, Then-1)
nsubj(heard-3, we-2)
nsubj(loud-15, we-2)
root(ROOT-0, heard-3)
det(couple-5, a-4)
dobj(heard-3, couple-5)
amod(screams-8, terrible-7)
prep_of(couple-5, screams-8)
advmod(loud-15, then-11)
det(not-13, another-12)
npadvmod(so-14, not-13)
advmod(loud-15, so-14)
conj_and(heard-3, loud-15)
cc(then-18, and-17)
dep(was-21, then-18)
dep(then-18, another-19)
nsubj(was-21, that-20)
conj_and(heard-3, was-21)
dep(below-24, way-23)
advmod(was-21, below-24)
nsubj(hear-31, you-27)
aux(hear-31, could-28)
advmod(JUST-30, only-29)
advmod(hear-31, JUST-30)
conj_and(heard-3, hear-31)
dobj(hear-31, it-32)
nsubj(heard-36, I-35)
conj_and(heard-3, heard-36)
nsubj(say-38, Jim-37)
ccomp(heard-36, say-38)
dep(say-38, Po-41)
nn(Tom-44, Mars-43)
dep(Po-41, Tom-44)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ awful))
        (ADVP (RB still))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP reckon)
        (SBAR
          (S
            (NP (DT a) (NN person))
            (VP (MD could)
              (S
                (NP (`` `)
                  (NP (SYM a))
                  ('' ')
                  (VP (VBN counted)
                    (NP
                      (QP (CD four) (CD thousand)))
                    (PP (IN before)
                      (NP
                        (NP (DT the) (JJ next) (NN flash))
                        (VP (VBN come))))))))))))
    (. .)))

advmod(awful-4, Then-1)
nsubj(awful-4, it-2)
cop(awful-4, was-3)
root(ROOT-0, awful-4)
advmod(awful-4, still-5)
nsubj(reckon-9, I-8)
conj_and(awful-4, reckon-9)
det(person-11, a-10)
nsubj(could-12, person-11)
ccomp(reckon-9, could-12)
dep(could-12, a-14)
vmod(a-14, counted-16)
number(thousand-18, four-17)
dobj(counted-16, thousand-18)
det(flash-22, the-20)
amod(flash-22, next-21)
prep_before(counted-16, flash-22)
vmod(flash-22, come-23)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP it))
          (VP (VBP come))))
      (NP (PRP I))
      (VP (VBP see)
        (NP
          (NP (NNP Jim))
          (PP (IN on)
            (NP (PRP$ his) (NNS knees))))
        (, ,)
        (PP (IN with)
          (NP
            (NP
              (NP (PRP$ his) (NNS arms))
              (PP (IN on)
                (NP (DT the) (NN locker))))
            (CC and)
            (NP
              (NP (PRP$ his) (NN face))
              (VP (VBN buried)
                (PP (IN in)
                  (NP (PRP them)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBG crying))))
    (. .)))

advmod(come-3, When-1)
nsubj(come-3, it-2)
advcl(see-5, come-3)
nsubj(see-5, I-4)
root(ROOT-0, see-5)
dobj(see-5, Jim-6)
poss(knees-9, his-8)
prep_on(Jim-6, knees-9)
poss(arms-13, his-12)
prep_with(see-5, arms-13)
det(locker-16, the-15)
prep_on(arms-13, locker-16)
poss(face-19, his-18)
prep_with(see-5, face-19)
conj_and(arms-13, face-19)
vmod(face-19, buried-20)
prep_in(buried-20, them-22)
nsubj(crying-27, he-25)
aux(crying-27, was-26)
conj_and(see-5, crying-27)

(ROOT
  (S
    (S
      (SBAR (IN Before)
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB look)
              (PRT (RP over))
              (NP (DT the) (NN edge))))))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB all) (JJ dark))
        (ADVP (RB again))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADJP (JJ glad))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBD did) (RB n't)
              (VP (VB want)
                (S
                  (VP (TO to)
                    (VP (VB see))))))))))
    (. .)))

mark(look-4, Before-1)
nsubj(look-4, I-2)
aux(look-4, could-3)
advcl(dark-11, look-4)
prt(look-4, over-5)
det(edge-7, the-6)
dobj(look-4, edge-7)
nsubj(dark-11, it-8)
cop(dark-11, was-9)
advmod(dark-11, all-10)
root(ROOT-0, dark-11)
advmod(dark-11, again-12)
nsubj(glad-17, I-15)
cop(glad-17, was-16)
conj_and(dark-11, glad-17)
mark(want-23, because-19)
nsubj(want-23, I-20)
nsubj(see-25, I-20)
aux(want-23, did-21)
neg(want-23, n't-22)
advcl(glad-17, want-23)
aux(see-25, to-24)
xcomp(want-23, see-25)

(ROOT
  (S
    (S (CC But)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ next) (NN flash))
          (VP (VBP come))))
      (, ,)
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG watching))))
    (, ,)
    (CC and)
    (S
      (S
        (ADVP (RB down) (RB there))
        (NP (PRP I))
        (VP (VBP see)
          (NP (NN somebody) (NN a-swinging))
          (PP (IN in)
            (NP
              (NP (DT the) (NN wind))
              (PP (IN on)
                (NP (DT the) (NN ladder)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (NNP Tom)))))
    (. !)))

advmod(come-6, when-2)
det(flash-5, the-3)
amod(flash-5, next-4)
nsubj(come-6, flash-5)
advcl(watching-10, come-6)
nsubj(watching-10, I-8)
aux(watching-10, was-9)
root(ROOT-0, watching-10)
advmod(there-14, down-13)
advmod(see-16, there-14)
nsubj(see-16, I-15)
conj_and(watching-10, see-16)
nn(a-swinging-18, somebody-17)
dobj(see-16, a-swinging-18)
det(wind-21, the-20)
prep_in(see-16, wind-21)
det(ladder-24, the-23)
prep_on(wind-21, ladder-24)
nsubj(Tom-29, it-27)
cop(Tom-29, was-28)
conj_and(watching-10, Tom-29)
conj_and(see-16, Tom-29)

(ROOT
  (S (`` ``)
    (VP (VB Come)
      (PRT (RP up)))
    (. !) ('' '')))

root(ROOT-0, Come-2)
prt(Come-2, up-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ shouts) (: ;) (`` ``)
      (S
        (VP (VB come)
          (ADVP (RB up))
          (, ,)
          (NP (NNP Tom)))))
    (. !) ('' '')))

nsubj(shouts-2, I-1)
root(ROOT-0, shouts-2)
ccomp(shouts-2, come-5)
advmod(come-5, up-6)
dobj(come-5, Tom-8)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN voice))
      (VP (VBD was)
        (ADJP (RB so) (JJ weak))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN wind))
      (VP (VBD roared)
        (SBAR
          (S
            (S
              (ADVP (RB so))
              (, ,)
              (NP (PRP I))
              (VP (MD could) (RB n't)
                (VP (VB make)
                  (PRT (RP out))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP he))
                      (VP (VBD said)))))))
            (, ,)
            (CC but)
            (S
              (NP (PRP I))
              (VP (VBD thought)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD asked)
                      (SBAR
                        (S
                          (VP (VBD was)
                            (NP (DT the) (NN professor))
                            (ADVP (RB up) (RB there))))))))))))))
    (. .)))

poss(voice-2, His-1)
nsubj(weak-5, voice-2)
cop(weak-5, was-3)
advmod(weak-5, so-4)
root(ROOT-0, weak-5)
det(wind-9, the-8)
nsubj(roared-10, wind-9)
conj_and(weak-5, roared-10)
advmod(make-16, so-11)
nsubj(make-16, I-13)
aux(make-16, could-14)
neg(make-16, n't-15)
dep(roared-10, make-16)
prt(make-16, out-17)
dobj(said-20, what-18)
nsubj(said-20, he-19)
ccomp(make-16, said-20)
nsubj(thought-24, I-23)
dep(roared-10, thought-24)
conj_but(make-16, thought-24)
nsubj(asked-26, he-25)
ccomp(thought-24, asked-26)
cop(professor-29, was-27)
det(professor-29, the-28)
ccomp(asked-26, professor-29)
advmod(there-31, up-30)
advmod(professor-29, there-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ shouts) (: :) (`` ``)
      (S
        (INTJ (UH No))
        (, ,)
        (NP (PRP he))
        (VP (VBZ 's)
          (ADVP (RB down))
          (PP (IN in)
            (NP (DT the) (NN ocean))))))
    (. !)))

nsubj(shouts-2, I-1)
root(ROOT-0, shouts-2)
discourse('s-8, No-5)
nsubj('s-8, he-7)
ccomp(shouts-2, 's-8)
advmod('s-8, down-9)
det(ocean-12, the-11)
prep_in('s-8, ocean-12)

(ROOT
  (S
    (VP (VB Come)
      (PRT (RP up)))
    (. !)))

root(ROOT-0, Come-1)
prt(Come-1, up-2)

(ROOT
  (SQ (MD Can)
    (NP (PRP we))
    (VP (VBP help)
      (NP (PRP you)))
    (. ?) ('' '')))

aux(help-3, Can-1)
nsubj(help-3, we-2)
root(ROOT-0, help-3)
dobj(help-3, you-4)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP
      (NP (PDT all) (DT this))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. .)))

prep_of(this-5, course-2)
predet(this-5, all-4)
root(ROOT-0, this-5)
det(dark-8, the-7)
prep_in(this-5, dark-8)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Huck))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (NP
              (NP (PRP you))
              (VP (VBN hollerin) ('' ')
                (PP (IN at))))))))
    (. ?) ('' '')))

root(ROOT-0, Huck-2)
nsubj(you-6, Huck-2)
cop(you-6, is-5)
rcmod(Huck-2, you-6)
vmod(you-6, hollerin-7)
prep(hollerin-7, at-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ hollerin) ('' ')
        (PP (IN at)
          (NP (NNP Tom)))))
    (. .) ('' '')))

nsubj(hollerin-4, I-2)
cop(hollerin-4, 'm-3)
root(ROOT-0, hollerin-4)
prep_at(hollerin-4, Tom-7)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (NNP Huck))
      (, ,)
      (ADVP (WRB how))
      (VP (VBP kin)
        (S
          (NP (PRP you))
          (VP (VB act)
            (ADVP (RB so))))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP know)
              (NP
                (NP (NNP po) (POS '))
                (NNP Mars) (NNP Tom)))))))
    (: --) ('' '')
    (S
      (S
        (ADVP (RB Then))
        (NP (PRP he))
        (VP
          (VP (VBD let)
            (PRT (RP off))
            (NP (DT an) (JJ awful) (NN scream)))
          (, ,)
          (CC and)
          (VP
            (VP (VB flung)
              (NP
                (NP (PRP$ his) (NN head))
                (CC and)
                (NP (PRP$ his) (NNS arms)))
              (ADVP (RB back)))
            (CC and)
            (VP (VB let)
              (PRT (RP off))
              (NP (DT another) (NN one))))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (EX there))
              (VP (VBD was)
                (NP
                  (NP (DT a) (JJ white) (NN glare))
                  (ADVP (RB just)))
                (ADVP (RB then)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN raised)
            (PRT (RP up))
            (NP
              (NP (PRP$ his) (NN face) (RB just))
              (PP (IN in)
                (NP (NN time))))
            (S
              (VP (TO to)
                (VP
                  (VP (VB see)
                    (NP
                      (NP
                        (NP (NNP Tom) (POS 's))
                        (ADJP (, ,) (RB as) (JJ white)
                          (PP (IN as)
                            (NP (NN snow)))
                          (, ,))
                        (NN rise))
                      (PP (IN above)
                        (NP (DT the) (NN gunnel)))))
                  (CC and)
                  (VP (VB look)
                    (NP (PRP him))
                    (ADVP (RB right)
                      (PP (IN in)
                        (NP (DT the) (NN eye))))))))))))
    (. .)))

discourse(kin-7, Oh-2)
nsubj(kin-7, Huck-4)
advmod(kin-7, how-6)
root(ROOT-0, kin-7)
nsubj(act-9, you-8)
ccomp(kin-7, act-9)
advmod(act-9, so-10)
advmod(know-14, when-12)
nsubj(know-14, you-13)
advcl(kin-7, know-14)
poss(Tom-18, po-15)
nn(Tom-18, Mars-17)
dobj(know-14, Tom-18)
advmod(let-23, Then-21)
nsubj(let-23, he-22)
nsubj(flung-30, he-22)
parataxis(kin-7, let-23)
prt(let-23, off-24)
det(scream-27, an-25)
amod(scream-27, awful-26)
dobj(let-23, scream-27)
parataxis(kin-7, flung-30)
conj_and(let-23, flung-30)
poss(head-32, his-31)
dobj(flung-30, head-32)
poss(arms-35, his-34)
dobj(flung-30, arms-35)
conj_and(head-32, arms-35)
advmod(flung-30, back-36)
conj_and(let-23, let-38)
conj_and(flung-30, let-38)
prt(let-38, off-39)
det(one-41, another-40)
dobj(let-38, one-41)
mark(was-45, because-43)
expl(was-45, there-44)
parataxis(kin-7, was-45)
advcl(let-23, was-45)
conj_and(let-23, was-45)
det(glare-48, a-46)
amod(glare-48, white-47)
nsubj(was-45, glare-48)
advmod(glare-48, just-49)
advmod(was-45, then-50)
nsubj(raised-55, he-53)
aux(raised-55, had-54)
parataxis(kin-7, raised-55)
conj_and(let-23, raised-55)
prt(raised-55, up-56)
poss(face-58, his-57)
dobj(raised-55, face-58)
advmod(face-58, just-59)
prep_in(face-58, time-61)
aux(see-63, to-62)
vmod(raised-55, see-63)
poss(rise-72, Tom-64)
advmod(white-68, as-67)
amod(rise-72, white-68)
prep_as(white-68, snow-70)
dobj(see-63, rise-72)
det(gunnel-75, the-74)
prep_above(rise-72, gunnel-75)
vmod(raised-55, look-77)
conj_and(see-63, look-77)
dobj(look-77, him-78)
advmod(look-77, right-79)
det(eye-82, the-81)
prep_in(right-79, eye-82)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (NNP Tom) (POS 's))
                (NN ghost)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP see))
    (. .)))

nsubj(thought-2, He-1)
ccomp(see-10, thought-2)
nsubj(ghost-7, it-3)
cop(ghost-7, was-4)
poss(ghost-7, Tom-5)
ccomp(thought-2, ghost-7)
nsubj(see-10, you-9)
root(ROOT-0, see-10)

(ROOT
  (S
    (S
      (S
        (NP (NNP Tom))
        (VP (VB clumb)
          (ADVP (RB aboard))))
      (, ,)
      (CC and)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NNP Jim))
            (VP
              (VP (VBD found)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD WAS)
                      (NP (PRP him))))))
              (, ,)
              (CC and)
              (VP (RB not)
                (NP (PRP$ his) (NN ghost))))))
        (, ,)
        (NP (PRP he))
        (VP
          (VP (VBD hugged)
            (NP (PRP him)))
          (, ,)
          (CC and)
          (VP (VBD called)
            (S
              (NP (PRP him))
              (NP
                (NP (DT all) (NNS sorts))
                (PP (IN of)
                  (NP (JJ loving) (NNS names))))))
          (, ,)
          (CC and)
          (VP (VBD carried)
            (PP (IN on)
              (SBAR (IN like)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBN gone)
                      (S
                        (ADJP (JJ crazy))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB so) (JJ glad)))
    (. .)))

nsubj(clumb-2, Tom-1)
ccomp(glad-43, clumb-2)
advmod(clumb-2, aboard-3)
advmod(found-8, when-6)
nsubj(found-8, Jim-7)
advcl(hugged-19, found-8)
nsubj(him-11, it-9)
cop(him-11, WAS-10)
ccomp(found-8, him-11)
neg(ghost-16, not-14)
poss(ghost-16, his-15)
conj_and(found-8, ghost-16)
advcl(hugged-19, ghost-16)
nsubj(hugged-19, he-18)
nsubj(called-23, he-18)
nsubj(carried-32, he-18)
conj_and(clumb-2, hugged-19)
ccomp(glad-43, hugged-19)
dobj(hugged-19, him-20)
conj_and(clumb-2, called-23)
conj_and(hugged-19, called-23)
nsubj(sorts-26, him-24)
det(sorts-26, all-25)
xcomp(called-23, sorts-26)
amod(names-29, loving-28)
prep_of(sorts-26, names-29)
conj_and(clumb-2, carried-32)
conj_and(hugged-19, carried-32)
mark(gone-37, like-34)
nsubjpass(gone-37, he-35)
auxpass(gone-37, was-36)
prepc_on(carried-32, gone-37)
xcomp(gone-37, crazy-38)
nsubj(glad-43, he-40)
cop(glad-43, was-41)
advmod(glad-43, so-42)
root(ROOT-0, glad-43)

(ROOT
  (SINV
    (VP (VBZ Says))
    (NP (PRP I))
    (: :) (`` ``)
    (SBARQ
      (WHNP (WP What))
      (SQ (VBD did)
        (NP (PRP you))
        (VP (VB wait)
          (PP (IN for))
          (, ,)
          (S
            (NP (NNP Tom)))))
      (. ?))))

root(ROOT-0, Says-1)
nsubj(Says-1, I-2)
dep(wait-8, What-5)
aux(wait-8, did-6)
nsubj(wait-8, you-7)
dep(Says-1, wait-8)
prep(wait-8, for-9)
dep(wait-8, Tom-11)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBD did) (RB n't)
      (NP (PRP you))
      (VP (VB come)
        (PRT (RP up))
        (PP (IN at)
          (NP (JJ first)))))
    (. ?) ('' '')))

advmod(come-5, Why-1)
aux(come-5, did-2)
neg(come-5, n't-3)
nsubj(come-5, you-4)
root(ROOT-0, come-5)
prt(come-5, up-6)
prep_at(come-5, first-8)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP das) (RB n't)))
    (, ,)
    (VP (VBD Huck))
    (. .)))

nsubj(das-3, I-2)
ccomp(Huck-6, das-3)
neg(das-3, n't-4)
root(ROOT-0, Huck-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD knowed)
        (SBAR
          (S
            (NP (NN somebody))
            (VP (VBD plunged)
              (PRT (RP down))
              (PP (IN past)
                (NP (PRP me))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP who))
            (S
              (NP (PRP it))
              (VP (VBD was)
                (PP (IN in)
                  (NP (DT the) (NN dark)))))))))
    (. .)))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
nsubj(plunged-4, somebody-3)
ccomp(knowed-2, plunged-4)
prt(plunged-4, down-5)
prep_past(plunged-4, me-7)
nsubj(know-13, I-10)
aux(know-13, did-11)
neg(know-13, n't-12)
conj_but(knowed-2, know-13)
dobj(was-16, who-14)
nsubj(was-16, it-15)
ccomp(know-13, was-16)
det(dark-19, the-18)
prep_in(was-16, dark-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD could)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN been)
              (NP (PRP you)))))))
    (, ,)
    (NP (PRP it))
    (VP (MD could)
      (S
        (NP (`` `)
          (NP (SYM a))
          ('' ')
          (VP (VBN been)
            (NP (NNP Jim))))))
    (. .) ('' '')))

nsubj(could-2, It-1)
ccomp(could-10, could-2)
dep(could-2, a-4)
cop(you-7, been-6)
vmod(a-4, you-7)
nsubj(could-10, it-9)
root(ROOT-0, could-10)
dep(could-10, a-12)
cop(Jim-15, been-14)
vmod(a-12, Jim-15)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN way))
        (PP (IN with)
          (NP
            (NP (NNP Tom) (NNP Sawyer))
            (: --)
            (ADVP (RB always))
            (NP (NN sound))))))
    (. .)))

nsubj(way-4, That-1)
cop(way-4, was-2)
det(way-4, the-3)
root(ROOT-0, way-4)
nn(Sawyer-7, Tom-6)
prep_with(way-4, Sawyer-7)
advmod(Sawyer-7, always-9)
dep(Sawyer-7, sound-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBP war) (RB n't)
      (VP (VBG coming)
        (PRT (RP up))
        (SBAR (IN till)
          (S
            (NP (PRP he))
            (VP (VBD knowed)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (DT the) (NN professor))
                  (VP (VBD was)))))))))
    (. .)))

nsubj(war-2, He-1)
root(ROOT-0, war-2)
neg(war-2, n't-3)
dep(war-2, coming-4)
prt(coming-4, up-5)
mark(knowed-8, till-6)
nsubj(knowed-8, he-7)
advcl(coming-4, knowed-8)
advmod(was-12, where-9)
det(professor-11, the-10)
nsubj(was-12, professor-11)
advcl(knowed-8, was-12)

(ROOT
  (S
    (S
      (NP (DT The) (NN storm))
      (VP (VBP let)
        (VP (VB go)
          (PP (IN about)
            (NP
              (NP (DT this) (NN time))
              (PP (IN with)
                (NP (PDT all) (PRP$ its) (NN might))))))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (VP (VBG dreadful)
            (NP
              (NP (DT the) (NN way))
              (SBAR
                (S
                  (NP (DT the) (NN thunder))
                  (VP
                    (VP (VBD boomed))
                    (CC and)
                    (VP (VBD tore)))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN lightning))
          (VP (VBD glared)
            (PRT (RP out))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (DT the) (NN wind))
            (VP
              (VP (VBZ sung))
              (CC and)
              (VP (VBD screamed)
                (PP (IN in)
                  (NP (DT the) (NN rigging))))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (NN rain))
            (VP (VBP come)
              (PRT (RP down)))))))
    (. .)))

det(storm-2, The-1)
nsubj(let-3, storm-2)
root(ROOT-0, let-3)
xcomp(let-3, go-4)
det(time-7, this-6)
prep_about(go-4, time-7)
predet(might-11, all-9)
poss(might-11, its-10)
prep_with(time-7, might-11)
nsubj(dreadful-16, it-14)
aux(dreadful-16, was-15)
conj_and(let-3, dreadful-16)
det(way-18, the-17)
dobj(dreadful-16, way-18)
det(thunder-20, the-19)
nsubj(boomed-21, thunder-20)
nsubj(tore-23, thunder-20)
rcmod(way-18, boomed-21)
rcmod(way-18, tore-23)
conj_and(boomed-21, tore-23)
det(lightning-27, the-26)
nsubj(glared-28, lightning-27)
conj_and(let-3, glared-28)
conj_and(dreadful-16, glared-28)
prt(glared-28, out-29)
det(wind-33, the-32)
nsubj(sung-34, wind-33)
nsubj(screamed-36, wind-33)
conj_and(dreadful-16, sung-34)
conj_and(glared-28, sung-34)
conj_and(glared-28, screamed-36)
conj_and(sung-34, screamed-36)
det(rigging-39, the-38)
prep_in(screamed-36, rigging-39)
det(rain-43, the-42)
nsubj(come-44, rain-43)
conj_and(glared-28, come-44)
conj_and(sung-34, come-44)
prt(come-44, down-45)

(ROOT
  (S
    (S
      (NP (CD One) (NN second))
      (NP (PRP you))
      (VP (MD could) (RB n't)
        (VP (VB see)
          (NP (PRP$ your) (NN hand))
          (PP (IN before)
            (NP (PRP you))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ next) (NN you))
      (VP (MD could)
        (VP
          (VP (VB count)
            (NP (DT the) (NNS threads))
            (PP (IN in)
              (NP (PRP$ your) (NN coat-sleeve))))
          (, ,)
          (CC and)
          (VP (VB see)
            (NP
              (NP (DT a) (JJ whole) (JJ wide) (NN desert))
              (PP (IN of)
                (NP
                  (NP (NNS waves))
                  (VP (VBG pitching)
                    (CC and)
                    (VBG tossing)
                    (PP (IN through)
                      (NP
                        (NP (DT a) (NN kind))
                        (PP (IN of)
                          (NP
                            (NP (NN veil))
                            (PP (IN of)
                              (NP (NN rain)))))))))))))))
    (. .)))

num(second-2, One-1)
nsubj(see-6, second-2)
nsubj(see-6, you-3)
aux(see-6, could-4)
neg(see-6, n't-5)
root(ROOT-0, see-6)
poss(hand-8, your-7)
dobj(see-6, hand-8)
prep_before(see-6, you-10)
det(you-15, the-13)
amod(you-15, next-14)
nsubj(count-17, you-15)
nsubj(see-25, you-15)
aux(count-17, could-16)
conj_and(see-6, count-17)
det(threads-19, the-18)
dobj(count-17, threads-19)
poss(coat-sleeve-22, your-21)
prep_in(count-17, coat-sleeve-22)
conj_and(see-6, see-25)
conj_and(count-17, see-25)
det(desert-29, a-26)
amod(desert-29, whole-27)
amod(desert-29, wide-28)
dobj(see-25, desert-29)
prep_of(desert-29, waves-31)
vmod(waves-31, pitching-32)
vmod(waves-31, tossing-34)
conj_and(pitching-32, tossing-34)
det(kind-37, a-36)
prep_through(pitching-32, kind-37)
prep_of(kind-37, veil-39)
prep_of(veil-39, rain-41)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN storm))
        (PP (IN like)
          (NP (DT that))))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ loveliest) (NN thing))
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBP ai) (RB n't)
          (PP (IN at)
            (NP
              (NP (PRP$ its) (JJS best))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP
                    (VP (VBP are)
                      (ADVP (RB up))
                      (PP (IN in)
                        (NP (DT the) (NN sky))))
                    (CC and)
                    (VP (VBD lost)))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ wet)
              (CC and)
              (JJ lonesome))))
        (, ,)
        (CC and)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (ADVP (RB just))
            (VP (VBN been)
              (NP
                (NP (DT a) (NN death))
                (PP (IN in)
                  (NP (DT the) (NN family)))))))))
    (. .)))

det(storm-2, A-1)
nsubj(thing-8, storm-2)
prep_like(storm-2, that-4)
cop(thing-8, is-5)
det(thing-8, the-6)
amod(thing-8, loveliest-7)
root(ROOT-0, thing-8)
expl(is-10, there-9)
rcmod(thing-8, is-10)
nsubj(ai-14, it-13)
conj_but(thing-8, ai-14)
neg(ai-14, n't-15)
poss(best-18, its-17)
prep_at(ai-14, best-18)
tmod(are-21, best-18)
advmod(are-21, when-19)
nsubj(are-21, you-20)
nsubj(lost-27, you-20)
rcmod(best-18, are-21)
advmod(are-21, up-22)
det(sky-25, the-24)
prep_in(are-21, sky-25)
rcmod(best-18, lost-27)
conj_and(are-21, lost-27)
nsubj(wet-32, it-30)
nsubj(lonesome-34, it-30)
cop(wet-32, 's-31)
conj_but(thing-8, wet-32)
conj_and(ai-14, wet-32)
conj_and(ai-14, lonesome-34)
conj_and(wet-32, lonesome-34)
expl(death-42, there-37)
auxpass(death-42, 's-38)
advmod(death-42, just-39)
cop(death-42, been-40)
det(death-42, a-41)
conj_and(ai-14, death-42)
conj_and(wet-32, death-42)
det(family-45, the-44)
prep_in(death-42, family-45)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD set)
        (SBAR
          (S
            (NP (EX there))
            (VP
              (VP (VBD huddled)
                (PRT (RP up))
                (PP (IN in)
                  (NP (DT the) (NN bow))))
              (, ,)
              (CC and)
              (VP (VBD talked)
                (ADVP (JJ low))
                (PP (IN about)
                  (NP (DT the) (JJ poor) (NN professor)))))))))
    (: ;)
    (CC and)
    (S
      (NP (NN everybody))
      (VP
        (VP (VBD was)
          (ADJP
            (ADJP (JJ sorry))
            (PP (IN for)
              (NP (PRP him)))
            (, ,)
            (CC and)
            (ADJP (JJ sorry)
              (SBAR
                (S
                  (NP (DT the) (NN world))
                  (VP (VBD had)
                    (VP
                      (VP (VBN made)
                        (NP
                          (NP (NN fun))
                          (PP (IN of)
                            (NP (PRP him)))))
                      (CC and)
                      (VP (VBN treated)
                        (S
                          (NP (PRP him))
                          (ADJP (RB so) (JJ harsh)))))))))
            (PRN (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG doing)
                      (NP
                        (NP (DT the) (JJS best))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (MD could)))))))))
              (, ,))))
        (CC and)
        (VP (VBD had) (RB n't)
          (VP
            (NP (DT a) (NN friend)
              (CC nor)
              (NN nobody))
            (S
              (VP (TO to)
                (VP
                  (VP (VB encourage)
                    (NP (PRP him)))
                  (CC and)
                  (VP (VB keep)
                    (NP (PRP him))
                    (PP (IN from)
                      (S
                        (VP
                          (VP (VBG brooding)
                            (NP (PRP$ his) (NN mind))
                            (PRT (RP away)))
                          (CC and)
                          (VP (VBG going)
                            (ADJP (JJ deranged))))))))))))))
    (. .)))

nsubj(set-2, We-1)
root(ROOT-0, set-2)
expl(huddled-4, there-3)
ccomp(set-2, huddled-4)
prt(huddled-4, up-5)
det(bow-8, the-7)
prep_in(huddled-4, bow-8)
ccomp(set-2, talked-11)
conj_and(huddled-4, talked-11)
advmod(talked-11, low-12)
det(professor-16, the-14)
amod(professor-16, poor-15)
prep_about(talked-11, professor-16)
nsubj(sorry-21, everybody-19)
nsubj(sorry-26, everybody-19)
cop(sorry-21, was-20)
conj_and(set-2, sorry-21)
prep_for(sorry-21, him-23)
conj_and(set-2, sorry-26)
conj_and(sorry-21, sorry-26)
det(world-28, the-27)
nsubj(made-30, world-28)
nsubj(treated-35, world-28)
aux(made-30, had-29)
ccomp(sorry-26, made-30)
dobj(made-30, fun-31)
prep_of(fun-31, him-33)
ccomp(sorry-26, treated-35)
conj_and(made-30, treated-35)
nsubj(harsh-38, him-36)
advmod(harsh-38, so-37)
xcomp(treated-35, harsh-38)
advmod(doing-43, when-40)
nsubj(doing-43, he-41)
aux(doing-43, was-42)
dep(sorry-21, doing-43)
det(best-45, the-44)
dobj(doing-43, best-45)
nsubj(could-47, he-46)
rcmod(best-45, could-47)
aux(friend-53, had-50)
neg(friend-53, n't-51)
det(friend-53, a-52)
conj_and(set-2, friend-53)
conj_and(sorry-21, friend-53)
conj_and(sorry-21, nobody-55)
conj_nor(friend-53, nobody-55)
aux(encourage-57, to-56)
vmod(friend-53, encourage-57)
dobj(encourage-57, him-58)
vmod(friend-53, keep-60)
conj_and(encourage-57, keep-60)
dobj(keep-60, him-61)
prepc_from(keep-60, brooding-63)
poss(mind-65, his-64)
dobj(brooding-63, mind-65)
prt(brooding-63, away-66)
prepc_from(keep-60, going-68)
conj_and(brooding-63, going-68)
acomp(going-68, deranged-69)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP
            (NP (RB plenty))
            (PP (IN of)
              (NP (NNS clothes)
                (CC and)
                (NNS blankets))))
          (CC and)
          (NP
            (NP (NN everything))
            (PP (IN at)
              (NP (DT the) (JJ other) (NN end)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD 'd)
              (ADVP (RB ruther))
              (VP (VB take)
                (NP (DT the) (NN rain))
                (SBAR (IN than)
                  (S
                    (VP (VBP go)
                      (S
                        (VP (VBG meddling)
                          (ADVP (RB back) (RB there)))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, plenty-3)
prep_of(plenty-3, clothes-5)
prep_of(plenty-3, blankets-7)
conj_and(clothes-5, blankets-7)
nsubj(was-2, everything-9)
conj_and(plenty-3, everything-9)
det(end-13, the-11)
amod(end-13, other-12)
prep_at(everything-9, end-13)
nsubj(thought-17, we-16)
conj_but(was-2, thought-17)
nsubj(take-21, we-18)
aux(take-21, 'd-19)
advmod(take-21, ruther-20)
ccomp(thought-17, take-21)
det(rain-23, the-22)
dobj(take-21, rain-23)
mark(go-25, than-24)
advcl(take-21, go-25)
xcomp(go-25, meddling-26)
advmod(there-28, back-27)
advmod(meddling-26, there-28)

(ROOT
  (S
    (S
      (NP (NNP CHAPTER) (NNP V.) (NNP LAND) (NNP WE))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT some) (NNS plans)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD could) (RB n't)
        (VP (VB come)
          (PP (TO to)
            (NP (DT no) (NN agreement))))))
    (. .)))

nn(WE-4, CHAPTER-1)
nn(WE-4, V.-2)
nn(WE-4, LAND-3)
nsubj(tried-5, WE-4)
nsubj(make-7, WE-4)
root(ROOT-0, tried-5)
aux(make-7, to-6)
xcomp(tried-5, make-7)
det(plans-9, some-8)
dobj(make-7, plans-9)
nsubj(come-15, we-12)
aux(come-15, could-13)
neg(come-15, n't-14)
conj_but(tried-5, come-15)
neg(agreement-18, no-17)
prep_to(come-15, agreement-18)

(ROOT
  (S
    (S
      (NP (NNP Me)
        (CC and)
        (NNP Jim))
      (VP (VBD was)
        (PP (IN for)
          (S
            (VP
              (VP (VBG turning)
                (PRT (RP around)))
              (CC and)
              (VP (VBG going)
                (ADVP (RB back) (NN home))))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Tom))
      (VP (VBD allowed)
        (SBAR (IN that)
          (S
            (PP (IN by)
              (NP
                (NP (DT the) (NN time) (NN daylight))
                (VP (VBN come) (, ,)
                  (SBAR (IN so)
                    (S
                      (NP (PRP we))
                      (VP (MD could)
                        (VP (VB see)
                          (NP (PRP$ our) (NN way)))))))))
            (, ,)
            (NP (PRP we))
            (VP (MD would)
              (VP (VB be)
                (ADJP (RB so) (RB far)
                  (PP (IN toward)
                    (NP (NNP England))))
                (SBAR (IN that)
                  (S
                    (NP (PRP we))
                    (VP (MD might)
                      (ADVP (RB as) (RB well))
                      (VP
                        (VP (VB go)
                          (ADVP (RB there)))
                        (, ,)
                        (CC and)
                        (VP (VB come)
                          (PRT (RP back))
                          (PP (IN in)
                            (NP (DT a) (NN ship))))
                        (, ,)
                        (CC and)
                        (VP (VB have)
                          (NP
                            (NP (DT the) (NN glory))
                            (PP (IN of)
                              (S
                                (VP (VBG saying)
                                  (S
                                    (NP (PRP we))
                                    (VP (VBN done)
                                      (NP (PRP it)))))))))))))))))))
    (. .)))

nsubj(was-4, Me-1)
conj_and(Me-1, Jim-3)
nsubj(was-4, Jim-3)
root(ROOT-0, was-4)
prepc_for(was-4, turning-6)
prt(turning-6, around-7)
prepc_for(was-4, going-9)
conj_and(turning-6, going-9)
advmod(going-9, back-10)
dep(back-10, home-11)
nsubj(allowed-15, Tom-14)
conj_but(was-4, allowed-15)
mark(far-34, that-16)
det(daylight-20, the-18)
nn(daylight-20, time-19)
prep_by(far-34, daylight-20)
vmod(daylight-20, come-21)
mark(see-26, so-23)
nsubj(see-26, we-24)
aux(see-26, could-25)
advcl(come-21, see-26)
poss(way-28, our-27)
dobj(see-26, way-28)
nsubj(far-34, we-30)
aux(far-34, would-31)
cop(far-34, be-32)
advmod(far-34, so-33)
ccomp(allowed-15, far-34)
prep_toward(far-34, England-36)
mark(go-42, that-37)
nsubj(go-42, we-38)
nsubj(come-46, we-38)
nsubj(have-53, we-38)
aux(go-42, might-39)
advmod(well-41, as-40)
mwe(well-41, as-40)
advmod(go-42, well-41)
ccomp(far-34, go-42)
advmod(go-42, there-43)
ccomp(far-34, come-46)
conj_and(go-42, come-46)
prt(come-46, back-47)
det(ship-50, a-49)
prep_in(come-46, ship-50)
ccomp(far-34, have-53)
conj_and(go-42, have-53)
det(glory-55, the-54)
dobj(have-53, glory-55)
prepc_of(glory-55, saying-57)
nsubj(done-59, we-58)
dep(saying-57, done-59)
dobj(done-59, it-60)

(ROOT
  (S
    (S
      (PP (IN About)
        (NP (NN midnight)))
      (S
        (NP (DT the) (NN storm))
        (VP (VBD quit)))
      (CC and)
      (S
        (NP (DT the) (NN moon))
        (VP
          (VP (VBP come)
            (PRT (RP out)))
          (CC and)
          (VP (VBD lit)
            (PRT (RP up))
            (NP (DT the) (NN ocean))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB feel)
                (ADJP (JJ comfortable)
                  (CC and)
                  (JJ drowsy)))))))
      (: ;) (RB so)
      (S
        (NP (PRP we))
        (VP
          (VP (VBD stretched)
            (PRT (RP out))
            (PP (IN on)
              (NP (DT the) (NNS lockers))))
          (CC and)
          (VP (VBD went)
            (S
              (VP (TO to)
                (VP (VB sleep)))))
          (, ,)
          (CC and)
          (ADVP (RB never))
          (VP (VBD woke)
            (ADVP (RB up) (RB again))
            (PP (IN till)
              (NP (NN sun-up)))))))
    (. .)))

prep_about(quit-5, midnight-2)
det(storm-4, the-3)
nsubj(quit-5, storm-4)
root(ROOT-0, quit-5)
det(moon-8, the-7)
nsubj(come-9, moon-8)
nsubj(lit-12, moon-8)
conj_and(quit-5, come-9)
prt(come-9, out-10)
conj_and(quit-5, lit-12)
conj_and(come-9, lit-12)
prt(lit-12, up-13)
det(ocean-15, the-14)
dobj(lit-12, ocean-15)
nsubj(begun-19, we-18)
nsubj(feel-21, we-18)
conj_and(quit-5, begun-19)
aux(feel-21, to-20)
xcomp(begun-19, feel-21)
acomp(feel-21, comfortable-22)
acomp(feel-21, drowsy-24)
conj_and(comfortable-22, drowsy-24)
advmod(begun-19, so-26)
nsubj(stretched-28, we-27)
nsubj(went-34, we-27)
nsubj(sleep-36, we-27)
nsubj(woke-40, we-27)
parataxis(begun-19, stretched-28)
prt(stretched-28, out-29)
det(lockers-32, the-31)
prep_on(stretched-28, lockers-32)
parataxis(begun-19, went-34)
conj_and(stretched-28, went-34)
aux(sleep-36, to-35)
xcomp(went-34, sleep-36)
neg(woke-40, never-39)
parataxis(begun-19, woke-40)
conj_and(stretched-28, woke-40)
advmod(again-42, up-41)
advmod(woke-40, again-42)
prep_till(woke-40, sun-up-44)

(ROOT
  (S
    (S
      (NP (DT The) (NN sea))
      (VP (VBD was)
        (VP (VBN sparkling)
          (PP (IN like)
            (NP (FW di)))
          (`` `)
          (NP (NNS monds)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (JJ nice) (NN weather))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB pretty) (RB soon))
        (NP (PRP$ our) (NNS things))
        (VP (VBD was)
          (ADJP (RB all) (JJ dry))
          (ADVP (RB again)))))
    (. .)))

det(sea-2, The-1)
nsubjpass(sparkling-4, sea-2)
auxpass(sparkling-4, was-3)
root(ROOT-0, sparkling-4)
prep_like(sparkling-4, di-6)
dobj(sparkling-4, monds-8)
nsubj(weather-14, it-11)
cop(weather-14, was-12)
amod(weather-14, nice-13)
conj_and(sparkling-4, weather-14)
advmod(soon-18, pretty-17)
advmod(dry-23, soon-18)
poss(things-20, our-19)
nsubj(dry-23, things-20)
cop(dry-23, was-21)
advmod(dry-23, all-22)
conj_and(sparkling-4, dry-23)
conj_and(weather-14, dry-23)
advmod(dry-23, again-24)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD went)
        (ADJP (JJ aft)
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (DT some) (NN breakfast))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ first) (NN thing))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD noticed)))))
      (VP (VBD was)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN dim) (NN light))
                (VP (VBG burning)
                  (PP (IN in)
                    (NP (DT a) (NNS compass)))
                  (ADVP (RB back) (RB there))
                  (PP (IN under)
                    (NP (DT a) (NN hood))))))))))
    (. .)))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
acomp(went-2, aft-3)
aux(find-5, to-4)
xcomp(aft-3, find-5)
det(breakfast-7, some-6)
dobj(find-5, breakfast-7)
det(thing-12, the-10)
amod(thing-12, first-11)
nsubj(was-15, thing-12)
nsubj(noticed-14, we-13)
rcmod(thing-12, noticed-14)
conj_and(went-2, was-15)
mark(was-18, that-16)
expl(was-18, there-17)
ccomp(was-15, was-18)
det(light-21, a-19)
nn(light-21, dim-20)
nsubj(was-18, light-21)
vmod(light-21, burning-22)
det(compass-25, a-24)
prep_in(burning-22, compass-25)
advmod(there-27, back-26)
advmod(burning-22, there-27)
det(hood-30, a-29)
prep_under(burning-22, hood-30)

(ROOT
  (S (RB Then)
    (NP (NNP Tom))
    (VP (VBD was)
      (VP (VBN disturbed)))
    (. .)))

advmod(disturbed-4, Then-1)
nsubjpass(disturbed-4, Tom-2)
auxpass(disturbed-4, was-3)
root(ROOT-0, disturbed-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (PRP You))
        (VP (VB know)
          (FRAG
            (SBAR (WP what) (IN that)
              (NP (NN means) (, ,) (JJ easy) (NN enough)))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
nsubj(know-6, You-5)
ccomp(says-2, know-6)
dep(that-8, what-7)
dep(know-6, that-8)
nn(enough-12, means-9)
amod(enough-12, easy-11)
dep(that-8, enough-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ means)
        (SBAR (IN that)
          (S
            (NP (NN somebody))
            (VP (VBZ has)
              (VP (VBN got)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB stay)
                        (PP (IN on)
                          (NP (NN watch))))
                      (CC and)
                      (VP (VB steer)
                        (NP
                          (NP (DT this) (NN thing))
                          (NP (DT the) (JJ same)))
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (MD would)))))
                      (NP (DT a) (NN ship)))))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP she))
      (VP (MD 'll)
        (VP
          (VP (VB wander)
            (PRT (RP around)))
          (CC and)
          (VP (VB go)
            (SBAR
              (WHADVP (WRB wherever))
              (S
                (NP (DT the) (NN wind))
                (VP (VBZ wants)
                  (S
                    (NP (PRP her))
                    (VP (TO to))))))))))
    (. .) ('' '')))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
mark(got-6, that-3)
nsubj(got-6, somebody-4)
nsubj(stay-8, somebody-4)
nsubj(steer-12, somebody-4)
aux(got-6, has-5)
ccomp(means-2, got-6)
aux(stay-8, to-7)
xcomp(got-6, stay-8)
prep_on(stay-8, watch-10)
xcomp(got-6, steer-12)
conj_and(stay-8, steer-12)
det(thing-14, this-13)
dobj(steer-12, thing-14)
iobj(steer-12, thing-14)
det(same-16, the-15)
dep(thing-14, same-16)
mark(would-19, as-17)
nsubj(would-19, he-18)
advcl(steer-12, would-19)
det(ship-21, a-20)
dobj(stay-8, ship-21)
nsubj(wander-26, she-24)
nsubj(go-29, she-24)
aux(wander-26, 'll-25)
conj_or(means-2, wander-26)
prt(wander-26, around-27)
conj_or(means-2, go-29)
conj_and(wander-26, go-29)
advmod(wants-33, wherever-30)
det(wind-32, the-31)
nsubj(wants-33, wind-32)
advcl(go-29, wants-33)
dobj(wants-33, her-34)
nsubj(to-35, her-34)
xcomp(wants-33, to-35)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (NP (PRP I))
    (VP (VBZ says) (, ,) (`` ``)
      (SBARQ
        (WHNP (WP what))
        (SQ (VBZ 's)
          (NP (PRP she))
          (VP (VBN been)
            (VP (VBG doing)
              (PP (IN since)
                (PRN (: --)
                  (ADVP (RB er))
                  (: --)))
              (SBAR (IN since)
                (S
                  (NP (PRP we))
                  (VP (VBD had)
                    (NP (DT the) (NN accident))))))))
        (. ?)))
    ('' '')))

dep(says-6, Well-2)
nsubj(says-6, I-5)
root(ROOT-0, says-6)
dobj(doing-13, what-9)
auxpass(doing-13, 's-10)
nsubjpass(doing-13, she-11)
aux(doing-13, been-12)
ccomp(says-6, doing-13)
prep(doing-13, since-14)
dep(since-14, er-16)
mark(had-20, since-18)
nsubj(had-20, we-19)
advcl(doing-13, had-20)
det(accident-22, the-21)
dobj(had-20, accident-22)

(ROOT
  (S (`` ``)
    (NP (NNP Wandering))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBZ says)))
      (, ,))
    (VP (VBZ kinder)
      (ADJP (VBN troubled))
      (: --) (`` ``)
      (FRAG
        (INTJ (UH wandering))
        (, ,)
        (PP (IN without)
          (NP (DT any) (NN doubt)))))
    (. .)))

nsubj(kinder-8, Wandering-2)
nsubj(says-6, he-5)
parataxis(kinder-8, says-6)
root(ROOT-0, kinder-8)
acomp(kinder-8, troubled-9)
dep(kinder-8, wandering-12)
det(doubt-16, any-15)
prep_without(wandering-12, doubt-16)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ 's)
      (PP (IN in)
        (NP
          (NP (DT a) (NN wind))
          (ADVP (RB now))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (VP (VBG blowing)
                  (NP (PRP her))
                  (ADVP (RB south) (IN of) (JJ east)))))))))
    (. .)))

nsubj('s-2, She-1)
root(ROOT-0, 's-2)
det(wind-5, a-4)
prep_in('s-2, wind-5)
nsubj(blowing-9, wind-5)
advmod(wind-5, now-6)
aux(blowing-9, 's-8)
rcmod(wind-5, blowing-9)
dobj(blowing-9, her-10)
advmod(of-12, south-11)
advmod(blowing-9, of-12)
advmod(of-12, east-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how) (RB long))
          (S
            (NP (DT that))
            (VP (VBZ 's)
              (VP (VBN been)
                (VP (VBG going)
                  (PP (IN on))
                  (, ,)
                  (ADVP (RB either)))))))))
    (. .) ('' '')))

nsubj(know-4, We-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
advmod(long-6, how-5)
advmod(going-10, long-6)
nsubjpass(going-10, that-7)
auxpass(going-10, 's-8)
aux(going-10, been-9)
ccomp(know-4, going-10)
prep(going-10, on-11)
advmod(going-10, either-13)

(ROOT
  (S (IN So)
    (ADVP (RB then))
    (NP (PRP he))
    (ADVP (RB p))
    (VP (`` `)
      (VP (VBD inted)
        (S
          (NP (PRP her))
          (ADJP (JJ east))))
      (, ,)
      (CC and)
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB hold)
                (NP (PRP her))
                (ADVP (RB there))
                (SBAR (IN till)
                  (S
                    (NP (PRP we))
                    (VP (VBD rousted)
                      (PRT (RP out))
                      (NP (DT the) (NN breakfast)))))))))))
    (. .)))

dep(inted-6, So-1)
advmod(inted-6, then-2)
nsubj(inted-6, he-3)
nsubj(said-11, he-3)
advmod(inted-6, p-4)
root(ROOT-0, inted-6)
nsubj(east-8, her-7)
xcomp(inted-6, east-8)
conj_and(inted-6, said-11)
nsubj(hold-14, he-12)
aux(hold-14, would-13)
ccomp(said-11, hold-14)
dobj(hold-14, her-15)
advmod(hold-14, there-16)
mark(rousted-19, till-17)
nsubj(rousted-19, we-18)
advcl(hold-14, rousted-19)
prt(rousted-19, out-20)
det(breakfast-22, the-21)
dobj(rousted-19, breakfast-22)

(ROOT
  (S
    (S
      (NP (DT The) (NN professor))
      (VP (VBD had)
        (VP (VBN laid)
          (PP (IN in)
            (NP
              (NP (NN everything))
              (SBAR
                (S
                  (NP (DT a) (NN body))
                  (VP (MD could)
                    (VP (VB want))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD could) (RB n't)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN been)
              (VP
                (ADVP (RBR better))
                (VBN fixed)))))))
    (. .)))

det(professor-2, The-1)
nsubj(laid-4, professor-2)
aux(laid-4, had-3)
root(ROOT-0, laid-4)
prep_in(laid-4, everything-6)
det(body-8, a-7)
nsubj(want-10, body-8)
aux(want-10, could-9)
rcmod(everything-6, want-10)
nsubj(could-13, he-12)
parataxis(laid-4, could-13)
neg(could-13, n't-14)
dep(could-13, a-16)
auxpass(fixed-20, been-18)
advmod(fixed-20, better-19)
vmod(a-16, fixed-20)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was) (RB n't)
        (NP
          (NP (DT no) (NN milk))
          (PP (IN for)
            (NP (DT the) (NN coffee))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP
        (VP (VBD was)
          (NP
            (NP (NN water))
            (, ,)
            (CC and)
            (NP
              (NP
                (NP (NN everything))
                (RB else)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD could)
                      (VP (VB want))))))
              (, ,)
              (CC and)
              (NP
                (NP (DT a) (NN charcoal) (NN stove))
                (CC and)
                (NP
                  (NP (DT the) (NNS fixings))
                  (PP (IN for)
                    (NP (PRP it))))))
            (, ,)
            (CC and)
            (NP (NNS pipes)
              (CC and)
              (NNS cigars))))
        (CC and)
        (VP (VBZ matches))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NN wine)
          (CC and)
          (NN liquor))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ war) (RB n't)
              (PP (IN in)
                (NP
                  (NP (PRP$ our) (NN line))
                  (: ;)
                  (CC and)
                  (NP (NNS books))
                  (, ,)
                  (CC and)
                  (NP (NNS maps))
                  (, ,)
                  (CC and)
                  (NP (NNS charts))
                  (, ,)
                  (CC and)
                  (NP (DT an) (NN accordion))
                  (, ;)
                  (CC and)
                  (NP (NNS furs))
                  (, ,)
                  (CC and)
                  (NP (NNS blankets))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT no) (NN end))
                    (PP (IN of)
                      (NP (JJ rubbish) (, ,) (JJ like) (NN brass) (NNS beads)
                        (CC and)
                        (NN brass) (NN jewelry))))
                  (, ,)))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (NNP Tom))
                  (VP (VBD said))))))))
      (VP (VBD was)
        (NP (DT a) (JJ sure) (NN sign))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP
                (NP (DT an) (NN idea))
                (PP (IN of)
                  (S
                    (VP (VBG visiting)
                      (PP (IN among)
                        (NP (NNS savages))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, n't-3)
neg(milk-5, no-4)
nsubj(was-2, milk-5)
det(coffee-8, the-7)
prep_for(milk-5, coffee-8)
expl(water-13, there-11)
cop(water-13, was-12)
conj_but(was-2, water-13)
conj_but(was-2, everything-16)
conj_and(water-13, everything-16)
advmod(everything-16, else-17)
nsubj(want-20, you-18)
aux(want-20, could-19)
rcmod(everything-16, want-20)
det(stove-25, a-23)
nn(stove-25, charcoal-24)
conj_and(water-13, stove-25)
conj_and(everything-16, stove-25)
det(fixings-28, the-27)
conj_and(everything-16, fixings-28)
conj_and(stove-25, fixings-28)
prep_for(fixings-28, it-30)
conj_but(was-2, pipes-33)
conj_and(water-13, pipes-33)
conj_and(water-13, cigars-35)
conj_and(pipes-33, cigars-35)
conj_but(was-2, matches-37)
conj_and(water-13, matches-37)
nsubj(war-45, wine-40)
nsubj(sign-89, wine-40)
conj_and(wine-40, liquor-42)
nsubj(war-45, liquor-42)
nsubj(sign-89, liquor-42)
rcmod(wine-40, war-45)
neg(war-45, n't-46)
poss(line-49, our-48)
prep_in(war-45, line-49)
prep_in(war-45, books-52)
conj_and(line-49, books-52)
prep_in(war-45, maps-55)
conj_and(line-49, maps-55)
prep_in(war-45, charts-58)
conj_and(line-49, charts-58)
det(accordion-62, an-61)
prep_in(war-45, accordion-62)
conj_and(line-49, accordion-62)
prep_in(war-45, furs-65)
conj_and(line-49, furs-65)
prep_in(war-45, blankets-68)
conj_and(line-49, blankets-68)
neg(end-72, no-71)
prep_in(war-45, end-72)
conj_and(line-49, end-72)
amod(beads-78, rubbish-74)
amod(beads-78, like-76)
nn(beads-78, brass-77)
prep_of(end-72, beads-78)
nn(jewelry-81, brass-80)
prep_of(end-72, jewelry-81)
conj_and(beads-78, jewelry-81)
dobj(said-85, which-83)
nsubj(said-85, Tom-84)
ccomp(war-45, said-85)
cop(sign-89, was-86)
det(sign-89, a-87)
amod(sign-89, sure-88)
conj_and(was-2, sign-89)
mark(had-92, that-90)
nsubj(had-92, he-91)
ccomp(sign-89, had-92)
det(idea-94, an-93)
dobj(had-92, idea-94)
prepc_of(idea-94, visiting-96)
prep_among(visiting-96, savages-98)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (NN money))
      (, ,)
      (ADVP (RB too)))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, money-3)
advmod(was-2, too-5)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (DT the) (NN professor))
    (VP (VBD was)
      (VP
        (ADVP (RB well) (RB enough))
        (VBN fixed)))
    (. .)))

discourse(fixed-8, Yes-1)
det(professor-4, the-3)
nsubjpass(fixed-8, professor-4)
auxpass(fixed-8, was-5)
advmod(enough-7, well-6)
advmod(fixed-8, enough-7)
root(ROOT-0, fixed-8)

(ROOT
  (S
    (S
      (PP (IN After)
        (NP (NN breakfast)))
      (S
        (NP (NNP Tom))
        (VP (VBD learned)
          (NP (PRP me))))
      (CC and)
      (S
        (NP
          (NP (NNP Jim))
          (SBAR
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP
                    (VP (VB steer))
                    (, ,)
                    (CC and)
                    (VP (VB divided)
                      (NP (PRP us))
                      (ADVP (DT all) (RB up))
                      (PP (IN into)
                        (NP (JJ four-hour) (NNS watches))))
                    (, ,)
                    (VP (VB turn))
                    (CC and)
                    (VP (VB turn)
                      (PRT (RP about)))))))
            (: ;)
            (CC and)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP$ his) (NN watch))
                (VP (VBD was)
                  (PP (IN out)
                    (NP (PRP I))))))))
        (VP (VBD took)
          (NP (PRP$ his) (NN place)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP
          (VP (VBD got)
            (PP (IN out)
              (NP
                (NP (DT the) (NN professor) (POS 's))
                (NNS papers)
                (CC and)
                (NNS pens))))
          (CC and)
          (VP (VBD wrote)
            (NP (DT a) (NN letter) (NN home))
            (PP (TO to)
              (NP (PRP$ his) (NN aunt) (NN Polly)))
            (, ,)
            (VP (VBG telling)
              (NP
                (NP (PRP$ her) (NN everything))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (VP (VBN happened)
                        (PP (TO to)
                          (NP (PRP us))))))))))
          (, ,)
          (CC and)
          (VP (VBN dated)
            (NP (PRP it))
            (`` ``)
            (PP (IN IN)
              (NP
                (NP (DT THE) (NN WELKIN))
                (, ,)
                (NP (NNP APPROACHING) (NNP ENGLAND))
                (, ,)))
            ('' '')))
        (CC and)
        (VP
          (VP (VBD folded)
            (NP (PRP it))
            (ADVP (RB together)))
          (CC and)
          (VP (VBD stuck)
            (NP (PRP it))
            (ADVP (RB fast)
              (PP (IN with)
                (NP (DT a) (JJ red) (NN wafer)))))
          (, ,)
          (CC and)
          (VP (VBD directed)
            (NP (PRP it)))
          (, ,)
          (CC and)
          (VP (VBD wrote)
            (PP (IN above)
              (NP (DT the) (NN direction)))
            (, ,)
            (PP (IN in)
              (NP
                (NP (JJ big) (NN writing))
                (, ,) (`` ``)
                (NP (NNP FROM) (NNP TOM) (NNP SAWYER))
                (, ,))))
          (NP (DT THE) (NN ERRONORT)))
        (, ,) ('' '')
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD would)
                (VP (VB stump)
                  (NP
                    (NP (JJ old) (NNP Nat) (NNP Parsons))
                    (, ,)
                    (NP (DT the) (NN postmaster))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP it))
                        (VP (VBP come)
                          (PRT (RP along))
                          (PP (IN in)
                            (NP (DT the) (NN mail))))))))))))))
    (. .)))

prep_after(learned-4, breakfast-2)
nsubj(learned-4, Tom-3)
root(ROOT-0, learned-4)
dobj(learned-4, me-5)
nsubj(took-33, Jim-7)
advmod(steer-10, how-8)
aux(steer-10, to-9)
dep(Jim-7, steer-10)
dep(Jim-7, divided-13)
conj_and(steer-10, divided-13)
dobj(divided-13, us-14)
dep(up-16, all-15)
advmod(divided-13, up-16)
amod(watches-19, four-hour-18)
prep_into(divided-13, watches-19)
dep(Jim-7, turn-21)
conj_and(steer-10, turn-21)
dep(Jim-7, turn-23)
conj_and(steer-10, turn-23)
prt(turn-23, about-24)
advmod(was-30, when-27)
poss(watch-29, his-28)
nsubj(was-30, watch-29)
dep(Jim-7, was-30)
conj_and(steer-10, was-30)
prep_out(was-30, I-32)
conj_and(learned-4, took-33)
poss(place-35, his-34)
dobj(took-33, place-35)
nsubj(got-39, he-38)
nsubj(wrote-48, he-38)
nsubj(dated-67, he-38)
nsubj(folded-79, he-38)
nsubj(said-115, he-38)
conj_and(learned-4, got-39)
det(professor-42, the-41)
poss(papers-44, professor-42)
prep_out(got-39, papers-44)
prep_out(got-39, pens-46)
conj_and(papers-44, pens-46)
conj_and(learned-4, wrote-48)
conj_and(got-39, wrote-48)
det(home-51, a-49)
nn(home-51, letter-50)
dobj(wrote-48, home-51)
poss(Polly-55, his-53)
nn(Polly-55, aunt-54)
prep_to(wrote-48, Polly-55)
dep(wrote-48, telling-57)
poss(everything-59, her-58)
dobj(telling-57, everything-59)
nsubj(happened-62, everything-59)
aux(happened-62, had-61)
rcmod(everything-59, happened-62)
prep_to(happened-62, us-64)
conj_and(learned-4, dated-67)
conj_and(got-39, dated-67)
dobj(dated-67, it-68)
det(WELKIN-72, THE-71)
prep_in(dated-67, WELKIN-72)
nn(ENGLAND-75, APPROACHING-74)
appos(WELKIN-72, ENGLAND-75)
conj_and(learned-4, folded-79)
conj_and(got-39, folded-79)
dobj(folded-79, it-80)
advmod(folded-79, together-81)
conj_and(got-39, stuck-83)
conj_and(folded-79, stuck-83)
dobj(stuck-83, it-84)
advmod(stuck-83, fast-85)
det(wafer-89, a-87)
amod(wafer-89, red-88)
prep_with(fast-85, wafer-89)
conj_and(got-39, directed-92)
conj_and(folded-79, directed-92)
dobj(directed-92, it-93)
conj_and(got-39, wrote-96)
conj_and(folded-79, wrote-96)
det(direction-99, the-98)
prep_above(wrote-96, direction-99)
amod(writing-103, big-102)
prep_in(wrote-96, writing-103)
nn(SAWYER-108, FROM-106)
nn(SAWYER-108, TOM-107)
dep(writing-103, SAWYER-108)
det(ERRONORT-111, THE-110)
dobj(folded-79, ERRONORT-111)
conj_and(learned-4, said-115)
conj_and(got-39, said-115)
nsubj(stump-118, it-116)
aux(stump-118, would-117)
ccomp(said-115, stump-118)
amod(Parsons-121, old-119)
nn(Parsons-121, Nat-120)
dobj(stump-118, Parsons-121)
tmod(come-128, Parsons-121)
det(postmaster-124, the-123)
appos(Parsons-121, postmaster-124)
advmod(come-128, when-126)
nsubj(come-128, it-127)
rcmod(Parsons-121, come-128)
prt(come-128, along-129)
det(mail-132, the-131)
prep_in(come-128, mail-132)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ says)))
    (: :) (`` ``)
    (S
      (NP (NNP Tom) (NNP Sawyer))
      (PRN (, ,)
        (S
          (NP (DT this))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (NN welkin))))
        (, ,))
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a) (NN balloon))))
    (. .) ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nn(Sawyer-6, Tom-5)
nsubj(balloon-17, Sawyer-6)
nsubj(welkin-12, this-8)
cop(welkin-12, ai-9)
neg(welkin-12, n't-10)
neg(welkin-12, no-11)
parataxis(balloon-17, welkin-12)
nsubj(balloon-17, it-14)
cop(balloon-17, 's-15)
det(balloon-17, a-16)
parataxis(says-2, balloon-17)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Well))
      (, ,)
      (NP
        (ADVP (RB now))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD SAID)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP (DT a) (NN welkin))
                    (, ,)
                    (ADVP (RB smarty))))))))))
    (. ?) ('' '')))

root(ROOT-0, Well-2)
appos(Well-2, now-4)
nsubj(SAID-7, who-6)
dep(now-4, SAID-7)
nsubj(welkin-11, it-8)
cop(welkin-11, was-9)
det(welkin-11, a-10)
ccomp(SAID-7, welkin-11)
advmod(welkin-11, smarty-13)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 've)
      (VP (VBD wrote)
        (NP (PRP it))
        (PP (IN on)
          (NP (DT the) (NN letter)))
        (, ,)
        (ADVP (RB anyway))))
    (. .) ('' '')))

nsubj(wrote-4, You-2)
aux(wrote-4, 've-3)
root(ROOT-0, wrote-4)
dobj(wrote-4, it-5)
det(letter-8, the-7)
prep_on(wrote-4, letter-8)
advmod(wrote-4, anyway-10)

(ROOT
  (S
    (VP
      (NP (`` ``)
        (NP (WP What))
        (PP (IN of)
          (NP (PRP it)))))
    (. ?)))

root(ROOT-0, What-2)
prep_of(What-2, it-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN balloon))
            (VP (VBZ 's)
              (NP (DT the) (NN welkin)))))))
    (. .) ('' '')))

nsubj(mean-4, That-1)
aux(mean-4, do-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
mark(welkin-10, that-5)
det(balloon-7, the-6)
nsubj(welkin-10, balloon-7)
cop(welkin-10, 's-8)
det(welkin-10, the-9)
ccomp(mean-4, welkin-10)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD did)))))
    (. .)))

discourse(thought-5, Oh-2)
nsubj(thought-5, I-4)
root(ROOT-0, thought-5)
nsubj(did-7, it-6)
ccomp(thought-5, did-7)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (WDT what))
    (VP (VBZ is)
      (NP (DT a) (NN welkin)))
    (. ?) ('' '')))

discourse(welkin-8, Well-1)
advmod(welkin-8, then-3)
nsubj(welkin-8, what-5)
cop(welkin-8, is-6)
det(welkin-8, a-7)
root(ROOT-0, welkin-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP see)
      (PP (IN in)
        (NP
          (NP (DT a) (NN minute))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBN stuck))))))))
    (. .)))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
det(minute-5, a-4)
prep_in(see-2, minute-5)
nsubjpass(stuck-8, he-6)
auxpass(stuck-8, was-7)
rcmod(minute-5, stuck-8)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP
          (VP (VBD raked))
          (CC and)
          (VP (VBD scraped)
            (PRT (RP around))
            (PP (IN in)
              (NP (PRP$ his) (NN mind))))))
      (, ,)
      (CC but)
      (S
        (S
          (NP (PRP he))
          (VP (MD could) (RB n't)
            (VP (VB find)
              (NP (NN nothing)))))
        (, ,) (IN so)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB say))))))))
    (: :) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (, ,)
    (CC and)
    (S
      (NP (NN nobody))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (. .)))

nsubj(raked-2, He-1)
nsubj(scraped-4, He-1)
root(ROOT-0, raked-2)
conj_and(raked-2, scraped-4)
prt(scraped-4, around-5)
poss(mind-8, his-7)
prep_in(scraped-4, mind-8)
nsubj(find-14, he-11)
aux(find-14, could-12)
neg(find-14, n't-13)
conj_but(raked-2, find-14)
dobj(find-14, nothing-15)
dep(find-14, so-17)
nsubj(had-19, he-18)
nsubj(say-21, he-18)
parataxis(find-14, had-19)
aux(say-21, to-20)
xcomp(had-19, say-21)
nsubj(know-27, I-24)
aux(know-27, do-25)
neg(know-27, n't-26)
ccomp(raked-2, know-27)
conj_but(raked-2, know-27)
nsubj(know-33, nobody-30)
aux(know-33, do-31)
neg(know-33, n't-32)
conj_and(raked-2, know-33)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RB just))
        (NP (DT a) (NN word))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a)
          (ADJP (RB mighty) (JJ good))
          (NN word))
        (, ,)
        (ADVP (RB too))))
    (. .)))

nsubj(word-5, It-1)
cop(word-5, 's-2)
advmod(word-5, just-3)
det(word-5, a-4)
root(ROOT-0, word-5)
nsubj(word-13, it-8)
cop(word-13, 's-9)
det(word-13, a-10)
advmod(good-12, mighty-11)
amod(word-13, good-12)
conj_and(word-5, word-13)
advmod(word-13, too-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP ai) (RB n't)
      (ADJP (JJ many)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ lays)
              (PP (IN over)
                (NP (PRP it))))))))
    (. .)))

expl(ai-2, There-1)
root(ROOT-0, ai-2)
neg(ai-2, n't-3)
acomp(ai-2, many-4)
nsubj(lays-6, that-5)
ccomp(many-4, lays-6)
prep_over(lays-6, it-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (NP
                (NP (NNP ANY))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ does))))))))))
    (. .) ('' '')))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
expl('s-6, there-5)
ccomp(believe-4, 's-6)
nsubj('s-6, ANY-7)
nsubj(does-9, ANY-7)
rcmod(ANY-7, does-9)

(ROOT
  (S (`` ``)
    (VP (VB Shucks))
    (. !) ('' '')))

root(ROOT-0, Shucks-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says))
    (. .)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (WDT what))
    (VP (VBZ does)
      (S
        (NP (PRP it))
        (VP (VB MEAN))))
    (. ?)))

cc(does-4, But-2)
nsubj(does-4, what-3)
root(ROOT-0, does-4)
nsubj(MEAN-6, it-5)
ccomp(does-4, MEAN-6)

(ROOT
  (PRN (: --)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (DT the) (NN p) (`` `) (NN int) (. .) ('' ''))))))

nsubj(int-7, that-2)
cop(int-7, 's-3)
det(int-7, the-4)
nn(int-7, p-5)
root(ROOT-0, int-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ means)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(tell-11, know-5)
dobj(means-8, what-6)
nsubj(means-8, it-7)
ccomp(know-5, means-8)
nsubj(tell-11, I-10)
root(ROOT-0, tell-11)
dobj(tell-11, you-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT a) (NN word))
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBZ uses)
              (PP (IN for)
                (PRN (: --)
                  (PP (IN for))
                  (: --)))
              (ADVP (RB well)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ ornamental)))
    (. .)))

nsubj(word-4, It-1)
cop(word-4, 's-2)
det(word-4, a-3)
ccomp(ornamental-16, word-4)
mark(uses-7, that-5)
nsubj(uses-7, people-6)
ccomp(word-4, uses-7)
prep(uses-7, for-8)
dep(for-8, for-10)
advmod(uses-7, well-12)
nsubj(ornamental-16, it-14)
cop(ornamental-16, 's-15)
root(ROOT-0, ornamental-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP do) (RB n't)
      (VP (VB put)
        (NP (NNS ruffles))
        (PP (IN on)
          (NP (DT a) (NN shirt)
            (S
              (VP (TO to)
                (VP (VB keep)
                  (S
                    (NP (DT a) (NN person))
                    (VP (VB warm) (, ,) (VB do)
                      (NP (PRP they)))))))))))
    (. ?) ('' '')))

nsubj(put-4, They-1)
aux(put-4, do-2)
neg(put-4, n't-3)
root(ROOT-0, put-4)
dobj(put-4, ruffles-5)
det(shirt-8, a-7)
prep_on(put-4, shirt-8)
aux(keep-10, to-9)
vmod(shirt-8, keep-10)
det(person-12, a-11)
nsubj(warm-13, person-12)
ccomp(keep-10, warm-13)
dep(warm-13, do-15)
dobj(warm-13, they-16)

(ROOT
  (S (`` ``)
    (ADVP (RB Course))
    (NP (PRP they))
    (VP (VBP do) (RB n't))
    (. .) ('' '')))

advmod(do-4, Course-2)
nsubj(do-4, they-3)
root(ROOT-0, do-4)
neg(do-4, n't-5)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP they))
      (VP (VBD put)
        (NP (PRP them))
        (PRT (RP ON))))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP (PRP they))
    (. ?) ('' '')))

cc(put-4, But-2)
nsubj(put-4, they-3)
ccomp(do-8, put-4)
dobj(put-4, them-5)
prt(put-4, ON-6)
root(ROOT-0, do-8)
neg(do-8, n't-9)
nsubj(do-8, they-10)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT All) (NN right))
        (, ,)
        (NP
          (NP (RB then))
          (: ;)
          (SBAR
            (WHNP (WDT that) (NN letter))
            (S
              (NP (PRP I))
              (VP (VBD wrote))))))
      (VP (VBZ is)
        (NP (DT a) (NN shirt))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN welkin))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN ruffle))
          (PP (IN on)
            (NP (PRP it))))))
    (. .) ('' '')))

det(right-3, All-2)
nsubj(shirt-13, right-3)
appos(right-3, then-5)
det(letter-8, then-5)
dobj(wrote-10, letter-8)
nsubj(wrote-10, I-9)
rcmod(then-5, wrote-10)
cop(shirt-13, is-11)
det(shirt-13, a-12)
root(ROOT-0, shirt-13)
det(welkin-17, the-16)
nsubj(ruffle-20, welkin-17)
cop(ruffle-20, 's-18)
det(ruffle-20, the-19)
conj_and(shirt-13, ruffle-20)
prep_on(ruffle-20, it-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBN judged)
        (SBAR (IN that)
          (S
            (NP (DT that))
            (VP (MD would)
              (VP (VB gravel)
                (NP (NNP Jim))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD did)))
    (. .)))

nsubj(judged-2, I-1)
root(ROOT-0, judged-2)
mark(gravel-6, that-3)
nsubj(gravel-6, that-4)
aux(gravel-6, would-5)
ccomp(judged-2, gravel-6)
dobj(gravel-6, Jim-7)
nsubj(did-11, it-10)
conj_and(judged-2, did-11)

(ROOT
  (S (`` ``)
    (ADVP (RB Now))
    (PRN (, ,)
      (S
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (NP (PRP it))
        (VP (VBP ai) (RB n't)
          (NP (DT no) (NN use)
            (S
              (VP (TO to)
                (VP (VB talk)
                  (PP (IN like)
                    (NP (NN dat)))
                  (: ;)
                  (ADVP (IN en))
                  (, ,)
                  (ADVP (RB moreover))))))))
      (, ,))
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ sinful)))
    (. .)))

advmod(sinful-23, Now-2)
nn(Tom-5, Mars-4)
nsubj(use-11, Tom-5)
nsubj(use-11, it-7)
cop(use-11, ai-8)
neg(use-11, n't-9)
neg(use-11, no-10)
parataxis(sinful-23, use-11)
aux(talk-13, to-12)
vmod(use-11, talk-13)
prep_like(talk-13, dat-15)
advmod(talk-13, en-17)
advmod(talk-13, moreover-19)
nsubj(sinful-23, it-21)
cop(sinful-23, 's-22)
root(ROOT-0, sinful-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ knows)
      (SBAR
        (S
          (NP (DT a) (NN letter))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (NN shirt))
            (, ,)
            (PP (IN en)
              (NP
                (NP (NN dey))
                (SBAR
                  (S
                    (VP (VBP ai) (RB n't)
                      (NP
                        (NP (DT no) (NNS ruffles))
                        (PP (IN on)
                          (NP
                            (NP (PRP it))
                            (, ,)
                            (NP (NN nuther))))))))))))))
    (. .)))

nsubj(knows-2, You-1)
root(ROOT-0, knows-2)
det(letter-4, a-3)
nsubj(shirt-8, letter-4)
cop(shirt-8, ai-5)
neg(shirt-8, n't-6)
neg(shirt-8, no-7)
ccomp(knows-2, shirt-8)
prep_en(shirt-8, dey-11)
cop(ruffles-15, ai-12)
neg(ruffles-15, n't-13)
neg(ruffles-15, no-14)
rcmod(dey-11, ruffles-15)
prep_on(ruffles-15, it-17)
appos(it-17, nuther-19)

(ROOT
  (S
    (S
      (NP (NNP Dey))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN place)
          (S
            (VP (TO to)
              (VP (VB put)
                (NP (PRP 'em))
                (PRT (RP on))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB put)
          (NP (NN em))
          (PRT (RP on)))))
    (, ,)
    (CC and)
    (S
      (NP (NN dey))
      (VP (MD would) (RB n't)
        (VP (VB stay)
          (NP
            (NP (NN ef))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBD did))))))))
    (. .) ('' '')))

nsubj(place-5, Dey-1)
cop(place-5, ai-2)
neg(place-5, n't-3)
neg(place-5, no-4)
root(ROOT-0, place-5)
aux(put-7, to-6)
vmod(place-5, put-7)
dobj(put-7, 'em-8)
prt(put-7, on-9)
nsubj(put-14, you-11)
aux(put-14, ca-12)
neg(put-14, n't-13)
conj_and(place-5, put-14)
dobj(put-14, em-15)
prt(put-14, on-16)
nsubj(stay-22, dey-19)
aux(stay-22, would-20)
neg(stay-22, n't-21)
conj_and(place-5, stay-22)
dobj(stay-22, ef-23)
nsubj(did-25, you-24)
rcmod(ef-23, did-25)

(ROOT
  (S (`` ``)
    (NP (NNP Oh) (NNP DO))
    (VP
      (VP (VBD shut)
        (PRT (RP up)))
      (, ,)
      (CC and)
      (VP (VBP wait)
        (SBAR (IN till)
          (S
            (NP (NN something))
            (VP (VBZ 's)
              (VP (VBN started)
                (SBAR (IN that)
                  (S
                    (NP (PRP you))
                    (VP (VBP know)
                      (NP (NN something) (RB about)))))))))))
    (. .) ('' '')))

nn(DO-3, Oh-2)
nsubj(shut-4, DO-3)
nsubj(wait-8, DO-3)
root(ROOT-0, shut-4)
prt(shut-4, up-5)
conj_and(shut-4, wait-8)
mark(started-12, till-9)
nsubjpass(started-12, something-10)
auxpass(started-12, 's-11)
advcl(wait-8, started-12)
mark(know-15, that-13)
nsubj(know-15, you-14)
ccomp(started-12, know-15)
dobj(know-15, something-16)
advmod(something-16, about-17)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (, ,)
    (S
      (NP (NNP Mars) (NNP Tom))
      (, ,)
      (ADVP (RB sholy))
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB mean)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB n't)
                      (VP (VB know)
                        (PP (IN about)
                          (NP
                            (NP (NNS shirts))
                            (, ,)
                            (SBAR
                              (WHADVP (WRB when))
                              (PRN (, ,)
                                (S
                                  (NP (NN goodness))
                                  (VP (VBZ knows)))
                                (, ,))
                              (S
                                (NP (PRP I))
                                (VP (VBZ 's)
                                  (VP (VBN toted)
                                    (NP
                                      (NP (NN home))
                                      (PP (IN de)
                                        (NP (NN washin)))
                                      ('' ')
                                      (ADJP (RB ever) (JJ sence)))))))))))))))))))
    (: --) ('' '')
    (S (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP tell)
          (NP (PRP you))))
      (, ,)
      (S
        (NP (DT this))
        (VP (VBZ has) (RB n't)
          (VP (VBN got)
            (NP (NN anything))
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN with)
                    (NP (NNS shirts))))))))))
    (. .)))

advmod(mean-11, Why-2)
nn(Tom-5, Mars-4)
nsubj(mean-11, Tom-5)
nsubj(say-13, Tom-5)
advmod(you-8, sholy-7)
nsubj(mean-11, you-8)
nsubj(say-13, you-8)
aux(mean-11, ca-9)
neg(mean-11, n't-10)
root(ROOT-0, mean-11)
aux(say-13, to-12)
xcomp(mean-11, say-13)
nsubj(know-17, I-14)
aux(know-17, do-15)
neg(know-17, n't-16)
ccomp(say-13, know-17)
prep_about(know-17, shirts-19)
tmod(toted-28, shirts-19)
advmod(toted-28, when-21)
nsubj(knows-24, goodness-23)
dep(toted-28, knows-24)
nsubjpass(toted-28, I-26)
auxpass(toted-28, 's-27)
rcmod(shirts-19, toted-28)
dobj(toted-28, home-29)
prep_de(home-29, washin-31)
advmod(sence-34, ever-33)
amod(home-29, sence-34)
nsubj(tell-39, I-38)
parataxis(mean-11, tell-39)
dobj(tell-39, you-40)
nsubj(got-45, this-42)
aux(got-45, has-43)
neg(got-45, n't-44)
parataxis(tell-39, got-45)
dobj(got-45, anything-46)
aux(do-48, to-47)
vmod(got-45, do-48)
prep_with(do-48, shirts-50)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (PRN (: --)
      (S
        (VP (VBG '')
          (S (`` ``)
            (INTJ (WRB Why))
            (, ,)
            (NP (NNP Mars) (NNP Tom))
            (, ,)
            (NP (PRP you))
            (VP (VBD said)
              (NP
                (NP (NN yo) (`` `) (FW self) (FW dat))
                (NP (DT a) (NN letter)))))))
      (: --))
    (NP (NNP ''))
    (`` ``)
    (VP (VBP Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB drive)
                  (S
                    (NP (PRP me))
                    (ADJP (JJ crazy))))))))))
    (. ?)))

nsubj(Do-22, I-1)
advmod(Do-22, only-2)
discourse(said-12, Why-6)
nn(Tom-9, Mars-8)
nsubj(said-12, Tom-9)
nsubj(said-12, you-11)
ccomp(''-4, said-12)
dobj(said-12, yo-13)
iobj(said-12, yo-13)
nn(yo-13, self-15)
dep(yo-13, dat-16)
det(letter-18, a-17)
dep(yo-13, letter-18)
root(ROOT-0, Do-22)
nsubj(want-24, you-23)
nsubj(drive-26, you-23)
ccomp(Do-22, want-24)
aux(drive-26, to-25)
xcomp(want-24, drive-26)
nsubj(crazy-28, me-27)
xcomp(drive-26, crazy-28)

(ROOT
  (S
    (VP (VB Keep)
      (ADVP (RB still)))
    (. .)))

root(ROOT-0, Keep-1)
advmod(Keep-1, still-2)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBD used)
      (NP (PRP it))
      (PP (IN as)
        (NP (DT a) (NN metaphor))))
    (. .) ('' '')))

nsubj(used-3, I-1)
advmod(used-3, only-2)
root(ROOT-0, used-3)
dobj(used-3, it-4)
det(metaphor-7, a-6)
prep_as(used-3, metaphor-7)

(ROOT
  (S
    (NP (DT That) (NN word) (JJR kinder))
    (VP (VBD bricked)
      (NP (PRP us))
      (PRT (RP up))
      (PP (IN for)
        (NP (DT a) (NN minute))))
    (. .)))

det(kinder-3, That-1)
dep(kinder-3, word-2)
nsubj(bricked-4, kinder-3)
root(ROOT-0, bricked-4)
dobj(bricked-4, us-5)
prt(bricked-4, up-6)
det(minute-9, a-8)
prep_for(bricked-4, minute-9)

(ROOT
  (S (RB Then)
    (NP (NNP Jim))
    (VP
      (VP (VBZ says))
      (: --) (RB rather)
      (VP
        (ADJP (JJ timid))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP he))
            (VP (VBP see)
              (SBAR
                (S
                  (NP (NNP Tom))
                  (VP (VBD was)
                    (VP (VBG getting)
                      (NP
                        (NP (JJ pretty) (NN tetchy))
                        (: :) (`` ``)
                        (NP (NNP Mars) (NNP Tom))
                        (, ,)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ is)
                              (NP (DT a) (NN metaphor)))))))))))))))
    (. ?) ('' '')))

advmod(says-3, Then-1)
nsubj(says-3, Jim-2)
root(ROOT-0, says-3)
advmod(says-3, rather-5)
dep(says-3, timid-6)
mark(see-10, because-8)
nsubj(see-10, he-9)
advcl(timid-6, see-10)
nsubj(getting-13, Tom-11)
aux(getting-13, was-12)
ccomp(see-10, getting-13)
amod(tetchy-15, pretty-14)
dobj(getting-13, tetchy-15)
nsubj(metaphor-24, tetchy-15)
nn(Tom-19, Mars-18)
dep(tetchy-15, Tom-19)
cop(metaphor-24, is-22)
det(metaphor-24, a-23)
rcmod(tetchy-15, metaphor-24)

(ROOT
  (S (`` ``)
    (NP (DT A) (NN metaphor))
    (VP (VBZ 's)
      (NP
        (NP (SYM a))
        (: --)
        (S
          (ADVP (RB well))
          (, ,)
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT a)
              (PRN (: --)
                (NP
                  (NP (SYM a))
                  (: --)
                  (NP
                    (NP (DT a) (NN metaphor) (POS 's))
                    (NP (DT an) (NN illustration))))))))))
    (. .) ('' '')))

det(metaphor-3, A-2)
nsubj(a-5, metaphor-3)
cop(a-5, 's-4)
root(ROOT-0, a-5)
advmod(a-13, well-7)
nsubj(a-13, it-9)
cop(a-13, 's-10)
det(a-13, a-11)
dep(a-5, a-13)
det(metaphor-16, a-15)
dep(a-13, metaphor-16)
possessive(metaphor-16, 's-17)
det(illustration-19, an-18)
dep(metaphor-16, illustration-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBP see)
        (SBAR
          (S
            (NP (NNP THAT))
            (VP (VBD did) (RB n't)
              (VP (VB git)
                (NP (NN home))))))))
    (, ,) (IN so)
    (S
      (NP (PRP he))
      (VP (VBD tried)
        (ADVP (RB again))))
    (. .)))

nsubj(see-2, He-1)
root(ROOT-0, see-2)
nsubj(git-6, THAT-3)
aux(git-6, did-4)
neg(git-6, n't-5)
ccomp(see-2, git-6)
dobj(git-6, home-7)
dep(see-2, so-9)
nsubj(tried-11, he-10)
parataxis(see-2, tried-11)
advmod(tried-11, again-12)

(ROOT
  (S (`` ``)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP I))
          (VP (VBP say)
            (SBAR
              (S
                (NP
                  (NP (NNS birds))
                  (PP (IN of)
                    (NP (DT a) (NN feather))))
                (VP (VBZ flocks)
                  (ADVP (RB together))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (JJ metaphorical) (NN way))
          (PP (IN of)
            (S
              (VP (VBG saying)))))))
    (: --) ('' '')
    (S (`` ``)
      (S (CC But)
        (NP (NN dey))
        (VP (VBP DO) (RB N'T)))
      (, ,)
      (S
        (NP (NNP Mars))
        (VP (VBZ Tom))))
    (. .)))

advmod(say-4, When-2)
nsubj(say-4, I-3)
advcl(way-16, say-4)
nsubj(flocks-9, birds-5)
det(feather-8, a-7)
prep_of(birds-5, feather-8)
ccomp(say-4, flocks-9)
advmod(flocks-9, together-10)
nsubj(way-16, it-12)
cop(way-16, 's-13)
det(way-16, a-14)
amod(way-16, metaphorical-15)
root(ROOT-0, way-16)
prepc_of(way-16, saying-18)
cc(DO-24, But-22)
nsubj(DO-24, dey-23)
parataxis(way-16, DO-24)
neg(DO-24, N'T-25)
nsubj(Tom-28, Mars-27)
parataxis(DO-24, Tom-28)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (`` `)
      (ADJP (JJ deed))
      (NN dey))
    (VP (VBP do) (RB n't))
    (. .)))

discourse(do-8, No-1)
advmod(do-8, sir-3)
amod(dey-7, deed-6)
nsubj(do-8, dey-7)
root(ROOT-0, do-8)
neg(do-8, n't-9)

(ROOT
  (S
    (NP (NNP Dey))
    (VP (VBP ai) (RB n't)
      (NP
        (NP
          (NP (DT no) (NNS feathers) (NN dat) (POS 's))
          (JJR more)
          (ADJP (RB alike))
          (NN den))
        (SBAR
          (S
            (S
              (S
                (NP (DT a) (NN bluebird))
                (VP
                  (ADVP (IN en) (DT a))
                  (VBN jaybird)))
              (, ,)
              (CC but)
              (S
                (ADVP (RB ef))
                (NP (PRP you))
                (VP (VBZ waits)
                  (SBAR (IN till)
                    (S
                      (NP (PRP you))
                      (VP (VBZ catches)
                        (NP
                          (NP (DT dem) (NNS birds))
                          (FRAG
                            (ADVP (RB together))
                            (, ,)
                            (S
                              (NP (PRP you))
                              (VP (MD 'll)))
                            (: --)))))))
                ('' '')))
            (S
              (INTJ (`` ``) (UH Oh))
              (, ,)
              (VP (VB give)
                (NP (PRP us))
                (NP (DT a) (NN rest))))))))
    (. !)))

nsubj(den-10, Dey-1)
cop(den-10, ai-2)
neg(den-10, n't-3)
neg(dat-6, no-4)
nn(dat-6, feathers-5)
poss(den-10, dat-6)
amod(den-10, more-8)
amod(den-10, alike-9)
root(ROOT-0, den-10)
det(bluebird-12, a-11)
nsubj(jaybird-15, bluebird-12)
advmod(jaybird-15, en-13)
dep(en-13, a-14)
rcmod(den-10, jaybird-15)
advmod(waits-20, ef-18)
nsubj(waits-20, you-19)
rcmod(den-10, waits-20)
conj_but(jaybird-15, waits-20)
mark(catches-23, till-21)
nsubj(catches-23, you-22)
advcl(waits-20, catches-23)
det(birds-25, dem-24)
dobj(catches-23, birds-25)
dep(birds-25, together-26)
nsubj('ll-29, you-28)
dep(together-26, 'll-29)
discourse(give-35, Oh-33)
parataxis(jaybird-15, give-35)
iobj(give-35, us-36)
det(rest-38, a-37)
dobj(give-35, rest-38)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (NP (DT the) (JJS simplest) (JJ little) (NN thing))
        (PP (IN through)
          (NP (PRP$ your) (JJ thick) (NN skull)))))
    (. .)))

nsubj(get-4, You-1)
aux(get-4, ca-2)
neg(get-4, n't-3)
root(ROOT-0, get-4)
det(thing-8, the-5)
amod(thing-8, simplest-6)
amod(thing-8, little-7)
dobj(get-4, thing-8)
poss(skull-12, your-10)
amod(skull-12, thick-11)
prep_through(get-4, skull-12)

(ROOT
  (S
    (NP (RB Now))
    (VP (VBP do) (RB n't)
      (VP (VB bother)
        (NP (PRP me))
        (ADVP (DT any) (RBR more))))
    (. .) ('' '')))

nsubj(bother-4, Now-1)
aux(bother-4, do-2)
neg(bother-4, n't-3)
root(ROOT-0, bother-4)
dobj(bother-4, me-5)
dep(more-7, any-6)
advmod(bother-4, more-7)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD was)
      (ADJP (JJ satisfied)
        (S
          (VP (TO to)
            (VP (VB stop))))))
    (. .)))

nsubj(satisfied-3, Jim-1)
nsubj(stop-5, Jim-1)
cop(satisfied-3, was-2)
root(ROOT-0, satisfied-3)
aux(stop-5, to-4)
xcomp(satisfied-3, stop-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (RB dreadful) (JJ pleased)
        (PP (IN with)
          (NP (PRP himself))))
      (PP (IN for)
        (S
          (VP (VBG catching)
            (NP (NNP Tom))
            (PRT (RP out))))))
    (. .)))

nsubj(pleased-4, He-1)
cop(pleased-4, was-2)
advmod(pleased-4, dreadful-3)
root(ROOT-0, pleased-4)
prep_with(pleased-4, himself-6)
prepc_for(pleased-4, catching-8)
dobj(catching-8, Tom-9)
prt(catching-8, out-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN minute))
      (SBAR
        (S
          (NP (NNP Tom))
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB talk)
                  (PP (IN about)
                    (NP (NNS birds))))))))))
    (NP
      (NP (PRP I))
      (VP (VBN judged)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (NP (DT a) (NN goner))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (NNP Jim))
                  (VP (VBD knowed)
                    (NP (JJR more))
                    (PP (IN about)
                      (NP (NNS birds)))
                    (PP (IN than)
                      (NP
                        (NP (DT both))
                        (PP (IN of)
                          (NP (PRP us)))))))))))))
    (VP (VBD put)
      (ADVP (RB together)))
    (. .)))

det(minute-2, The-1)
nsubj(put-26, minute-2)
nsubj(begun-4, Tom-3)
nsubj(talk-6, Tom-3)
rcmod(minute-2, begun-4)
aux(talk-6, to-5)
xcomp(begun-4, talk-6)
prep_about(talk-6, birds-8)
nsubj(put-26, I-9)
vmod(I-9, judged-10)
nsubj(goner-14, he-11)
cop(goner-14, was-12)
det(goner-14, a-13)
ccomp(judged-10, goner-14)
mark(knowed-18, because-16)
nsubj(knowed-18, Jim-17)
advcl(goner-14, knowed-18)
dobj(knowed-18, more-19)
prep_about(knowed-18, birds-21)
prep_than(knowed-18, both-23)
prep_of(both-23, us-25)
root(ROOT-0, put-26)
advmod(put-26, together-27)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN killed)
            (NP
              (NP (NNS hundreds)
                (CC and)
                (NNS hundreds))
              (PP (IN of)
                (NP (PRP them)))))))
      (, ,))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (DT the) (NN way)
          (S
            (VP (TO to)
              (VP (VB find)
                (PRT (RP out))
                (PP (IN about)
                  (NP (NNS birds)))))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
nsubj(killed-6, he-4)
aux(killed-6, had-5)
dep(see-2, killed-6)
dobj(killed-6, hundreds-7)
dobj(killed-6, hundreds-9)
conj_and(hundreds-7, hundreds-9)
prep_of(hundreds-7, them-11)
nsubj(way-17, that-14)
cop(way-17, 's-15)
det(way-17, the-16)
conj_and(see-2, way-17)
aux(find-19, to-18)
vmod(way-17, find-19)
prt(find-19, out-20)
prep_about(find-19, birds-22)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (NNS people))
            (VP (VBZ does)
              (SBAR
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP
                      (VP (VBZ writes)
                        (NP (NNS books))
                        (PP (IN about)
                          (NP (NNS birds))))
                      (, ,)
                      (CC and)
                      (VP (VBZ loves)
                        (NP (PRP them))))))
                (CC so)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (MD 'll)
                      (VP
                        (VP (VB go)
                          (ADJP (JJ hungry)
                            (CC and)
                            (JJ tired)))
                        (CC and)
                        (VP (VB take)
                          (NP
                            (NP (DT any) (NN amount))
                            (PP (IN of)
                              (NP (NN trouble))))
                          (S
                            (VP (TO to)
                              (VP
                                (VP (VB find)
                                  (NP (DT a) (JJ new) (NN bird)))
                                (CC and)
                                (VP (VB kill)
                                  (NP (PRP it)))))))))))))))))
    (. .)))

nsubj(way-4, That-1)
cop(way-4, 's-2)
det(way-4, the-3)
root(ROOT-0, way-4)
nsubj(writes-8, way-4)
nsubj(loves-14, way-4)
nsubj(does-6, people-5)
rcmod(way-4, does-6)
ccomp(does-6, writes-8)
dobj(writes-8, books-9)
prep_about(writes-8, birds-11)
ccomp(does-6, loves-14)
conj_and(writes-8, loves-14)
dobj(loves-14, them-15)
mark(go-20, that-17)
nsubj(go-20, they-18)
nsubj(take-25, they-18)
aux(go-20, 'll-19)
ccomp(does-6, go-20)
conj_so(writes-8, go-20)
acomp(go-20, hungry-21)
acomp(go-20, tired-23)
conj_and(hungry-21, tired-23)
conj_so(writes-8, take-25)
conj_and(go-20, take-25)
det(amount-27, any-26)
dobj(take-25, amount-27)
prep_of(amount-27, trouble-29)
aux(find-31, to-30)
vmod(take-25, find-31)
det(bird-34, a-32)
amod(bird-34, new-33)
dobj(find-31, bird-34)
vmod(take-25, kill-36)
conj_and(find-31, kill-36)
dobj(kill-36, it-37)

(ROOT
  (S
    (S
      (NP (PRP$ Their) (NN name))
      (VP (VBZ is)
        (ADJP (JJ ornithologers))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB have)
          (VP (VBN been)
            (NP
              (NP (DT an) (NN ornithologer))
              (SBAR
                (S
                  (S
                    (S
                      (NP (PRP myself))
                      (, ,)
                      (SBAR
                        (SBAR (IN because)
                          (S
                            (S
                              (NP (PRP I))
                              (ADVP (RB always))
                              (VP (VBD loved)
                                (NP (NNS birds)
                                  (CC and)
                                  (NNS creatures))))
                            (: ;)
                            (CC and)
                            (S
                              (S
                                (NP (PRP I))
                                (VP (VBD started)
                                  (PRT (RP out))
                                  (S
                                    (VP (TO to)
                                      (VP (VB learn)
                                        (SBAR
                                          (WHADVP (WRB how))
                                          (S
                                            (VP (TO to)
                                              (VP (VB be)
                                                (NP (CD one)))))))))))
                              (, ,)
                              (CC and)
                              (S
                                (NP (PRP I))
                                (VP (VBP see)
                                  (NP
                                    (NP (DT a) (NN bird))
                                    (VP (VBG setting)
                                      (PP (IN on)
                                        (NP
                                          (NP (DT a) (NN limb))
                                          (PP (IN of)
                                            (NP (DT a) (JJ high) (NN tree)))))
                                      (, ,)
                                      (S
                                        (VP (VBG singing)
                                          (PP (IN with)
                                            (NP
                                              (NP (PRP$ its) (NN head))
                                              (VP (VBN tilted)
                                                (ADVP (RB back)))))))))))
                              (CC and)
                              (S
                                (NP (PRP$ its) (NN mouth))
                                (ADJP (JJ open))))))
                        (, ,)
                        (CC and)
                        (SBAR (IN before)
                          (S
                            (NP (PRP I))
                            (VP (VBD thought)
                              (SBAR
                                (S
                                  (S
                                    (S
                                      (NP (PRP I))
                                      (VP (VBD fired)))
                                    (, ,)
                                    (CC and)
                                    (S
                                      (NP (PRP$ his) (NN song))
                                      (VP (VBD stopped))))
                                  (CC and)
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD fell)
                                      (ADVP (RB straight))
                                      (ADVP (RB down)
                                        (PP (IN from)
                                          (NP (DT the) (NN limb))))))))))))
                      (, ,)
                      (NP (DT all))
                      (VP (VBZ limp)
                        (PP (IN like)
                          (NP (DT a) (NN rag)))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (PRP I))
                      (VP
                        (VP (VBP run))
                        (CC and)
                        (VP (VBD picked)
                          (NP (PRP him))
                          (PRT (RP up))))))
                  (CC and)
                  (S
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (ADJP (JJ dead))))
                    (, ,)
                    (CC and)
                    (S
                      (S
                        (NP (PRP$ his) (NN body))
                        (VP (VBD was)
                          (ADJP (JJ warm)
                            (PP (IN in)
                              (NP (PRP$ my) (NN hand))))))
                      (, ,)
                      (CC and)
                      (S
                        (S
                          (NP (PRP$ his) (NN head))
                          (VP (VBD rolled)
                            (PP (IN about)
                              (NP
                                (NP (DT this) (NN way))
                                (CC and)
                                (NP (DT that))))
                            (, ,)
                            (SBAR (IN like)
                              (S
                                (NP (PRP$ his) (NN neck))
                                (VP (VBD was)
                                  (ADVP (RB broke)))))))
                        (, ,)
                        (CC and)
                        (S
                          (NP (EX there))
                          (VP (VBD was)
                            (NP
                              (NP
                                (NP (DT a) (JJ little) (JJ white) (NN skin))
                                (PP (IN over)
                                  (NP (PRP$ his) (NNS eyes))))
                              (, ,)
                              (CC and)
                              (NP
                                (NP (CD one) (JJ little) (NN drop))
                                (PP (IN of)
                                  (NP
                                    (NP (NN blood))
                                    (PP (IN on)
                                      (NP
                                        (NP (DT the) (NN side))
                                        (PP (IN of)
                                          (NP (PRP$ his) (NN head))))))))
                              (: ;)
                              (CC and)
                              (, ,)
                              (ADVP (RB laws)))))))))))))))
    (. !)))

poss(name-2, Their-1)
nsubj(ornithologers-4, name-2)
cop(ornithologers-4, is-3)
root(ROOT-0, ornithologers-4)
nsubj(ornithologer-12, I-7)
aux(ornithologer-12, could-8)
aux(ornithologer-12, have-9)
cop(ornithologer-12, been-10)
det(ornithologer-12, an-11)
conj_and(ornithologers-4, ornithologer-12)
nsubj(limp-80, myself-13)
mark(loved-18, because-15)
nsubj(loved-18, I-16)
advmod(loved-18, always-17)
advcl(limp-80, loved-18)
dobj(loved-18, birds-19)
dobj(loved-18, creatures-21)
conj_and(birds-19, creatures-21)
nsubj(started-25, I-24)
nsubj(learn-28, I-24)
nsubj(one-32, I-24)
nsubj(open-57, I-24)
conj_and(loved-18, started-25)
advcl(limp-80, started-25)
prt(started-25, out-26)
aux(learn-28, to-27)
xcomp(started-25, learn-28)
advmod(one-32, how-29)
aux(one-32, to-30)
cop(one-32, be-31)
ccomp(learn-28, one-32)
xcomp(learn-28, one-32)
nsubj(see-36, I-35)
conj_and(loved-18, see-36)
conj_and(started-25, see-36)
det(bird-38, a-37)
dobj(see-36, bird-38)
vmod(bird-38, setting-39)
det(limb-42, a-41)
prep_on(setting-39, limb-42)
det(tree-46, a-44)
amod(tree-46, high-45)
prep_of(limb-42, tree-46)
vmod(setting-39, singing-48)
poss(head-51, its-50)
prep_with(singing-48, head-51)
vmod(head-51, tilted-52)
advmod(tilted-52, back-53)
poss(mouth-56, its-55)
dep(open-57, mouth-56)
conj_and(loved-18, open-57)
conj_and(started-25, open-57)
mark(thought-62, before-60)
nsubj(thought-62, I-61)
conj_and(loved-18, thought-62)
advcl(limp-80, thought-62)
nsubj(fired-64, I-63)
dep(thought-62, fired-64)
poss(song-68, his-67)
nsubj(stopped-69, song-68)
dep(thought-62, stopped-69)
conj_and(fired-64, stopped-69)
nsubj(fell-72, he-71)
dep(thought-62, fell-72)
conj_and(fired-64, fell-72)
advmod(fell-72, straight-73)
advmod(fell-72, down-74)
det(limb-77, the-76)
prep_from(down-74, limb-77)
nsubj(limp-80, all-79)
rcmod(ornithologer-12, limp-80)
det(rag-83, a-82)
prep_like(limp-80, rag-83)
nsubj(run-87, I-86)
nsubj(picked-89, I-86)
rcmod(ornithologer-12, run-87)
conj_and(limp-80, run-87)
conj_and(limp-80, picked-89)
conj_and(run-87, picked-89)
dobj(picked-89, him-90)
prt(picked-89, up-91)
nsubj(dead-95, he-93)
cop(dead-95, was-94)
rcmod(ornithologer-12, dead-95)
conj_and(limp-80, dead-95)
poss(body-99, his-98)
nsubj(warm-101, body-99)
cop(warm-101, was-100)
conj_and(limp-80, warm-101)
conj_and(dead-95, warm-101)
poss(hand-104, my-103)
prep_in(warm-101, hand-104)
poss(head-108, his-107)
nsubj(rolled-109, head-108)
conj_and(dead-95, rolled-109)
conj_and(warm-101, rolled-109)
det(way-112, this-111)
prep_about(rolled-109, way-112)
prep_about(rolled-109, that-114)
conj_and(way-112, that-114)
mark(was-119, like-116)
poss(neck-118, his-117)
nsubj(was-119, neck-118)
advcl(rolled-109, was-119)
advmod(was-119, broke-120)
expl(was-124, there-123)
conj_and(warm-101, was-124)
conj_and(rolled-109, was-124)
det(skin-128, a-125)
amod(skin-128, little-126)
amod(skin-128, white-127)
nsubj(was-124, skin-128)
poss(eyes-131, his-130)
prep_over(skin-128, eyes-131)
num(drop-136, one-134)
amod(drop-136, little-135)
nsubj(was-124, drop-136)
conj_and(skin-128, drop-136)
prep_of(drop-136, blood-138)
det(side-141, the-140)
prep_on(blood-138, side-141)
poss(head-144, his-143)
prep_of(side-141, head-144)
nsubj(was-124, laws-148)
advmod(skin-128, laws-148)
conj_and(skin-128, laws-148)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB see)
          (NP (NN nothing) (JJR more))
          (PP (IN for)
            (NP (DT the) (NNS tears))))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (VBP hai) (RB n't)
          (ADVP (RB never))
          (VP (VB murdered)
            (NP
              (NP (DT no) (NN creature))
              (PP (IN since)
                (NP
                  (NP (DT that) (NN war))
                  (VP (RB n't) (VBG doing)
                    (NP (PRP me)))))
              (NP (DT no) (NN harm))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP ai) (RB n't)
          (VP (VBG going)
            (PP (TO to))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, could-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
dep(more-6, nothing-5)
dobj(see-4, more-6)
det(tears-9, the-8)
prep_for(see-4, tears-9)
nsubj(hai-13, I-12)
conj_and(see-4, hai-13)
neg(hai-13, n't-14)
neg(hai-13, never-15)
dep(hai-13, murdered-16)
neg(creature-18, no-17)
dobj(murdered-16, creature-18)
iobj(murdered-16, creature-18)
det(war-21, that-20)
prep_since(creature-18, war-21)
neg(doing-23, n't-22)
vmod(war-21, doing-23)
dobj(doing-23, me-24)
neg(harm-26, no-25)
dep(creature-18, harm-26)
nsubj(going-32, I-29)
aux(going-32, ai-30)
neg(going-32, n't-31)
conj_and(see-4, going-32)
conj_and(hai-13, going-32)
prep(going-32, to-33)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN aggravated)
        (PP (IN about)
          (NP (DT that) (NN welkin)))))
    (. .)))

cc(aggravated-4, But-1)
nsubjpass(aggravated-4, I-2)
auxpass(aggravated-4, was-3)
root(ROOT-0, aggravated-4)
det(welkin-7, that-6)
prep_about(aggravated-4, welkin-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB know)))))
    (. .)))

nsubj(wanted-2, I-1)
nsubj(know-4, I-1)
root(ROOT-0, wanted-2)
aux(know-4, to-3)
xcomp(wanted-2, know-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD got)
        (NP (DT the) (NN subject))
        (PRT (RP up))
        (ADVP (RB again))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (NNP Tom))
      (VP
        (VP (VBD explained))
        (, ,)
        (NP
          (NP (DT the) (JJS best))
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)))))))
    (. .)))

nsubj(got-2, I-1)
root(ROOT-0, got-2)
det(subject-4, the-3)
dobj(got-2, subject-4)
prt(got-2, up-5)
advmod(got-2, again-6)
advmod(explained-11, then-9)
nsubj(explained-11, Tom-10)
conj_and(got-2, explained-11)
det(best-14, the-13)
dobj(explained-11, best-14)
nsubj(could-16, he-15)
rcmod(best-14, could-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT a) (NN person))
          (VP (VBD made)
            (NP
              (NP (DT a) (JJ big) (NN speech))
              (SBAR
                (S
                  (NP (DT the) (NNS newspapers))
                  (VP (VBD said)
                    (SBAR
                      (S
                        (NP
                          (NP (DT the) (NNS shouts))
                          (PP (IN of)
                            (NP (DT the) (NNS people))))
                        (VP (VBD made)
                          (NP (DT the) (NN welkin) (NN ring)))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
advmod(made-6, when-3)
det(person-5, a-4)
nsubj(made-6, person-5)
advcl(said-2, made-6)
det(speech-9, a-7)
amod(speech-9, big-8)
dobj(made-6, speech-9)
det(newspapers-11, the-10)
nsubj(said-12, newspapers-11)
rcmod(speech-9, said-12)
det(shouts-14, the-13)
nsubj(made-18, shouts-14)
det(people-17, the-16)
prep_of(shouts-14, people-17)
ccomp(said-12, made-18)
det(ring-21, the-19)
nn(ring-21, welkin-20)
dobj(made-18, ring-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP they))
          (ADVP (RB always))
          (VP (VBD said)
            (SBAR (IN that) (, ,)
              (S
                (S (CC but)
                  (NP
                    (NP (NN none))
                    (PP (IN of)
                      (NP (PRP them))))
                  (ADVP (RB ever))
                  (VP (VBD told)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP it))
                        (VP (VBD was))))))
                (, ,) (IN so)
                (S
                  (NP (PRP he))
                  (VP (VBD allowed)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (ADVP (RB just))
                        (VP (VBD meant)
                          (ADVP
                            (ADVP (RB outdoors))
                            (CC and)
                            (ADVP (RB up) (JJ high))))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(said-5, they-3)
advmod(said-5, always-4)
ccomp(said-2, said-5)
mark(told-13, that-6)
cc(told-13, but-8)
nsubj(told-13, none-9)
prep_of(none-9, them-11)
advmod(told-13, ever-12)
ccomp(said-5, told-13)
dobj(was-16, what-14)
nsubj(was-16, it-15)
ccomp(told-13, was-16)
dep(told-13, so-18)
nsubj(allowed-20, he-19)
parataxis(told-13, allowed-20)
nsubj(meant-23, it-21)
advmod(meant-23, just-22)
ccomp(allowed-20, meant-23)
advmod(meant-23, outdoors-24)
advmod(high-27, up-26)
advmod(meant-23, high-27)
conj_and(outdoors-24, high-27)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (DT that))
      (VP (VBD seemed)
        (ADJP (JJ sensible) (RB enough))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD was)
          (ADJP (JJ satisfied)))
        (, ,)
        (CC and)
        (VP (VBD said)
          (ADVP (RB so)))))
    (. .)))

discourse(seemed-4, Well-1)
nsubj(seemed-4, that-3)
root(ROOT-0, seemed-4)
acomp(seemed-4, sensible-5)
advmod(sensible-5, enough-6)
dep(seemed-4, so-8)
nsubj(satisfied-11, I-9)
nsubj(said-14, I-9)
cop(satisfied-11, was-10)
parataxis(seemed-4, satisfied-11)
parataxis(seemed-4, said-14)
conj_and(satisfied-11, said-14)
advmod(said-14, so-15)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP
        (VP (VBD pleased)
          (NP (NNP Tom)))
        (CC and)
        (VP (VBD put)
          (NP (PRP him))
          (PP (IN in)
            (NP (DT a) (JJ good) (NN humor)))
          (ADVP (RB again)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (NP (PRP it))
          (VP (VBZ 's) (RB all)
            (ADJP (JJ right))
            (, ,)
            (ADVP (RB then))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB let)
          (S
            (NP (NNS bygones))
            (VP (VB be)
              (ADJP (JJ bygones)))))))
    (. .)))

nsubj(pleased-2, That-1)
nsubj(put-5, That-1)
root(ROOT-0, pleased-2)
dobj(pleased-2, Tom-3)
conj_and(pleased-2, put-5)
dobj(put-5, him-6)
det(humor-10, a-8)
amod(humor-10, good-9)
prep_in(put-5, humor-10)
advmod(put-5, again-11)
nsubj(says-15, he-14)
conj_and(pleased-2, says-15)
discourse(right-23, Well-18)
nsubj(right-23, it-20)
cop(right-23, 's-21)
advmod(right-23, all-22)
ccomp(says-15, right-23)
advmod(right-23, then-25)
nsubj(let-30, we-28)
aux(let-30, 'll-29)
conj_and(pleased-2, let-30)
nsubj(bygones-33, bygones-31)
cop(bygones-33, be-32)
ccomp(let-30, bygones-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (PP (IN for)
            (NP
              (NP (JJ certain))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT a) (NN welkin))
                  (VP (VBZ is)))))))))
    (, ,)
    (CC but)
    (S
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VB land)
              (PP (IN in)
                (NP (NNP London))))))
        (NP (PRP we))
        (VP (MD 'll)
          (VP (VB make)
            (S
              (NP (PRP it))
              (VP (VB ring)))
            (, ,)
            (ADVP (RB anyway)))))
      (, ,)
      (CC and)
      (SQ (VBP do) (RB n't)
        (NP (PRP you))
        (VP (VB forget)
          (NP (PRP it)))))
    (. .) ('' '')))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
prep_for(know-4, certain-6)
dobj(is-10, certain-6)
det(welkin-9, a-8)
nsubj(is-10, welkin-9)
rcmod(certain-6, is-10)
advmod(land-15, when-13)
nsubj(land-15, we-14)
advcl(make-20, land-15)
prep_in(land-15, London-17)
nsubj(make-20, we-18)
aux(make-20, 'll-19)
conj_but(know-4, make-20)
nsubj(ring-22, it-21)
ccomp(make-20, ring-22)
advmod(make-20, anyway-24)
aux(forget-30, do-27)
neg(forget-30, n't-28)
nsubj(forget-30, you-29)
conj_but(know-4, forget-30)
conj_and(make-20, forget-30)
dobj(forget-30, it-31)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (DT an) (NN erronort))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN person))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBD sailed)
                        (PRT (RP around))
                        (PP (IN in)
                          (NP (NNS balloons))))
                      (: ;)
                      (CC and)
                      (VP (VBD said)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (NP (DT a) (JJ mighty) (NN sight) (NN finer)
                                (S
                                  (VP (TO to)
                                    (VP (VB be)
                                      (NP (NNP Tom) (NNP Sawyer))
                                      (S
                                        (ADVP
                                          (NP (DT the) (NN Erronort))
                                          (IN than))
                                        (VP (TO to)
                                          (VP (VB be)
                                            (NP
                                              (NP (NNP Tom) (NNP Sawyer))
                                              (NP (DT the) (NN Traveler)))))))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD would)
        (VP (VB be)
          (VP (VBN heard)
            (PP (IN of)
              (NP
                (NP (DT all) (NN round))
                (NP
                  (NP (DT the) (NN world))
                  (, ,)
                  (SBAR
                    (SBAR (IN if)
                      (S
                        (NP (PRP we))
                        (VP (VBD pulled)
                          (PP (IN through)
                            (NP (DT all) (NN right))))))
                    (, ,)
                    (CC and)
                    (SBAR (IN so)
                      (S
                        (NP (PRP he))
                        (VP (MD would) (RB n't)
                          (VP (VB give)
                            (INTJ (UH shucks))))))))))
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a) (NN traveler))
                  (ADVP (RB now)))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
det(erronort-4, an-3)
nsubj(person-7, erronort-4)
cop(person-7, was-5)
det(person-7, a-6)
ccomp(said-2, person-7)
nsubj(sailed-9, person-7)
nsubj(said-15, person-7)
rcmod(person-7, sailed-9)
prt(sailed-9, around-10)
prep_in(sailed-9, balloons-12)
rcmod(person-7, said-15)
conj_and(sailed-9, said-15)
nsubj(finer-21, it-16)
cop(finer-21, was-17)
det(finer-21, a-18)
amod(finer-21, mighty-19)
nn(finer-21, sight-20)
ccomp(said-15, finer-21)
aux(Sawyer-25, to-22)
cop(Sawyer-25, be-23)
nn(Sawyer-25, Tom-24)
vmod(finer-21, Sawyer-25)
det(Erronort-27, the-26)
npadvmod(than-28, Erronort-27)
advmod(Sawyer-32, than-28)
aux(Sawyer-32, to-29)
cop(Sawyer-32, be-30)
nn(Sawyer-32, Tom-31)
vmod(Sawyer-25, Sawyer-32)
det(Traveler-34, the-33)
dep(Sawyer-32, Traveler-34)
nsubjpass(heard-40, we-37)
nsubj(traveler-64, we-37)
aux(heard-40, would-38)
auxpass(heard-40, be-39)
conj_and(said-2, heard-40)
det(round-43, all-42)
prep_of(heard-40, round-43)
det(world-45, the-44)
dep(round-43, world-45)
mark(pulled-49, if-47)
nsubj(pulled-49, we-48)
dep(world-45, pulled-49)
det(right-52, all-51)
prep_through(pulled-49, right-52)
mark(give-59, so-55)
nsubj(give-59, he-56)
aux(give-59, would-57)
neg(give-59, n't-58)
dep(world-45, give-59)
conj_and(pulled-49, give-59)
discourse(give-59, shucks-60)
aux(traveler-64, to-61)
cop(traveler-64, be-62)
det(traveler-64, a-63)
xcomp(heard-40, traveler-64)
advmod(traveler-64, now-65)

(ROOT
  (S
    (S
      (VP (VBG Toward)
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP (DT the) (NN afternoon))))))
    (S
      (NP (PRP we))
      (VP (VBD got)
        (S
          (NP (NN everything))
          (ADJP (JJ ready)
            (S
              (VP (TO to)
                (VP (VB land))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD felt)
        (ADJP
          (ADJP
            (ADJP (RB pretty) (JJ good))
            (PRN (, ,)
              (ADVP (RB too))
              (, ,)))
          (CC and)
          (ADJP (JJ proud)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD kept)
        (S
          (VP (VBG watching)
            (PP (IN with)
              (NP (DT the) (NNS glasses)))))
        (, ,)
        (PP (IN like)
          (NP (NNP Columbus) (NNP discovering) (NNP America)))))
    (. .)))

root(ROOT-0, Toward-1)
det(middle-3, the-2)
dobj(Toward-1, middle-3)
det(afternoon-6, the-5)
prep_of(middle-3, afternoon-6)
nsubj(got-8, we-7)
ccomp(Toward-1, got-8)
nsubj(ready-10, everything-9)
nsubj(land-12, everything-9)
xcomp(got-8, ready-10)
aux(land-12, to-11)
xcomp(ready-10, land-12)
nsubj(felt-16, we-15)
conj_and(Toward-1, felt-16)
advmod(good-18, pretty-17)
acomp(felt-16, good-18)
dep(good-18, too-20)
acomp(felt-16, proud-23)
conj_and(good-18, proud-23)
nsubj(kept-27, we-26)
conj_and(Toward-1, kept-27)
xcomp(kept-27, watching-28)
det(glasses-31, the-30)
prep_with(watching-28, glasses-31)
nn(America-36, Columbus-34)
nn(America-36, discovering-35)
prep_like(kept-27, America-36)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD could) (RB n't)
      (VP (VB see)
        (NP
          (NP (NN nothing))
          (PP (CC but)
            (NP (NN ocean))))))
    (. .)))

cc(see-5, But-1)
nsubj(see-5, we-2)
aux(see-5, could-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
dobj(see-5, nothing-6)
prep(nothing-6, but-7)
pobj(but-7, ocean-8)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN afternoon))
        (VP (VBD wasted)
          (PRT (RP out))))
      (CC and)
      (S
        (NP (DT the) (NN sun))
        (VP (VBD shut)
          (PRT (RP down)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB still))
      (NP (EX there))
      (VP (VBD war) (RB n't)
        (NP (DT no) (NN land) (NNS anywheres))))
    (. .)))

det(afternoon-2, The-1)
nsubj(wasted-3, afternoon-2)
root(ROOT-0, wasted-3)
prt(wasted-3, out-4)
det(sun-7, the-6)
nsubj(shut-8, sun-7)
conj_and(wasted-3, shut-8)
prt(shut-8, down-9)
advmod(war-14, still-12)
expl(war-14, there-13)
conj_and(wasted-3, war-14)
neg(war-14, n't-15)
neg(anywheres-18, no-16)
nn(anywheres-18, land-17)
dobj(war-14, anywheres-18)
nsubj(war-14, anywheres-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD wondered)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (NP (DT the) (NN matter)))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB reckoned))
      (S
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB come)
              (PRT (RP out))
              (NP (DT all) (NN right)))))
        (, ,) (IN so)
        (S
          (NP (PRP we))
          (VP
            (VP (VBD went)
              (PP (IN on)
                (S
                  (VP (VBG steering)
                    (ADVP (RB east))))))
            (, ,)
            (CC but)
            (VP (VBD went)
              (PRT (RP up))
              (PP (IN on)
                (NP (DT a) (JJR higher) (NN level)))))))
      (IN so)
      (S
        (NP (PRP we))
        (VP (MD would) (RB n't)
          (VP (VB hit)
            (NP
              (NP (DT any) (NNS steeples)
                (CC or)
                (NNS mountains))
              (PP (IN in)
                (NP (DT the) (NN dark))))))))
    (. .)))

nsubj(wondered-2, We-1)
root(ROOT-0, wondered-2)
nsubj(matter-6, what-3)
cop(matter-6, was-4)
det(matter-6, the-5)
ccomp(wondered-2, matter-6)
advmod(come-12, reckoned-9)
nsubj(come-12, it-10)
aux(come-12, would-11)
conj_but(wondered-2, come-12)
prt(come-12, out-13)
det(right-15, all-14)
dobj(come-12, right-15)
dep(come-12, so-17)
nsubj(went-19, we-18)
nsubj(went-25, we-18)
parataxis(come-12, went-19)
prepc_on(went-19, steering-21)
advmod(steering-21, east-22)
parataxis(come-12, went-25)
conj_but(went-19, went-25)
prt(went-25, up-26)
det(level-30, a-28)
amod(level-30, higher-29)
prep_on(went-25, level-30)
dep(come-12, so-31)
nsubj(hit-35, we-32)
aux(hit-35, would-33)
neg(hit-35, n't-34)
parataxis(come-12, hit-35)
det(steeples-37, any-36)
dobj(hit-35, steeples-37)
dobj(hit-35, mountains-39)
conj_or(steeples-37, mountains-39)
det(dark-42, the-41)
prep_in(steeples-37, dark-42)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (PRP$ my) (NN watch))
        (PP (IN till)
          (NP (NN midnight)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (NNP Jim))
          (VP (VBZ 's)))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Tom))
      (VP (VBD stayed)
        (PRT (RP up))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP he))
            (VP
              (VP (VBD said)
                (NP
                  (NP (NN ship) (NNS captains))
                  (VP (VBN done)
                    (SBAR (IN that)
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VBD was)
                          (VP (VBG making)
                            (NP (DT the) (NN land)))))))))
              (, ,)
              (CC and)
              (VP (VBD did) (RB n't)
                (VP (VB stand)
                  (NP (DT no) (JJ regular) (NN watch)))))))))
    (. .)))

nsubj(watch-4, It-1)
cop(watch-4, was-2)
poss(watch-4, my-3)
root(ROOT-0, watch-4)
prep_till(watch-4, midnight-6)
advmod(Jim-12, then-9)
nsubj(Jim-12, it-10)
cop(Jim-12, was-11)
conj_and(watch-4, Jim-12)
dep(Jim-12, 's-13)
nsubj(stayed-17, Tom-16)
conj_but(watch-4, stayed-17)
prt(stayed-17, up-18)
mark(said-22, because-20)
nsubj(said-22, he-21)
nsubj(stand-37, he-21)
advcl(stayed-17, said-22)
nn(captains-24, ship-23)
dobj(said-22, captains-24)
vmod(captains-24, done-25)
mark(making-30, that-26)
advmod(making-30, when-27)
nsubj(making-30, they-28)
aux(making-30, was-29)
ccomp(done-25, making-30)
det(land-32, the-31)
dobj(making-30, land-32)
aux(stand-37, did-35)
neg(stand-37, n't-36)
advcl(stayed-17, stand-37)
conj_and(said-22, stand-37)
neg(watch-40, no-38)
amod(watch-40, regular-39)
dobj(stand-37, watch-40)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN daylight))
            (VP (VBP come))))
        (, ,)
        (NP (NNP Jim))
        (VP (VBP give)
          (NP (DT a) (NN shout))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP
          (VP (VBD jumped)
            (PRT (RP up)))
          (CC and)
          (VP (VBD looked)
            (PRT (RP over))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP
            (NP (DT the) (NN land))
            (ADJP (JJ sure) (JJ enough)))
          (: --)
          (S
            (S
              (VP (VB land)
                (ADVP (DT all) (RP around))
                (, ,)
                (ADVP (RB as) (RB far))
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (MD could)
                      (VP (VB see)))))))
            (, ,)
            (CC and)
            (ADVP (RB perfectly))
            (S
              (VP (VB level)
                (CC and)
                (VB yaller)))))))
    (. .)))

discourse(give-8, Well-1)
advmod(come-5, when-3)
nsubj(come-5, daylight-4)
advcl(give-8, come-5)
nsubj(give-8, Jim-7)
root(ROOT-0, give-8)
det(shout-10, a-9)
dobj(give-8, shout-10)
nsubj(jumped-14, we-13)
nsubj(looked-17, we-13)
conj_and(give-8, jumped-14)
prt(jumped-14, up-15)
conj_and(give-8, looked-17)
conj_and(jumped-14, looked-17)
prt(looked-17, over-18)
expl(was-22, there-21)
conj_and(give-8, was-22)
det(land-24, the-23)
nsubj(was-22, land-24)
amod(enough-26, sure-25)
amod(land-24, enough-26)
dep(land-24, land-28)
dep(around-30, all-29)
advmod(land-28, around-30)
advmod(far-33, as-32)
advmod(land-28, far-33)
mark(see-37, as-34)
nsubj(see-37, you-35)
aux(see-37, could-36)
advcl(land-28, see-37)
advmod(level-41, perfectly-40)
dep(land-24, level-41)
conj_and(land-28, level-41)
conj_and(land-28, yaller-43)
conj_and(level-41, yaller-43)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD did) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how) (RB long))
          (S
            (NP (PRP we))
            (VP (VBD 'd)
              (VP (VBN been)
                (PP (IN over)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(know-4, We-1)
aux(know-4, did-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
advmod(long-6, how-5)
advmod(been-9, long-6)
nsubj(been-9, we-7)
aux(been-9, 'd-8)
ccomp(know-4, been-9)
prep_over(been-9, it-11)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP war) (RB n't)
        (NP (DT no)
          (NP (NNS trees))
          (, ,)
          (CC nor)
          (NP
            (NP
              (NP (NNS hills))
              (, ,)
              (CC nor)
              (NP (NNS rocks))
              (, ,))
            (CC nor)
            (NP (NNS towns))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom)
        (CC and)
        (NNP Jim))
      (VP (VBD had)
        (VP (VBD took)
          (NP (PRP it))
          (PP (IN for)
            (NP (DT the) (NN sea))))))
    (. .)))

expl(war-2, There-1)
root(ROOT-0, war-2)
neg(war-2, n't-3)
neg(trees-5, no-4)
dobj(war-2, trees-5)
nsubj(war-2, trees-5)
dobj(war-2, hills-8)
nsubj(war-2, hills-8)
conj_nor(trees-5, hills-8)
conj_nor(trees-5, rocks-11)
conj_nor(hills-8, rocks-11)
conj_nor(trees-5, towns-14)
conj_nor(hills-8, towns-14)
nsubj(took-21, Tom-17)
conj_and(Tom-17, Jim-19)
nsubj(took-21, Jim-19)
aux(took-21, had-20)
conj_and(war-2, took-21)
dobj(took-21, it-22)
det(sea-25, the-24)
prep_for(took-21, sea-25)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD took)
        (NP (PRP it))
        (SBAR (IN for)
          (S
            (NP
              (NP (DT the) (NN sea))
              (PP (IN in)
                (NP (DT a) (NN dead))))
            (VP (MD ca)
              (VP (VBP 'm)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBD was)
        (ADVP
          (ADVP (RB so) (JJ high) (RB up))
          (PRN (, ,)
            (ADVP (RB anyway))
            (, ,))
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBD had)
                    (VP (VBN been)
                      (NP
                        (NP (DT the) (NN sea))
                        (CC and)
                        (NP (JJ rough)))))))
              (, ,)
              (NP (PRP it))
              (VP (MD would)
                (S
                  (NP (`` `)
                    (NP (SYM a))
                    ('' ')
                    (VP (VBN looked)
                      (NP (JJ smooth))
                      (, ,)
                      (ADVP (PDT all) (DT the) (JJ same))
                      (, ,)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN night))
                          (, ,)
                          (NP (DT that) (NN way)))))))))))))
    (. .)))

nsubj(took-2, They-1)
root(ROOT-0, took-2)
dobj(took-2, it-3)
mark('m-11, for-4)
det(sea-6, the-5)
nsubj('m-11, sea-6)
det(dead-9, a-8)
prep_in(sea-6, dead-9)
aux('m-11, ca-10)
advcl(took-2, 'm-11)
nsubj(was-15, we-14)
conj_but(took-2, was-15)
advmod(up-18, so-16)
advmod(up-18, high-17)
advmod(was-15, up-18)
dep(up-18, anyway-20)
mark(would-33, that-22)
mark(sea-28, if-23)
nsubj(sea-28, it-24)
nsubj(rough-30, it-24)
aux(sea-28, had-25)
cop(sea-28, been-26)
det(sea-28, the-27)
advcl(would-33, sea-28)
conj_and(sea-28, rough-30)
advcl(would-33, rough-30)
nsubj(would-33, it-32)
advcl(up-18, would-33)
ccomp(up-18, would-33)
dep(would-33, a-35)
vmod(a-35, looked-37)
dobj(looked-37, smooth-38)
dep(same-42, all-40)
det(same-42, the-41)
advmod(looked-37, same-42)
det(night-46, the-45)
prep_in(looked-37, night-46)
det(way-49, that-48)
appos(night-46, way-49)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD was)
        (ADVP (RB all)
          (PP (IN in)
            (NP (DT a) (JJ powerful) (NN excitement))
            (ADVP (RB now)))))
      (, ,)
      (CC and)
      (VP (VBD grabbed)
        (NP (DT the) (NNS glasses)
          (CC and)
          (NN hunted) (NNS everywheres))
        (PP (IN for)
          (NP (NNP London))))
      (, ,)
      (CC but)
      (VP (MD could) (RB n't)
        (VP (VB find)
          (NP
            (NP
              (NP (NN hair)
                (CC nor)
                (NNS hide))
              (PP (IN of)
                (NP (PRP it))))
            (, ,)
            (CC nor)
            (NP (DT any) (JJ other) (NN settlement))
            (: --)
            (NP (CC nor)
              (NP
                (NP (DT any) (NN sign))
                (PP (IN of)
                  (NP (DT a) (NN lake))))
              (CC or)
              (NP
                (NP (DT a) (NN river))
                (, ,)
                (NP (DT either))))))))
    (. .)))

nsubj(was-2, We-1)
nsubj(grabbed-11, We-1)
nsubj(find-23, We-1)
root(ROOT-0, was-2)
advmod(was-2, all-3)
det(excitement-7, a-5)
amod(excitement-7, powerful-6)
prep_in(all-3, excitement-7)
advmod(all-3, now-8)
conj_and(was-2, grabbed-11)
det(glasses-13, the-12)
dobj(grabbed-11, glasses-13)
nn(everywheres-16, hunted-15)
dobj(grabbed-11, everywheres-16)
conj_and(glasses-13, everywheres-16)
prep_for(grabbed-11, London-18)
aux(find-23, could-21)
neg(find-23, n't-22)
conj_but(was-2, find-23)
dobj(find-23, hair-24)
dobj(find-23, hide-26)
conj_nor(hair-24, hide-26)
prep_of(hair-24, it-28)
det(settlement-33, any-31)
amod(settlement-33, other-32)
dobj(find-23, settlement-33)
conj_nor(hair-24, settlement-33)
det(sign-37, any-36)
dobj(find-23, sign-37)
conj_nor(hair-24, sign-37)
det(lake-40, a-39)
prep_of(sign-37, lake-40)
det(river-43, a-42)
conj_nor(hair-24, river-43)
conj_or(sign-37, river-43)
appos(river-43, either-45)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD was)
      (ADJP (JJ clean)
        (SBAR
          (S
            (VP (VBD beat))))))
    (. .)))

nsubj(clean-3, Tom-1)
cop(clean-3, was-2)
root(ROOT-0, clean-3)
ccomp(clean-3, beat-4)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD war) (RB n't)
              (VP
                (NP (PRP$ his) (NN notion))
                (PP (IN of)
                  (NP (NNP England)))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (NNP England))
            (VP
              (VP (VBD looked)
                (PP (IN like)
                  (NP (NNP America))))
              (, ,)
              (CC and)
              (ADVP (RB always))
              (VP (VBD had)
                (NP (DT that) (NN idea))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(war-4, it-3)
ccomp(said-2, war-4)
neg(war-4, n't-5)
poss(notion-7, his-6)
dep(war-4, notion-7)
prep_of(notion-7, England-9)
nsubj(thought-12, he-11)
parataxis(said-2, thought-12)
nsubj(looked-14, England-13)
nsubj(had-20, England-13)
ccomp(thought-12, looked-14)
prep_like(looked-14, America-16)
advmod(had-20, always-19)
ccomp(thought-12, had-20)
conj_and(looked-14, had-20)
det(idea-22, that-21)
dobj(had-20, idea-22)

(ROOT
  (S (IN So)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP we))
            (ADVP (RB better))
            (VP (VBP have)
              (NP (NN breakfast)))))))
    (, ,)
    (CC and)
    (RB then)
    (S
      (VP
        (VP (VB drop)
          (PRT (RP down)))
        (CC and)
        (VP (VB inquire)
          (NP (DT the) (JJS quickest) (NN way))
          (PP (TO to)
            (NP (NNP London))))))
    (. .)))

dep(said-3, So-1)
nsubj(said-3, he-2)
nsubj(drop-11, he-2)
root(ROOT-0, said-3)
nsubj(have-6, we-4)
advmod(have-6, better-5)
ccomp(said-3, have-6)
dobj(have-6, breakfast-7)
advmod(drop-11, then-10)
conj_and(said-3, drop-11)
prt(drop-11, down-12)
conj_and(said-3, inquire-14)
conj_and(drop-11, inquire-14)
det(way-17, the-15)
amod(way-17, quickest-16)
dobj(inquire-14, way-17)
prep_to(inquire-14, London-19)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD cut)
        (S
          (NP (DT the) (NN breakfast))
          (ADJP (RB pretty) (JJ short)))))
    (, ,)
    (NP (PRP we))
    (VP (VBD was)
      (ADJP (RB so) (JJ impatient)))
    (. .)))

nsubj(cut-2, We-1)
ccomp(impatient-11, cut-2)
det(breakfast-4, the-3)
nsubj(short-6, breakfast-4)
advmod(short-6, pretty-5)
xcomp(cut-2, short-6)
nsubj(impatient-11, we-8)
cop(impatient-11, was-9)
advmod(impatient-11, so-10)
root(ROOT-0, impatient-11)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP we))
          (VP (VBD slanted)
            (ADVP (RB along) (RB down)))))
      (, ,)
      (NP (DT the) (NN weather))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB moderate))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB pretty) (RB soon))
      (NP (PRP we))
      (VP (VBD shed)
        (NP (PRP$ our) (NNS furs))))
    (. .)))

mark(slanted-3, As-1)
nsubj(slanted-3, we-2)
advcl(began-9, slanted-3)
advmod(down-5, along-4)
advmod(slanted-3, down-5)
det(weather-8, the-7)
nsubj(began-9, weather-8)
nsubj(moderate-11, weather-8)
root(ROOT-0, began-9)
aux(moderate-11, to-10)
xcomp(began-9, moderate-11)
advmod(soon-15, pretty-14)
advmod(shed-17, soon-15)
nsubj(shed-17, we-16)
conj_and(began-9, shed-17)
poss(furs-19, our-18)
dobj(shed-17, furs-19)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBD kept)
        (PRT (RP ON))
        (S
          (VP (VBG moderating)))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT a) (JJ precious) (JJ little) (NN while)))
      (NP (PRP it))
      (VP (VBD was) (`` `)
        (ADJP
          (ADVP (RBS most) (RB too))
          (JJ moderate))))
    (. .)))

nsubj(kept-3, it-2)
root(ROOT-0, kept-3)
prt(kept-3, ON-4)
xcomp(kept-3, moderating-5)
det(while-12, a-9)
amod(while-12, precious-10)
amod(while-12, little-11)
prep_in(moderate-18, while-12)
nsubj(moderate-18, it-13)
cop(moderate-18, was-14)
advmod(too-17, most-16)
advmod(moderate-18, too-17)
conj_and(kept-3, moderate-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD was)
      (ADJP
        (ADJP (JJ close))
        (ADVP (RB down) (RB now))
        (, ,)
        (CC and)
        (ADJP (RB just) (JJ blistering))))
    (. !)))

nsubj(close-3, We-1)
nsubj(blistering-9, We-1)
cop(close-3, was-2)
root(ROOT-0, close-3)
advmod(now-5, down-4)
advmod(close-3, now-5)
advmod(blistering-9, just-8)
conj_and(close-3, blistering-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD settled)
      (ADVP (RB down))
      (PP (TO to))
      (PP (IN within)
        (NP
          (NP (CD thirty) (NN foot))
          (PP (IN of)
            (NP
              (NP (DT the) (NN land))
              (: --)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is) (, ,)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (NP (NN land))
                          (SBAR (IN if)
                            (S
                              (NP (NN sand))
                              (VP (VBZ is)
                                (NP (NN land)))))))))))
              (: ;)))))
      (SBAR (IN for)
        (S
          (NP (DT this))
          (VP (VBD was) (RB n't)
            (NP
              (NP (NN anything))
              (PP (CC but)
                (NP (JJ pure) (NN sand))))))))
    (. .)))

nsubj(settled-2, We-1)
root(ROOT-0, settled-2)
advmod(settled-2, down-3)
prep(settled-2, to-4)
num(foot-7, thirty-6)
prep_within(settled-2, foot-7)
det(land-10, the-9)
prep_of(foot-7, land-10)
nsubj(is-13, land-10)
rcmod(land-10, is-13)
nsubj(land-17, it-15)
cop(land-17, was-16)
ccomp(is-13, land-17)
mark(land-21, if-18)
nsubj(land-21, sand-19)
cop(land-21, is-20)
advcl(land-17, land-21)
mark(anything-27, for-23)
nsubj(anything-27, this-24)
cop(anything-27, was-25)
neg(anything-27, n't-26)
advcl(settled-2, anything-27)
prep(anything-27, but-28)
amod(sand-30, pure-29)
pobj(but-28, sand-30)

(ROOT
  (S
    (S
      (S
        (NP (NNP Tom)
          (CC and)
          (PRP me))
        (VP
          (VP (VBD clumb)
            (PRT (RP down))
            (NP (DT the) (NN ladder)))
          (CC and)
          (VP (VBD took)
            (NP (DT a) (NN run))
            (S
              (VP (TO to)
                (VP (VB stretch)
                  (NP (PRP$ our) (NNS legs))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD felt)
          (NP
            (NP
              (ADJP (JJ amazing))
              (JJ good))
            (: --)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is) (, ,)
                  (SBAR
                    (S
                      (NP (DT the) (NN stretching))
                      (VP (VBD did)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN sand))
      (VP (VBD scorched)
        (NP (PRP$ our) (NNS feet))
        (PP (IN like)
          (NP (JJ hot) (NNS embers)))))
    (. .)))

nsubj(clumb-4, Tom-1)
nsubj(took-9, Tom-1)
conj_and(Tom-1, me-3)
nsubj(clumb-4, me-3)
root(ROOT-0, clumb-4)
prt(clumb-4, down-5)
det(ladder-7, the-6)
dobj(clumb-4, ladder-7)
conj_and(clumb-4, took-9)
det(run-11, a-10)
dobj(took-9, run-11)
aux(stretch-13, to-12)
vmod(took-9, stretch-13)
poss(legs-15, our-14)
dobj(stretch-13, legs-15)
nsubj(felt-19, it-18)
conj_and(clumb-4, felt-19)
dobj(felt-19, amazing-20)
nsubj(is-24, amazing-20)
amod(amazing-20, good-21)
rcmod(amazing-20, is-24)
det(stretching-27, the-26)
nsubj(did-28, stretching-27)
ccomp(is-24, did-28)
det(sand-32, the-31)
nsubj(scorched-33, sand-32)
conj_but(clumb-4, scorched-33)
poss(feet-35, our-34)
dobj(scorched-33, feet-35)
amod(embers-38, hot-37)
prep_like(scorched-33, embers-38)

(ROOT
  (S
    (S
      (ADVP (RB Next))
      (, ,)
      (NP (PRP we))
      (VP
        (VP (VBP see)
          (NP (NN somebody))
          (S
            (VP (VBG coming))))
        (, ,)
        (CC and)
        (VP (VBD started)
          (S
            (VP (TO to)
              (VP (VB meet)
                (NP (PRP him))))))))
    (: ;)
    (S (CC but)
      (S
        (NP (PRP we))
        (VP (VBD heard)
          (SBAR
            (S
              (NP (NNP Jim))
              (VP
                (VP (VBP shout))
                (, ,)
                (CC and)
                (VP (VBD looked)
                  (PRT (RP around))))))))
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (ADVP (RB fairly))
          (S
            (VP
              (VP (VBG dancing))
              (, ,)
              (CC and)
              (VP (VBG making)
                (NP (NNS signs)))
              (, ,)
              (CC and)
              (VP (VBG yelling)))))))
    (. .)))

advmod(see-4, Next-1)
nsubj(see-4, we-3)
nsubj(started-9, we-3)
nsubj(meet-11, we-3)
root(ROOT-0, see-4)
dobj(see-4, somebody-5)
xcomp(see-4, coming-6)
conj_and(see-4, started-9)
aux(meet-11, to-10)
xcomp(started-9, meet-11)
dobj(meet-11, him-12)
nsubj(heard-16, we-15)
parataxis(see-4, heard-16)
nsubj(shout-18, Jim-17)
nsubj(looked-21, Jim-17)
ccomp(heard-16, shout-18)
ccomp(heard-16, looked-21)
conj_and(shout-18, looked-21)
prt(looked-21, around-22)
nsubj(was-25, he-24)
parataxis(see-4, was-25)
conj_and(heard-16, was-25)
advmod(was-25, fairly-26)
ccomp(was-25, dancing-27)
ccomp(was-25, making-30)
conj_and(dancing-27, making-30)
dobj(making-30, signs-31)
ccomp(was-25, yelling-34)
conj_and(dancing-27, yelling-34)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could) (RB n't)
        (VP (VB make)
          (PRT (RP out))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (VBD said)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBD was)
        (VP
          (VP (VBN scared)
            (ADVP (RB anyway)))
          (, ,)
          (CC and)
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB heel)
                  (NP (PRP it))
                  (PRT (RP back))
                  (PP (TO to)
                    (NP (DT the) (NN balloon))))))))))
    (. .)))

nsubj(make-4, We-1)
aux(make-4, could-2)
neg(make-4, n't-3)
root(ROOT-0, make-4)
prt(make-4, out-5)
dobj(said-8, what-6)
nsubj(said-8, he-7)
ccomp(make-4, said-8)
nsubjpass(scared-13, we-11)
nsubjpass(begun-17, we-11)
nsubj(heel-19, we-11)
auxpass(scared-13, was-12)
conj_but(make-4, scared-13)
advmod(scared-13, anyway-14)
conj_but(make-4, begun-17)
conj_and(scared-13, begun-17)
aux(heel-19, to-18)
xcomp(begun-17, heel-19)
dobj(heel-19, it-20)
prt(heel-19, back-21)
det(balloon-24, the-23)
prep_to(heel-19, balloon-24)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP we))
          (VP (VBD got)
            (ADJP (RB close) (JJ enough)))))
      (, ,)
      (NP (PRP we))
      (VP (VBD understood)
        (NP (DT the) (NNS words))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP
        (VP (VBD made)
          (S
            (NP (PRP me))
            (ADJP (JJ sick))))
        (: :) (`` ``)
        (VP (VBZ Run))))
    (. !)))

advmod(enough-5, When-1)
nsubj(enough-5, we-2)
dep(enough-5, got-3)
advmod(enough-5, close-4)
advcl(understood-8, enough-5)
nsubj(understood-8, we-7)
root(ROOT-0, understood-8)
det(words-10, the-9)
dobj(understood-8, words-10)
nsubj(made-14, they-13)
conj_and(understood-8, made-14)
nsubj(sick-16, me-15)
xcomp(made-14, sick-16)
dep(made-14, Run-19)

(ROOT
  (S
    (VP (VB Run)
      (NP
        (NP
          (NP (NNP fo) (POS '))
          (NN yo) (POS '))
        (NN life)))
    (. !)))

root(ROOT-0, Run-1)
poss(yo-4, fo-2)
poss(life-6, yo-4)
dobj(Run-1, life-6)

(ROOT
  (S
    (S
      (NP (NNP Hit))
      (VP (VBZ 's)
        (NP (DT a) (NN lion))))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB kin))
      (VP (VBP see)
        (S
          (NP (PRP him))
          (NP
            (NP (NN thoo))
            (PP (IN de)
              (NP (NN glass)))))))
    (. !)))

nsubj(lion-4, Hit-1)
cop(lion-4, 's-2)
det(lion-4, a-3)
root(ROOT-0, lion-4)
nsubj(see-8, I-6)
advmod(see-8, kin-7)
parataxis(lion-4, see-8)
nsubj(thoo-10, him-9)
xcomp(see-8, thoo-10)
prep_de(thoo-10, glass-12)

(ROOT
  (S
    (NP
      (NP (NNP Run))
      (, ,)
      (NP (NNS boys))
      (, ;))
    (VP (VBP do)
      (S
        (VP (VB please)
          (S
            (NP (NN heel))
            (NP (PRP it))))
        (NP
          (NP (NNP de) (NNP bes) (POS '))
          (NN you) (NN kin))))
    (. .)))

nsubj(do-5, Run-1)
appos(Run-1, boys-3)
root(ROOT-0, do-5)
ccomp(do-5, please-6)
nsubj(it-8, heel-7)
xcomp(please-6, it-8)
nn(bes-10, de-9)
poss(kin-13, bes-10)
nn(kin-13, you-12)
dep(please-6, kin-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's)
      (VP (VBN bu)
        (NP (`` `)
          (NP (JJ sted) (NN outen) (IN de) (NN menagerie))
          (, ,)
          (PP (IN en)
            (NP
              (NP (NN dey))
              (SBAR
                (S
                  (VP (VBP ai) (RB n't)
                    (ADJP (JJ nobody)
                      (S
                        (VP (TO to)
                          (VP (VB stop)
                            (NP (PRP him))))))))))))))
    (. !) ('' '')))

nsubjpass(bu-3, He-1)
auxpass(bu-3, 's-2)
root(ROOT-0, bu-3)
amod(menagerie-8, sted-5)
nn(menagerie-8, outen-6)
amod(menagerie-8, de-7)
dobj(bu-3, menagerie-8)
prep_en(menagerie-8, dey-11)
cop(nobody-14, ai-12)
neg(nobody-14, n't-13)
rcmod(dey-11, nobody-14)
aux(stop-16, to-15)
xcomp(nobody-14, stop-16)
dobj(stop-16, him-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD made)
        (SBAR
          (S
            (NP (NNP Tom))
            (VP (VBP fly))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD took)
        (NP (DT the) (NN stiffening))
        (ADVP (DT all) (IN out))
        (PP (IN of)
          (NP (PRP$ my) (NNS legs)))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
nsubj(fly-4, Tom-3)
ccomp(made-2, fly-4)
nsubj(took-8, it-7)
conj_but(made-2, took-8)
det(stiffening-10, the-9)
dobj(took-8, stiffening-10)
dep(took-8, all-11)
poss(legs-15, my-14)
prep_out_of(took-8, legs-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (ADVP (RB only) (RB just))
      (VP (VB gasp)
        (PRT (RP along))
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP do)
                (PP (IN in)
                  (NP (DT a) (NN dream)))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (EX there))
                    (VP (VBZ 's)
                      (NP
                        (NP (DT a) (NN ghost))
                        (VP (VBG gaining)
                          (PP (IN on)
                            (NP (PRP you))))))))))))))
    (. .)))

nsubj(gasp-5, I-1)
aux(gasp-5, could-2)
advmod(just-4, only-3)
advmod(gasp-5, just-4)
root(ROOT-0, gasp-5)
prt(gasp-5, along-6)
det(way-8, the-7)
dobj(gasp-5, way-8)
nsubj(do-10, you-9)
rcmod(way-8, do-10)
det(dream-13, a-12)
prep_in(do-10, dream-13)
advmod('s-16, when-14)
expl('s-16, there-15)
advcl(do-10, 's-16)
det(ghost-18, a-17)
nsubj('s-16, ghost-18)
vmod(ghost-18, gaining-19)
prep_on(gaining-19, you-21)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP
        (VP
          (VP (VBD got)
            (PP (TO to)
              (NP (DT the) (NN ladder))))
          (CC and)
          (VP (VBD shinned)
            (PRT (RP up))
            (NP (PRP it)))
          (NP (DT a) (NN piece)))
        (CC and)
        (VP (VBD waited)
          (PP (IN for)
            (NP (PRP me))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB as) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD got)
              (NP (DT a) (NN foothold))
              (PP (IN on)
                (NP (PRP it)))))))
      (NP (PRP he))
      (VP (VBD shouted)
        (PP (TO to)
          (NP (NNP Jim)))
        (S
          (VP (TO to)
            (VP (VB soar)
              (PRT (RP away)))))))
    (. .)))

nsubj(got-2, Tom-1)
nsubj(shinned-7, Tom-1)
nsubj(waited-13, Tom-1)
root(ROOT-0, got-2)
det(ladder-5, the-4)
prep_to(got-2, ladder-5)
conj_and(got-2, shinned-7)
prt(shinned-7, up-8)
dobj(shinned-7, it-9)
det(piece-11, a-10)
dobj(got-2, piece-11)
conj_and(got-2, waited-13)
prep_for(waited-13, me-15)
advmod(soon-19, as-18)
advmod(shouted-28, soon-19)
mark(got-22, as-20)
nsubj(got-22, I-21)
ccomp(soon-19, got-22)
det(foothold-24, a-23)
dobj(got-22, foothold-24)
prep_on(got-22, it-26)
nsubj(shouted-28, he-27)
nsubj(soar-32, he-27)
conj_and(got-2, shouted-28)
prep_to(shouted-28, Jim-30)
aux(soar-32, to-31)
xcomp(shouted-28, soar-32)
prt(soar-32, away-33)

(ROOT
  (S (CC But)
    (NP (NNP Jim))
    (VP
      (VP (VBD had)
        (S
          (VP (VB clean)
            (VP (VBN lost)
              (NP (PRP$ his) (NN head))))))
      (, ,)
      (CC and)
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN forgot)
                (NP (WRB how))))))))
    (. .)))

nsubj(had-3, Jim-2)
nsubj(said-10, Jim-2)
root(ROOT-0, had-3)
ccomp(had-3, clean-4)
dep(clean-4, lost-5)
poss(head-7, his-6)
dobj(lost-5, head-7)
conj_and(had-3, said-10)
nsubj(forgot-13, he-11)
aux(forgot-13, had-12)
ccomp(said-10, forgot-13)
dobj(forgot-13, how-14)

(ROOT
  (S (CC So)
    (S
      (S
        (NP (NNP Tom))
        (VP
          (VP (VBD shinned)
            (ADVP (RB along) (RB up)))
          (CC and)
          (VP (VBD told)
            (S
              (NP (PRP me))
              (VP (TO to)
                (VP (VB follow)))))))
      (: ;)
      (CC but)
      (S
        (NP (DT the) (NN lion))
        (VP (VBD was)
          (VP (VBG arriving) (, ,)
            (S
              (VP (VBG fetching)
                (NP
                  (NP (DT a)
                    (ADJP (RBS most) (JJ ghastly))
                    (NN roar))
                  (PP (IN with)
                    (NP (DT every) (NN lope))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ my) (NNS legs))
      (VP (VBD shook)
        (SBAR (IN so)
          (S
            (NP (PRP I))
            (VP (VBP das) (RB n't)
              (VP (VB try)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP
                        (NP (CD one))
                        (PP (IN of)
                          (NP (PRP them)))
                        (PP (RB out) (IN of)
                          (NP (DT the) (NNS rounds))))
                      (PP (IN for)
                        (NP
                          (NP (NN fear))
                          (SBAR
                            (S
                              (NP (DT the) (JJ other) (NN one))
                              (VP (MD would)
                                (VP (VB give)
                                  (NP (NN way))
                                  (PP (IN under)
                                    (NP (PRP me))))))))))))))))))
    (. .)))

nsubj(shinned-3, Tom-2)
nsubj(told-7, Tom-2)
root(ROOT-0, shinned-3)
advmod(up-5, along-4)
advmod(shinned-3, up-5)
conj_and(shinned-3, told-7)
dobj(told-7, me-8)
nsubj(follow-10, me-8)
aux(follow-10, to-9)
xcomp(told-7, follow-10)
det(lion-14, the-13)
nsubj(arriving-16, lion-14)
aux(arriving-16, was-15)
conj_but(shinned-3, arriving-16)
vmod(arriving-16, fetching-18)
det(roar-22, a-19)
advmod(ghastly-21, most-20)
amod(roar-22, ghastly-21)
dobj(fetching-18, roar-22)
det(lope-25, every-24)
prep_with(roar-22, lope-25)
poss(legs-29, my-28)
nsubj(shook-30, legs-29)
conj_and(shinned-3, shook-30)
mark(das-33, so-31)
nsubj(das-33, I-32)
advcl(shook-30, das-33)
neg(das-33, n't-34)
dep(das-33, try-35)
aux(take-37, to-36)
xcomp(try-35, take-37)
dobj(take-37, one-38)
prep_of(one-38, them-40)
det(rounds-44, the-43)
prep_out_of(one-38, rounds-44)
prep_for(take-37, fear-46)
det(one-49, the-47)
amod(one-49, other-48)
nsubj(give-51, one-49)
aux(give-51, would-50)
rcmod(fear-46, give-51)
dobj(give-51, way-52)
prep_under(give-51, me-54)

(ROOT
  (S (CC But)
    (S
      (NP (NNP Tom))
      (VP (VBD was)
        (ADVP (RB aboard))
        (PP (IN by)
          (NP (DT this) (NN time)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD started)
          (NP (DT the) (NN balloon))
          (ADVP (RB up)
            (NP (DT a) (RB little))))
        (, ,)
        (CC and)
        (VP (VBD stopped)
          (NP (PRP it))
          (ADVP
            (ADVP (RB again) (RB as) (RB soon))
            (SBAR (IN as)
              (S
                (NP
                  (NP (DT the) (NN end))
                  (PP (IN of)
                    (NP (DT the) (NN ladder))))
                (VP (VBD was)
                  (NP
                    (NP (CD ten)
                      (CC or)
                      (CD twelve) (NNS feet))
                    (PP (IN above)
                      (NP (NN ground)))))))))))
    (. .)))

nsubj(was-3, Tom-2)
root(ROOT-0, was-3)
advmod(was-3, aboard-4)
det(time-7, this-6)
prep_by(was-3, time-7)
nsubj(started-11, he-10)
nsubj(stopped-19, he-10)
conj_and(was-3, started-11)
det(balloon-13, the-12)
dobj(started-11, balloon-13)
advmod(started-11, up-14)
det(little-16, a-15)
pobj(up-14, little-16)
conj_and(was-3, stopped-19)
conj_and(started-11, stopped-19)
dobj(stopped-19, it-20)
advmod(soon-23, again-21)
advmod(soon-23, as-22)
advmod(stopped-19, soon-23)
mark(feet-34, as-24)
det(end-26, the-25)
nsubj(feet-34, end-26)
det(ladder-29, the-28)
prep_of(end-26, ladder-29)
cop(feet-34, was-30)
nn(feet-34, ten-31)
conj_or(ten-31, twelve-33)
nn(feet-34, twelve-33)
advcl(soon-23, feet-34)
ccomp(soon-23, feet-34)
prep_above(feet-34, ground-36)

(ROOT
  (S
    (S (CC And)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT the) (NN lion))
            (, ,)
            (ADJP (JJ a-ripping)
              (PP (IN around)
                (PP (IN under)
                  (NP (PRP me)))))
            (, ,)
            (CC and)
            (NP (VBG roaring)))))
      (CC and)
      (S
        (VP
          (VP (VBG springing)
            (PRT (RP up))
            (PP (IN in)
              (NP
                (NP (DT the) (NN air))
                (PP (IN at)
                  (NP (DT the) (NN ladder))))))
          (, ,)
          (CC and)
          (VP
            (ADVP (RB only))
            (VBG missing)
            (NP (PRP it))
            (PP (IN about)
              (NP
                (NP (DT a) (NN quarter))
                (PP (IN of)
                  (NP (DT an) (NN inch)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD seemed)
      (PP (TO to)
        (NP (PRP me))))
    (. .)))

expl(was-3, there-2)
ccomp(seemed-36, was-3)
det(lion-5, the-4)
nsubj(was-3, lion-5)
nsubj(springing-15, lion-5)
nsubj(was-3, a-ripping-7)
amod(lion-5, a-ripping-7)
conj_and(lion-5, a-ripping-7)
prep(a-ripping-7, around-8)
pcomp(around-8, under-9)
pobj(under-9, me-10)
nsubj(was-3, roaring-13)
conj_and(lion-5, roaring-13)
conj_and(was-3, springing-15)
ccomp(seemed-36, springing-15)
prt(springing-15, up-16)
det(air-19, the-18)
prep_in(springing-15, air-19)
det(ladder-22, the-21)
prep_at(air-19, ladder-22)
advmod(missing-26, only-25)
conj_and(was-3, missing-26)
conj_and(springing-15, missing-26)
dobj(missing-26, it-27)
det(quarter-30, a-29)
prep_about(missing-26, quarter-30)
det(inch-33, an-32)
prep_of(quarter-30, inch-33)
nsubj(seemed-36, it-35)
root(ROOT-0, seemed-36)
prep_to(seemed-36, me-38)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP
          (VP (VBD was)
            (ADJP (JJ delicious)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (IN out)
                      (PP (IN of)
                        (NP
                          (NP (PRP$ his) (NN reach))
                          (, ,)
                          (ADJP (RB perfectly) (JJ delicious))))))))))
          (, ,)
          (CC and)
          (VP (VBD made)
            (SBAR
              (S
                (NP (PRP me))
                (VP (VBP feel)
                  (ADJP (JJ good)
                    (CC and)
                    (JJ thankful))
                  (PP (DT all) (IN up)
                    (NP (CD one) (NN side)))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP I))
        (VP
          (VP (VBD was)
            (VP (VBG hanging)
              (S
                (NP (EX there))
                (ADJP (JJ helpless)))))
          (CC and)
          (VP (MD could) (RB n't)
            (VP (VB climb))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP me))
            (VP (VBP feel)
              (ADJP (RB perfectly) (JJ wretched)
                (CC and)
                (JJ miserable))
              (PP (DT all) (IN down)
                (NP (DT the) (JJ other))))))))
    (. .)))

nsubj(delicious-3, It-1)
nsubj(out-6, It-1)
nsubj(made-15, It-1)
cop(delicious-3, was-2)
root(ROOT-0, delicious-3)
aux(out-6, to-4)
cop(out-6, be-5)
xcomp(delicious-3, out-6)
poss(reach-9, his-8)
prep_of(out-6, reach-9)
advmod(delicious-12, perfectly-11)
amod(reach-9, delicious-12)
conj_and(delicious-3, made-15)
nsubj(feel-17, me-16)
ccomp(made-15, feel-17)
acomp(feel-17, good-18)
acomp(feel-17, thankful-20)
conj_and(good-18, thankful-20)
dep(feel-17, all-21)
num(side-24, one-23)
prep_up(feel-17, side-24)
nsubj(hanging-29, I-27)
nsubj(climb-35, I-27)
aux(hanging-29, was-28)
conj_but(delicious-3, hanging-29)
expl(helpless-31, there-30)
nsubj(helpless-31, there-30)
xcomp(hanging-29, helpless-31)
aux(climb-35, could-33)
neg(climb-35, n't-34)
conj_but(delicious-3, climb-35)
conj_and(hanging-29, climb-35)
nsubj(made-39, that-38)
conj_and(delicious-3, made-39)
nsubj(feel-41, me-40)
ccomp(made-39, feel-41)
advmod(wretched-43, perfectly-42)
acomp(feel-41, wretched-43)
acomp(feel-41, miserable-45)
conj_and(wretched-43, miserable-45)
dep(feel-41, all-46)
det(other-49, the-48)
prep_down(feel-41, other-49)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADVP (RBS most) (RB seldom))
        (SBAR (IN that)
          (S
            (NP (DT a) (NN person))
            (VP (VBZ feels)
              (ADJP (RB so) (JJ mixed)
                (PP (IN like)
                  (NP (DT that)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN recommended)))))
        (, ,)
        (ADVP (RB either))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(seldom-4, most-3)
advmod(is-2, seldom-4)
mark(feels-8, that-5)
det(person-7, a-6)
nsubj(feels-8, person-7)
ccomp(is-2, feels-8)
advmod(mixed-10, so-9)
acomp(feels-8, mixed-10)
prep_like(mixed-10, that-12)
nsubj(is-16, it-15)
nsubjpass(recommended-20, it-15)
conj_and(is-2, is-16)
neg(is-16, not-17)
aux(recommended-20, to-18)
auxpass(recommended-20, be-19)
xcomp(is-16, recommended-20)
advmod(is-16, either-22)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD asked)
        (NP (PRP me))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (MD 'd)
              (ADVP (RBR better))
              (VP (VB do)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB know))))
    (. .)))

nsubj(asked-2, Tom-1)
root(ROOT-0, asked-2)
dobj(asked-2, me-3)
dobj(do-8, what-4)
nsubj(do-8, he-5)
aux(do-8, 'd-6)
advmod(do-8, better-7)
dep(asked-2, do-8)
nsubj(know-14, I-11)
aux(know-14, did-12)
neg(know-14, n't-13)
conj_but(asked-2, know-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD asked)
      (NP (PRP me))
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB hold)
              (PRT (RP on))))
          (SBAR (IN whilst)
            (S
              (NP (PRP he))
              (VP
                (VP (VBD sailed)
                  (PRT (RP away))
                  (PP (TO to)
                    (NP (DT a) (JJ safe) (NN place))))
                (CC and)
                (VP (VBD left)
                  (NP (DT the) (NN lion))
                  (ADVP (RB behind)))))))))
    (. .)))

nsubj(asked-2, He-1)
root(ROOT-0, asked-2)
dobj(asked-2, me-3)
mark(hold-7, if-4)
nsubj(hold-7, I-5)
aux(hold-7, could-6)
advcl(asked-2, hold-7)
prt(hold-7, on-8)
mark(sailed-11, whilst-9)
nsubj(sailed-11, he-10)
nsubj(left-18, he-10)
dep(hold-7, sailed-11)
prt(sailed-11, away-12)
det(place-16, a-14)
amod(place-16, safe-15)
prep_to(sailed-11, place-16)
dep(hold-7, left-18)
conj_and(sailed-11, left-18)
det(lion-20, the-19)
dobj(left-18, lion-20)
advmod(left-18, behind-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD could)
              (SBAR (IN if)
                (S
                  (NP (PRP he))
                  (VP (VBD did) (RB n't)
                    (VP (VB go)
                      (ADVP (DT no) (JJR higher))
                      (SBAR (IN than)
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (ADVP (RB now))))))))))))))
    (: ;)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (VBD went)
            (ADJP (JJR higher)))))
      (NP (PRP I))
      (VP (MD would)
        (VP (VB lose)
          (NP (PRP$ my) (NN head)
            (CC and)
            (NN fall))
          (, ,)
          (ADVP (RB sure)))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
nsubj(could-4, I-3)
ccomp(said-2, could-4)
mark(go-9, if-5)
nsubj(go-9, he-6)
aux(go-9, did-7)
neg(go-9, n't-8)
advcl(could-4, go-9)
neg(higher-11, no-10)
advmod(go-9, higher-11)
mark(was-14, than-12)
nsubj(was-14, he-13)
advcl(go-9, was-14)
advmod(was-14, now-15)
mark(went-20, if-18)
nsubj(went-20, he-19)
advcl(lose-24, went-20)
acomp(went-20, higher-21)
nsubj(lose-24, I-22)
aux(lose-24, would-23)
conj_but(said-2, lose-24)
poss(head-26, my-25)
dobj(lose-24, head-26)
dobj(lose-24, fall-28)
conj_and(head-26, fall-28)
advmod(lose-24, sure-30)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (PRN
        (S
          (NP (PRP he))
          (VP (VBD said)))
        (, ,))
      (`` ``)
      (VP (VBP Take)
        (NP (DT a) (JJ good) (NN grip)))
      (, ,) ('' ''))
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD started)))
    (. .)))

advmod(Take-6, So-1)
nsubj(said-3, he-2)
parataxis(Take-6, said-3)
root(ROOT-0, Take-6)
det(grip-9, a-7)
amod(grip-9, good-8)
dobj(Take-6, grip-9)
nsubj(started-14, he-13)
conj_and(Take-6, started-14)

(ROOT
  (S (`` ``)
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB go)
          (ADVP (RB so) (RB fast)))))
    (, ,) ('' '')
    (NP (PRP I))
    (VP (VBD shouted))
    (. .)))

aux(go-4, Do-2)
neg(go-4, n't-3)
ccomp(shouted-10, go-4)
advmod(fast-6, so-5)
advmod(go-4, fast-6)
nsubj(shouted-10, I-9)
root(ROOT-0, shouted-10)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (PRP$ my) (NN head))
          (VP (VBP swim)))))
    (. .) ('' '')))

nsubj(makes-3, It-2)
root(ROOT-0, makes-3)
poss(head-5, my-4)
nsubj(swim-6, head-5)
ccomp(makes-3, swim-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN started)
        (SBAR (IN like)
          (S
            (NP (DT a) (NN lightning))
            (VP (VBP express))))))
    (. .)))

nsubj(started-3, He-1)
aux(started-3, had-2)
root(ROOT-0, started-3)
mark(express-7, like-4)
det(lightning-6, a-5)
nsubj(express-7, lightning-6)
advcl(started-3, express-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD slowed)
        (PRT (RP down))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD glided)
        (PP (IN over)
          (NP
            (NP (DT the) (NN sand))
            (ADJP
              (ADJP (JJR slower))
              (PRN (, ,)
                (CC but)
                (ADVP (RB still))
                (PP (IN in)
                  (NP
                    (NP (DT a) (NN kind))
                    (PP (IN of)
                      (NP (VBG sickening) (NN way))))
                  (: ;))))))
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBZ IS)
              (ADJP (JJ uncomfortable)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (NP
                        (NP (NNS things))
                        (VP (VBG sliding)
                          (CC and)
                          (VBG gliding)
                          (PP (IN under)
                            (NP (PRP you)))
                          (PP (IN like)
                            (NP
                              (NP (DT that))
                              (, ,)
                              (CC and)
                              (RB not)
                              (NP (DT a) (NN sound)))))))))))))))
    (. .)))

nsubj(slowed-2, He-1)
root(ROOT-0, slowed-2)
prt(slowed-2, down-3)
nsubj(glided-7, we-6)
conj_and(slowed-2, glided-7)
det(sand-10, the-9)
prep_over(glided-7, sand-10)
amod(sand-10, slower-11)
cc(in-15, but-13)
dep(in-15, still-14)
dep(slower-11, in-15)
det(kind-17, a-16)
pobj(in-15, kind-17)
amod(way-20, sickening-19)
prep_of(kind-17, way-20)
mark(uncomfortable-25, for-22)
nsubj(uncomfortable-25, it-23)
nsubj(see-27, it-23)
cop(uncomfortable-25, IS-24)
advcl(glided-7, uncomfortable-25)
aux(see-27, to-26)
xcomp(uncomfortable-25, see-27)
dobj(see-27, things-28)
vmod(things-28, sliding-29)
vmod(things-28, gliding-31)
conj_and(sliding-29, gliding-31)
prep_under(sliding-29, you-33)
prep_like(sliding-29, that-35)
neg(sound-40, not-38)
det(sound-40, a-39)
prep_like(sliding-29, sound-40)
conj_and(that-35, sound-40)

(ROOT
  (S (CC But)
    (ADVP (RB pretty) (RB soon))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP (NN sound))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NN lion))
          (VP (VBD was)
            (VP (VBG catching)
              (PRT (RP up)))))))
    (. .)))

cc(was-5, But-1)
advmod(soon-3, pretty-2)
advmod(was-5, soon-3)
expl(was-5, there-4)
root(ROOT-0, was-5)
nsubj(was-5, plenty-6)
prep_of(plenty-6, sound-8)
mark(catching-14, for-10)
det(lion-12, the-11)
nsubj(catching-14, lion-12)
aux(catching-14, was-13)
advcl(was-5, catching-14)
prt(catching-14, up-15)

(ROOT
  (S
    (NP (PRP$ His) (NN noise))
    (VP (VBD fetched)
      (NP (NNS others)))
    (. .)))

poss(noise-2, His-1)
nsubj(fetched-3, noise-2)
root(ROOT-0, fetched-3)
dobj(fetched-3, others-4)

(ROOT
  (S
    (S
      (S
        (NP (PRP You))
        (VP (MD could)
          (VP (VB see)
            (S
              (NP (PRP them))
              (VP (VBG coming)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN lope))
                    (PP (IN from)
                      (NP (DT every) (NN direction))))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB pretty) (RB soon))
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP
              (QP (DT a) (NN couple) (IN of) (NN dozen)))
            (PP (IN of)
              (NP (PRP them))))
          (PP (IN under)
            (NP (PRP me)))
          (, ,)
          (S
            (VP
              (VP (VBG jumping)
                (PRT (RP up))
                (PP (IN at)
                  (NP (DT the) (NN ladder))))
              (CC and)
              (VP (VBG snarling)
                (CC and)
                (VBG snapping)
                (PP (IN at)
                  (NP (DT each) (JJ other))))))))
      (: ;)
      (CC and)
      (S
        (S (IN so)
          (NP (PRP we))
          (VP (VBD went)
            (S
              (VP (VBG skimming)
                (PRT (RP along))
                (PP (IN over)
                  (NP (DT the) (NN sand)))))))
        (, ,)
        (CC and)
        (S
          (NP (DT these) (NNS fellers))
          (VP (VBG doing)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP they))
                (VP (MD could)
                  (S
                    (VP (TO to)
                      (VP (VB help)
                        (S
                          (NP (PRP us))
                          (VP (TO to)
                            (VP (RB not) (VB forgit)
                              (NP (DT the) (NN occasion))))))))))))))
      (: ;)
      (CC and)
      (S
        (ADVP (RB then))
        (NP (DT some) (JJ other) (NNS beasts))
        (VP (VBP come) (, ,)
          (PP (IN without)
            (NP (DT an) (NN invite))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD started)
        (NP (DT a) (JJ regular) (NN riot))
        (ADVP (RB down) (RB there))))
    (. .)))

nsubj(see-3, You-1)
aux(see-3, could-2)
root(ROOT-0, see-3)
nsubj(coming-5, them-4)
dep(see-3, coming-5)
det(lope-8, the-7)
prep_on(coming-5, lope-8)
det(direction-11, every-10)
prep_from(lope-8, direction-11)
advmod(soon-15, pretty-14)
advmod(was-17, soon-15)
expl(was-17, there-16)
conj_and(see-3, was-17)
quantmod(dozen-21, a-18)
dep(dozen-21, couple-19)
quantmod(dozen-21, of-20)
nsubj(was-17, dozen-21)
prep_of(dozen-21, them-23)
prep_under(was-17, me-25)
dep(was-17, jumping-27)
prt(jumping-27, up-28)
det(ladder-31, the-30)
prep_at(jumping-27, ladder-31)
dep(was-17, snarling-33)
conj_and(jumping-27, snarling-33)
conj_and(jumping-27, snapping-35)
conj_and(snarling-33, snapping-35)
det(other-38, each-37)
prep_at(snarling-33, other-38)
dep(went-43, so-41)
nsubj(went-43, we-42)
conj_and(see-3, went-43)
xcomp(went-43, skimming-44)
prt(skimming-44, along-45)
det(sand-48, the-47)
prep_over(skimming-44, sand-48)
det(fellers-52, these-51)
nsubj(doing-53, fellers-52)
conj_and(see-3, doing-53)
conj_and(went-43, doing-53)
dobj(could-56, what-54)
nsubj(help-58, what-54)
nsubj(could-56, they-55)
ccomp(doing-53, could-56)
aux(help-58, to-57)
xcomp(could-56, help-58)
dobj(help-58, us-59)
nsubj(forgit-62, us-59)
aux(forgit-62, to-60)
neg(forgit-62, not-61)
xcomp(help-58, forgit-62)
det(occasion-64, the-63)
dobj(forgit-62, occasion-64)
advmod(come-71, then-67)
det(beasts-70, some-68)
amod(beasts-70, other-69)
nsubj(come-71, beasts-70)
conj_and(see-3, come-71)
det(invite-75, an-74)
prep_without(come-71, invite-75)
nsubj(started-79, they-78)
conj_and(see-3, started-79)
det(riot-82, a-80)
amod(riot-82, regular-81)
dobj(started-79, riot-82)
advmod(there-84, down-83)
advmod(started-79, there-84)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP see)
      (SBAR
        (S
          (NP (DT this) (NN plan))
          (VP (VBD was)
            (NP (DT a) (NN mistake))))))
    (. .)))

nsubj(see-2, We-1)
root(ROOT-0, see-2)
det(plan-4, this-3)
nsubj(mistake-7, plan-4)
cop(mistake-7, was-5)
det(mistake-7, a-6)
ccomp(see-2, mistake-7)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could) (RB n't)
        (ADVP (RB ever))
        (VP (VB git)
          (PRT (RP away))
          (PP (IN from)
            (NP (PRP them)))
          (PP (IN at)
            (NP (DT this) (NN gait))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB hold)
          (PRT (RP on))
          (ADVP (RB forever)))))
    (. .)))

nsubj(git-5, We-1)
aux(git-5, could-2)
neg(git-5, n't-3)
advmod(git-5, ever-4)
root(ROOT-0, git-5)
prep_away_from(git-5, them-8)
det(gait-11, this-10)
prep_at(git-5, gait-11)
nsubj(hold-17, I-14)
aux(hold-17, could-15)
neg(hold-17, n't-16)
conj_and(git-5, hold-17)
prt(hold-17, on-18)
advmod(hold-17, forever-19)

(ROOT
  (S (IN So)
    (NP (NNP Tom))
    (VP
      (VP (VBD took)
        (NP (DT a) (NN think)))
      (, ,)
      (CC and)
      (VP (VBD struck)
        (NP (DT another) (NN idea))))
    (. .)))

dep(took-3, So-1)
nsubj(took-3, Tom-2)
nsubj(struck-8, Tom-2)
root(ROOT-0, took-3)
det(think-5, a-4)
dobj(took-3, think-5)
conj_and(took-3, struck-8)
det(idea-10, another-9)
dobj(struck-8, idea-10)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (VP (, ,)
        (S
          (VP (TO to)
            (VP
              (VP (VB kill)
                (NP (DT a) (NN lion))
                (PP (IN with)
                  (NP (DT the) (JJ pepper-box) (NN revolver))))
              (, ,)
              (CC and)
              (ADVP (RB then))
              (VP (VB sail)
                (PRT (RP away))
                (SBAR (IN while)
                  (S
                    (NP (DT the) (NNS others))
                    (VP (VBD stopped)
                      (S
                        (VP (TO to)
                          (VP (VB fight)
                            (PRT (RP over))
                            (NP (DT the) (NNS carcass))))))))))))))
    (. .)))

nsubj(kill-5, That-1)
nsubj(sail-15, That-1)
aux(kill-5, was-2)
aux(kill-5, to-4)
root(ROOT-0, kill-5)
det(lion-7, a-6)
dobj(kill-5, lion-7)
det(revolver-11, the-9)
amod(revolver-11, pepper-box-10)
prep_with(kill-5, revolver-11)
advmod(sail-15, then-14)
conj_and(kill-5, sail-15)
prt(sail-15, away-16)
mark(stopped-20, while-17)
det(others-19, the-18)
nsubj(stopped-20, others-19)
nsubj(fight-22, others-19)
advcl(sail-15, stopped-20)
aux(fight-22, to-21)
xcomp(stopped-20, fight-22)
prt(fight-22, over-23)
det(carcass-25, the-24)
dobj(fight-22, carcass-25)

(ROOT
  (S
    (S
      (S (IN So)
        (NP (PRP he))
        (VP
          (VP (VBD stopped)
            (NP (DT the) (NN balloon))
            (ADVP (RB still)))
          (, ,)
          (CC and)
          (VP (VBN done)
            (NP (PRP it)))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP we))
        (VP (VBD sailed)
          (PRT (RP off))
          (SBAR (IN while)
            (S
              (NP (DT the) (NNS fuss))
              (VP
                (VP (VBD was)
                  (VP (VBG going)
                    (PRT (RP on))))
                (, ,)
                (CC and)
                (VP (VBP come)
                  (PRT (RP down))
                  (NP
                    (NP (DT a) (NN quarter))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (NN mile))
                        (ADVP (IN off))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD helped)
        (NP (PRP me))
        (ADVP (RB aboard))))
    (: ;)
    (CC but)
    (S
      (PP (IN by)
        (NP (DT the) (NN time)))
      (NP (PRP we))
      (VP (VBD was)
        (ADVP (IN out)
          (PP (IN of)
            (NP (NN reach))))
        (ADVP (RB again))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (NN gang))
            (VP (VBD was)
              (PP (IN on)
                (NP (NN hand)))
              (ADVP (RB once) (RBR more)))))))
    (. .)))

dep(stopped-3, So-1)
nsubj(stopped-3, he-2)
nsubj(done-9, he-2)
root(ROOT-0, stopped-3)
det(balloon-5, the-4)
dobj(stopped-3, balloon-5)
advmod(stopped-3, still-6)
conj_and(stopped-3, done-9)
dobj(done-9, it-10)
advmod(sailed-15, then-13)
nsubj(sailed-15, we-14)
conj_and(stopped-3, sailed-15)
prt(sailed-15, off-16)
mark(going-21, while-17)
det(fuss-19, the-18)
nsubj(going-21, fuss-19)
nsubj(come-25, fuss-19)
aux(going-21, was-20)
advcl(sailed-15, going-21)
prt(going-21, on-22)
advcl(sailed-15, come-25)
conj_and(going-21, come-25)
prt(come-25, down-26)
det(quarter-28, a-27)
dobj(come-25, quarter-28)
det(mile-31, a-30)
prep_of(quarter-28, mile-31)
advmod(mile-31, off-32)
nsubj(helped-36, they-35)
conj_and(stopped-3, helped-36)
dobj(helped-36, me-37)
advmod(helped-36, aboard-38)
det(time-43, the-42)
prep_by(was-45, time-43)
nsubj(was-45, we-44)
conj_but(stopped-3, was-45)
prep_out_of(was-45, reach-48)
advmod(was-45, again-49)
mark(was-53, that-51)
nsubj(was-53, gang-52)
ccomp(was-45, was-53)
prep_on(was-53, hand-55)
advmod(more-57, once-56)
advmod(was-53, more-57)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP they))
        (VP (VBP see)
          (SBAR
            (S
              (S
                (NP (PRP we))
                (VP (VBD was)
                  (VP
                    (ADVP (RB really))
                    (VBN gone))))
              (CC and)
              (S
                (NP (PRP they))
                (VP (MD could) (RB n't)
                  (VP (VB get)
                    (NP (PRP us))))))))))
    (, ,)
    (NP (PRP they))
    (VP
      (VP (VBD sat)
        (PRT (RP down))
        (PP (IN on)
          (NP (PRP$ their) (NNS hams))))
      (CC and)
      (VP (VBD looked)
        (PRT (RP up))
        (PP (IN at)
          (NP (PRP us)))
        (ADVP
          (ADVP (RB so) (RB kind))
          (PP (IN of)
            (ADJP (JJ disappointed)))))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADVP
              (ADVP (RB as) (RB much))
              (SBAR (IN as)
                (S
                  (NP (DT a) (NN person))
                  (VP (MD could)
                    (VP (VB do)
                      (S (RB not)
                        (VP (TO to)
                          (VP (VB see)
                            (NP
                              (NP (JJ THEIR) (NN side))
                              (PP (IN of)
                                (NP (DT the) (NN matter))))))))))))))))
    (. .)))

advmod(see-4, when-2)
nsubj(see-4, they-3)
advcl(sat-17, see-4)
nsubjpass(gone-8, we-5)
auxpass(gone-8, was-6)
advmod(gone-8, really-7)
dep(see-4, gone-8)
nsubj(get-13, they-10)
aux(get-13, could-11)
neg(get-13, n't-12)
dep(see-4, get-13)
conj_and(gone-8, get-13)
dobj(get-13, us-14)
nsubj(sat-17, they-16)
nsubj(looked-23, they-16)
root(ROOT-0, sat-17)
prt(sat-17, down-18)
poss(hams-21, their-20)
prep_on(sat-17, hams-21)
conj_and(sat-17, looked-23)
prt(looked-23, up-24)
prep_at(looked-23, us-26)
advmod(kind-28, so-27)
advmod(looked-23, kind-28)
prep_of(kind-28, disappointed-30)
mark(was-33, that-31)
nsubj(was-33, it-32)
ccomp(sat-17, was-33)
advmod(much-35, as-34)
advmod(was-33, much-35)
mark(do-40, as-36)
det(person-38, a-37)
nsubj(do-40, person-38)
nsubj(see-43, person-38)
aux(do-40, could-39)
advcl(much-35, do-40)
ccomp(much-35, do-40)
neg(see-43, not-41)
aux(see-43, to-42)
xcomp(do-40, see-43)
amod(side-45, THEIR-44)
dobj(see-43, side-45)
det(matter-48, the-47)
prep_of(side-45, matter-48)

(ROOT
  (NP (NNP CHAPTER) (NNP VI) (. .)))

nn(VI-2, CHAPTER-1)
root(ROOT-0, VI-2)

(ROOT
  (S
    (S
      (NP (PRP IT))
      (VP (VBZ 'S)
        (NP
          (NP (DT A) (NN CARAVAN))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD WAS)
                (ADJP (RB so) (JJ weak))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (JJ only) (NN thing))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (VBD wanted)))))
                    (VP (VBD was)
                      (NP (DT a) (NN chance)
                        (S
                          (VP (TO to)
                            (VP (VB lay)
                              (PRT (RP down)))))))))))))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD made)
          (ADVP (RB straight))
          (PP (IN for)
            (NP (PRP$ my) (NN locker-bunk))))
        (, ,)
        (CC and)
        (VP (VBD stretched)
          (NP (PRP myself))
          (PP (IN out)
            (NP (RB there))))))
    (. .)))

nsubj(CARAVAN-4, IT-1)
cop(CARAVAN-4, 'S-2)
det(CARAVAN-4, A-3)
root(ROOT-0, CARAVAN-4)
mark(chance-17, CARAVAN-4)
nsubj(weak-8, I-5)
cop(weak-8, WAS-6)
advmod(weak-8, so-7)
rcmod(CARAVAN-4, weak-8)
det(thing-12, the-10)
amod(thing-12, only-11)
nsubj(chance-17, thing-12)
nsubj(wanted-14, I-13)
rcmod(thing-12, wanted-14)
cop(chance-17, was-15)
det(chance-17, a-16)
ccomp(weak-8, chance-17)
aux(lay-19, to-18)
vmod(chance-17, lay-19)
prt(lay-19, down-20)
dep(CARAVAN-4, so-22)
nsubj(made-24, I-23)
nsubj(stretched-31, I-23)
parataxis(CARAVAN-4, made-24)
advmod(made-24, straight-25)
poss(locker-bunk-28, my-27)
prep_for(made-24, locker-bunk-28)
parataxis(CARAVAN-4, stretched-31)
conj_and(made-24, stretched-31)
dobj(stretched-31, myself-32)
prep(stretched-31, out-33)
pobj(out-33, there-34)

(ROOT
  (S (CC But)
    (S
      (NP (DT a) (NN body))
      (VP (MD could) (RB n't)
        (VP (VB get)
          (PRT (RP back))
          (NP (PRP$ his) (NN strength))
          (PP (IN in)
            (NP
              (NP (DT no) (JJ such) (NN oven))
              (PP (IN as)
                (NP (DT that))))))))
    (, ,) (IN so)
    (S
      (NP (NNP Tom))
      (VP (VBP give)
        (S
          (NP (DT the) (NN command))
          (VP (TO to)
            (VP (VB soar))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Jim))
      (VP (VBD started)
        (NP (PRP her))
        (ADVP (RB aloft))))
    (. .)))

det(body-3, a-2)
nsubj(get-6, body-3)
aux(get-6, could-4)
neg(get-6, n't-5)
root(ROOT-0, get-6)
prt(get-6, back-7)
poss(strength-9, his-8)
dobj(get-6, strength-9)
neg(oven-13, no-11)
amod(oven-13, such-12)
prep_in(get-6, oven-13)
prep_as(oven-13, that-15)
dep(get-6, so-17)
nsubj(give-19, Tom-18)
ccomp(get-6, give-19)
det(command-21, the-20)
dobj(give-19, command-21)
nsubj(soar-23, command-21)
aux(soar-23, to-22)
xcomp(give-19, soar-23)
nsubj(started-27, Jim-26)
conj_and(get-6, started-27)
dobj(started-27, her-28)
advmod(started-27, aloft-29)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB go)
              (PRT (RP up))
              (NP (DT a) (NN mile)))))
        (SBAR (IN before)
          (S
            (NP (PRP we))
            (VP (VBD struck)
              (NP (JJ comfortable) (NN weather))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADJP
                      (ADJP (NN breezy)
                        (CC and)
                        (NN pleasant))
                      (CC and)
                      (ADJP (RB just) (JJ right)))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB pretty) (RB soon))
      (NP (PRP I))
      (VP (VBD was)
        (PP
          (ADVP (DT all))
          (RB straight)
          (ADVP (RB again)))))
    (. .)))

nsubj(had-2, We-1)
nsubj(go-4, We-1)
root(ROOT-0, had-2)
aux(go-4, to-3)
xcomp(had-2, go-4)
prt(go-4, up-5)
det(mile-7, a-6)
dobj(go-4, mile-7)
mark(struck-10, before-8)
nsubj(struck-10, we-9)
advcl(had-2, struck-10)
amod(weather-12, comfortable-11)
dobj(struck-10, weather-12)
advmod(breezy-16, where-13)
nsubj(breezy-16, it-14)
nsubj(right-21, it-14)
cop(breezy-16, was-15)
advcl(struck-10, breezy-16)
advcl(struck-10, pleasant-18)
conj_and(breezy-16, pleasant-18)
advmod(right-21, just-20)
advcl(struck-10, right-21)
conj_and(breezy-16, right-21)
advmod(soon-25, pretty-24)
advmod(was-27, soon-25)
nsubj(was-27, I-26)
conj_and(had-2, was-27)
prep(was-27, all-28)
dep(all-28, straight-29)
dep(all-28, again-30)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD had)
        (VP (VBN been)
          (VP
            (VP (VBG setting)
              (ADJP (JJ quiet)))
            (CC and)
            (VP (VBG thinking))))))
    (: ;)
    (S (CC but)
      (ADVP (RB now))
      (NP (PRP he))
      (VP
        (VP (VBZ jumps)
          (PRT (RP up)))
        (CC and)
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP (PRP I))
            (VP (VBD bet)
              (NP (PRP you))
              (NP
                (NP (DT a)
                  (QP (CD thousand) (TO to) (CD one)))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP know)
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (PRP we))
                          (VP (VBP are)))))))))))))
    (. .)))

nsubj(setting-4, Tom-1)
nsubj(thinking-7, Tom-1)
aux(setting-4, had-2)
aux(setting-4, been-3)
root(ROOT-0, setting-4)
acomp(setting-4, quiet-5)
conj_and(setting-4, thinking-7)
advmod(jumps-12, now-10)
nsubj(jumps-12, he-11)
nsubj(says-15, he-11)
parataxis(setting-4, jumps-12)
prt(jumps-12, up-13)
parataxis(setting-4, says-15)
conj_and(jumps-12, says-15)
nsubj(bet-19, I-18)
ccomp(says-15, bet-19)
iobj(bet-19, you-20)
det(one-24, a-21)
number(one-24, thousand-22)
dep(one-24, to-23)
dobj(bet-19, one-24)
nsubj(know-26, I-25)
rcmod(one-24, know-26)
advmod(are-29, where-27)
nsubj(are-29, we-28)
ccomp(know-26, are-29)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (PP (IN in)
        (NP (DT the) (NNP Great) (NNP Sahara)))
      (, ,)
      (SBAR (IN as)
        (FRAG
          (ADJP (JJ sure)
            (PP (IN as)
              (NP (NNS guns)))))))
    (. !) ('' '')))

nsubj('re-2, We-1)
root(ROOT-0, 're-2)
det(Sahara-6, the-4)
nn(Sahara-6, Great-5)
prep_in('re-2, Sahara-6)
mark(sure-9, as-8)
advcl('re-2, sure-9)
prep_as(sure-9, guns-11)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (RB so) (JJ excited)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could) (RB n't)
                (VP (VB hold)
                  (ADVP (RB still)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD was) (RB n't)))
    (. .)))

nsubj(excited-4, He-1)
cop(excited-4, was-2)
advmod(excited-4, so-3)
root(ROOT-0, excited-4)
nsubj(hold-8, he-5)
aux(hold-8, could-6)
neg(hold-8, n't-7)
ccomp(excited-4, hold-8)
advmod(hold-8, still-9)
nsubj(was-13, I-12)
conj_but(excited-4, was-13)
neg(was-13, n't-14)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBZ says) (: :)
        (FRAG
          (INTJ (`` ``) (UH Well))
          (, ,)
          (ADVP (RB then))))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBZ 's)
            (NP (DT the) (NNP Great) (NNP Sahara))))))
    (. ?)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
discourse(then-7, Well-5)
dep(says-2, then-7)
advmod(Sahara-13, where-9)
cop(Sahara-13, 's-10)
det(Sahara-13, the-11)
nn(Sahara-13, Great-12)
advcl(says-2, Sahara-13)

(ROOT
  (S
    (NP (NNP In))
    (VP
      (VP (VBZ England))
      (CC or)
      (VP
        (PP (IN in)
          (NP (NNP Scotland)))))
    (. ?) ('' '') ('' '')))

nsubj(England-2, In-1)
root(ROOT-0, England-2)
conj_or(England-2, in-4)
pobj(in-4, Scotland-5)

(ROOT
  (S (`` `)
    (VP (VB Tai) (RB n't)
      (ADVP (IN in) (DT either))
      (: ;)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (PP (IN in)
            (NP (NNP Africa))))))
    (. .) ('' '')))

root(ROOT-0, Tai-2)
neg(Tai-2, n't-3)
advmod(Tai-2, in-4)
dep(in-4, either-5)
nsubj('s-8, it-7)
ccomp(Tai-2, 's-8)
parataxis(Tai-2, 's-8)
prep_in('s-8, Africa-10)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Jim) (POS 's))
        (NNS eyes))
      (VP (VBD bugged)
        (PRT (RP out))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB stare)
              (PRT (RP down))
              (PP (IN with)
                (NP
                  (NP (DT no) (NN end))
                  (PP (IN of)
                    (NP (NN interest))))))))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (DT that))
            (VP (VBD was)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP$ his) (NNS originals))
                  (VP (VBP come)
                    (PP (IN from))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP
          (NP
            (QP (JJR more) (IN than) (PDT half)))
          (S
            (VP (VB believe)
              (NP (PRP it)))))))
    (. .)))

poss(eyes-3, Jim-1)
nsubj(bugged-4, eyes-3)
root(ROOT-0, bugged-4)
prt(bugged-4, out-5)
nsubj(begun-9, he-8)
nsubj(stare-11, he-8)
conj_and(bugged-4, begun-9)
aux(stare-11, to-10)
xcomp(begun-9, stare-11)
prt(stare-11, down-12)
neg(end-15, no-14)
prep_with(stare-11, end-15)
prep_of(end-15, interest-17)
mark(was-21, because-19)
nsubj(was-21, that-20)
advcl(begun-9, was-21)
advmod(come-25, where-22)
poss(originals-24, his-23)
nsubj(come-25, originals-24)
advcl(was-21, come-25)
prep(come-25, from-26)
nsubj(half-34, I-29)
aux(half-34, did-30)
neg(half-34, n't-31)
quantmod(half-34, more-32)
quantmod(half-34, than-33)
conj_but(bugged-4, half-34)
dep(half-34, believe-35)
dobj(believe-35, it-36)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (MD could) (RB n't)))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD seemed)
        (ADJP (RB too) (JJ awful))
        (SBAR
          (ADVP (RB far) (RB away))
          (IN for)
          (S
            (NP (PRP us))
            (VP (TO to)
              (VP (VB have)
                (VP (VBN traveled))))))))
    (. .)))

nsubj(could-2, I-1)
ccomp(know-6, could-2)
neg(could-2, n't-3)
nsubj(know-6, you-5)
root(ROOT-0, know-6)
nsubj(seemed-9, it-8)
parataxis(know-6, seemed-9)
advmod(awful-11, too-10)
acomp(seemed-9, awful-11)
advmod(away-13, far-12)
advmod(traveled-18, away-13)
mark(traveled-18, for-14)
nsubj(traveled-18, us-15)
aux(traveled-18, to-16)
aux(traveled-18, have-17)
advcl(seemed-9, traveled-18)
xcomp(seemed-9, traveled-18)

(ROOT
  (S (CC But)
    (NP (NNP Tom))
    (VP (VBD was)
      (ADJP (JJ full))
      (PP (IN of)
        (NP (PRP$ his) (NN discovery)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD called)
              (NP (PRP it)))
            (, ,)
            (CC and)
            (VP (VBD said)
              (SBAR
                (S
                  (NP
                    (NP (DT the) (NNS lions))
                    (CC and)
                    (NP (DT the) (NN sand)))
                  (VP (VBD meant)
                    (NP (DT the) (NNP Great) (NNP Desert))
                    (, ,)
                    (ADVP (RB sure))))))))))
    (. .)))

cc(full-4, But-1)
nsubj(full-4, Tom-2)
cop(full-4, was-3)
root(ROOT-0, full-4)
poss(discovery-7, his-6)
prep_of(full-4, discovery-7)
mark(called-11, as-9)
nsubj(called-11, he-10)
nsubj(said-15, he-10)
advcl(full-4, called-11)
dobj(called-11, it-12)
advcl(full-4, said-15)
conj_and(called-11, said-15)
det(lions-17, the-16)
nsubj(meant-21, lions-17)
det(sand-20, the-19)
conj_and(lions-17, sand-20)
nsubj(meant-21, sand-20)
ccomp(said-15, meant-21)
det(Desert-24, the-22)
nn(Desert-24, Great-23)
dobj(meant-21, Desert-24)
advmod(meant-21, sure-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD could)
            (S
              (NP (`` `)
                (NP (SYM a))
                ('' ')
                (VP (VBN found)
                  (PRT (RP out))
                  (PRN (, ,)
                    (SBAR (IN before)
                      (S
                        (NP (PRP we))
                        (VP (VBD sighted)
                          (NP (NN land))
                          (, ,)
                          (SBAR (IN that)
                            (S
                              (NP (PRP we))
                              (VP (VBD was)
                                (VP (VBG crowding)
                                  (NP (DT the) (NN land) (NNS somewheres)))))))))
                    (, ,))
                  (SBAR
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN thought)
                            (PP (IN of)
                              (NP (CD one) (NN thing)))))))
                    (: ;)
                    (CC and)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP we))
                        (VP (VBD asked)
                          (NP (PRP him))
                          (SBAR
                            (WHNP (WP what))
                            (, ,)
                            (S
                              (NP (PRP he))
                              (VP (VBD said) (: :) (`` ``)
                                (S
                                  (NP (DT These))
                                  (VP (VBZ clocks)))))))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(could-4, he-3)
ccomp(said-2, could-4)
dep(could-4, a-6)
vmod(a-6, found-8)
prt(found-8, out-9)
mark(sighted-13, before-11)
nsubj(sighted-13, we-12)
parataxis(found-8, sighted-13)
dobj(sighted-13, land-14)
mark(crowding-19, that-16)
nsubj(crowding-19, we-17)
aux(crowding-19, was-18)
ccomp(sighted-13, crowding-19)
det(somewheres-22, the-20)
nn(somewheres-22, land-21)
dobj(crowding-19, somewheres-22)
mark(thought-27, if-24)
nsubj(thought-27, he-25)
aux(thought-27, had-26)
advcl(found-8, thought-27)
num(thing-30, one-29)
prep_of(thought-27, thing-30)
advmod(asked-35, when-33)
nsubj(asked-35, we-34)
advcl(found-8, asked-35)
conj_and(thought-27, asked-35)
dobj(asked-35, him-36)
dobj(said-40, what-37)
nsubj(said-40, he-39)
dep(asked-35, said-40)
nsubj(clocks-44, These-43)
ccomp(said-40, clocks-44)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (ADJP (JJ chronometers)))
    (. .)))

nsubj(chronometers-3, They-1)
cop(chronometers-3, 're-2)
root(ROOT-0, chronometers-3)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB always))
    (VP (VBD read)
      (PP (IN about)
        (NP (PRP them)))
      (PP (IN in)
        (NP (NN sea) (NNS voyages))))
    (. .)))

nsubj(read-3, You-1)
advmod(read-3, always-2)
root(ROOT-0, read-3)
prep_about(read-3, them-5)
nn(voyages-8, sea-7)
prep_in(read-3, voyages-8)

(ROOT
  (S
    (S
      (NP
        (NP (CD One))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBZ is)
        (VP (VBG keeping)
          (NP (JJ Grinnage) (NN time)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ other))
      (VP (VBZ is)
        (VP (VBG keeping)
          (NP (NNP St.) (NNP Louis))
          (NP (NN time))
          (, ,)
          (PP (IN like)
            (NP (PRP$ my) (NN watch))))))
    (. .)))

nsubj(keeping-5, One-1)
prep_of(One-1, them-3)
aux(keeping-5, is-4)
root(ROOT-0, keeping-5)
amod(time-7, Grinnage-6)
dobj(keeping-5, time-7)
det(other-11, the-10)
nsubj(keeping-13, other-11)
aux(keeping-13, is-12)
conj_and(keeping-5, keeping-13)
nn(Louis-15, St.-14)
iobj(keeping-13, Louis-15)
dobj(keeping-13, time-16)
poss(watch-20, my-19)
prep_like(keeping-13, watch-20)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP we))
          (VP (VBD left)
            (NP (NNP St.) (NNP Louis)))))
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (CD four))
          (PP (IN in)
            (NP (DT the) (NN afternoon))))
        (PP (IN by)
          (NP
            (NP (PRP$ my) (NN watch))
            (CC and)
            (NP (DT this) (NN clock))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBN ten)
          (PP (IN at)
            (NP (NN night)))
          (PP (IN by)
            (NP (DT this) (NNP Grinnage) (NN clock))))))
    (. .)))

advmod(left-3, When-1)
nsubj(left-3, we-2)
advcl(four-8, left-3)
nn(Louis-5, St.-4)
dobj(left-3, Louis-5)
nsubj(four-8, it-6)
cop(four-8, was-7)
root(ROOT-0, four-8)
det(afternoon-11, the-10)
prep_in(four-8, afternoon-11)
poss(watch-14, my-13)
prep_by(four-8, watch-14)
det(clock-17, this-16)
prep_by(four-8, clock-17)
conj_and(watch-14, clock-17)
nsubjpass(ten-22, it-20)
auxpass(ten-22, was-21)
conj_and(four-8, ten-22)
prep_at(ten-22, night-24)
det(clock-28, this-26)
nn(clock-28, Grinnage-27)
agent(ten-22, clock-28)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (PP (IN at)
      (NP
        (NP (DT this) (NN time))
        (PP (IN of)
          (NP (DT the) (NN year)))))
    (NP (DT the) (NN sun))
    (VP (VBZ sets)
      (PP (IN at)
        (NP (RB about) (CD seven) (RB o'clock))))
    (. .)))

advmod(sets-11, Well-1)
det(time-5, this-4)
prep_at(sets-11, time-5)
det(year-8, the-7)
prep_of(time-5, year-8)
det(sun-10, the-9)
nsubj(sets-11, sun-10)
root(ROOT-0, sets-11)
advmod(seven-14, about-13)
prep_at(sets-11, seven-14)
advmod(seven-14, o'clock-15)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP I))
      (VP (VBD noticed)
        (NP (DT the) (NN time) (NN yesterday))
        (NP (NN evening))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN sun))
            (VP (VBD went)
              (PRT (RP down)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP
        (VP (VBD was)
          (ADJP (JJ half-past)
            (NP (CD five) (NNS o'clock)))
          (PP (IN by)
            (NP (DT the) (NNP Grinnage) (NN clock))))
        (, ,)
        (CC and)
        (VP
          (NP
            (QP (DT half) (JJ past) (CD 11) (CD A.M.)))
          (PP (IN by)
            (NP
              (NP (PRP$ my) (NN watch))
              (CC and)
              (NP (DT the) (JJ other) (NN clock)))))))
    (. .)))

advmod(noticed-3, Now-1)
nsubj(noticed-3, I-2)
root(ROOT-0, noticed-3)
det(yesterday-6, the-4)
nn(yesterday-6, time-5)
dobj(noticed-3, yesterday-6)
tmod(noticed-3, yesterday-6)
tmod(noticed-3, evening-7)
advmod(went-11, when-8)
det(sun-10, the-9)
nsubj(went-11, sun-10)
advcl(noticed-3, went-11)
prt(went-11, down-12)
nsubj(half-past-17, it-15)
cop(half-past-17, was-16)
conj_and(noticed-3, half-past-17)
num(o'clock-19, five-18)
dep(half-past-17, o'clock-19)
det(clock-23, the-21)
nn(clock-23, Grinnage-22)
prep_by(half-past-17, clock-23)
quantmod(A.M.-29, half-26)
quantmod(A.M.-29, past-27)
number(A.M.-29, 11-28)
conj_and(noticed-3, A.M.-29)
conj_and(half-past-17, A.M.-29)
poss(watch-32, my-31)
prep_by(A.M.-29, watch-32)
det(clock-36, the-34)
amod(clock-36, other-35)
prep_by(A.M.-29, clock-36)
conj_and(watch-32, clock-36)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (PRN (, ,)
      (S
        (NP (DT the) (NN sun))
        (VP
          (VP (VBD rose))
          (CC and)
          (VP (VBD set)
            (PP (IN by)
              (NP (PRP$ my) (NN watch)))
            (PP (IN in)
              (NP (NNP St.) (NNP Louis))))))
      (, ,))
    (CC and)
    (S
      (NP (DT the) (NNP Grinnage) (NN clock))
      (VP (VBD was)
        (ADVP
          (NP (CD six) (NNS hours))
          (RB fast))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (PRP we))
        (VP (VBP 've)
          (VP (VBN come)
            (ADVP
              (ADVP (RB so) (RB far) (JJ east))
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ comes)
                    (PP (IN within)
                      (NP
                        (NP
                          (QP (JJR less) (IN than) (PDT half)))
                        (NP (DT an) (NN hour))
                        (PP (IN of)
                          (S
                            (VP (VBG setting)
                              (PP (IN by)
                                (NP (DT the) (NNP Grinnage) (NN clock))))))))))))
            (ADVP (RB now)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP
          (VP (VBP 'm)
            (ADVP (RB away))
            (ADJP (RP out)))
          (: --)
          (NP
            (NP
              (QP (JJR more) (IN than) (CD four))
              (NNS hours))
            (CC and)
            (NP
              (NP (DT a) (NN half))
              (ADVP (RB out)))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
det(sun-5, the-4)
nsubj(rose-6, sun-5)
nsubj(set-8, sun-5)
dep(see-2, rose-6)
dep(see-2, set-8)
conj_and(rose-6, set-8)
poss(watch-11, my-10)
prep_by(set-8, watch-11)
nn(Louis-14, St.-13)
prep_in(set-8, Louis-14)
det(clock-19, the-17)
nn(clock-19, Grinnage-18)
nsubj(was-20, clock-19)
conj_and(see-2, was-20)
num(hours-22, six-21)
npadvmod(fast-23, hours-22)
advmod(was-20, fast-23)
nsubj(come-28, we-26)
aux(come-28, 've-27)
conj_but(see-2, come-28)
advmod(east-31, so-29)
advmod(east-31, far-30)
advmod(come-28, east-31)
mark(comes-34, that-32)
nsubj(comes-34, it-33)
advcl(east-31, comes-34)
ccomp(east-31, comes-34)
quantmod(half-38, less-36)
quantmod(half-38, than-37)
prep_within(comes-34, half-38)
det(hour-40, an-39)
dep(half-38, hour-40)
prepc_of(half-38, setting-42)
det(clock-46, the-44)
nn(clock-46, Grinnage-45)
prep_by(setting-42, clock-46)
advmod(come-28, now-47)
nsubj(out-53, I-50)
cop(out-53, 'm-51)
advmod(out-53, away-52)
conj_but(see-2, out-53)
conj_and(come-28, out-53)
mwe(than-56, more-55)
quantmod(four-57, than-56)
num(hours-58, four-57)
dobj(out-53, hours-58)
parataxis(out-53, hours-58)
det(half-61, a-60)
dobj(out-53, half-61)
parataxis(out-53, half-61)
conj_and(hours-58, half-61)
advmod(half-61, out-62)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (NP (DT that))
    (VP
      (VP (VBD meant)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBD was)
              (VP (VBG closing)
                (PRT (RP up))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN longitude))
                    (PP (IN of)
                      (NP (NNP Ireland))))))))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP (VB strike)
          (NP (PRP it))
          (ADVP
            (ADVP (RB before) (RB long))
            (SBAR (IN if)
              (S
                (NP (PRP we))
                (VP (VBD was)
                  (ADJP (RB p) (`` `) (RB inted) (JJ right))))))))
      (: --)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP we))
          (VP (VBD was) (RB n't)))))
    (. .)))

nsubj(see-2, You-1)
ccomp(meant-5, see-2)
nsubj(meant-5, that-4)
nsubj(strike-19, that-4)
root(ROOT-0, meant-5)
mark(closing-9, that-6)
nsubj(closing-9, we-7)
aux(closing-9, was-8)
ccomp(meant-5, closing-9)
prt(closing-9, up-10)
det(longitude-13, the-12)
prep_on(closing-9, longitude-13)
prep_of(longitude-13, Ireland-15)
aux(strike-19, would-18)
conj_and(meant-5, strike-19)
dobj(strike-19, it-20)
advmod(long-22, before-21)
advmod(strike-19, long-22)
mark(right-29, if-23)
nsubj(right-29, we-24)
cop(right-29, was-25)
advmod(right-29, p-26)
advmod(right-29, inted-28)
advcl(long-22, right-29)
dobj(was-33, which-31)
nsubj(was-33, we-32)
ccomp(meant-5, was-33)
conj_and(meant-5, was-33)
neg(was-33, n't-34)

(ROOT
  (S
    (S
      (S
        (INTJ (UH No))
        (, ,)
        (VP (VB sir)))
      (, ,)
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN been)
          (ADJP (JJ a-wandering))
          (: --)
          (S
            (VP (VBG wandering) (`` `)
              (ADVP (RB way) (RB down) (RB south))
              (PP (IN of)
                (ADVP (JJ east))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (PRP$ my) (NN opinion))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP are)
                (PP (IN in)
                  (NP (NNP Africa)))))))))
    (. .)))

discourse(sir-3, No-1)
ccomp(a-wandering-8, sir-3)
nsubj(a-wandering-8, we-5)
aux(a-wandering-8, 've-6)
cop(a-wandering-8, been-7)
root(ROOT-0, a-wandering-8)
parataxis(a-wandering-8, wandering-10)
advmod(south-14, way-12)
advmod(south-14, down-13)
advmod(wandering-10, south-14)
prepc_of(wandering-10, east-16)
nsubj(opinion-22, it-19)
cop(opinion-22, 's-20)
poss(opinion-22, my-21)
conj_and(a-wandering-8, opinion-22)
nsubj(are-24, we-23)
rcmod(opinion-22, are-24)
prep_in(are-24, Africa-26)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP (DT this) (NN map))))
    (. .)))

root(ROOT-0, Look-1)
det(map-4, this-3)
prep_at(Look-1, map-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP
            (NP (DT the) (NN shoulder))
            (PP (IN of)
              (NP (NNP Africa))))
          (VP (VBZ sticks)
            (PRT (RP out))
            (PP (TO to)
              (NP (DT the) (NN west)))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
advmod(sticks-8, how-3)
det(shoulder-5, the-4)
nsubj(sticks-8, shoulder-5)
prep_of(shoulder-5, Africa-7)
ccomp(see-2, sticks-8)
prt(sticks-8, out-9)
det(west-12, the-11)
prep_to(sticks-8, west-12)

(ROOT
  (S
    (S
      (VP (VB Think)
        (SBAR
          (WHADVP (WRB how) (RB fast))
          (S
            (NP (PRP we))
            (VP (VBP 've)
              (VP (VBN traveled)))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP we))
          (VP (VBD had)
            (VP (VBN gone)
              (PP (RB straight)
                (ADJP (JJ east)))))))
      (NP (PRP we))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ long)
            (PP (IN past)
              (NP (NNP England))))
          (PP (IN by)
            (NP (DT this) (NN time))))))
    (. .)))

root(ROOT-0, Think-1)
advmod(fast-3, how-2)
advmod(traveled-6, fast-3)
nsubj(traveled-6, we-4)
aux(traveled-6, 've-5)
ccomp(Think-1, traveled-6)
mark(gone-11, if-8)
nsubj(gone-11, we-9)
aux(gone-11, had-10)
advcl(long-17, gone-11)
prep(gone-11, straight-12)
pobj(straight-12, east-13)
nsubj(long-17, we-14)
aux(long-17, would-15)
cop(long-17, be-16)
parataxis(Think-1, long-17)
prep_past(long-17, England-19)
det(time-22, this-21)
prep_by(long-17, time-22)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP watch)
        (PP (IN for)
          (NP
            (NP (NN noon))
            (, ,)
            (NP
              (NP (DT all))
              (PP (IN of)
                (NP (PRP you))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (MD 'll)
          (VP (VB stand)
            (PRT (RP up)))))
      (, ,)
      (CC and)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (MD ca) (RB n't)
              (VP (VB cast)
                (NP (DT a) (NN shadow))))))
        (NP (PRP we))
        (VP (MD 'll)
          (VP (VB find)
            (SBAR (IN that)
              (S
                (NP (DT this) (NNP Grinnage) (NN clock))
                (VP (VBZ is)
                  (VP (VBG coming)
                    (ADJP (RB mighty) (JJ close)
                      (PP (TO to)
                        (S
                          (VP (VBG marking)
                            (NP (CD twelve))))))))))))))
    (. .)))

nsubj(watch-2, You-1)
root(ROOT-0, watch-2)
prep_for(watch-2, noon-4)
appos(noon-4, all-6)
prep_of(all-6, you-8)
nsubj(stand-13, we-11)
aux(stand-13, 'll-12)
conj_and(watch-2, stand-13)
prt(stand-13, up-14)
advmod(cast-21, when-17)
nsubj(cast-21, we-18)
aux(cast-21, ca-19)
neg(cast-21, n't-20)
advcl(find-26, cast-21)
det(shadow-23, a-22)
dobj(cast-21, shadow-23)
nsubj(find-26, we-24)
aux(find-26, 'll-25)
conj_and(watch-2, find-26)
conj_and(stand-13, find-26)
mark(coming-32, that-27)
det(clock-30, this-28)
nn(clock-30, Grinnage-29)
nsubj(coming-32, clock-30)
aux(coming-32, is-31)
ccomp(find-26, coming-32)
advmod(close-34, mighty-33)
acomp(coming-32, close-34)
prepc_to(close-34, marking-36)
dobj(marking-36, twelve-37)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (S
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (PP (IN in)
              (NP (NNP Africa)))))
        (: ;)
        (CC and)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADVP (RB just))
            (NP (NN bully))))))
    (. .) ('' '')))

discourse(think-6, Yes-1)
advmod(think-6, sir-3)
nsubj(think-6, I-5)
root(ROOT-0, think-6)
nsubj('re-8, we-7)
dep(think-6, 're-8)
prep_in('re-8, Africa-10)
nsubj(bully-16, it-13)
cop(bully-16, 's-14)
advmod(bully-16, just-15)
dep(think-6, bully-16)
conj_and('re-8, bully-16)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD was)
      (VP (VBG gazing)
        (PRT (RP down))
        (PP (IN with)
          (NP (DT the) (NN glass)))))
    (. .)))

nsubj(gazing-3, Jim-1)
aux(gazing-3, was-2)
root(ROOT-0, gazing-3)
prt(gazing-3, down-4)
det(glass-7, the-6)
prep_with(gazing-3, glass-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD shook)
          (NP (PRP$ his) (NN head)))
        (CC and)
        (VP (VBZ says))))
    (: :) (`` ``)
    (S
      (NP (NNP Mars) (NNP Tom))
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP reckon)
            (SBAR
              (S
                (NP (NN dey))
                (VP (VBZ 's)
                  (NP
                    (NP (DT a) (NN mistake) (NN som))
                    (`` `)
                    (SBAR
                      (S
                        (NP (NN er))
                        (VP (VBZ 's))))))))))
        (, ,))
      (VP (VBZ hai) (RB n't)
        (VP (VBN seen)
          (NP (DT no) (JJ niggers) (NN yit)))))
    (. .) ('' '')))

nsubj(shook-2, He-1)
nsubj(says-6, He-1)
root(ROOT-0, shook-2)
poss(head-4, his-3)
dobj(shook-2, head-4)
conj_and(shook-2, says-6)
nn(Tom-10, Mars-9)
nsubj(hai-23, Tom-10)
nsubj(reckon-13, I-12)
parataxis(hai-23, reckon-13)
nsubj(som-18, dey-14)
cop(som-18, 's-15)
det(som-18, a-16)
nn(som-18, mistake-17)
ccomp(reckon-13, som-18)
nsubj('s-21, er-20)
rcmod(som-18, 's-21)
parataxis(shook-2, hai-23)
neg(hai-23, n't-24)
dep(hai-23, seen-25)
neg(yit-28, no-26)
amod(yit-28, niggers-27)
dobj(seen-25, yit-28)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP (NN nothing))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP do) (RB n't)
        (VP (VB live)
          (PP (IN in)
            (NP (DT the) (NN desert))))))
    (. .)))

nsubj(nothing-4, That-2)
cop(nothing-4, 's-3)
root(ROOT-0, nothing-4)
nsubj(live-9, they-6)
aux(live-9, do-7)
neg(live-9, n't-8)
parataxis(nothing-4, live-9)
det(desert-12, the-11)
prep_in(live-9, desert-12)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ is)
        (NP
          (NP (DT that))
          (, ,) (`` `)
          (NP
            (NP (NN way))
            (PP (IN off)
              (NP (NN yonder)))))))
    (. ?)))

nsubj(that-3, What-1)
cop(that-3, is-2)
root(ROOT-0, that-3)
dep(that-3, way-6)
prep_off(way-6, yonder-8)

(ROOT
  (S
    (VP (VB Gim)
      (S
        (NP (PRP me))
        (NP (DT a) (NN glass))))
    (. .) ('' '')))

root(ROOT-0, Gim-1)
nsubj(glass-4, me-2)
det(glass-4, a-3)
xcomp(Gim-1, glass-4)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD took)
          (NP (DT a) (JJ long) (NN look)))
        (, ,)
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (PP (IN like)
                  (NP
                    (NP (DT a) (JJ black) (NN string))
                    (VP (VBN stretched)
                      (PP (IN across)
                        (NP (DT the) (NN sand))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD could) (RB n't)
        (VP (VB guess)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBD was)))))))
    (. .)))

nsubj(took-2, He-1)
nsubj(said-8, He-1)
root(ROOT-0, took-2)
det(look-5, a-3)
amod(look-5, long-4)
dobj(took-2, look-5)
conj_and(took-2, said-8)
nsubj(was-10, it-9)
ccomp(said-8, was-10)
det(string-14, a-12)
amod(string-14, black-13)
prep_like(was-10, string-14)
vmod(string-14, stretched-15)
det(sand-18, the-17)
prep_across(stretched-15, sand-18)
nsubj(guess-24, he-21)
aux(guess-24, could-22)
neg(guess-24, n't-23)
conj_but(took-2, guess-24)
dobj(was-27, what-25)
nsubj(was-27, it-26)
ccomp(guess-24, was-27)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (NP (PRP I))
    (VP (VBZ says) (, ,) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP reckon)
          (SBAR
            (S
              (S
                (S
                  (ADVP (RB maybe))
                  (NP (PRP you))
                  (VP (VBP 've)
                    (VP (VBN got)
                      (S
                        (NP (DT a) (NN chance))
                        (ADVP (RB now)))
                      (S
                        (VP (TO to)
                          (VP (VB find)
                            (PRT (RP out))
                            (NP
                              (NP (NN whereabouts))
                              (SBAR
                                (S
                                  (NP (DT this) (NN balloon))
                                  (VP (VBZ is))))))))
                      (, ,)
                      (PP (RB because) (IN as) (IN like)
                        (NP
                          (NP (RB as) (RB not))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ is)
                                (NP
                                  (NP (CD one))
                                  (PP (IN of)
                                    (NP (DT these) (NNS lines))))
                                (ADVP (RB here))
                                (, ,)
                                (SBAR (IN that)
                                  (S
                                    (VP (VBZ 's)
                                      (PP (IN on)
                                        (NP (DT the) (NN map)))
                                      (, ,)
                                      (SBAR (IN that)
                                        (S
                                          (NP (PRP you))
                                          (VP (VBP call)
                                            (NP
                                              (NP (NNS meridians))
                                              (PP (IN of)
                                                (NP (NN longitude))))))))))))))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP we))
                  (VP (MD can)
                    (VP (VB drop)
                      (PRT (RP down))))))
              (CC and)
              (S
                (VP (VB look)
                  (PP (IN at)
                    (NP (PRP$ its) (NN number)))
                  (, ,) (VB and))
                (: --))))))
      ('' '')
      (SBAR (`` ``)
        (S
          (FRAG
            (INTJ (UH Oh) (, ,) (UH shucks))
            (, ,)
            (NP (NNP Huck) (NNP Finn)))
          (, ,)
          (NP (PRP I))
          (VP
            (ADVP (RB never))
            (VBP see)
            (NP (PDT such) (DT a) (NN lunkhead))
            (PP (IN as)
              (NP (PRP you)))))))
    (. .)))

dep(says-6, Well-2)
nsubj(says-6, I-5)
root(ROOT-0, says-6)
nsubj(reckon-10, I-9)
ccomp(says-6, reckon-10)
advmod(got-14, maybe-11)
nsubj(got-14, you-12)
nsubj(find-19, you-12)
nsubj(look-58, you-12)
aux(got-14, 've-13)
dep(reckon-10, got-14)
det(chance-16, a-15)
dep(got-14, chance-16)
advmod(chance-16, now-17)
aux(find-19, to-18)
xcomp(got-14, find-19)
prt(find-19, out-20)
dobj(find-19, whereabouts-21)
det(balloon-23, this-22)
nsubj(is-24, balloon-23)
rcmod(whereabouts-21, is-24)
advmod(like-28, because-26)
dep(like-28, as-27)
prep(got-14, like-28)
advmod(not-30, as-29)
pobj(like-28, not-30)
nsubj(one-33, not-30)
nsubj('s-40, not-30)
cop(one-33, is-32)
rcmod(not-30, one-33)
det(lines-36, these-35)
prep_of(one-33, lines-36)
advmod(one-33, here-37)
mark('s-40, that-39)
ccomp(one-33, 's-40)
det(map-43, the-42)
prep_on('s-40, map-43)
mark(call-47, that-45)
nsubj(call-47, you-46)
ccomp('s-40, call-47)
dobj(call-47, meridians-48)
prep_of(meridians-48, longitude-50)
nsubj(drop-55, we-53)
aux(drop-55, can-54)
dep(reckon-10, drop-55)
conj_and(got-14, drop-55)
prt(drop-55, down-56)
dep(reckon-10, look-58)
conj_and(got-14, look-58)
poss(number-61, its-60)
prep_at(look-58, number-61)
dep(look-58, and-63)
discourse(Finn-72, Oh-67)
dep(Oh-67, shucks-69)
nn(Finn-72, Huck-71)
dep(see-76, Finn-72)
nsubj(see-76, I-74)
neg(see-76, never-75)
ccomp(says-6, see-76)
predet(lunkhead-79, such-77)
det(lunkhead-79, a-78)
dobj(see-76, lunkhead-79)
prep_as(see-76, you-81)

(ROOT
  (FRAG
    (S
      (VP (VBD Did)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBZ s) (`` `)
              (VP (VB pose)
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBZ 's)
                      (NP
                        (NP (NNS meridians))
                        (PP (IN of)
                          (NP
                            (NP (NN longitude))
                            (PP (IN on)
                              (NP (DT the) (NNP EARTH)))))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Did-1)
nsubj(pose-5, you-2)
aux(pose-5, s-3)
ccomp(Did-1, pose-5)
expl('s-7, there-6)
ccomp(pose-5, 's-7)
nsubj('s-7, meridians-8)
prep_of(meridians-8, longitude-10)
det(EARTH-13, the-12)
prep_on(longitude-10, EARTH-13)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Tom) (NNP Sawyer))
      (, ,)
      (NP (PRP they))
      (VP (VBP 're)
        (VP (VBN set)
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (NN map))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP you))
        (VP (VBP know)
          (NP (PRP it))
          (ADVP (RB perfectly) (RB well))))
      (, ,)
      (CC and)
      (S
        (S
          (ADVP (RB here))
          (NP (PRP they))
          (VP (VBP are)))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB see)
              (PP (IN for)
                (NP (PRP yourself))))))))
    (. .) ('' '')))

nn(Sawyer-3, Tom-2)
nsubjpass(set-7, Sawyer-3)
nsubjpass(set-7, they-5)
auxpass(set-7, 're-6)
root(ROOT-0, set-7)
prt(set-7, down-8)
det(map-11, the-10)
prep_on(set-7, map-11)
nsubj(know-15, you-14)
conj_and(set-7, know-15)
dobj(know-15, it-16)
advmod(well-18, perfectly-17)
advmod(know-15, well-18)
advmod(are-23, here-21)
nsubj(are-23, they-22)
conj_and(set-7, are-23)
conj_and(know-15, are-23)
nsubj(see-28, you-26)
aux(see-28, can-27)
conj_and(know-15, see-28)
conj_and(are-23, see-28)
prep_for(see-28, yourself-30)

(ROOT
  (S (`` ``)
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (PRP they))
      (VP (VBP 're)
        (UCP
          (PP (IN on)
            (NP (DT the) (NN map)))
          (, ,)
          (CC but)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (NP (NN nothing))))))))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT any))
          (PP (IN on)
            (NP (DT the) (NNP GROUND))))))
    (. .) ('' '')))

prep_of('re-5, course-3)
nsubj('re-5, they-4)
root(ROOT-0, 're-5)
dep('re-5, on-6)
det(map-8, the-7)
pobj(on-6, map-8)
nsubj(nothing-13, that-11)
cop(nothing-13, 's-12)
dep('re-5, nothing-13)
conj_but(on-6, nothing-13)
expl(ai-16, there-15)
parataxis('re-5, ai-16)
neg(ai-16, n't-17)
nsubj(ai-16, any-18)
det(GROUND-21, the-20)
prep_on(any-18, GROUND-21)

(ROOT
  (S (`` ``)
    (NP (NNP Tom) (, ,))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)
            (SBAR (IN that)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADVP (RB so))))))))))
    (. ?) ('' '')))

nsubj(do-4, Tom-2)
root(ROOT-0, do-4)
nsubj(know-6, you-5)
nsubj(be-9, you-5)
ccomp(do-4, know-6)
mark(be-9, that-7)
aux(be-9, to-8)
ccomp(know-6, be-9)
xcomp(know-6, be-9)
advmod(be-9, so-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Certainly))
    (NP (PRP I))
    (VP (VBP do))
    (. .) ('' '')))

advmod(do-4, Certainly-2)
nsubj(do-4, I-3)
root(ROOT-0, do-4)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (DT that) (NN map))
    (VP (VBZ 's)
      (NP (DT a) (NN liar))
      (ADVP (RB again)))
    (. .)))

discourse(liar-10, Well-2)
advmod(liar-10, then-4)
det(map-7, that-6)
nsubj(liar-10, map-7)
cop(liar-10, 's-8)
det(liar-10, a-9)
root(ROOT-0, liar-10)
advmod(liar-10, again-11)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBP see)
      (NP (PDT such) (DT a) (NN liar))
      (PP (IN as)
        (NP (DT that) (NN map))))
    (. .) ('' '')))

nsubj(see-3, I-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
predet(liar-6, such-4)
det(liar-6, a-5)
dobj(see-3, liar-6)
det(map-9, that-8)
prep_as(see-3, map-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD fired)
        (PRT (RP up))
        (PP (IN at)
          (NP (DT that)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (VBD was)
          (ADJP (JJ ready)
            (PP (IN for)
              (NP (PRP him))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (NNP Jim))
          (VP (VBD was)
            (VP (VBG warming)
              (NP (PRP$ his) (NN opinion))))
          (, ,)
          (ADVP (RB too)))
        (, ,)
        (CC and)
        (S
          (NP (JJ next) (NN minute))
          (NP (PRP we))
          (VP
            (VP (VBD 'd)
              (NP (`` `)
                (NP (SYM a))
                ('' ')
                (SBAR
                  (S
                    (VP (VBD broke)
                      (ADVP (RB loose))
                      (PP (IN on)
                        (NP (DT another) (NN argument)))
                      (, ,)
                      (SBAR (IN if)
                        (S
                          (NP (NNP Tom))
                          (VP (VBD had) (RB n't)
                            (VP (VBN dropped)
                              (NP (DT the) (NN glass)))))))))))
            (CC and)
            (VP (VBN begun)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB clap)
                      (NP (PRP$ his) (NNS hands))
                      (PP (IN like)
                        (NP (DT a) (NN maniac))))
                    (CC and)
                    (VP (VB sing)
                      (PRT (RP out)))))))
            (: :) (`` ``)
            (VP (VBZ Camels))))))
    (. !)))

nsubj(fired-2, He-1)
root(ROOT-0, fired-2)
prt(fired-2, up-3)
prep_at(fired-2, that-5)
nsubj(ready-10, I-8)
cop(ready-10, was-9)
conj_and(fired-2, ready-10)
prep_for(ready-10, him-12)
nsubj(warming-17, Jim-15)
aux(warming-17, was-16)
conj_and(fired-2, warming-17)
conj_and(ready-10, warming-17)
poss(opinion-19, his-18)
dobj(warming-17, opinion-19)
advmod(warming-17, too-21)
amod(minute-25, next-24)
nsubj('d-27, minute-25)
nsubj(begun-45, minute-25)
nsubj(clap-47, minute-25)
nsubj('d-27, we-26)
conj_and(ready-10, 'd-27)
conj_and(warming-17, 'd-27)
dobj('d-27, a-29)
rcmod(a-29, broke-31)
advmod(broke-31, loose-32)
det(argument-35, another-34)
prep_on(broke-31, argument-35)
mark(dropped-41, if-37)
nsubj(dropped-41, Tom-38)
aux(dropped-41, had-39)
neg(dropped-41, n't-40)
advcl(broke-31, dropped-41)
det(glass-43, the-42)
dobj(dropped-41, glass-43)
conj_and(warming-17, begun-45)
conj_and('d-27, begun-45)
aux(clap-47, to-46)
xcomp(begun-45, clap-47)
poss(hands-49, his-48)
dobj(clap-47, hands-49)
det(maniac-52, a-51)
prep_like(clap-47, maniac-52)
xcomp(begun-45, sing-54)
conj_and(clap-47, sing-54)
prt(sing-54, out-55)
dep('d-27, Camels-58)

(ROOT
  (PRN (: --)
    (S
      (NP (NNP Camels))
      (VP (VBP !) ('' '')))))

nsubj(!-3, Camels-2)

(ROOT
  (S (IN So)
    (NP
      (NP (PRP I))
      (SBAR
        (S
          (VP
            (VP (VBD grabbed)
              (NP
                (NP (DT a) (NN glass))
                (CC and)
                (NP
                  (NP (NNP Jim))
                  (, ,)
                  (ADVP (RB too)))))
            (, ,)
            (CC and)
            (VP (VBD took)
              (NP (DT a) (NN look)))))))
    (, ,)
    (S (CC but)
      (NP (PRP I))
      (VP
        (VP (VBD was)
          (ADJP (JJ disappointed)))
        (, ,)
        (CC and)
        (VP (VBZ says))
        (: :) (`` ``)
        (VP (VBZ Camels)
          (NP (PRP$ your) (NN granny)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (ADJP (JJ spiders))))
    (. .) ('' '')))

dep(disappointed-19, So-1)
dep(disappointed-19, I-2)
rcmod(I-2, grabbed-3)
det(glass-5, a-4)
dobj(grabbed-3, glass-5)
dobj(grabbed-3, Jim-7)
conj_and(glass-5, Jim-7)
advmod(Jim-7, too-9)
rcmod(I-2, took-12)
conj_and(grabbed-3, took-12)
det(look-14, a-13)
dobj(took-12, look-14)
nsubj(disappointed-19, I-17)
nsubj(says-22, I-17)
nsubj(Camels-25, I-17)
cop(disappointed-19, was-18)
root(ROOT-0, disappointed-19)
conj_and(disappointed-19, says-22)
conj_and(disappointed-19, Camels-25)
poss(granny-27, your-26)
dobj(Camels-25, granny-27)
nsubj(spiders-31, they-29)
cop(spiders-31, 're-30)
parataxis(disappointed-19, spiders-31)

(ROOT
  (S (`` ``)
    (PP
      (NP (NNP Spiders))
      (IN in)
      (NP (DT a) (NN desert)))
    (, ,)
    (NP (PRP you))
    (VP (VBD shad))
    (. ?)))

dep(shad-8, Spiders-2)
det(desert-5, a-4)
prep_in(shad-8, desert-5)
nsubj(shad-8, you-7)
root(ROOT-0, shad-8)

(ROOT
  (NP
    (NP (NNS Spiders))
    (VP (VBG walking)
      (PP (IN in)
        (NP (DT a) (NN procession))))
    (. ?)))

root(ROOT-0, Spiders-1)
vmod(Spiders-1, walking-2)
det(procession-5, a-4)
prep_in(walking-2, procession-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (ADVP (RB ever))
        (VP (VB reflect))))
    (PRN (, ,)
      (NP (NNP Huck))
      (VP (VBZ Finn))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP reckon)
        (SBAR
          (S
            (NP (PRP you))
            (ADVP (RB really))
            (VP (VBP have) (RB n't)
              (VP (VBN got)
                (NP (NN anything))
                (S
                  (VP (TO to)
                    (VP (VB reflect)
                      (PP (IN WITH)))))))))))
    (. .)))

nsubj(reflect-5, You-1)
aux(reflect-5, do-2)
neg(reflect-5, n't-3)
advmod(reflect-5, ever-4)
root(ROOT-0, reflect-5)
nsubj(Finn-8, Huck-7)
dep(reflect-5, Finn-8)
nsubj(reckon-12, I-11)
conj_and(reflect-5, reckon-12)
nsubj(got-17, you-13)
advmod(got-17, really-14)
aux(got-17, have-15)
neg(got-17, n't-16)
ccomp(reckon-12, got-17)
dobj(got-17, anything-18)
aux(reflect-20, to-19)
vmod(got-17, reflect-20)
prep(reflect-20, WITH-21)

(ROOT
  (SQ (MD Do) (RB n't)
    (NP (PRP you))
    (VP (VB know)
      (SBAR
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (ADVP
                (NP
                  (QP (RB as) (JJ much) (IN as) (DT a))
                  (NN mile))
                (RB up))
              (PP (IN in)
                (NP (DT the) (NN air))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT that) (NN string))
              (PP (IN of)
                (NP (NNS crawlers))))
            (VP (VBZ is)
              (UCP
                (NP (CD two))
                (CC or)
                (ADVP
                  (NP (CD three) (NNS miles))
                  (RB away))))))))
    (. ?)))

aux(know-4, Do-1)
neg(know-4, n't-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
nsubj('re-6, we-5)
ccomp(know-4, 're-6)
advmod(as-9, as-7)
advmod(as-9, much-8)
quantmod(a-10, as-9)
num(mile-11, a-10)
npadvmod(up-12, mile-11)
advmod('re-6, up-12)
det(air-15, the-14)
prep_in('re-6, air-15)
mark(two-24, that-18)
det(string-20, that-19)
nsubj(two-24, string-20)
prep_of(string-20, crawlers-22)
cop(two-24, is-23)
ccomp(know-4, two-24)
conj_and('re-6, two-24)
num(miles-27, three-26)
npadvmod(away-28, miles-27)
conj_and('re-6, away-28)
advmod(two-24, away-28)
conj_or(two-24, away-28)

(ROOT
  (NP
    (NP (NNS Spiders))
    (, ,)
    (NP (JJ good) (NN land))
    (. !)))

root(ROOT-0, Spiders-1)
amod(land-4, good-3)
appos(Spiders-1, land-4)

(ROOT
  (NP
    (NP (NNS Spiders))
    (PP (IN as)
      (NP (JJ big)))
    (PP (IN as)
      (NP (DT a) (NN cow)))
    (. ?)))

root(ROOT-0, Spiders-1)
prep_as(Spiders-1, big-3)
det(cow-6, a-5)
prep_as(Spiders-1, cow-6)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD 'd)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP
              (VP (VB go)
                (PRT (RP down)))
              (CC and)
              (VP (VB milk)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP (PRP 'em))))))))))
    (. .)))

advmod(like-4, Perhaps-1)
nsubj(like-4, you-2)
nsubj(go-6, you-2)
nsubj(milk-9, you-2)
aux(like-4, 'd-3)
root(ROOT-0, like-4)
aux(go-6, to-5)
xcomp(like-4, go-6)
prt(go-6, down-7)
xcomp(like-4, milk-9)
conj_and(go-6, milk-9)
dobj(milk-9, one-10)
prep_of(one-10, 'em-12)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBP 're)
      (NP
        (NP (NNS camels))
        (, ,) (RB just)
        (NP (DT the) (JJ same))))
    (. .)))

cc(camels-4, But-1)
nsubj(camels-4, they-2)
cop(camels-4, 're-3)
root(ROOT-0, camels-4)
advmod(camels-4, just-6)
det(same-8, the-7)
dep(camels-4, same-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN caravan))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP it))
                    (VP (VBZ is))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP
          (NP (DT a) (NN mile))
          (JJ long))))
    (. .) ('' '')))

nsubj(caravan-4, It-1)
cop(caravan-4, 's-2)
det(caravan-4, a-3)
root(ROOT-0, caravan-4)
nsubj('s-7, caravan-4)
rcmod(caravan-4, 's-7)
dobj(is-10, what-8)
nsubj(is-10, it-9)
ccomp('s-7, is-10)
nsubj(long-17, it-13)
cop(long-17, 's-14)
det(mile-16, a-15)
npadvmod(long-17, mile-16)
conj_and(caravan-4, long-17)
nsubj('s-7, long-17)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (VP (VBP let)
      (S
        (NP (POS 's))
        (VP
          (VP (VB go)
            (PRT (RP down)))
          (CC and)
          (VP (VB look)
            (PP (IN at)
              (NP (PRP it)))))))
    (. .)))

discourse(let-6, Well-2)
advmod(let-6, then-4)
root(ROOT-0, let-6)
nsubj(go-8, 's-7)
nsubj(look-11, 's-7)
ccomp(let-6, go-8)
prt(go-8, down-9)
ccomp(let-6, look-11)
conj_and(go-8, look-11)
prep_at(look-11, it-13)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (PP (IN in)
            (NP (PRP it)))))
      (, ,)
      (CC and)
      (VP (VBP ai) (RB n't)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB till)
                (S
                  (NP (PRP I))
                  (VP
                    (VP (VB see)
                      (NP (PRP it)))
                    (CC and)
                    (VP (VB know)
                      (NP (PRP it)))))))))))
    (. .) ('' '')))

nsubj(believe-4, I-1)
nsubj(going-11, I-1)
nsubj(till-13, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
prep_in(believe-4, it-6)
aux(going-11, ai-9)
neg(going-11, n't-10)
conj_and(believe-4, going-11)
aux(till-13, to-12)
xcomp(going-11, till-13)
nsubj(see-15, I-14)
nsubj(know-18, I-14)
ccomp(till-13, see-15)
dobj(see-15, it-16)
ccomp(till-13, know-18)
conj_and(see-15, know-18)
dobj(know-18, it-19)

(ROOT
  (S (`` ``)
    (FRAG
      (ADVP (DT All) (NN right)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP
      (VP (VBZ says))
      (, ,)
      (CC and)
      (VP (VBP give)
        (NP (DT the) (NN command)))
      (: :) (`` ``)
      (VP (VBD Lower)
        (PRT (RP away))))
    (. .) ('' '')))

det(right-3, All-2)
dep(says-7, right-3)
nsubj(says-7, he-6)
nsubj(give-10, he-6)
nsubj(Lower-15, he-6)
root(ROOT-0, says-7)
conj_and(says-7, give-10)
det(command-12, the-11)
dobj(give-10, command-12)
conj_and(says-7, Lower-15)
prt(Lower-15, away-16)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP we))
          (VP (VBP come)
            (S
              (VP (VBG slanting)
                (PRT (RP down))
                (PP (IN into)
                  (NP (DT the) (JJ hot) (NN weather))))))))
      (, ,)
      (NP (PRP we))
      (VP (MD could)
        (VP (VB see)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (UCP
                  (ADJP (JJ camels))
                  (, ,)
                  (ADJP (JJ sure) (RB enough))
                  (, ,)
                  (ADJP (JJ plodding)
                    (PRT (RP along)))
                  (, ,)
                  (NP
                    (NP (DT an) (JJ everlasting) (NN string))
                    (PP (IN of)
                      (NP (PRP them))))
                  (, ,)))))
          (PP (IN with)
            (NP
              (NP
                (NP (NNS bales))
                (VP (VBN strapped)
                  (PP (TO to)
                    (NP (PRP them)))))
              (, ,)
              (CC and)
              (NP
                (NP
                  (QP (JJ several) (CD hundred))
                  (NNS men))
                (PP (IN in)
                  (NP (JJ long) (JJ white) (NNS robes)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (DT a) (NN thing))
          (PP (IN like)
            (NP (DT a) (NN shawl))))
        (VP
          (VP (VBN bound)
            (PP (IN over)
              (NP (PRP$ their) (NNS heads))))
          (CC and)
          (VP (VBG hanging)
            (PRT (RP down))
            (PP (IN with)
              (NP (NNS tassels)
                (CC and)
                (NNS fringes))))))
      (: ;)
      (CC and)
      (S
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (DT the) (NNS men))))
        (VP (VBD had)
          (NP (JJ long) (NNS guns))))
      (CC and)
      (S
        (S
          (NP (DT some))
          (VP (VBD had) (RB n't)))
        (, ,)
        (CC and)
        (S
          (NP (DT some))
          (VP (VBD was)
            (VP (VBG riding)))))
      (CC and)
      (S
        (NP (DT some))
        (VP (VBD was)
          (VP (VBG walking)))))
    (. .)))

mark(come-3, As-1)
nsubj(come-3, we-2)
advcl(see-13, come-3)
xcomp(come-3, slanting-4)
prt(slanting-4, down-5)
det(weather-9, the-7)
amod(weather-9, hot-8)
prep_into(slanting-4, weather-9)
nsubj(see-13, we-11)
aux(see-13, could-12)
root(ROOT-0, see-13)
mark(camels-17, that-14)
nsubj(camels-17, it-15)
cop(camels-17, was-16)
ccomp(see-13, camels-17)
dep(camels-17, sure-19)
advmod(sure-19, enough-20)
dep(camels-17, plodding-22)
dep(plodding-22, along-23)
det(string-27, an-25)
amod(string-27, everlasting-26)
dep(camels-17, string-27)
prep_of(string-27, them-29)
prep_with(see-13, bales-32)
vmod(bales-32, strapped-33)
prep_to(strapped-33, them-35)
quantmod(hundred-39, several-38)
num(men-40, hundred-39)
prep_with(see-13, men-40)
conj_and(bales-32, men-40)
amod(robes-44, long-42)
amod(robes-44, white-43)
prep_in(men-40, robes-44)
det(thing-48, a-47)
nsubj(bound-52, thing-48)
nsubj(hanging-57, thing-48)
det(shawl-51, a-50)
prep_like(thing-48, shawl-51)
conj_and(see-13, bound-52)
poss(heads-55, their-54)
prep_over(bound-52, heads-55)
conj_and(see-13, hanging-57)
conj_and(bound-52, hanging-57)
prt(hanging-57, down-58)
prep_with(hanging-57, tassels-60)
prep_with(hanging-57, fringes-62)
conj_and(tassels-60, fringes-62)
nsubj(had-69, some-65)
det(men-68, the-67)
prep_of(some-65, men-68)
conj_and(see-13, had-69)
conj_and(bound-52, had-69)
amod(guns-71, long-70)
dobj(had-69, guns-71)
nsubj(had-74, some-73)
conj_and(see-13, had-74)
conj_and(bound-52, had-74)
neg(had-74, n't-75)
nsubj(riding-80, some-78)
aux(riding-80, was-79)
conj_and(bound-52, riding-80)
conj_and(had-74, riding-80)
nsubj(walking-84, some-82)
aux(walking-84, was-83)
conj_and(see-13, walking-84)
conj_and(bound-52, walking-84)

(ROOT
  (S (CC And)
    (NP
      (NP (DT the) (NN weather))
      (PRN (: --)
        (FRAG
          (INTJ (UH well))
          (, ,)
          (NP (PRP it)))))
    (VP (VBD was)
      (ADVP (RB just))
      (VP (VBG roasting)))
    (. .)))

cc(roasting-10, And-1)
det(weather-3, the-2)
nsubj(roasting-10, weather-3)
discourse(it-7, well-5)
dep(weather-3, it-7)
aux(roasting-10, was-8)
advmod(roasting-10, just-9)
root(ROOT-0, roasting-10)

(ROOT
  (FRAG (CC And)
    (SBAR
      (WHADJP (WRB how) (JJ slow))
      (S
        (NP (PRP they))
        (VP (VBD did)
          (NP (NN creep))
          (ADVP (RB along)))))
    (. !)))

cc(did-5, And-1)
advmod(slow-3, how-2)
dep(did-5, slow-3)
nsubj(did-5, they-4)
root(ROOT-0, did-5)
dobj(did-5, creep-6)
advmod(did-5, along-7)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD swooped)
        (PRT (RP down))
        (ADVP (RB now)))
      (, ,)
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (DT a) (JJ sudden))))
      (, ,)
      (CC and)
      (VP (VBD stopped)
        (PP
          (NP
            (QP (RB about) (DT a) (CD hundred))
            (NNS yards))
          (IN over)
          (NP (PRP$ their) (NNS heads)))))
    (. .)))

nsubj(swooped-2, We-1)
nsubj(stopped-12, We-1)
root(ROOT-0, swooped-2)
prt(swooped-2, down-3)
advmod(swooped-2, now-4)
conj_and(swooped-2, all-6)
dobj(swooped-2, all-6)
det(sudden-9, a-8)
prep_of(all-6, sudden-9)
conj_and(swooped-2, stopped-12)
quantmod(hundred-15, about-13)
quantmod(hundred-15, a-14)
num(yards-16, hundred-15)
npadvmod(stopped-12, yards-16)
poss(heads-19, their-18)
prep_over(stopped-12, heads-19)

(ROOT
  (S
    (S
      (NP (DT The) (NNS men))
      (ADVP (DT all))
      (VP (VB set)
        (PRT (RP up))
        (NP (DT a) (NN yell))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT some))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD fell)
        (ADJP (JJ flat))
        (PP (IN on)
          (NP
            (NP (PRP$ their) (NNS stomachs))
            (, ,)
            (NP
              (NP
                (NP (DT some))
                (VP (VBN begun)
                  (S
                    (VP (TO to)
                      (VP (VB fire)
                        (NP (PRP$ their) (NNS guns))
                        (PP (IN at)
                          (NP (PRP us))))))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NN rest))
                (VP (VBD broke))))
            (CC and)
            (NP
              (NP (JJ scampered) (DT every))
              (SBAR
                (WHNP
                  (WHNP (WDT which) (NN way))
                  (PRN (, ,)
                    (CC and)
                    (ADVP (RB so))))
                (S
                  (VP (VBD did)
                    (NP (DT the) (NNS camels))))))))))
    (. .)))

det(men-2, The-1)
nsubj(set-4, men-2)
advmod(set-4, all-3)
root(ROOT-0, set-4)
prt(set-4, up-5)
det(yell-7, a-6)
dobj(set-4, yell-7)
nsubj(fell-13, some-10)
prep_of(some-10, them-12)
conj_and(set-4, fell-13)
acomp(fell-13, flat-14)
poss(stomachs-17, their-16)
prep_on(fell-13, stomachs-17)
prep_on(fell-13, some-19)
conj_and(stomachs-17, some-19)
vmod(some-19, begun-20)
aux(fire-22, to-21)
xcomp(begun-20, fire-22)
poss(guns-24, their-23)
dobj(fire-22, guns-24)
prep_at(fire-22, us-26)
det(rest-30, the-29)
conj_and(stomachs-17, rest-30)
conj_and(some-19, rest-30)
vmod(rest-30, broke-31)
amod(every-34, scampered-33)
prep_on(fell-13, every-34)
conj_and(stomachs-17, every-34)
det(way-36, every-34)
nsubj(did-40, way-36)
cc(so-39, and-38)
dep(way-36, so-39)
rcmod(every-34, did-40)
det(camels-42, the-41)
dobj(did-40, camels-42)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP see)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBD was)
              (VP (VBG making)
                (NP (NN trouble))))))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (VP
        (VP (VBD went)
          (PRT (RP up))
          (ADVP (RB again)
            (PP (IN about)
              (NP (DT a) (NN mile))))
          (, ,)
          (PP (TO to)
            (NP (DT the) (JJ cool) (NN weather))))
        (, ,)
        (CC and)
        (VP (VBD watched)
          (NP (PRP them))
          (PP (IN from)
            (NP (RB there))))))
    (. .)))

nsubj(see-2, We-1)
root(ROOT-0, see-2)
mark(making-6, that-3)
nsubj(making-6, we-4)
aux(making-6, was-5)
ccomp(see-2, making-6)
dobj(making-6, trouble-7)
dep(see-2, so-9)
nsubj(went-11, we-10)
nsubj(watched-24, we-10)
parataxis(see-2, went-11)
prt(went-11, up-12)
advmod(went-11, again-13)
det(mile-16, a-15)
prep_about(again-13, mile-16)
det(weather-21, the-19)
amod(weather-21, cool-20)
prep_to(went-11, weather-21)
parataxis(see-2, watched-24)
conj_and(went-11, watched-24)
dobj(watched-24, them-25)
prep(watched-24, from-26)
pobj(from-26, there-27)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD took)
          (NP (PRP them))
          (NP (DT an) (NN hour))
          (S
            (VP (TO to)
              (VP
                (VP (VB get)
                  (ADVP (RB together)))
                (CC and)
                (VP (VB form)
                  (NP (DT the) (NN procession))
                  (ADVP (RB again))))))))
      (: ;) (RB then)
      (S
        (NP (PRP they))
        (VP (VBD started)
          (PRT (RP along)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD could)
        (VP (VB see)
          (PP (IN by)
            (NP (DT the) (NNS glasses)))
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBD was) (RB n't)
                (VP (VBG paying)
                  (NP (JJ much) (NN attention))
                  (PP (TO to)
                    (NP
                      (NP (NN anything))
                      (PP (CC but)
                        (NP (PRP us))))))))))))
    (. .)))

nsubj(took-2, It-1)
root(ROOT-0, took-2)
iobj(took-2, them-3)
det(hour-5, an-4)
dobj(took-2, hour-5)
aux(get-7, to-6)
vmod(took-2, get-7)
advmod(get-7, together-8)
vmod(took-2, form-10)
conj_and(get-7, form-10)
det(procession-12, the-11)
dobj(form-10, procession-12)
advmod(form-10, again-13)
advmod(took-2, then-15)
nsubj(started-17, they-16)
parataxis(took-2, started-17)
prt(started-17, along-18)
nsubj(see-23, we-21)
aux(see-23, could-22)
conj_but(took-2, see-23)
det(glasses-26, the-25)
prep_by(see-23, glasses-26)
mark(paying-31, that-27)
nsubj(paying-31, they-28)
aux(paying-31, was-29)
neg(paying-31, n't-30)
ccomp(see-23, paying-31)
amod(attention-33, much-32)
dobj(paying-31, attention-33)
prep_to(paying-31, anything-35)
prep(anything-35, but-36)
pobj(but-36, us-37)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD poked)
        (ADVP (RB along))
        (, ,)
        (S
          (VP (VBG looking)
            (PRT (RP down))
            (PP (IN at)
              (NP (PRP them)))
            (PP (IN with)
              (NP (DT the) (NNS glasses)))))))
    (, ,)
    (CC and)
    (S
      (PP
        (PP (IN by))
        (CC and)
        (PP (IN by)
          (S
            (S
              (NP (PRP we))
              (VP (VBP see)
                (NP
                  (NP (DT a) (JJ big) (NN sand) (NN mound))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (NN something))
                    (PP (IN like)
                      (NP (NNS people)))))
                (NP
                  (NP (DT the) (JJ other) (NN side))
                  (PP (IN of)
                    (NP (PRP it))))))
            (, ,)
            (CC and)
            (S
              (NP (EX there))
              (VP
                (VP (VBD was)
                  (NP (NN something))
                  (PP (IN like)
                    (NP
                      (NP (DT a) (NN man))
                      (VP (VBG laying)
                        (PP (IN on)
                          (NP
                            (NP (NN top))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN mound))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD raised)
                                      (NP (PRP$ his) (NN head))
                                      (PRT (RP up))
                                      (ADVP (DT every) (RB now)
                                        (CC and)
                                        (RB then)))))))))))))
                (, ,)
                (CC and)
                (VP (VBD seemed)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBG watching)
                          (NP
                            (NP (DT the) (NN caravan))
                            (CC or)
                            (NP (PRP us)))))))))))))
      (, ,)
      (NP (PRP we))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (WHNP (WDT which)))))
    (. .)))

nsubj(poked-2, We-1)
root(ROOT-0, poked-2)
advmod(poked-2, along-3)
xcomp(poked-2, looking-5)
prt(looking-5, down-6)
prep_at(looking-5, them-8)
det(glasses-11, the-10)
prep_with(looking-5, glasses-11)
prep(know-70, by-14)
conj_and(by-14, by-16)
prep(know-70, by-16)
nsubj(see-18, we-17)
pcomp(by-16, see-18)
det(mound-22, a-19)
amod(mound-22, big-20)
nn(mound-22, sand-21)
iobj(see-18, mound-22)
iobj(see-18, something-25)
conj_and(mound-22, something-25)
prep_like(something-25, people-27)
det(side-30, the-28)
amod(side-30, other-29)
dobj(see-18, side-30)
prep_of(side-30, it-32)
expl(something-37, there-35)
cop(something-37, was-36)
pcomp(by-16, something-37)
conj_and(see-18, something-37)
det(man-40, a-39)
prep_like(something-37, man-40)
vmod(man-40, laying-41)
det(mound-46, the-45)
prep_on_top_of(laying-41, mound-46)
nsubj(raised-48, mound-46)
rcmod(mound-46, raised-48)
poss(head-50, his-49)
dobj(raised-48, head-50)
prt(raised-48, up-51)
dep(now-53, every-52)
advmod(raised-48, now-53)
advmod(raised-48, then-55)
conj_and(now-53, then-55)
conj_and(see-18, seemed-58)
conj_and(something-37, seemed-58)
aux(watching-61, to-59)
aux(watching-61, be-60)
xcomp(seemed-58, watching-61)
det(caravan-63, the-62)
dobj(watching-61, caravan-63)
dobj(watching-61, us-65)
conj_or(caravan-63, us-65)
nsubj(know-70, we-67)
aux(know-70, did-68)
neg(know-70, n't-69)
conj_and(poked-2, know-70)
dobj(know-70, which-71)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (DT the) (NN caravan))
          (VP (VBD got)
            (NP (NNS nearer)))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD sneaked)
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (JJ other) (NN side))))
        (CC and)
        (VP (VBD rushed)
          (PP (TO to)
            (NP (DT the) (JJ other) (NNS men)
              (CC and)
              (NNS horses))))))
    (PRN (: --)
      (PP (IN for)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP they))
                  (VP (VBD was))))))))
      (: --))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP them))
            (VP (VBP mount)
              (PP (IN in)
                (NP (DT a) (NN hurry))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB next))
      (, ,)
      (ADVP (RB here))
      (NP (PRP they))
      (VP (VBP come) (, ,)
        (PP (IN like)
          (NP
            (NP (DT a) (NN house))
            (ADVP (RB afire))))
        (, ,)
        (NP
          (NP
            (NP (DT some))
            (PP (IN with)
              (NP (NNS lances))))
          (CC and)
          (NP
            (NP (DT some))
            (PP (IN with)
              (NP (JJ long) (NNS guns))))
          (, ,)
          (CC and)
          (NP
            (NP (DT all))
            (PP (IN of)
              (S
                (NP (PRP them))
                (VP (VBG yelling)
                  (NP
                    (NP (DT the) (JJS best))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (MD could))))))))))))
    (. .)))

mark(got-4, As-1)
det(caravan-3, the-2)
nsubj(got-4, caravan-3)
advcl(sneaked-8, got-4)
dobj(got-4, nearer-5)
nsubj(sneaked-8, he-7)
nsubj(rushed-15, he-7)
root(ROOT-0, sneaked-8)
prt(sneaked-8, down-9)
det(side-13, the-11)
amod(side-13, other-12)
prep_on(sneaked-8, side-13)
conj_and(sneaked-8, rushed-15)
det(men-19, the-17)
amod(men-19, other-18)
prep_to(rushed-15, men-19)
prep_to(rushed-15, horses-21)
conj_and(men-19, horses-21)
dep(sneaked-8, for-23)
nsubj(is-25, that-24)
pcomp(for-23, is-25)
dobj(was-28, what-26)
nsubj(was-28, they-27)
ccomp(is-25, was-28)
nsubj(see-32, we-31)
conj_and(sneaked-8, see-32)
nsubj(mount-34, them-33)
ccomp(see-32, mount-34)
det(hurry-37, a-36)
prep_in(mount-34, hurry-37)
advmod(come-44, next-40)
advmod(come-44, here-42)
nsubj(come-44, they-43)
conj_and(sneaked-8, come-44)
det(house-48, a-47)
prep_like(come-44, house-48)
advmod(house-48, afire-49)
dobj(come-44, some-51)
prep_with(some-51, lances-53)
dobj(come-44, some-55)
conj_and(some-51, some-55)
amod(guns-58, long-57)
prep_with(some-55, guns-58)
dobj(come-44, all-61)
conj_and(some-51, all-61)
nsubj(yelling-64, them-63)
prepc_of(all-61, yelling-64)
det(best-66, the-65)
dobj(yelling-64, best-66)
nsubj(could-68, they-67)
rcmod(best-66, could-68)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP come)
        (S
          (VP (VBG a-tearing)
            (PRT (RP down))
            (PP (IN on)
              (PP (TO to)
                (NP (DT the) (NN caravan))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (JJ next) (NN minute))
        (NP (DT both) (NNS sides))
        (VP
          (VP (VBD crashed)
            (ADVP (RB together)))
          (CC and)
          (VP (VBD was)
            (ADJP (RB all) (VBN mixed)
              (PRT (RP up))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP
              (NP (PDT such) (DT another) (NN popping))
              (PP (IN of)
                (NP (NNS guns))))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (ADVP (RB never))
                (VP (VBD heard))))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN air))
          (VP (VBD got)
            (ADJP (RB so) (JJ full)
              (PP (IN of)
                (NP (NN smoke))))
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD could)
                  (ADVP (RB only))
                  (VP (VB catch)
                    (NP
                      (NP (NNS glimpses))
                      (PP (IN of)
                        (S
                          (NP (PRP them))
                          (VP (VBG struggling)
                            (ADVP (RB together))))))))))))))
    (. .)))

nsubj(come-2, They-1)
root(ROOT-0, come-2)
xcomp(come-2, a-tearing-3)
prt(a-tearing-3, down-4)
prep(a-tearing-3, on-5)
pcomp(on-5, to-6)
det(caravan-8, the-7)
pobj(to-6, caravan-8)
det(minute-13, the-11)
amod(minute-13, next-12)
nsubj(crashed-16, minute-13)
nsubjpass(mixed-21, minute-13)
det(sides-15, both-14)
nsubj(crashed-16, sides-15)
conj_and(come-2, crashed-16)
advmod(crashed-16, together-17)
auxpass(mixed-21, was-19)
advmod(mixed-21, all-20)
conj_and(come-2, mixed-21)
conj_and(crashed-16, mixed-21)
dep(mixed-21, up-22)
expl(was-26, there-25)
conj_and(come-2, was-26)
conj_and(crashed-16, was-26)
predet(popping-29, such-27)
det(popping-29, another-28)
nsubj(was-26, popping-29)
prep_of(popping-29, guns-31)
mark(heard-35, as-32)
nsubj(heard-35, you-33)
neg(heard-35, never-34)
advcl(was-26, heard-35)
det(air-39, the-38)
nsubj(full-42, air-39)
dep(full-42, got-40)
advmod(full-42, so-41)
conj_and(crashed-16, full-42)
conj_and(was-26, full-42)
prep_of(full-42, smoke-44)
nsubj(catch-48, you-45)
aux(catch-48, could-46)
advmod(catch-48, only-47)
ccomp(full-42, catch-48)
dobj(catch-48, glimpses-49)
nsubj(struggling-52, them-51)
prepc_of(glimpses-49, struggling-52)
advmod(struggling-52, together-53)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD must)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN been)
              (NP
                (NP
                  (QP (CD six) (CD hundred))
                  (NNS men))
                (PP (IN in)
                  (NP (DT that) (NN battle)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ terrible)
          (S
            (VP (TO to)
              (VP (VB see)))))))
    (. .)))

expl(must-2, There-1)
root(ROOT-0, must-2)
dep(must-2, a-4)
cop(men-9, been-6)
number(hundred-8, six-7)
num(men-9, hundred-8)
vmod(a-4, men-9)
det(battle-12, that-11)
prep_in(men-9, battle-12)
nsubj(terrible-17, it-15)
nsubj(see-19, it-15)
cop(terrible-17, was-16)
conj_and(must-2, terrible-17)
aux(see-19, to-18)
xcomp(terrible-17, see-19)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP they))
      (VP (VBD broke)
        (PRT (RP up))
        (PP (IN into)
          (NP (NNS gangs)
            (CC and)
            (NNS groups)))
        (, ,)
        (S
          (VP
            (VP (VBG fighting)
              (ADVP (NN tooth)
                (CC and)
                (NN nail)))
            (, ,)
            (CC and)
            (VP (VBG scurrying)
              (CC and)
              (VBG scampering)
              (ADVP (RB around)))
            (, ,)
            (CC and)
            (VP (VBG laying)
              (PP (IN into)
                (NP (DT each) (JJ other) (JJ like) (NN everything))))))))
    (: ;)
    (CC and)
    (S
      (S
        (SBAR
          (WHADVP (WRB whenever))
          (S
            (NP (DT the) (NN smoke))
            (VP (VBD cleared)
              (NP (DT a) (JJ little)))))
        (NP (PRP you))
        (VP (MD could)
          (VP (VB see)
            (NP
              (NP
                (NP
                  (ADJP (JJ dead)
                    (CC and)
                    (JJ wounded))
                  (NNS people)
                  (CC and)
                  (NNS camels))
                (VP (VBN scattered)
                  (S
                    (ADJP (JJ far)
                      (CC and)
                      (JJ wide)))))
              (CC and)
              (ADVP (DT all) (IN about))))))
      (, ,)
      (CC and)
      (S
        (NP (NNS camels))
        (VP (VBG racing)
          (PRT (RP off))
          (PP (IN in)
            (NP (DT every) (NN direction))))))
    (. .)))

advmod(broke-3, Then-1)
nsubj(broke-3, they-2)
root(ROOT-0, broke-3)
prt(broke-3, up-4)
prep_into(broke-3, gangs-6)
prep_into(broke-3, groups-8)
conj_and(gangs-6, groups-8)
ccomp(broke-3, fighting-10)
advmod(fighting-10, tooth-11)
advmod(fighting-10, nail-13)
conj_and(tooth-11, nail-13)
ccomp(broke-3, scurrying-16)
conj_and(fighting-10, scurrying-16)
conj_and(fighting-10, scampering-18)
conj_and(scurrying-16, scampering-18)
advmod(scurrying-16, around-19)
ccomp(broke-3, laying-22)
conj_and(fighting-10, laying-22)
det(everything-27, each-24)
amod(everything-27, other-25)
amod(everything-27, like-26)
prep_into(laying-22, everything-27)
advmod(cleared-33, whenever-30)
det(smoke-32, the-31)
nsubj(cleared-33, smoke-32)
advcl(see-38, cleared-33)
det(little-35, a-34)
dobj(cleared-33, little-35)
nsubj(see-38, you-36)
aux(see-38, could-37)
conj_and(broke-3, see-38)
amod(people-42, dead-39)
conj_and(dead-39, wounded-41)
amod(people-42, wounded-41)
dobj(see-38, people-42)
dobj(see-38, camels-44)
conj_and(people-42, camels-44)
vmod(people-42, scattered-45)
acomp(scattered-45, far-46)
acomp(scattered-45, wide-48)
conj_and(far-46, wide-48)
dep(about-51, all-50)
dobj(see-38, about-51)
advmod(people-42, about-51)
conj_and(people-42, about-51)
nsubj(racing-55, camels-54)
conj_and(broke-3, racing-55)
conj_and(see-38, racing-55)
prt(racing-55, off-56)
det(direction-59, every-58)
prep_in(racing-55, direction-59)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (JJ last)))
      (NP (DT the) (NNS robbers))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD could) (RB n't)
              (VP (VB win)))))))
    (, ,) (IN so)
    (S
      (NP (PRP$ their) (NN chief))
      (VP (VBD sounded)
        (NP (DT a) (NN signal))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (VP (VBN left)
                (PP (IN of)
                  (NP (PRP them))))))))
      (VP
        (VP (VBD broke)
          (PRT (RP away)))
        (CC and)
        (VP (VBD went)
          (S
            (VP (VBG scampering)
              (PP (IN across)
                (NP (DT the) (NN plain))))))))
    (. .)))

prep_at(see-5, last-2)
det(robbers-4, the-3)
nsubj(see-5, robbers-4)
root(ROOT-0, see-5)
nsubj(win-9, they-6)
aux(win-9, could-7)
neg(win-9, n't-8)
ccomp(see-5, win-9)
dep(see-5, so-11)
poss(chief-13, their-12)
nsubj(sounded-14, chief-13)
ccomp(see-5, sounded-14)
det(signal-16, a-15)
dobj(sounded-14, signal-16)
nsubjpass(left-22, all-19)
nsubj(broke-25, all-19)
nsubj(went-28, all-19)
auxpass(left-22, was-21)
rcmod(all-19, left-22)
prep_of(left-22, them-24)
conj_and(see-5, broke-25)
prt(broke-25, away-26)
conj_and(see-5, went-28)
conj_and(broke-25, went-28)
xcomp(went-28, scampering-29)
det(plain-32, the-31)
prep_across(scampering-29, plain-32)

(ROOT
  (S
    (S
      (NP (DT The) (JJ last) (NN man)
        (S
          (VP (TO to)
            (VP (VB go)))))
      (VP
        (VP (VBD snatched)
          (PRT (RP up))
          (NP (DT a) (NN child)))
        (CC and)
        (VP (VBD carried)
          (NP (PRP it))
          (PRT (RP off))
          (PP (IN in)
            (NP
              (NP (NN front))
              (PP (IN of)
                (NP (PRP him)))))
          (PP (IN on)
            (NP (PRP$ his) (NN horse))))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN woman))
      (VP
        (VP (VBP run)
          (S
            (VP (VBG screaming)
              (CC and)
              (VBG begging)
              (PP (IN after)
                (NP (PRP him))))))
        (, ,)
        (CC and)
        (VP (VBD followed)
          (NP (PRP him))
          (ADVP
            (ADVP (RB away) (RB off))
            (PP (IN across)
              (NP (DT the) (NN plain))))
          (SBAR (IN till)
            (S
              (NP (PRP she))
              (VP (VBD was)
                (VP (VBN separated)
                  (NP (DT a) (JJ long) (NNS ways))
                  (PP (IN from)
                    (NP (PRP$ her) (NNS people))))))))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBD war) (RB n't)
          (NP (DT no) (NN use))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP she))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB give)
                  (NP (PRP it))
                  (PRT (RP up)))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP we))
          (VP (VBP see)
            (S
              (NP (PRP her))
              (VP
                (VP (VB sink)
                  (PRT (RP down))
                  (PP (IN on)
                    (NP (DT the) (NN sand))))
                (CC and)
                (VP (VB cover)
                  (NP (PRP$ her) (NN face))
                  (PP (IN with)
                    (NP (PRP$ her) (NNS hands))))))))))
    (. .)))

det(man-3, The-1)
amod(man-3, last-2)
nsubj(snatched-6, man-3)
nsubj(carried-11, man-3)
aux(go-5, to-4)
vmod(man-3, go-5)
root(ROOT-0, snatched-6)
prt(snatched-6, up-7)
det(child-9, a-8)
dobj(snatched-6, child-9)
conj_and(snatched-6, carried-11)
dobj(carried-11, it-12)
prt(carried-11, off-13)
prep_in_front_of(carried-11, him-17)
poss(horse-20, his-19)
prep_on(carried-11, horse-20)
det(woman-24, a-23)
nsubj(run-25, woman-24)
nsubj(followed-33, woman-24)
conj_and(snatched-6, run-25)
xcomp(run-25, screaming-26)
xcomp(run-25, begging-28)
conj_and(screaming-26, begging-28)
prep_after(screaming-26, him-30)
conj_and(snatched-6, followed-33)
conj_and(run-25, followed-33)
dobj(followed-33, him-34)
advmod(off-36, away-35)
advmod(followed-33, off-36)
det(plain-39, the-38)
prep_across(off-36, plain-39)
mark(separated-43, till-40)
nsubjpass(separated-43, she-41)
auxpass(separated-43, was-42)
advcl(followed-33, separated-43)
det(ways-46, a-44)
amod(ways-46, long-45)
dobj(separated-43, ways-46)
poss(people-49, her-48)
prep_from(separated-43, people-49)
nsubj(war-53, it-52)
conj_but(snatched-6, war-53)
neg(war-53, n't-54)
neg(use-56, no-55)
dobj(war-53, use-56)
nsubj(had-60, she-59)
nsubj(give-62, she-59)
conj_but(snatched-6, had-60)
conj_and(war-53, had-60)
aux(give-62, to-61)
xcomp(had-60, give-62)
dobj(give-62, it-63)
prt(give-62, up-64)
nsubj(see-68, we-67)
conj_and(war-53, see-68)
conj_and(had-60, see-68)
nsubj(sink-70, her-69)
nsubj(cover-76, her-69)
ccomp(see-68, sink-70)
prt(sink-70, down-71)
det(sand-74, the-73)
prep_on(sink-70, sand-74)
ccomp(see-68, cover-76)
conj_and(sink-70, cover-76)
poss(face-78, her-77)
dobj(cover-76, face-78)
poss(hands-81, her-80)
prep_with(cover-76, hands-81)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (NNP Tom))
        (VP
          (VP (VBD took)
            (NP (DT the) (NN hellum)))
          (, ,)
          (CC and)
          (VP (VBD started)
            (PP (IN for)
              (NP (DT that) (NN yahoo))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP
          (VP (VBP come)
            (NP (NN a-whizzing))
            (PRT (RP down)))
          (CC and)
          (VP (VBD made)
            (NP (DT a) (NN swoop)))
          (, ,)
          (CC and)
          (VP (VBD knocked)
            (NP (PRP him))
            (PRT (RP out))
            (PP (IN of)
              (NP
                (NP (DT the) (NN saddle))
                (, ,)
                (NP (NN child))
                (CC and)
                (NP (DT all)))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBN jarred)
            (S
              (ADJP (JJ considerable)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN child))
      (VP
        (VP (VBD was) (RB n't)
          (VP (VBN hurt)))
        (, ,)
        (CC but)
        (VP (VBD laid)
          (S
            (NP (EX there))
            (VP (VBG working)
              (NP (PRP$ its) (NNS hands)
                (CC and)
                (NNS legs))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN air))
                  (PP (IN like)
                    (NP
                      (NP (DT a) (NN tumble-bug))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ 's)
                            (PP (IN on)
                              (NP (PRP$ its) (NN back)))))))))))))
        (CC and)
        (VP (MD ca) (RB n't)
          (VP (VB turn)
            (PRT (RP over))))))
    (. .)))

advmod(took-3, Then-1)
nsubj(took-3, Tom-2)
nsubj(started-8, Tom-2)
root(ROOT-0, took-3)
det(hellum-5, the-4)
dobj(took-3, hellum-5)
conj_and(took-3, started-8)
det(yahoo-11, that-10)
prep_for(started-8, yahoo-11)
nsubj(come-15, we-14)
nsubj(made-19, we-14)
nsubj(knocked-24, we-14)
conj_and(took-3, come-15)
dobj(come-15, a-whizzing-16)
prt(come-15, down-17)
conj_and(took-3, made-19)
conj_and(come-15, made-19)
det(swoop-21, a-20)
dobj(made-19, swoop-21)
conj_and(took-3, knocked-24)
conj_and(come-15, knocked-24)
dobj(knocked-24, him-25)
det(saddle-29, the-28)
prep_out_of(knocked-24, saddle-29)
prep_out_of(knocked-24, child-31)
conj_and(saddle-29, child-31)
prep_out_of(knocked-24, all-33)
conj_and(saddle-29, all-33)
nsubjpass(jarred-38, he-36)
auxpass(jarred-38, was-37)
conj_and(took-3, jarred-38)
xcomp(jarred-38, considerable-39)
det(child-43, the-42)
nsubjpass(hurt-46, child-43)
nsubjpass(laid-49, child-43)
nsubj(turn-70, child-43)
auxpass(hurt-46, was-44)
neg(hurt-46, n't-45)
conj_but(took-3, hurt-46)
conj_but(took-3, laid-49)
conj_but(hurt-46, laid-49)
expl(working-51, there-50)
dep(laid-49, working-51)
poss(hands-53, its-52)
dobj(working-51, hands-53)
nsubj(working-51, hands-53)
dobj(working-51, legs-55)
nsubj(working-51, legs-55)
conj_and(hands-53, legs-55)
det(air-58, the-57)
prep_in(working-51, air-58)
det(tumble-bug-61, a-60)
prep_like(air-58, tumble-bug-61)
nsubj('s-63, tumble-bug-61)
rcmod(tumble-bug-61, 's-63)
poss(back-66, its-65)
prep_on('s-63, back-66)
aux(turn-70, ca-68)
neg(turn-70, n't-69)
conj_but(took-3, turn-70)
conj_and(hurt-46, turn-70)
prt(turn-70, over-71)

(ROOT
  (S
    (NP (DT The) (NN man))
    (VP
      (VP (VBD went)
        (S
          (VP (VBG staggering)
            (PRT (RP off))
            (S
              (VP (TO to)
                (VP (VB overtake)
                  (NP (PRP$ his) (NN horse))))))))
      (, ,)
      (CC and)
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD had)
                (VP (VBN hit)
                  (NP (PRP him))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP we))
                      (VP (VBD was)
                        (NP
                          (NP
                            (QP (CD three)
                              (CC or)
                              (CD four)))
                          (ADVP
                            (NP (CD hundred) (NNS yards))
                            (RB up)
                            (PP (IN in)
                              (NP (DT the) (NN air)))))
                        (PP (IN by)
                          (NP (DT this) (NN time)))))))))))))
    (. .)))

det(man-2, The-1)
nsubj(went-3, man-2)
nsubj(know-14, man-2)
root(ROOT-0, went-3)
xcomp(went-3, staggering-4)
prt(staggering-4, off-5)
aux(overtake-7, to-6)
xcomp(staggering-4, overtake-7)
poss(horse-9, his-8)
dobj(overtake-7, horse-9)
aux(know-14, did-12)
neg(know-14, n't-13)
conj_and(went-3, know-14)
nsubj(hit-17, what-15)
aux(hit-17, had-16)
ccomp(know-14, hit-17)
dobj(hit-17, him-18)
mark(three-23, for-20)
nsubj(three-23, we-21)
cop(three-23, was-22)
advcl(hit-17, three-23)
advcl(hit-17, four-25)
conj_or(three-23, four-25)
num(yards-27, hundred-26)
npadvmod(up-28, yards-27)
advmod(three-23, up-28)
det(air-31, the-30)
prep_in(up-28, air-31)
det(time-34, this-33)
prep_by(three-23, time-34)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBN judged)
      (S
        (S
          (NP (DT the) (NN woman))
          (VP (MD would)
            (VP (VB go)
              (CC and)
              (VB get)
              (NP (DT the) (NN child))
              (ADVP (RB now)))))
        (: ;)
        (CC but)
        (S
          (NP (PRP she))
          (VP (VBD did) (RB n't)))))
    (. .)))

nsubj(judged-2, We-1)
root(ROOT-0, judged-2)
det(woman-4, the-3)
nsubj(go-6, woman-4)
nsubj(get-8, woman-4)
aux(go-6, would-5)
dep(judged-2, go-6)
dep(judged-2, get-8)
conj_and(go-6, get-8)
det(child-10, the-9)
dobj(go-6, child-10)
advmod(go-6, now-11)
nsubj(did-15, she-14)
dep(judged-2, did-15)
conj_but(go-6, did-15)
neg(did-15, n't-16)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could)
        (VP (VB see)
          (NP (PRP her))
          (, ,)
          (PP (IN through)
            (NP (DT the) (NN glass)))
          (, ,)
          (S
            (ADVP (RB still))
            (VP (VBG setting)
              (ADVP (RB there))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (PRP$ her) (NN head))
                  (VP (VBD bowed)
                    (PRT (RP down))
                    (PP (IN on)
                      (NP (PRP$ her) (NNS knees)))))))))))
    (: ;)
    (S
      (ADVP (RB so)
        (PP (IN of)
          (NP (NN course))))
      (NP (PRP she))
      (VP
        (VP (VBD had) (RB n't)
          (VP (VBN seen)
            (NP (DT the) (NN performance))))
        (, ,)
        (CC and)
        (VP (VBD thought)
          (SBAR
            (S
              (NP (PRP$ her) (NN child))
              (VP (VBD was)
                (ADJP (JJ clean)
                  (SBAR
                    (S
                      (VP (VBN gone)
                        (PP (IN with)
                          (NP (DT the) (NN man)))))))))))))
    (. .)))

nsubj(see-3, We-1)
aux(see-3, could-2)
root(ROOT-0, see-3)
dobj(see-3, her-4)
det(glass-8, the-7)
prep_through(see-3, glass-8)
advmod(setting-11, still-10)
vmod(see-3, setting-11)
advmod(setting-11, there-12)
poss(head-16, her-15)
prep_with(setting-11, head-16)
vmod(head-16, bowed-17)
prt(bowed-17, down-18)
poss(knees-21, her-20)
prep_on(bowed-17, knees-21)
advmod(seen-29, so-23)
prep_of(so-23, course-25)
nsubj(seen-29, she-26)
nsubj(thought-34, she-26)
aux(seen-29, had-27)
neg(seen-29, n't-28)
parataxis(see-3, seen-29)
det(performance-31, the-30)
dobj(seen-29, performance-31)
parataxis(see-3, thought-34)
conj_and(seen-29, thought-34)
poss(child-36, her-35)
nsubj(clean-38, child-36)
cop(clean-38, was-37)
ccomp(thought-34, clean-38)
ccomp(clean-38, gone-39)
det(man-42, the-41)
prep_with(gone-39, man-42)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (NP
          (NP
            (QP (RB nearly) (DT a) (NN half)))
          (NP (DT a) (NN mile)))
        (PP (IN from)
          (NP (PRP$ her) (NNS people)))
        (, ,)
        (SBAR (IN so)
          (S
            (NP (PRP we))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD might)
                    (VP (VB go)
                      (PRT (RP down))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN child))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP
                                (VP (VBD was)
                                  (NP
                                    (NP
                                      (QP (RB about) (DT a) (NN quarter)))
                                    (PP (IN of)
                                      (NP (DT a) (NN mile))))
                                  (PP (IN beyond)
                                    (NP (PRP her))))
                                (, ,)
                                (CC and)
                                (VP (NN snake)
                                  (NP (PRP it))
                                  (PP (TO to)
                                    (NP (PRP her))))
                                (SBAR (IN before)
                                  (S
                                    (NP (DT the) (NN caravan) (NNS people))
                                    (VP (MD could)
                                      (VP (VB git)
                                        (PP (TO to)
                                          (NP (PRP us)))
                                        (S
                                          (VP (TO to)
                                            (VP (VB do)
                                              (S
                                                (NP (PRP us))
                                                (NP (DT any) (NN harm))))))))))))))))))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB besides))
      (, ,)
      (NP (PRP we))
      (VP (VBD reckoned)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD had)
              (NP
                (NP (JJ enough) (NN business))
                (PP (IN on)
                  (NP
                    (NP (PRP$ their) (NNS hands))
                    (PP (IN for)
                      (NP (CD one) (NN while))))))
              (, ,)
              (ADVP (RB anyway))
              (, ,)
              (PP (IN with)
                (NP (DT the) (VBN wounded))))))))
    (. .)))

nsubj(half-5, She-1)
cop(half-5, was-2)
quantmod(half-5, nearly-3)
quantmod(half-5, a-4)
root(ROOT-0, half-5)
det(mile-7, a-6)
dep(half-5, mile-7)
poss(people-10, her-9)
prep_from(half-5, people-10)
mark(thought-14, so-12)
nsubj(thought-14, we-13)
advcl(half-5, thought-14)
nsubj(go-17, we-15)
aux(go-17, might-16)
ccomp(thought-14, go-17)
prt(go-17, down-18)
det(child-21, the-20)
prep_to(go-17, child-21)
nsubj(quarter-27, child-21)
cop(quarter-27, was-24)
quantmod(quarter-27, about-25)
quantmod(quarter-27, a-26)
rcmod(child-21, quarter-27)
det(mile-30, a-29)
prep_of(quarter-27, mile-30)
prep_beyond(quarter-27, her-32)
rcmod(child-21, snake-35)
conj_and(quarter-27, snake-35)
dobj(snake-35, it-36)
prep_to(snake-35, her-38)
mark(git-44, before-39)
det(people-42, the-40)
nn(people-42, caravan-41)
nsubj(git-44, people-42)
nsubj(do-48, people-42)
aux(git-44, could-43)
advcl(quarter-27, git-44)
prep_to(git-44, us-46)
aux(do-48, to-47)
xcomp(git-44, do-48)
nsubj(harm-51, us-49)
det(harm-51, any-50)
xcomp(do-48, harm-51)
advmod(reckoned-57, besides-54)
nsubj(reckoned-57, we-56)
conj_and(half-5, reckoned-57)
nsubj(had-59, they-58)
ccomp(reckoned-57, had-59)
amod(business-61, enough-60)
dobj(had-59, business-61)
poss(hands-64, their-63)
prep_on(business-61, hands-64)
num(while-67, one-66)
prep_for(hands-64, while-67)
advmod(had-59, anyway-69)
prep_with(had-59, the-72)
amod(the-72, wounded-73)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD 'd)
              (VP (VB chance)
                (NP (PRP it))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD did)))
    (. .)))

nsubj(thought-2, We-1)
root(ROOT-0, thought-2)
nsubj(chance-5, we-3)
aux(chance-5, 'd-4)
ccomp(thought-2, chance-5)
dobj(chance-5, it-6)
nsubj(did-10, we-9)
conj_and(thought-2, did-10)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD swooped)
          (PRT (RP down)))
        (CC and)
        (VP (VBD stopped))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NNP Jim))
        (VP
          (VP (VBD shinned)
            (PRT (RP down))
            (NP (DT the) (NN ladder)))
          (CC and)
          (VP (VBD fetched)
            (PRT (RP up))
            (NP
              (NP (DT the) (NN kid))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (NP (DT a)
                      (ADJP (JJ nice) (JJ fat))
                      (JJ little) (NN thing)))))))))
      (, ,)
      (CC and)
      (S
        (S
          (PP (IN in)
            (NP (DT a) (JJ noble) (JJ good) (NN humor)))
          (, ,)
          (ADVP (RB too))
          (, ,)
          (S
            (VP
              (VP (VBG considering)
                (SBAR
                  (SBAR
                    (S
                      (S
                        (NP (PRP it))
                        (VP
                          (VP (VBD was)
                            (ADVP (RB just) (RB out))
                            (PP (IN of)
                              (NP (DT a) (NN battle))))
                          (CC and)
                          (VP (VBN been)
                            (VP (VBD tumbled)
                              (PRT (RP off))
                              (PP (IN of)
                                (NP (DT a) (NN horse)))))))
                      (: ;)
                      (CC and)
                      (RB then)
                      (S
                        (S
                          (NP (PRP we))
                          (VP
                            (VP (VBD started)
                              (PP (IN for)
                                (NP (DT the) (NN mother))))
                            (, ,)
                            (CC and)
                            (VP
                              (VP (VBD stopped)
                                (PRT (RP back))
                                (PP (IN of)
                                  (NP (PRP her))))
                              (CC and)
                              (VP
                                (ADJP (JJ tolerable))
                                (PP (IN near)
                                  (PP (IN by)))))))
                        (, ,)
                        (CC and)
                        (S
                          (NP (NNP Jim))
                          (VP
                            (VP (VBD slipped)
                              (PRT (RP down)))
                            (CC and)
                            (VP (VBD crept)
                              (PRT (RP up))
                              (ADVP (RB easy))))))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (ADVP (RB close) (RB back))
                        (PP (IN of)
                          (NP (PRP$ her)
                            (ADJP
                              (NP (DT the) (NN child))
                              (JJ goo-goo))
                            (NNP 'd)))
                        (, ,)
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (S
                                (NP (DT a) (NN child))
                                (VP (VBZ does)))
                              (, ,)
                              (CC and)
                              (S
                                (NP (PRP she))
                                (VP
                                  (VP (VBD heard)
                                    (NP (PRP it)))
                                  (, ,)
                                  (CC and)
                                  (VP
                                    (VP (VBD whirled))
                                    (CC and)
                                    (VP (VBD fetched)
                                      (NP
                                        (NP (DT a) (NN shriek))
                                        (PP (IN of)
                                          (NP (NN joy)))))
                                    (, ,)
                                    (CC and)
                                    (VP
                                      (VP (VBN made)
                                        (NP
                                          (NP (DT a) (NN jump))
                                          (PP (IN for)
                                            (NP (DT the) (NN kid)))))
                                      (CC and)
                                      (VP (VBD snatched)
                                        (NP (PRP it)))
                                      (CC and)
                                      (VP (VBD hugged)
                                        (NP (PRP it)))))
                                  (, ,)
                                  (CC and)
                                  (VP
                                    (VP (VBD dropped)
                                      (NP (PRP it)))
                                    (CC and)
                                    (VP (VBD hugged)
                                      (NP (NNP Jim)))
                                    (, ,)
                                    (CC and)
                                    (ADVP (RB then))
                                    (VP
                                      (VP (VBD snatched)
                                        (PRT (RP off))
                                        (NP (DT a) (JJ gold) (NN chain)))
                                      (CC and)
                                      (VP (VBD hung)
                                        (NP (PRP it))
                                        (PP (IN around)
                                          (NP
                                            (NP (NNP Jim) (POS 's))
                                            (NN neck))))
                                      (, ,)
                                      (CC and)
                                      (VP (VBD hugged)
                                        (NP (PRP him))
                                        (ADVP (RB again)))
                                      (, ,)
                                      (CC and)
                                      (VP (VBN jerked)
                                        (PRT (RP up))
                                        (ADVP
                                          (NP (DT the) (NN child))
                                          (RB again)))))))))))))))
              (, ,)
              (VP (VBG a-sobbing))
              (CC and)
              (VP (VBG glorifying)
                (NP
                  (NP (PDT all) (DT the) (NN time))
                  (: ;)
                  (CC and)
                  (NP (NNP Jim))))))
          (NP (PRP he))
          (VP (VBD shoved)
            (PP
              (PP (IN for)
                (NP (DT the) (NN ladder)))
              (CC and)
              (PP (IN up)
                (NP (PRP it))))))
        (, ,)
        (CC and)
        (S
          (PP (IN in)
            (NP (DT a) (NN minute)))
          (S
            (NP (PRP we))
            (VP (VBD was)
              (ADVP (RB back) (RB up))
              (PP (IN in)
                (NP (DT the) (NN sky)))))
          (CC and)
          (S
            (NP (DT the) (NN woman))
            (VP (VBD was)
              (VP (VBG staring)
                (PRT (RP up))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN back))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (PRP$ her) (NN head))
                          (PP (IN between)
                            (NP (PRP$ her) (NNS shoulders))))
                        (CC and)
                        (NP
                          (NP (DT the) (NN child))
                          (PP (IN with)
                            (NP (PRP$ its) (NNS arms))))))
                    (VP (VBN locked)
                      (PP (IN around)
                        (NP (PRP$ her) (NN neck))))))))))))
    (. .)))

nsubj(swooped-2, We-1)
nsubj(stopped-5, We-1)
root(ROOT-0, swooped-2)
prt(swooped-2, down-3)
conj_and(swooped-2, stopped-5)
nsubj(shinned-9, Jim-8)
nsubj(fetched-14, Jim-8)
conj_and(swooped-2, shinned-9)
prt(shinned-9, down-10)
det(ladder-12, the-11)
dobj(shinned-9, ladder-12)
conj_and(swooped-2, fetched-14)
conj_and(shinned-9, fetched-14)
prt(fetched-14, up-15)
det(kid-17, the-16)
dobj(fetched-14, kid-17)
nsubj(thing-25, kid-17)
cop(thing-25, was-20)
det(thing-25, a-21)
amod(fat-23, nice-22)
amod(thing-25, fat-23)
amod(thing-25, little-24)
rcmod(kid-17, thing-25)
det(humor-32, a-29)
amod(humor-32, noble-30)
amod(humor-32, good-31)
prep_in(shoved-170, humor-32)
advmod(shoved-170, too-34)
dep(shoved-170, considering-36)
nsubj(was-38, it-37)
nsubjpass(tumbled-46, it-37)
dep(considering-36, was-38)
advmod(was-38, just-39)
det(battle-43, a-42)
prep_out_of(was-38, battle-43)
auxpass(tumbled-46, been-45)
dep(considering-36, tumbled-46)
conj_and(was-38, tumbled-46)
prt(tumbled-46, off-47)
det(horse-50, a-49)
prep_of(tumbled-46, horse-50)
advmod(started-55, then-53)
nsubj(started-55, we-54)
nsubj(stopped-61, we-54)
dep(considering-36, started-55)
conj_and(was-38, started-55)
det(mother-58, the-57)
prep_for(started-55, mother-58)
conj_and(was-38, stopped-61)
conj_and(started-55, stopped-61)
prt(stopped-61, back-62)
prep_of(stopped-61, her-64)
conj_and(started-55, tolerable-66)
conj_and(stopped-61, tolerable-66)
prep(tolerable-66, near-67)
pcomp(near-67, by-68)
nsubj(slipped-72, Jim-71)
nsubj(crept-75, Jim-71)
conj_and(was-38, slipped-72)
conj_and(started-55, slipped-72)
prt(slipped-72, down-73)
conj_and(started-55, crept-75)
conj_and(slipped-72, crept-75)
prt(crept-75, up-76)
advmod(crept-75, easy-77)
advmod(way-93, when-80)
nsubj(way-93, he-81)
cop(way-93, was-82)
advmod(back-84, close-83)
advmod(way-93, back-84)
poss('d-90, her-86)
det(child-88, the-87)
npadvmod(goo-goo-89, child-88)
amod('d-90, goo-goo-89)
prep_of(way-93, 'd-90)
det(way-93, the-92)
dep(considering-36, way-93)
conj_and(was-38, way-93)
det(child-95, a-94)
nsubj(does-96, child-95)
rcmod(way-93, does-96)
nsubj(heard-100, she-99)
nsubj(whirled-104, she-99)
nsubj(dropped-127, she-99)
rcmod(way-93, heard-100)
conj_and(does-96, heard-100)
dobj(heard-100, it-101)
conj_and(does-96, whirled-104)
conj_and(heard-100, whirled-104)
conj_and(heard-100, fetched-106)
conj_and(whirled-104, fetched-106)
det(shriek-108, a-107)
dobj(fetched-106, shriek-108)
prep_of(shriek-108, joy-110)
conj_and(heard-100, made-113)
conj_and(whirled-104, made-113)
det(jump-115, a-114)
dobj(made-113, jump-115)
det(kid-118, the-117)
prep_for(jump-115, kid-118)
conj_and(whirled-104, snatched-120)
conj_and(made-113, snatched-120)
dobj(snatched-120, it-121)
conj_and(whirled-104, hugged-123)
conj_and(made-113, hugged-123)
dobj(hugged-123, it-124)
conj_and(does-96, dropped-127)
conj_and(heard-100, dropped-127)
dobj(dropped-127, it-128)
conj_and(heard-100, hugged-130)
conj_and(dropped-127, hugged-130)
dobj(hugged-130, Jim-131)
advmod(snatched-135, then-134)
conj_and(heard-100, snatched-135)
conj_and(dropped-127, snatched-135)
prt(snatched-135, off-136)
det(chain-139, a-137)
amod(chain-139, gold-138)
dobj(snatched-135, chain-139)
conj_and(dropped-127, hung-141)
conj_and(snatched-135, hung-141)
dobj(hung-141, it-142)
poss(neck-146, Jim-144)
prep_around(hung-141, neck-146)
conj_and(dropped-127, hugged-149)
conj_and(snatched-135, hugged-149)
dobj(hugged-149, him-150)
advmod(hugged-149, again-151)
conj_and(dropped-127, jerked-154)
conj_and(snatched-135, jerked-154)
prt(jerked-154, up-155)
det(child-157, the-156)
npadvmod(again-158, child-157)
advmod(jerked-154, again-158)
conj_and(considering-36, a-sobbing-160)
dep(shoved-170, a-sobbing-160)
conj_and(considering-36, glorifying-162)
dep(shoved-170, glorifying-162)
predet(time-165, all-163)
det(time-165, the-164)
dobj(glorifying-162, time-165)
dobj(glorifying-162, Jim-168)
conj_and(time-165, Jim-168)
nsubj(shoved-170, he-169)
nsubj(shoved-170', he-169)
conj_and(swooped-2, shoved-170)
conj_and(shinned-9, shoved-170)
conj_and(shinned-9, shoved-170')
conj_and(shoved-170, shoved-170')
det(ladder-173, the-172)
prep_for(shoved-170, ladder-173)
prep_up(shoved-170', it-176)
det(minute-181, a-180)
prep_in(was-183, minute-181)
nsubj(was-183, we-182)
conj_and(shinned-9, was-183)
conj_and(shoved-170, was-183)
advmod(up-185, back-184)
advmod(was-183, up-185)
det(sky-188, the-187)
prep_in(was-183, sky-188)
det(woman-191, the-190)
nsubj(staring-193, woman-191)
aux(staring-193, was-192)
conj_and(shoved-170, staring-193)
conj_and(was-183, staring-193)
prt(staring-193, up-194)
det(back-198, the-197)
prep_with(staring-193, back-198)
poss(head-201, her-200)
prep_of(back-198, head-201)
poss(shoulders-204, her-203)
prep_between(head-201, shoulders-204)
det(child-207, the-206)
prep_of(back-198, child-207)
conj_and(head-201, child-207)
poss(arms-210, its-209)
prep_with(child-207, arms-210)
vmod(back-198, locked-211)
poss(neck-214, her-213)
prep_around(locked-211, neck-214)

(ROOT
  (S (CC And)
    (ADVP (RB there))
    (NP (PRP she))
    (VP (VBD stood) (, ,)
      (SBAR
        (ADVP (RB as) (RB long))
        (IN as)
        (S
          (NP (PRP we))
          (VP (VBD was)
            (PP (IN in)
              (NP
                (NP (NN sight))
                (VP (VBG a-sailing)
                  (PRT (RP away))
                  (PP (IN in)
                    (NP (DT the) (NN sky))))))))))
    (. .)))

cc(stood-4, And-1)
advmod(stood-4, there-2)
nsubj(stood-4, she-3)
root(ROOT-0, stood-4)
advmod(long-7, as-6)
advmod(was-10, long-7)
mark(was-10, as-8)
nsubj(was-10, we-9)
advcl(stood-4, was-10)
prep_in(was-10, sight-12)
vmod(sight-12, a-sailing-13)
prt(a-sailing-13, away-14)
det(sky-17, the-16)
prep_in(a-sailing-13, sky-17)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ VII))
    (. .)))

nsubj(VII-2, CHAPTER-1)
root(ROOT-0, VII-2)

(ROOT
  (S
    (NP (NNP TOM))
    (VP (VBZ RESPECTS)
      (S
        (NP (DT THE) (NNP FLEA))
        (`` ``)
        (NP (NNP NOON))))
    (. !) ('' '')))

nsubj(RESPECTS-2, TOM-1)
root(ROOT-0, RESPECTS-2)
det(FLEA-4, THE-3)
dep(NOON-6, FLEA-4)
dep(RESPECTS-2, NOON-6)

(ROOT
  (S
    (S
      (VP (VBZ says)
        (NP (NNP Tom))))
    (, ,)
    (CC and)
    (S (IN so)
      (NP (PRP it))
      (VP (VBD was)))
    (. .)))

root(ROOT-0, says-1)
dobj(says-1, Tom-2)
dep(was-7, so-5)
nsubj(was-7, it-6)
conj_and(says-1, was-7)

(ROOT
  (S
    (NP (PRP$ His) (NN shadder))
    (VP (VBD was)
      (ADVP (RB just))
      (NP
        (NP (DT a) (NN blot))
        (PP (IN around)
          (NP (PRP$ his) (NNS feet)))))
    (. .)))

poss(shadder-2, His-1)
nsubj(blot-6, shadder-2)
cop(blot-6, was-3)
advmod(blot-6, just-4)
det(blot-6, a-5)
root(ROOT-0, blot-6)
poss(feet-9, his-8)
prep_around(blot-6, feet-9)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD looked)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNP Grinnage) (NN clock))
      (VP (VBD was)
        (ADJP (RB so) (JJ close)
          (PP (TO to)
            (NP
              (NP (CD twelve))
              (SBAR
                (S
                  (NP (DT the) (NN difference))
                  (VP (VBD did) (RB n't)
                    (VP (VB amount)
                      (PP (TO to)
                        (NP (NN nothing))))))))))))
    (. .)))

nsubj(looked-2, We-1)
root(ROOT-0, looked-2)
det(clock-7, the-5)
nn(clock-7, Grinnage-6)
nsubj(close-10, clock-7)
cop(close-10, was-8)
advmod(close-10, so-9)
conj_and(looked-2, close-10)
prep_to(close-10, twelve-12)
det(difference-14, the-13)
nsubj(amount-17, difference-14)
aux(amount-17, did-15)
neg(amount-17, n't-16)
rcmod(twelve-12, amount-17)
prep_to(amount-17, nothing-19)

(ROOT
  (S (IN So)
    (NP (NNP Tom))
    (VP (VBD said)
      (SBAR
        (S
          (S
            (NP (NNP London))
            (VP (VBD was)
              (ADVP
                (ADVP
                  (ADVP (RB right) (RB north))
                  (PP (IN of)
                    (NP (PRP us))))
                (CC or)
                (ADVP
                  (ADVP (RB right) (RB south))
                  (PP (IN of)
                    (NP
                      (NP (PRP us))
                      (, ,)
                      (NP (CD one))
                      (CC or)
                      (NP (NN t))))))
              (ADJP (`` `) (JJ other))))
          (, ,)
          (CC and)
          (S
            (NP (PRP he))
            (VP (VBN reckoned)
              (PP (IN by)
                (NP
                  (NP
                    (NP (DT the) (NN weather))
                    (CC and)
                    (NP (DT the) (NN sand)))
                  (CC and)
                  (NP
                    (NP
                      (NP (DT the) (NNS camels))
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (ADJP (JJ north))))))
                    (: ;)
                    (CC and)
                    (NP
                      (NP (DT a) (JJ good) (JJ many) (NNS miles) (NN north))
                      (, ,)
                      (ADVP (RB too))))))))
          (: ;)
          (S
            (SBAR (IN as)
              (FRAG
                (ADJP (JJ many)
                  (PP (IN as)
                    (PP (IN from)
                      (NP (NNP New) (NNP York))))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN city))
                      (PP (IN of)
                        (NP (NNP Mexico))))))))
            (, ,)
            (NP (PRP he))
            (VP (VBD guessed))))))
    (. .)))

dep(said-3, So-1)
nsubj(said-3, Tom-2)
root(ROOT-0, said-3)
nsubj(other-20, London-4)
cop(other-20, was-5)
advmod(north-7, right-6)
advmod(other-20, north-7)
prep_of(north-7, us-9)
advmod(south-12, right-11)
conj_or(north-7, south-12)
advmod(other-20, south-12)
prep_of(south-12, us-14)
prep_of(south-12, one-16)
conj_or(us-14, one-16)
prep_of(south-12, t-18)
conj_or(us-14, t-18)
dep(said-3, other-20)
nsubj(reckoned-24, he-23)
dep(said-3, reckoned-24)
conj_and(other-20, reckoned-24)
det(weather-27, the-26)
prep_by(reckoned-24, weather-27)
det(sand-30, the-29)
prep_by(reckoned-24, sand-30)
conj_and(weather-27, sand-30)
det(camels-33, the-32)
prep_by(reckoned-24, camels-33)
conj_and(weather-27, camels-33)
nsubj(north-36, it-34)
cop(north-36, was-35)
rcmod(camels-33, north-36)
det(north-43, a-39)
amod(north-43, good-40)
amod(north-43, many-41)
nn(north-43, miles-42)
conj_and(weather-27, north-43)
conj_and(camels-33, north-43)
advmod(north-43, too-45)
mark(many-48, as-47)
advcl(guessed-60, many-48)
prepc_as_from(many-48, from-50)
nn(York-52, New-51)
pobj(many-48, York-52)
det(city-55, the-54)
prep_to(many-48, city-55)
prep_of(city-55, Mexico-57)
nsubj(guessed-60, he-59)
dep(said-3, guessed-60)
conj_and(other-20, guessed-60)
parataxis(other-20, guessed-60)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD reckoned)
            (SBAR
              (S
                (NP (DT a) (NN balloon))
                (VP (VBD was)
                  (NP
                    (NP (DT a) (JJ good) (NN deal))
                    (NP (DT the) (JJS fastest) (NN thing)))
                  (PP (IN in)
                    (NP (DT the) (NN world)))
                  (, ,)
                  (SBAR (IN unless)
                    (S
                      (NP (PRP it))
                      (VP (MD might)
                        (VP (VB be)
                          (NP
                            (NP
                              (NP (DT some) (NNS kinds))
                              (PP (IN of)
                                (NP (NNS birds))))
                            (: --)
                            (NP
                              (NP (DT a) (JJ wild) (NN pigeon))
                              (, ,)
                              (ADVP (RB maybe)))
                            (, ,)
                            (CC or)
                            (NP (DT a) (NN railroad))))))))))))))
    (. .)))

nsubj(said-2, Jim-1)
root(ROOT-0, said-2)
nsubj(reckoned-4, he-3)
ccomp(said-2, reckoned-4)
det(balloon-6, a-5)
nsubj(deal-10, balloon-6)
cop(deal-10, was-7)
det(deal-10, a-8)
amod(deal-10, good-9)
ccomp(reckoned-4, deal-10)
det(thing-13, the-11)
amod(thing-13, fastest-12)
dep(deal-10, thing-13)
det(world-16, the-15)
prep_in(deal-10, world-16)
mark(kinds-23, unless-18)
nsubj(kinds-23, it-19)
aux(kinds-23, might-20)
cop(kinds-23, be-21)
det(kinds-23, some-22)
advcl(deal-10, kinds-23)
prep_of(kinds-23, birds-25)
det(pigeon-29, a-27)
amod(pigeon-29, wild-28)
advcl(deal-10, pigeon-29)
conj_or(kinds-23, pigeon-29)
advmod(pigeon-29, maybe-31)
det(railroad-35, a-34)
advcl(deal-10, railroad-35)
conj_or(kinds-23, railroad-35)

(ROOT
  (S (CC But)
    (S
      (NP (NNP Tom))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN read)
                (PP (IN about)
                  (NP
                    (NP (NNS railroads))
                    (PP (IN in)
                      (NP (NNP England)))))
                (S
                  (VP (VBG going)
                    (PP
                      (NP
                        (NP
                          (QP (RB nearly) (DT a) (CD hundred))
                          (NNS miles))
                        (NP (DT an) (NN hour)))
                      (IN for)
                      (NP (DT a) (JJ little) (NNS ways)))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (EX there))
        (ADVP (RB never))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN bird))
            (PP (IN in)
              (NP
                (NP (DT the) (NN world))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD could)
                      (VP (VB do)
                        (NP (DT that))
                        (: --)
                        (PP (IN except)
                          (NP (CD one))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBD was)
          (NP (DT a) (NN flea)))))
    (. .)))

nsubj(said-3, Tom-2)
root(ROOT-0, said-3)
nsubj(read-6, he-4)
aux(read-6, had-5)
ccomp(said-3, read-6)
prep_about(read-6, railroads-8)
prep_in(railroads-8, England-10)
xcomp(read-6, going-11)
quantmod(hundred-14, nearly-12)
quantmod(hundred-14, a-13)
num(miles-15, hundred-14)
npadvmod(going-11, miles-15)
det(hour-17, an-16)
dep(miles-15, hour-17)
det(ways-21, a-19)
amod(ways-21, little-20)
prep_for(going-11, ways-21)
expl(was-26, there-24)
neg(was-26, never-25)
conj_and(said-3, was-26)
det(bird-28, a-27)
nsubj(was-26, bird-28)
det(world-31, the-30)
prep_in(bird-28, world-31)
nsubj(do-34, world-31)
aux(do-34, could-33)
rcmod(world-31, do-34)
dobj(do-34, that-35)
prep_except(do-34, one-38)
nsubj(flea-44, that-41)
cop(flea-44, was-42)
det(flea-44, a-43)
conj_and(said-3, flea-44)
conj_and(was-26, flea-44)

(ROOT
  (NP (`` ``) (DT A) (NN flea) (. ?)))

det(flea-3, A-2)
root(ROOT-0, flea-3)

(ROOT
  (S
    (S
      (INTJ (WRB Why))
      (, ,)
      (NP
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (PP (IN in)
          (NP (IN de) (NN fust))))
      (VP (VBP place)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBP ai) (RB n't)
              (NP (DT a) (NN bird))
              (, ,)
              (ADVP (RB strickly))
              (ADJP (JJ speakin))
              ('' '))))))
    (: --) ('' '')
    (S (`` ``)
      (NP (PRP He))
      (VP (VBP ai) (RB n't)
        (NP (DT a) (NN bird))
        (, ,)
        (ADVP (RB eh))))
    (. ?)))

discourse(place-9, Why-1)
nn(Tom-4, Mars-3)
nsubj(place-9, Tom-4)
amod(fust-8, de-7)
prep_in(Tom-4, fust-8)
root(ROOT-0, place-9)
nsubj(speakin-17, he-10)
cop(speakin-17, ai-11)
neg(speakin-17, n't-12)
det(bird-14, a-13)
dep(speakin-17, bird-14)
advmod(speakin-17, strickly-16)
ccomp(place-9, speakin-17)
nsubj(bird-26, He-22)
cop(bird-26, ai-23)
neg(bird-26, n't-24)
det(bird-26, a-25)
parataxis(place-9, bird-26)
advmod(bird-26, eh-28)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (WDT what))
    (VP (VBZ is)
      (NP (PRP he)))
    (. ?) ('' '')))

discourse(he-7, Well-1)
advmod(he-7, then-3)
nsubj(he-7, what-5)
cop(he-7, is-6)
root(ROOT-0, he-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (ADVP (RB rightly))
        (VP (VB know)
          (FRAG (, ,)
            (NP (NNP Mars) (NNP Tom))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP speck)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBZ 's)
              (ADVP (RB only))
              (NP
                (NP (NNP jist) (NNP a) (POS '))
                (NN animal)))))))
    (. .)))

nsubj(know-6, I-2)
aux(know-6, do-3)
neg(know-6, n't-4)
advmod(know-6, rightly-5)
root(ROOT-0, know-6)
nn(Tom-9, Mars-8)
dep(know-6, Tom-9)
nsubj(speck-13, I-12)
conj_but(know-6, speck-13)
nsubj(animal-20, he-14)
cop(animal-20, 's-15)
advmod(animal-20, only-16)
nn(a-18, jist-17)
poss(animal-20, a-18)
ccomp(speck-13, animal-20)

(ROOT
  (S
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP I))
      (VP (VBP reckon)
        (SBAR
          (S
            (NP (NN dat))
            (VP (MD wo) (RB n't)
              (VP (VB do)))))
        (, ,)
        (ADVP (RB nuther))))
    (, ,)
    (NP (PRP he))
    (VP (VBP ai) (RB n't)
      (ADJP (JJ big) (RB enough))
      (PP (IN for)
        (NP
          (NP (NNP a) (POS '))
          (NN animal))))
    (. .)))

discourse(reckon-4, No-1)
nsubj(reckon-4, I-3)
ccomp(big-15, reckon-4)
nsubj(do-8, dat-5)
aux(do-8, wo-6)
neg(do-8, n't-7)
ccomp(reckon-4, do-8)
advmod(reckon-4, nuther-10)
nsubj(big-15, he-12)
cop(big-15, ai-13)
neg(big-15, n't-14)
root(ROOT-0, big-15)
advmod(big-15, enough-16)
poss(animal-20, a-18)
prep_for(big-15, animal-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBP mus)
      (S
        (NP (POS '))
        (VP (VB be)
          (NP (DT a) (NN bug)))))
    (. .)))

nsubj(mus-2, He-1)
root(ROOT-0, mus-2)
cop(bug-6, be-4)
det(bug-6, a-5)
ccomp(mus-2, bug-6)

(ROOT
  (S
    (NP (NNP Yassir) (, ,) (NNP dat))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBZ is) (, ,)
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBZ 's)
                  (NP (DT a) (NN bug)))))))))
    (. .) ('' '')))

nn(dat-3, Yassir-1)
nsubj('s-4, dat-3)
root(ROOT-0, 's-4)
dobj(is-7, what-5)
nsubj(is-7, he-6)
ccomp('s-4, is-7)
nsubj(bug-12, he-9)
cop(bug-12, 's-10)
det(bug-12, a-11)
ccomp(is-7, bug-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD bet)
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (VP (VBP ai) (RB n't))
            (, ,)
            (CC but)
            (VP (VBD let)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBP go)))))))))
    (. .)))

nsubj(bet-3, I-2)
root(ROOT-0, bet-3)
nsubj(ai-5, he-4)
nsubj(let-9, he-4)
ccomp(bet-3, ai-5)
neg(ai-5, n't-6)
ccomp(bet-3, let-9)
conj_but(ai-5, let-9)
nsubj(go-11, it-10)
ccomp(let-9, go-11)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (PRP$ your) (JJ second) (NN place)))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, 's-2)
poss(place-5, your-3)
amod(place-5, second-4)
nsubj(What-1, place-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Well))
    (, ,)
    (S
      (PP (IN in)
        (NP (NNP de) (JJ second) (NN place)))
      (, ,)
      (NP (NNS birds))
      (VP (VBZ is)
        (NP
          (NP (NNS creturs))
          (SBAR
            (S
              (NP (NN dat))
              (VP (VBZ goes)
                (NP (DT a) (JJ long) (NNS ways))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT a) (NN flea))
      (VP (VBP do) (RB n't)))
    (. .) ('' '')))

advmod(creturs-11, Well-2)
nn(place-7, de-5)
amod(place-7, second-6)
prep_in(creturs-11, place-7)
nsubj(creturs-11, birds-9)
cop(creturs-11, is-10)
root(ROOT-0, creturs-11)
nsubj(goes-13, dat-12)
rcmod(creturs-11, goes-13)
det(ways-16, a-14)
amod(ways-16, long-15)
dobj(goes-13, ways-16)
det(flea-20, a-19)
nsubj(do-21, flea-20)
conj_but(creturs-11, do-21)
neg(do-21, n't-22)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBP do) (RB n't)))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP (PRP he))
    (. ?)))

nsubj(do-3, He-2)
ccomp(do-6, do-3)
neg(do-3, n't-4)
root(ROOT-0, do-6)
neg(do-6, n't-7)
nsubj(do-6, he-8)

(ROOT
  (S
    (VP (VB Come)
      (PRN (, ,)
        (ADVP (RB now))
        (, ,))
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ IS)
            (NP (DT a) (JJ long) (NN distance))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP know))))))))
    (. ?) ('' '')))

root(ROOT-0, Come-1)
dep(Come-1, now-3)
nsubj(distance-9, what-5)
cop(distance-9, IS-6)
det(distance-9, a-7)
amod(distance-9, long-8)
ccomp(Come-1, distance-9)
mark(know-13, if-11)
nsubj(know-13, you-12)
advcl(distance-9, know-13)

(ROOT
  (S (`` ``)
    (S
      (INTJ (WRB Why))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (NNS miles))
          (, ,)
          (CC and)
          (NP
            (NP (NNS lots))
            (PP (IN of)
              (NP (PRP 'em)))))))
    (: --)
    (S
      (NP (NN anybody))
      (VP (VBZ knows)
        (NP (NN dat))))
    (. .) ('' '')))

discourse(miles-6, Why-2)
nsubj(miles-6, it-4)
cop(miles-6, 's-5)
root(ROOT-0, miles-6)
conj_and(miles-6, lots-9)
prep_of(lots-9, 'em-11)
nsubj(knows-14, anybody-13)
parataxis(miles-6, knows-14)
dobj(knows-14, dat-15)

(ROOT
  (S (`` ``)
    (S
      (VP (MD Ca)
        (VP (RB n't)
          (NP (DT a) (NN man)))))
    (VP (VBP walk)
      (NP (NNS miles)))
    (. ?) ('' '')))

aux(man-5, Ca-2)
neg(man-5, n't-3)
det(man-5, a-4)
csubj(walk-6, man-5)
root(ROOT-0, walk-6)
dobj(walk-6, miles-7)

(ROOT
  (S (`` ``)
    (NP (NNP Yassir))
    (, ,)
    (NP (PRP he))
    (VP (VBP kin))
    (. .) ('' '')))

nsubj(kin-5, Yassir-2)
nsubj(kin-5, he-4)
root(ROOT-0, kin-5)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB As)
      (ADVP (JJ many)))
    (PP (IN as)
      (NP (DT a) (NN railroad))
      (. ?) ('' ''))))

advmod(many-3, As-2)
root(ROOT-0, many-3)
det(railroad-6, a-5)
prep_as(many-3, railroad-6)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Yassir))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP give)
            (NP (PRP him))
            (NP (NN time))))))
    (. .) ('' '')))

root(ROOT-0, Yassir-2)
mark(give-6, if-4)
nsubj(give-6, you-5)
dep(Yassir-2, give-6)
iobj(give-6, him-7)
dobj(give-6, time-8)

(ROOT
  (S (`` ``)
    (VP (VB Ca)
      (S
        (VP (RB n't)
          (NP (DT a) (NN flea)))))
    (. ?) ('' '')))

root(ROOT-0, Ca-2)
neg(flea-5, n't-3)
det(flea-5, a-4)
ccomp(Ca-2, flea-5)

(ROOT
  (S (`` ``)
    (NP (NNP Well))
    (PRN (: --)
      (S
        (NP (PRP I))
        (VP (VBZ s) (`` `)
          (VP (VB pose)
            (ADVP (RB so)))))
      (: --))
    (VP (VBP ef)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBZ gives)
            (NP (PRP him))
            (NP
              (NP (NNS heaps))
              (PP (IN of)
                (NP (NN time))))))))
    (. .) ('' '')))

nsubj(ef-10, Well-2)
nsubj(pose-7, I-4)
aux(pose-7, s-5)
parataxis(ef-10, pose-7)
advmod(pose-7, so-8)
root(ROOT-0, ef-10)
nsubj(gives-12, you-11)
ccomp(ef-10, gives-12)
iobj(gives-12, him-13)
dobj(gives-12, heaps-14)
prep_of(heaps-14, time-16)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Now))
      (NP (PRP you))
      (VP (VBP begin)
        (S
          (VP (TO to)
            (VP (VB see)
              (PRN (, ,)
                (SINV
                  (VP (VBP do) (RB n't))
                  (NP (PRP you)))
                (, ,))
              (SBAR (IN that)
                (S
                  (NP (NNP DISTANCE))
                  (VP (VBP ai) (RB n't)
                    (NP (DT the) (NN thing)
                      (S
                        (VP (TO to)
                          (VP (VB judge)
                            (PP (IN by))))))
                    (, ,)
                    (ADVP (IN at) (DT all))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN time))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ takes)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (NP
                        (NP (DT the) (NN distance))
                        (SBAR
                          (S
                            (PP (IN IN)
                              (NP (DT that) (NNS COUNTS)))
                            (, ,)
                            (VP (VBP ai) (RB n't)
                              (NP (PRP it)))))))))))))))
    (. ?) ('' '')))

advmod(begin-4, Now-2)
nsubj(begin-4, you-3)
nsubj(see-6, you-3)
root(ROOT-0, begin-4)
aux(see-6, to-5)
xcomp(begin-4, see-6)
parataxis(see-6, do-8)
neg(do-8, n't-9)
nsubj(do-8, you-10)
mark(thing-17, that-12)
nsubj(thing-17, DISTANCE-13)
cop(thing-17, ai-14)
neg(thing-17, n't-15)
det(thing-17, the-16)
ccomp(see-6, thing-17)
aux(judge-19, to-18)
vmod(thing-17, judge-19)
prep(judge-19, by-20)
advmod(thing-17, at-22)
pobj(at-22, all-23)
nsubj(time-28, it-25)
cop(time-28, 's-26)
det(time-28, the-27)
parataxis(begin-4, time-28)
nsubj(takes-30, it-29)
nsubj(go-32, it-29)
rcmod(time-28, takes-30)
aux(go-32, to-31)
xcomp(takes-30, go-32)
det(distance-34, the-33)
dobj(go-32, distance-34)
det(COUNTS-37, distance-34)
prep_in(it-41, COUNTS-37)
cop(it-41, ai-39)
neg(it-41, n't-40)
rcmod(distance-34, it-41)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (NN hit))
      (VP (VBP do)
        (NP (NN look) (NN sorter))
        (ADVP (RB so))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (S
          (NP
            (NP (`` `) (FW a) ('' ') (NNS b))
            (`` `)
            (VP (VBN lieved)
              (S
                (NP (PRP it)))
              (, ,)
              (S
                (NP (NNP Mars) (NNP Tom))))))))
    (. .) ('' '')))

discourse(do-5, Well-2)
nsubj(do-5, hit-4)
root(ROOT-0, do-5)
nn(sorter-7, look-6)
dobj(do-5, sorter-7)
advmod(do-5, so-8)
nsubj(would-12, I-11)
conj_but(do-5, would-12)
neg(would-12, n't-13)
nn(b-17, a-15)
dep(would-12, b-17)
vmod(b-17, lieved-19)
dep(lieved-19, it-20)
nn(Tom-23, Mars-22)
dep(lieved-19, Tom-23)

(ROOT
  (SBARQ
    (SBAR (`` ``)
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (NN matter))
            (PP (IN of)
              (NP
                (NP (NNP PROPORTION))
                (, ,)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (SBAR
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP it))
                            (VP (VBZ is))))
                        (: ;)
                        (CC and)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP you))
                            (VP (VBP come)
                              (S
                                (VP (TO to)
                                  (VP (VB gauge)
                                    (NP
                                      (NP (DT a) (NN thing) (POS 's))
                                      (NN speed))
                                    (PP (IN by)
                                      (NP (PRP$ its) (NN size)))))))))))))))))))
    (, ,)
    (WHADVP (WRB where))
    (SQ (VBZ 's)
      (NP
        (NP (PRP$ your) (NN bird))
        (CC and)
        (NP
          (NP (PRP$ your) (NN man))
          (CC and)
          (NP
            (NP (PRP$ your) (NN railroad))
            (, ,)
            (NP
              (NP (NNP alongside))
              (PP (IN of)
                (NP (DT a) (NN flea))))))))
    (. ?)))

nsubj(matter-5, It-2)
cop(matter-5, 's-3)
det(matter-5, a-4)
dep('s-30, matter-5)
prep_of(matter-5, PROPORTION-7)
nsubj('s-10, PROPORTION-7)
rcmod(PROPORTION-7, 's-10)
dobj(is-13, what-11)
nsubj(is-13, it-12)
dep('s-10, is-13)
advmod(come-18, when-16)
nsubj(come-18, you-17)
nsubj(gauge-20, you-17)
dep('s-10, come-18)
conj_and(is-13, come-18)
aux(gauge-20, to-19)
xcomp(come-18, gauge-20)
det(thing-22, a-21)
poss(speed-24, thing-22)
dobj(gauge-20, speed-24)
poss(size-27, its-26)
prep_by(gauge-20, size-27)
advmod('s-30, where-29)
root(ROOT-0, 's-30)
poss(bird-32, your-31)
nsubj('s-30, bird-32)
poss(man-35, your-34)
nsubj('s-30, man-35)
conj_and(bird-32, man-35)
poss(railroad-38, your-37)
conj_and(bird-32, railroad-38)
conj_and(man-35, railroad-38)
appos(railroad-38, alongside-40)
det(flea-43, a-42)
prep_of(alongside-40, flea-43)

(ROOT
  (S
    (NP (DT The) (JJS fastest) (NN man))
    (VP (MD ca) (RB n't)
      (VP (VB run)
        (NP
          (QP (JJR more) (IN than) (RB about)))
        (PP
          (NP (CD ten) (NNS miles))
          (PP (IN in)
            (NP (DT an) (NN hour)))
          (PRN (: --)
            (NP
              (NP
                (QP (RB not) (JJ much) (IN over) (CD ten) (CD thousand)))
              (PP (CC times)
                (NP (PRP$ his) (JJ own) (NN length))))))))
    (. .)))

det(man-3, The-1)
amod(man-3, fastest-2)
nsubj(run-6, man-3)
aux(run-6, ca-4)
neg(run-6, n't-5)
root(ROOT-0, run-6)
quantmod(than-8, more-7)
dobj(run-6, than-8)
quantmod(than-8, about-9)
num(miles-11, ten-10)
dep(run-6, miles-11)
det(hour-14, an-13)
prep_in(run-6, hour-14)
quantmod(thousand-20, not-16)
quantmod(thousand-20, much-17)
quantmod(thousand-20, over-18)
number(thousand-20, ten-19)
dep(run-6, thousand-20)
prep(thousand-20, times-21)
poss(length-24, his-22)
amod(length-24, own-23)
pobj(times-21, length-24)

(ROOT
  (S
    (S (CC But)
      (NP (PDT all) (DT the) (NNS books))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (DT any) (JJ common) (JJ ordinary) (NNS third-class) (NN flea))
            (VP (MD can)
              (VP (VB jump)
                (NP (DT a)
                  (NP (CD hundred))
                  (CC and)
                  (NP
                    (NP (JJ fifty) (NNS times))
                    (NP (PRP$ his) (JJ own) (NN length)))
                  (: ;)
                  (NP (RB yes)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD can)
        (VP (VB make)
          (NP (CD five) (NNS jumps))
          (ADVP
            (ADVP
              (NP (DT a) (NN second))
              (RB too))
            (PRN (: --)
              (S
                (NP
                  (NP (CD seven) (CD hundred))
                  (CC and)
                  (NP
                    (NP (JJ fifty) (NNS times))
                    (NP (PRP$ his) (JJ own) (NN length)))
                  (, ,)
                  (PP (IN in)
                    (NP (CD one))))
                (ADJP (RB little) (JJ second)))
              (: --))
            (SBAR (IN for)
              (S
                (NP (PRP he))
                (VP (VBP do) (RB n't)
                  (VP (VB fool)
                    (PRT (RP away))
                    (NP
                      (NP (DT any) (NN time))
                      (VP (VBG stopping)
                        (CC and)
                        (VBG starting)))))))))))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBZ does)
        (NP (PRP them))
        (PP (DT both) (IN at)
          (NP (DT the) (JJ same) (NN time)))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB see))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP try)
          (S
            (VP (TO to)
              (VP (VB put)
                (NP (PRP$ your) (NN finger))
                (PP (IN on)
                  (NP (PRP him)))))))))
    (. .)))

predet(books-4, all-2)
det(books-4, the-3)
nsubj(says-5, books-4)
root(ROOT-0, says-5)
det(flea-10, any-6)
amod(flea-10, common-7)
amod(flea-10, ordinary-8)
nn(flea-10, third-class-9)
nsubj(jump-12, flea-10)
aux(jump-12, can-11)
ccomp(says-5, jump-12)
dep(hundred-14, a-13)
dobj(jump-12, hundred-14)
amod(times-17, fifty-16)
dobj(jump-12, times-17)
conj_and(hundred-14, times-17)
poss(length-20, his-18)
amod(length-20, own-19)
dep(times-17, length-20)
dobj(jump-12, yes-22)
conj_and(hundred-14, yes-22)
nsubj(make-27, he-25)
aux(make-27, can-26)
conj_and(says-5, make-27)
num(jumps-29, five-28)
dobj(make-27, jumps-29)
det(second-31, a-30)
npadvmod(too-32, second-31)
advmod(make-27, too-32)
num(hundred-35, seven-34)
dep(second-46, hundred-35)
amod(times-38, fifty-37)
conj_and(hundred-35, times-38)
dep(second-46, times-38)
poss(length-41, his-39)
amod(length-41, own-40)
dep(times-38, length-41)
conj_and(hundred-35, in-43)
dep(second-46, in-43)
prep_in(hundred-35, one-44)
advmod(second-46, little-45)
dep(too-32, second-46)
mark(fool-52, for-48)
nsubj(fool-52, he-49)
aux(fool-52, do-50)
neg(fool-52, n't-51)
advcl(too-32, fool-52)
prt(fool-52, away-53)
det(time-55, any-54)
dobj(fool-52, time-55)
vmod(time-55, stopping-56)
vmod(time-55, starting-58)
conj_and(stopping-56, starting-58)
nsubj(does-61, he-60)
conj_and(says-5, does-61)
parataxis(says-5, does-61)
dobj(does-61, them-62)
dep(does-61, both-63)
det(time-67, the-65)
amod(time-67, same-66)
prep_at(does-61, time-67)
nsubj(see-71, you-69)
aux(see-71, 'll-70)
conj_and(says-5, see-71)
parataxis(says-5, see-71)
mark(try-75, if-73)
nsubj(try-75, you-74)
nsubj(put-77, you-74)
conj_and(says-5, try-75)
aux(put-77, to-76)
xcomp(try-75, put-77)
poss(finger-79, your-78)
dobj(put-77, finger-79)
prep_on(put-77, him-81)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Now))
        (NP (DT that))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (JJ common) (, ,) (JJ ordinary) (, ,) (JJ third-class) (NN flea))
            (POS 's) (NN gait))))
      (: ;)
      (CC but)
      (S
        (NP (PRP you))
        (VP (VBP take)
          (NP
            (NP (DT an) (NNP Eyetalian) (NNP FIRST-class))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBZ 's)
                    (VP (VBN been)
                      (NP
                        (NP (DT the) (NN pet))
                        (PP (IN of)
                          (NP (DT the) (NN nobility))))
                      (NP (PDT all) (PRP$ his) (NN life))))
                  (, ,)
                  (CC and)
                  (VP (VBZ has) (RB n't)
                    (ADVP (RB ever))
                    (VP (VBN knowed)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (VP (VBP want))))))))))))
      (CC or)
      (S
        (NP (NN sickness)
          (CC or)
          (NN exposure))
        (VP (VBD was))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD can)
        (VP
          (VP (VB jump)
            (NP
              (NP
                (QP (JJR more) (IN than) (CD three) (CD hundred)))
              (PP (CC times)
                (NP (PRP$ his) (JJ own) (NN length)))))
          (, ,)
          (CC and)
          (VP (VB keep)
            (NP (PRP it))
            (PP (IN up)
              (NP
                (NP (DT all) (NN day))
                (, ,)
                (NP
                  (NP (CD five) (JJ such) (NNS jumps))
                  (NP (DT every) (NN second)))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (ADVP
                        (QP (CD fifteen) (CD hundred))
                        (NNS times))
                      (NP (PRP$ his) (JJ own) (NN length)))))))))))
    (. .)))

advmod(gait-12, Now-1)
nsubj(gait-12, that-2)
cop(gait-12, 's-3)
det(flea-10, a-4)
amod(flea-10, common-5)
amod(flea-10, ordinary-7)
amod(flea-10, third-class-9)
poss(gait-12, flea-10)
possessive(gait-12, 's-11)
root(ROOT-0, gait-12)
nsubj(take-16, you-15)
conj_but(gait-12, take-16)
det(FIRST-class-19, an-17)
nn(FIRST-class-19, Eyetalian-18)
dobj(take-16, FIRST-class-19)
nsubjpass(pet-25, FIRST-class-19)
nsubjpass(knowed-37, FIRST-class-19)
auxpass(pet-25, 's-22)
cop(pet-25, been-23)
det(pet-25, the-24)
rcmod(FIRST-class-19, pet-25)
det(nobility-28, the-27)
prep_of(pet-25, nobility-28)
predet(life-31, all-29)
poss(life-31, his-30)
dep(pet-25, life-31)
aux(knowed-37, has-34)
neg(knowed-37, n't-35)
advmod(knowed-37, ever-36)
rcmod(FIRST-class-19, knowed-37)
conj_and(pet-25, knowed-37)
nsubj(want-39, what-38)
ccomp(knowed-37, want-39)
nsubj(was-44, sickness-41)
conj_or(sickness-41, exposure-43)
nsubj(was-44, exposure-43)
conj_or(gait-12, was-44)
nsubj(jump-49, he-47)
nsubj(keep-60, he-47)
aux(jump-49, can-48)
conj_and(gait-12, jump-49)
mwe(than-51, more-50)
quantmod(hundred-53, than-51)
number(hundred-53, three-52)
dobj(jump-49, hundred-53)
prep(hundred-53, times-54)
poss(length-57, his-55)
amod(length-57, own-56)
pobj(times-54, length-57)
conj_and(gait-12, keep-60)
conj_and(jump-49, keep-60)
dobj(keep-60, it-61)
det(day-64, all-63)
prep_up(keep-60, day-64)
nsubj(length-79, day-64)
num(jumps-68, five-66)
amod(jumps-68, such-67)
appos(day-64, jumps-68)
det(second-70, every-69)
dep(jumps-68, second-70)
cop(length-79, is-73)
number(hundred-75, fifteen-74)
dep(times-76, hundred-75)
advmod(length-79, times-76)
poss(length-79, his-77)
amod(length-79, own-78)
rcmod(day-64, length-79)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (VP (VB suppose)
      (SBAR
        (S
          (NP (DT a) (NN man))
          (VP (MD could)
            (VP
              (VP (VB go)
                (NP (CD fifteen) (CD hundred))
                (PP (CC times)
                  (NP
                    (NP (PRP$ his) (JJ own) (NN length))
                    (PP (IN in)
                      (NP (DT a) (NN second))))))
              (: --)
              (VP (VB say) (, ,)
                (NP
                  (NP (DT a) (NN mile))
                  (CC and)
                  (NP (DT a) (NN half)))))))))
    (. .)))

discourse(suppose-3, Well-1)
root(ROOT-0, suppose-3)
det(man-5, a-4)
nsubj(go-7, man-5)
aux(go-7, could-6)
ccomp(suppose-3, go-7)
num(hundred-9, fifteen-8)
dobj(go-7, hundred-9)
prep(go-7, times-10)
poss(length-13, his-11)
amod(length-13, own-12)
pobj(times-10, length-13)
det(second-16, a-15)
prep_in(length-13, second-16)
dep(go-7, say-18)
det(mile-21, a-20)
dobj(say-18, mile-21)
det(half-24, a-23)
dobj(say-18, half-24)
conj_and(mile-21, half-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (JJ ninety) (NNS miles))
          (NP (DT a) (NN minute)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ considerable))
        (NP
          (NP
            (QP (JJR more) (IN than) (CD five) (CD thousand))
            (NNS miles))
          (NP (DT an) (NN hour)))))
    (. .)))

nsubj(miles-4, It-1)
cop(miles-4, 's-2)
amod(miles-4, ninety-3)
root(ROOT-0, miles-4)
det(minute-6, a-5)
dep(miles-4, minute-6)
nsubj(considerable-10, it-8)
cop(considerable-10, 's-9)
parataxis(miles-4, considerable-10)
mwe(than-12, more-11)
quantmod(thousand-14, than-12)
number(thousand-14, five-13)
num(miles-15, thousand-14)
iobj(considerable-10, miles-15)
det(hour-17, an-16)
dep(miles-15, hour-17)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ 's)
      (NP (PRP$ your) (NN man))
      (ADVP (RB NOW)))
    (. ?)))

advmod('s-2, Where-1)
root(ROOT-0, 's-2)
poss(man-4, your-3)
nsubj('s-2, man-4)
advmod('s-2, NOW-5)

(ROOT
  (NP (: --)
    (NP
      (NP
        (NP (RB yes))
        (, ,)
        (CC and)
        (NP (PRP$ your) (NN bird)))
      (, ,)
      (CC and)
      (NP
        (NP (PRP$ your) (NN railroad))
        (, ,)
        (CC and)
        (NP (PRP$ your) (NN balloon))))
    (. ?)))

root(ROOT-0, yes-2)
poss(bird-6, your-5)
conj_and(yes-2, bird-6)
poss(railroad-10, your-9)
conj_and(yes-2, railroad-10)
poss(balloon-14, your-13)
conj_and(yes-2, balloon-14)
conj_and(railroad-10, balloon-14)

(ROOT
  (S
    (ADVP (RB Laws))
    (, ,)
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB amount)
        (S
          (VP (TO to)
            (VP (VB shucks) (`` `)
              (NP
                (NP (NN longside))
                (PP (IN of)
                  (NP (DT a) (NN flea)))))))))
    (. .)))

advmod(amount-6, Laws-1)
nsubj(amount-6, they-3)
nsubj(shucks-8, they-3)
aux(amount-6, do-4)
neg(amount-6, n't-5)
root(ROOT-0, amount-6)
aux(shucks-8, to-7)
xcomp(amount-6, shucks-8)
dobj(shucks-8, longside-10)
det(flea-13, a-12)
prep_of(longside-10, flea-13)

(ROOT
  (S
    (NP (DT A) (NN flea))
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (DT a) (NN comet))
        (SBAR
          (S
            (NP (SYM b))
            (`` `)
            (VP (VBD iled)
              (PRT (RP down))
              (S
                (ADJP (JJ small))))))))
    (. .) ('' '')))

det(flea-2, A-1)
nsubj(comet-6, flea-2)
cop(comet-6, is-3)
advmod(comet-6, just-4)
det(comet-6, a-5)
root(ROOT-0, comet-6)
nsubj(iled-9, b-7)
rcmod(comet-6, iled-9)
prt(iled-9, down-10)
dep(iled-9, small-11)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ good) (NN deal))
        (SBAR
          (S
            (VP
              (VP (VBD astonished))
              (, ,)
              (CC and)
              (ADVP (RB so))
              (VP (VBD was)
                (SBAR
                  (S
                    (NP (NNP I.) (NNP Jim))
                    (VP
                      (VP (VBD said) (: :) (`` ``)
                        (SQ (VBZ Is)
                          (NP (DT dem) (JJ figgers) (NN jist))
                          (ADJP (RB edjackly) (JJ true))))
                      (, ,)
                      (ADVP (IN en)
                        (NP (DT no) (NN jokin)))
                      (`` ')
                      (ADVP (IN en) (DT no))
                      (VP (VBZ lies)))))))))
        (, ,)
        (NP (NNP Mars) (NNP Tom))))
    (. ?) ('' '')))

nsubj(deal-5, Jim-1)
cop(deal-5, was-2)
det(deal-5, a-3)
amod(deal-5, good-4)
root(ROOT-0, deal-5)
rcmod(deal-5, astonished-6)
rcmod(deal-5, was-10)
conj_and(astonished-6, was-10)
nn(Jim-12, I.-11)
nsubj(said-13, Jim-12)
ccomp(was-10, said-13)
cop(true-21, Is-16)
det(jist-19, dem-17)
amod(jist-19, figgers-18)
nsubj(true-21, jist-19)
advmod(true-21, edjackly-20)
dep(said-13, true-21)
advmod(said-13, en-23)
neg(jokin-25, no-24)
pobj(en-23, jokin-25)
advmod(said-13, en-27)
dep(en-27, no-28)
dep(said-13, lies-29)
nn(Tom-32, Mars-31)
appos(deal-5, Tom-32)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP they))
      (VP (VBP are)))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (ADJP (RB perfectly) (JJ true))))
    (. .) ('' '')))

discourse(are-5, Yes-2)
nsubj(are-5, they-4)
root(ROOT-0, are-5)
nsubj(true-10, they-7)
cop(true-10, 're-8)
advmod(true-10, perfectly-9)
parataxis(are-5, true-10)

(ROOT
  (S (`` ``)
    (INTJ
      (INTJ (UH Well))
      (, ,)
      (INTJ (NN den) (, ,) (NN honey)))
    (, ,)
    (NP (DT a) (NN body))
    (VP (VBZ 's)
      (VP (VBN got)
        (PP (TO to)
          (NP
            (NP (NN respec) (POS '))
            (DT a) (NN flea)))))
    (. .)))

discourse(got-11, Well-2)
discourse(Well-2, den-4)
dep(den-4, honey-6)
det(body-9, a-8)
nsubjpass(got-11, body-9)
auxpass(got-11, 's-10)
root(ROOT-0, got-11)
poss(flea-16, respec-13)
det(flea-16, a-15)
prep_to(got-11, flea-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP ai) (RB n't)
        (VP (VBN had)
          (NP
            (NP (DT no) (NN respec))
            ('' ')
            (PP (IN for)
              (NP (NN um) (NN befo) ('' ')))
            (, ,)
            (VP (VBN sca) (`` `)
              (ADVP (RB sely)))))))
    (, ,)
    (CC but)
    (S
      (NP (NN dey))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (RB no)
            (NP (NN gittin) (POS '))
            (NN roun) ('' '))
          (SBAR
            (S
              (NP (PRP it))
              (PRN (, ,)
                (S
                  (NP (NN dey))
                  (VP (VBP do)
                    (VP (VB deserve)
                      (NP (PRP it)))))
                (, ,))
              (ADVP (RB dat))
              (VP (VBZ 's)
                (ADJP (JJ certain))))))))
    (. .) ('' '')))

nsubjpass(had-4, I-1)
auxpass(had-4, ai-2)
neg(had-4, n't-3)
root(ROOT-0, had-4)
neg(respec-6, no-5)
dobj(had-4, respec-6)
nn(befo-10, um-9)
prep_for(respec-6, befo-10)
vmod(respec-6, sca-13)
advmod(sca-13, sely-15)
nsubj(roun-24, dey-18)
cop(roun-24, ai-19)
neg(roun-24, n't-20)
neg(roun-24, no-21)
poss(roun-24, gittin-22)
conj_but(had-4, roun-24)
nsubj(certain-35, it-26)
nsubj(deserve-30, dey-28)
aux(deserve-30, do-29)
parataxis(certain-35, deserve-30)
dobj(deserve-30, it-31)
advmod(certain-35, dat-33)
cop(certain-35, 's-34)
rcmod(roun-24, certain-35)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBD bet)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP do)))))
    (. .)))

discourse(bet-5, Well-2)
nsubj(bet-5, I-4)
root(ROOT-0, bet-5)
nsubj(do-7, they-6)
ccomp(bet-5, do-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 've)
      (VP (VBN got)
        (NP
          (NP
            (ADJP (RB ever) (RB so) (JJ much))
            (JJR more) (NN sense))
          (, ,)
          (CC and)
          (NP
            (NP
              (NP (NNS brains))
              (, ,)
              (CC and)
              (NP (NNS brightness))
              (, ,))
            (PP (IN in)
              (NP (NN proportion)))))
        (PP (TO to)
          (NP (PRP$ their) (NN size)))
        (, ,)
        (PP (IN than)
          (NP
            (NP (DT any) (JJ other) (NN cretur))
            (PP (IN in)
              (NP (DT the) (NN world)))))))
    (. .)))

nsubj(got-3, They-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
advmod(much-6, ever-4)
advmod(much-6, so-5)
amod(sense-8, much-6)
amod(sense-8, more-7)
dobj(got-3, sense-8)
dobj(got-3, brains-11)
conj_and(sense-8, brains-11)
conj_and(sense-8, brightness-14)
conj_and(brains-11, brightness-14)
prep_in(brains-11, proportion-17)
poss(size-20, their-19)
prep_to(got-3, size-20)
det(cretur-25, any-23)
amod(cretur-25, other-24)
prep_than(got-3, cretur-25)
det(world-28, the-27)
prep_in(cretur-25, world-28)

(ROOT
  (S
    (S
      (NP (DT A) (NN person))
      (VP (MD can)
        (VP (VB learn)
          (S
            (NP (PRP them))
            (`` `)
            (NP (JJS most) (NN anything))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP learn)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD quicker)
              (PP (IN than)
                (NP (DT any) (JJ other) (NN cretur)))
              (, ,)
              (ADVP (RB too)))))))
    (. .)))

det(person-2, A-1)
nsubj(learn-4, person-2)
aux(learn-4, can-3)
root(ROOT-0, learn-4)
dep(anything-8, them-5)
amod(anything-8, most-7)
dep(learn-4, anything-8)
nsubj(learn-12, they-11)
conj_and(learn-4, learn-12)
nsubj(quicker-14, it-13)
ccomp(learn-12, quicker-14)
det(cretur-18, any-16)
amod(cretur-18, other-17)
prep_than(quicker-14, cretur-18)
advmod(quicker-14, too-20)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VBN learnt)
          (S
            (VP
              (VP (TO to)
                (VP
                  (VP (VB haul)
                    (NP (JJ little) (NNS carriages))
                    (PP (IN in) (NN harness)))
                  (, ,)
                  (CC and)
                  (VP
                    (VP (VB go)
                      (NP
                        (NP (DT this) (NN way))
                        (CC and)
                        (NP (DT that) (NN way))))
                    (CC and)
                    (VP (VB t) (`` `)
                      (NP (JJ other) (NN way))
                      (PP (VBG according)
                        (PP (TO to)
                          (NP
                            (NP (PRP$ their) (NNS orders))
                            (: ;)
                            (NP (RB yes)))))))))
              (, ,)
              (CC and)
              (VP (TO to)
                (VP (VB march)
                  (CC and)
                  (VB drill)
                  (PP (IN like)
                    (NP (NNS soldiers)))
                  (, ,)
                  (S
                    (VP (VBG doing)
                      (S
                        (NP (PRP it))
                        (ADJP (RB as) (JJ exact)))))
                  (, ,)
                  (PP (VBG according)
                    (PP (TO to)
                      (NP (NNS orders))))))))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (NNS soldiers))
              (VP (VBZ does)
                (NP (PRP it))))))))
    (. .)))

nsubjpass(learnt-4, They-1)
aux(learnt-4, 've-2)
auxpass(learnt-4, been-3)
root(ROOT-0, learnt-4)
aux(haul-6, to-5)
ccomp(learnt-4, haul-6)
amod(carriages-8, little-7)
dobj(haul-6, carriages-8)
prep(haul-6, in-9)
dep(in-9, harness-10)
ccomp(learnt-4, go-13)
conj_and(haul-6, go-13)
det(way-15, this-14)
dobj(go-13, way-15)
det(way-18, that-17)
dobj(go-13, way-18)
conj_and(way-15, way-18)
conj_and(haul-6, t-20)
conj_and(go-13, t-20)
amod(way-23, other-22)
dobj(t-20, way-23)
prep(t-20, according-24)
pcomp(according-24, to-25)
poss(orders-27, their-26)
pobj(to-25, orders-27)
dep(orders-27, yes-29)
aux(march-33, to-32)
ccomp(learnt-4, march-33)
conj_and(haul-6, march-33)
conj_and(haul-6, drill-35)
conj_and(march-33, drill-35)
prep_like(march-33, soldiers-37)
xcomp(march-33, doing-39)
nsubj(exact-42, it-40)
advmod(exact-42, as-41)
xcomp(doing-39, exact-42)
prepc_according_to(march-33, to-45)
pobj(march-33, orders-46)
mark(does-50, as-48)
nsubj(does-50, soldiers-49)
advcl(learnt-4, does-50)
dobj(does-50, it-51)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VBN learnt)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP
                  (NP (DT all) (NNS sorts))
                  (PP (IN of)
                    (NP
                      (ADJP (JJ hard)
                        (CC and)
                        (JJ troublesome))
                      (NNS things))))))))))
    (. .)))

nsubjpass(learnt-4, They-1)
nsubj(do-6, They-1)
aux(learnt-4, 've-2)
auxpass(learnt-4, been-3)
root(ROOT-0, learnt-4)
aux(do-6, to-5)
xcomp(learnt-4, do-6)
det(sorts-8, all-7)
dobj(do-6, sorts-8)
amod(things-13, hard-10)
conj_and(hard-10, troublesome-12)
amod(things-13, troublesome-12)
prep_of(sorts-8, things-13)

(ROOT
  (S
    (S
      (ADVP (RB S'pose))
      (NP (PRP you))
      (VP (MD could)
        (VP
          (VP (VB cultivate)
            (NP (DT a) (NN flea))
            (PRT (RP up))
            (PP (TO to)
              (NP
                (NP (DT the) (NN size))
                (PP (IN of)
                  (NP (DT a) (NN man))))))
          (, ,)
          (CC and)
          (VP (VB keep)
            (NP (PRP$ his) (JJ natural) (NN smartness) (NN a-growing)
              (CC and)
              (NN a-growing) (NN right))
            (PRT (RP along))
            (PRT (RP up))
            (, ,)
            (S
              (ADJP (JJR bigger)
                (CC and)
                (JJR bigger)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN keener)
          (CC and)
          (NN keener))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (JJ same) (NN proportion))
            (: --)
            (SBARQ
              (WHADVP (WRB where))
              (SQ (MD 'd)
                (NP (DT the) (JJ human) (NN race))
                (VP (VB be))))))
        (, ,))
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP reckon))))))
    (. ?)))

advmod(cultivate-4, S'pose-1)
nsubj(cultivate-4, you-2)
nsubj(keep-16, you-2)
aux(cultivate-4, could-3)
root(ROOT-0, cultivate-4)
det(flea-6, a-5)
dobj(cultivate-4, flea-6)
prt(cultivate-4, up-7)
det(size-10, the-9)
prep_to(cultivate-4, size-10)
det(man-13, a-12)
prep_of(size-10, man-13)
conj_and(cultivate-4, keep-16)
poss(a-growing-20, his-17)
amod(a-growing-20, natural-18)
nn(a-growing-20, smartness-19)
dobj(keep-16, a-growing-20)
nn(right-23, a-growing-22)
dobj(keep-16, right-23)
conj_and(a-growing-20, right-23)
prt(keep-16, along-24)
prt(keep-16, up-25)
dep(keep-16, bigger-27)
dep(keep-16, bigger-29)
conj_and(bigger-27, bigger-29)
nsubj(do-48, keener-32)
conj_and(keener-32, keener-34)
nsubj(do-48, keener-34)
det(proportion-39, the-37)
amod(proportion-39, same-38)
prep_in(keener-32, proportion-39)
advmod(be-46, where-41)
aux(be-46, 'd-42)
det(race-45, the-43)
amod(race-45, human-44)
nsubj(be-46, race-45)
dep(proportion-39, be-46)
conj_and(cultivate-4, do-48)
nsubj(reckon-50, you-49)
ccomp(do-48, reckon-50)

(ROOT
  (S
    (S
      (NP (DT That) (NN flea))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (NNP President))
            (PP (IN of)
              (NP (DT the) (NNP United) (NNPS States)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD could) (RB n't)
        (ADVP (DT any) (RBR more))
        (VP (VB prevent)
          (NP (PRP it))
          (SBAR (IN than)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB prevent)
                  (NP (NN lightning)))))))))
    (. .) ('' '')))

det(flea-2, That-1)
nsubj(President-5, flea-2)
aux(President-5, would-3)
cop(President-5, be-4)
root(ROOT-0, President-5)
det(States-9, the-7)
nn(States-9, United-8)
prep_of(President-5, States-9)
nsubj(prevent-17, you-12)
aux(prevent-17, could-13)
neg(prevent-17, n't-14)
dep(more-16, any-15)
advmod(prevent-17, more-16)
conj_and(President-5, prevent-17)
dobj(prevent-17, it-18)
mark(prevent-22, than-19)
nsubj(prevent-22, you-20)
aux(prevent-22, can-21)
advcl(prevent-17, prevent-22)
dobj(prevent-22, lightning-23)

(ROOT
  (S
    (NP (`` ``)
      (NP (PRP$ My) (NN lan))
      ('' ')
      (PRN (, ,)
        (S
          (NP (NNP Mars) (NNP Tom))
          (, ,)
          (NP (PRP I))
          (VP
            (ADVP (RB never))
            (VBD knowed)
            (NP (NN dey))))))
    (VP (VBD was)
      (ADVP (RB so) (RB much))
      (ADVP (FW TO) (FW de))
      (ADJP (JJ beas))
      ('' '))
    (. .)))

poss(lan-3, My-2)
nsubj(beas-18, lan-3)
nn(Tom-7, Mars-6)
nsubj(knowed-11, Tom-7)
nsubj(knowed-11, I-9)
neg(knowed-11, never-10)
dep(lan-3, knowed-11)
dobj(knowed-11, dey-12)
cop(beas-18, was-13)
advmod(much-15, so-14)
advmod(beas-18, much-15)
nn(de-17, TO-16)
advmod(beas-18, de-17)
root(ROOT-0, beas-18)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD had)
      (NP
        (NP
          (NP (DT no) (NN idea))
          (PP (IN of)
            (NP (PRP it))))
        (, ,)
        (CC and)
        (NP
          (NP (NNP dat) (POS 's))
          (NNP de) (NN fac))
        ('' ')))
    (. .) ('' '')))

discourse(had-7, No-1)
advmod(had-7, sir-3)
nsubj(had-7, I-5)
neg(had-7, never-6)
root(ROOT-0, had-7)
neg(idea-9, no-8)
dobj(had-7, idea-9)
prep_of(idea-9, it-11)
poss(fac-17, dat-14)
nn(fac-17, de-16)
dobj(had-7, fac-17)
conj_and(idea-9, fac-17)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (ADJP
        (ADJP (JJR more))
        (PP
          (PP (TO to)
            (NP (PRP him)))
          (, ,)
          (PP (IN by)
            (NP (DT a) (JJ long) (NN sight)))
          (, ,)))
      (SBAR (IN than)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (PP (TO to)
              (NP (DT any) (JJ other) (NN cretur) (, ,) (NN man)
                (CC or)
                (NN beast)))
            (, ,)
            (PP (IN in)
              (NP
                (NP (NN proportion))
                (PP (TO to)
                  (NP (NN size)))))))))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
acomp('s-3, more-4)
prep_to(more-4, him-6)
det(sight-11, a-9)
amod(sight-11, long-10)
prep_by(more-4, sight-11)
mark(is-15, than-13)
expl(is-15, there-14)
advcl('s-3, is-15)
det(cretur-19, any-17)
amod(cretur-19, other-18)
prep_to(is-15, cretur-19)
prep_to(is-15, man-21)
conj_or(cretur-19, man-21)
prep_to(is-15, beast-23)
conj_or(cretur-19, beast-23)
prep_in(is-15, proportion-26)
prep_to(proportion-26, size-28)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN interestingest))
        (PP (IN of)
          (NP (PRP them) (DT all)))))
    (. .)))

nsubj(interestingest-4, He-1)
cop(interestingest-4, 's-2)
det(interestingest-4, the-3)
root(ROOT-0, interestingest-4)
prep_of(interestingest-4, them-6)
det(them-6, all-7)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP have)
        (ADVP (RB so) (RB much))
        (S
          (VP (TO to)
            (VP (VB say)
              (PP (IN about)
                (NP
                  (NP (DT an) (NN ant) (POS 's))
                  (NN strength))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT an) (NN elephant))
        (VP (VBZ 's)))
      (, ,)
      (CC and)
      (S
        (NP (DT a) (NN locomotive))
        (VP (VBZ 's))))
    (. .)))

nsubj(have-2, People-1)
nsubj(say-6, People-1)
root(ROOT-0, have-2)
advmod(much-4, so-3)
advmod(have-2, much-4)
aux(say-6, to-5)
xcomp(have-2, say-6)
det(ant-9, an-8)
poss(strength-11, ant-9)
prep_about(say-6, strength-11)
det(elephant-15, an-14)
nsubj('s-16, elephant-15)
conj_and(have-2, 's-16)
det(locomotive-20, a-19)
nsubj('s-21, locomotive-20)
conj_and(have-2, 's-21)
conj_and('s-16, 's-21)

(ROOT
  (S
    (ADVP (RB Shucks))
    (, ,)
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB begin)
        (PP (IN with)
          (NP (DT a) (NN flea)))))
    (. .)))

advmod(begin-6, Shucks-1)
nsubj(begin-6, they-3)
aux(begin-6, do-4)
neg(begin-6, n't-5)
root(ROOT-0, begin-6)
det(flea-9, a-8)
prep_with(begin-6, flea-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD can)
      (VP (VB lift)
        (NP (CD two)
          (CC or)
          (CD three))
        (NP
          (QP (CD hundred) (NNS times)))
        (S
          (NP (PRP$ his) (JJ own) (NN weight)))))
    (. .)))

nsubj(lift-3, He-1)
aux(lift-3, can-2)
root(ROOT-0, lift-3)
iobj(lift-3, two-4)
iobj(lift-3, three-6)
conj_or(two-4, three-6)
number(times-8, hundred-7)
dobj(lift-3, times-8)
poss(weight-11, his-9)
amod(weight-11, own-10)
xcomp(lift-3, weight-11)

(ROOT
  (S (CC And)
    (NP
      (NP (NN none))
      (PP (IN of)
        (NP (PRP them))))
    (VP (MD can)
      (VP (VB come)
        (ADVP (RB anywhere))
        (PP (IN near)
          (NP (PRP it)))))
    (. .)))

cc(come-6, And-1)
nsubj(come-6, none-2)
prep_of(none-2, them-4)
aux(come-6, can-5)
root(ROOT-0, come-6)
advmod(come-6, anywhere-7)
prep_near(come-6, it-9)

(ROOT
  (S (CC And)
    (, ,)
    (ADVP (RB moreover))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBZ has)
        (VP (VBN got)
          (NP
            (NP (NNS notions))
            (PP (IN of)
              (NP (PRP$ his) (JJ own))))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (ADJP (RB very) (JJ particular)))
      (, ,)
      (CC and)
      (VP
        (SBAR
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD ca) (RB n't)
                (VP (VB fool)
                  (NP
                    (NP (PRP him))
                    (: ;)
                    (NP (PRP$ his) (NN instinct))
                    (, ,)
                    (CC or)
                    (NP (PRP$ his) (NN judgment))
                    (, ,))))))
          (CC or)
          (SBAR
            (WHNP (WDT whatever))
            (S
              (NP (PRP it))
              (VP (VBZ is)))))
        (, ,)
        (VP (VBZ is)
          (ADJP (RB perfectly) (JJ sound)
            (CC and)
            (JJ clear)))
        (, ,)
        (CC and)
        (VP (VBP do) (RB n't)
          (ADVP (RB ever))
          (VP (VB make)
            (NP (DT a) (NN mistake))))))
    (. .)))

advmod(got-7, moreover-3)
nsubj(got-7, he-5)
nsubj(particular-16, he-5)
nsubj(sound-39, he-5)
aux(got-7, has-6)
root(ROOT-0, got-7)
dobj(got-7, notions-8)
poss(own-11, his-10)
prep_of(notions-8, own-11)
cop(particular-16, is-14)
advmod(particular-16, very-15)
conj_and(got-7, particular-16)
nsubj(fool-22, you-19)
aux(fool-22, ca-20)
neg(fool-22, n't-21)
dep(sound-39, fool-22)
dobj(fool-22, him-23)
poss(instinct-26, his-25)
dobj(fool-22, instinct-26)
conj_or(him-23, instinct-26)
poss(judgment-30, his-29)
dobj(fool-22, judgment-30)
conj_or(him-23, judgment-30)
dobj(is-35, whatever-33)
nsubj(is-35, it-34)
conj_or(fool-22, is-35)
dep(sound-39, is-35)
cop(sound-39, is-37)
advmod(sound-39, perfectly-38)
conj_and(got-7, sound-39)
conj_and(got-7, clear-41)
conj_and(sound-39, clear-41)
aux(make-47, do-44)
neg(make-47, n't-45)
advmod(make-47, ever-46)
conj_and(got-7, make-47)
conj_and(sound-39, make-47)
det(mistake-49, a-48)
dobj(make-47, mistake-49)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT all) (NNS humans))
          (VP (VBP are)
            (ADVP (RB alike))
            (PP (TO to)
              (NP (DT a) (NN flea)))))))
    (. .)))

nsubj(think-2, People-1)
root(ROOT-0, think-2)
det(humans-4, all-3)
nsubj(are-5, humans-4)
ccomp(think-2, are-5)
advmod(are-5, alike-6)
det(flea-9, a-8)
prep_to(are-5, flea-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBP ai) (RB n't)
      (ADVP (RB so)))
    (. .)))

nsubj(ai-2, It-1)
root(ROOT-0, ai-2)
neg(ai-2, n't-3)
advmod(ai-2, so-4)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP (NNS folks))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD wo) (RB n't)
              (VP (VB go)
                (UCP
                  (ADJP (JJ near) (, ,) (JJ hungry))
                  (CC or)
                  (RB not)
                  (ADJP (JJ hungry)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP them))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, folks-3)
mark(go-8, that-4)
nsubj(go-8, he-5)
aux(go-8, wo-6)
neg(go-8, n't-7)
ccomp('s-2, go-8)
amod(hungry-11, near-9)
acomp(go-8, hungry-11)
acomp(go-8, not-13)
conj_or(hungry-11, not-13)
neg(hungry-11, not-13)
dep(hungry-11, hungry-14)
nsubj(one-19, I-17)
cop(one-19, 'm-18)
conj_and('s-2, one-19)
prep_of(one-19, them-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN had)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP them))))
        (PP (IN on)
          (NP
            (NP (PRP me))
            (PP (IN in)
              (NP (PRP$ my) (NN life)))))))
    (. .) ('' '')))

nsubj(had-4, I-1)
aux(had-4, 've-2)
neg(had-4, never-3)
root(ROOT-0, had-4)
dobj(had-4, one-5)
prep_of(one-5, them-7)
prep_on(had-4, me-9)
poss(life-12, my-11)
prep_in(me-9, life-12)

(ROOT
  (S (`` ``)
    (NP (NNP Mars))
    (VP (VBZ Tom))
    (. !) ('' '')))

nsubj(Tom-3, Mars-2)
root(ROOT-0, Tom-3)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RB so))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP ai) (RB n't)
        (VP (VBG joking))))
    (. .) ('' '')))

nsubj('s-3, It-2)
root(ROOT-0, 's-3)
advmod('s-3, so-4)
nsubj(joking-9, I-6)
aux(joking-9, ai-7)
neg(joking-9, n't-8)
parataxis('s-3, joking-9)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB sah))
    (, ,)
    (NP (PRP I))
    (VP (VBP hai) (RB n't)
      (VP
        (ADVP (RB ever))
        (VBD heard)
        (SBAR
          (S
            (NP (NNP de))
            (VP (VBZ likes)
              (NP
                (NP (NNP o) (POS '))
                (NNP dat) (NNP befo) ('' ')))))))
    (. .) ('' '')))

discourse(hai-7, Well-2)
advmod(hai-7, sah-4)
nsubj(hai-7, I-6)
root(ROOT-0, hai-7)
neg(hai-7, n't-8)
advmod(heard-10, ever-9)
dep(hai-7, heard-10)
nsubj(likes-12, de-11)
ccomp(heard-10, likes-12)
poss(befo-16, o-13)
nn(befo-16, dat-15)
dobj(likes-12, befo-16)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (MD could) (RB n't)
        (VP (VB believe)
          (NP (PRP it)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (MD could) (RB n't)))
      (: ;) (RB so)
      (S
        (NP (PRP we))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP
                (VP (VB drop)
                  (PRT (RP down))
                  (PP (TO to)
                    (NP (DT the) (NN sand))))
                (CC and)
                (VP
                  (VP (VB git)
                    (NP (DT a) (NN supply)))
                  (CC and)
                  (VP (VB see)))))))))
    (. .)))

nsubj(believe-4, Jim-1)
aux(believe-4, could-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
dobj(believe-4, it-5)
nsubj(could-9, I-8)
conj_and(believe-4, could-9)
neg(could-9, n't-10)
advmod(could-9, so-12)
nsubj(had-14, we-13)
nsubj(drop-16, we-13)
nsubj(git-22, we-13)
parataxis(could-9, had-14)
aux(drop-16, to-15)
xcomp(had-14, drop-16)
prt(drop-16, down-17)
det(sand-20, the-19)
prep_to(drop-16, sand-20)
xcomp(had-14, git-22)
conj_and(drop-16, git-22)
det(supply-24, a-23)
dobj(git-22, supply-24)
conj_and(drop-16, see-26)
conj_and(git-22, see-26)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD was)
      (ADJP (JJ right)))
    (. .)))

nsubj(right-3, Tom-1)
cop(right-3, was-2)
root(ROOT-0, right-3)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD went)
        (PP (IN for)
          (NP
            (NP (PRP me))
            (CC and)
            (NP (NNP Jim))))
        (PP (IN by)
          (NP (DT the) (CD thousand)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (RB not) (DT a) (NN one))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD lit)
        (PP (IN on)
          (NP (NNP Tom)))))
    (. .)))

nsubj(went-2, They-1)
root(ROOT-0, went-2)
prep_for(went-2, me-4)
prep_for(went-2, Jim-6)
conj_and(me-4, Jim-6)
det(thousand-9, the-8)
prep_by(went-2, thousand-9)
neg(one-14, not-12)
det(one-14, a-13)
nsubj(lit-17, one-14)
prep_of(one-14, them-16)
conj_but(went-2, lit-17)
prep_on(lit-17, Tom-19)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP war) (RB n't)
        (ADJP (RB no)
          (S
            (VP (VBG explaining)
              (NP (PRP it)))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB there))
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP
            (ADVP (CC and)
              (RB there))
            (NP (NN war))
            (ADJP (RB n't) (DT no)))
          (VP (VBG getting)
            (PRT (RP around))
            (NP (PRP it))))))
    (. .)))

expl(war-2, There-1)
root(ROOT-0, war-2)
neg(war-2, n't-3)
acomp(war-2, no-4)
dep(no-4, explaining-5)
dobj(explaining-5, it-6)
advmod(war-14, there-9)
nsubj(war-14, it-10)
cop(war-14, was-11)
cc(there-13, and-12)
advmod(war-14, there-13)
conj_but(war-2, war-14)
neg(no-16, n't-15)
amod(war-14, no-16)
vmod(war-14, getting-17)
prt(getting-17, around-18)
dobj(getting-17, it-19)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD had)
                (VP
                  (ADVP (RB always))
                  (VBN been)
                  (ADVP (RB just))
                  (ADVP (RB so))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (MD 'd)
          (ADVP (RB just) (RB as) (RB soon))
          (VP (VB be)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (EX there))
                (VP (VBD was)
                  (NP
                    (NP
                      (QP (DT a) (CD million)))
                    (PP (IN of)
                      (NP (PRP them))))
                  (ADVP (RB as) (RB not)))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP
        (VP (MD 'd)
          (ADVP (RB never))
          (VP (VB touch)
            (NP (PRP him))))
        (CC nor)
        (VP (VBP bother)
          (NP (PRP him)))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(been-6, it-3)
aux(been-6, had-4)
advmod(been-6, always-5)
ccomp(said-2, been-6)
advmod(been-6, just-7)
advmod(been-6, so-8)
nsubj(be-16, he-11)
aux(be-16, 'd-12)
advmod(soon-15, just-13)
advmod(soon-15, as-14)
advmod(be-16, soon-15)
conj_and(said-2, be-16)
advmod(was-19, where-17)
expl(was-19, there-18)
advcl(be-16, was-19)
quantmod(million-21, a-20)
nsubj(was-19, million-21)
prep_of(million-21, them-23)
advmod(not-25, as-24)
neg(was-19, not-25)
nsubj(touch-30, they-27)
nsubj(bother-33, they-27)
aux(touch-30, 'd-28)
neg(touch-30, never-29)
parataxis(said-2, touch-30)
dobj(touch-30, him-31)
parataxis(said-2, bother-33)
conj_nor(touch-30, bother-33)
dobj(bother-33, him-34)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP
        (VP (VBD went)
          (PRT (RP up))
          (PP (TO to)
            (NP (DT the) (JJ cold) (NN weather)))
          (S
            (VP (TO to)
              (VP (VB freeze)
                (NP (PRP 'em))
                (PRT (RP out))))))
        (, ,)
        (CC and)
        (VP (VBD stayed)
          (NP (DT a) (JJ little) (NN spell)))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (VP (VBD come)
          (PRT (RP back))
          (PP (TO to)
            (NP (DT the) (JJ comfortable) (NN weather)))))
      (CC and)
      (VP (VBD went)
        (S
          (VP
            (VP (VBG lazying)
              (PP (IN along)
                (NP
                  (NP (CD twenty))
                  (CC or)
                  (NP
                    (NP (JJ twenty-five) (NNS miles))
                    (NP (DT an) (NN hour))))))
            (, ,)
            (NP
              (NP (DT the) (NN way))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD 'd)
                    (VP (VBN been)
                      (VP (VBG doing)
                        (PP (IN for)
                          (NP (DT the) (JJ last) (JJ few) (NNS hours)))))))))))))
    (. .)))

nsubj(went-2, We-1)
nsubj(freeze-9, We-1)
nsubj(stayed-14, We-1)
nsubj(come-21, We-1)
nsubj(went-28, We-1)
root(ROOT-0, went-2)
prt(went-2, up-3)
det(weather-7, the-5)
amod(weather-7, cold-6)
prep_to(went-2, weather-7)
aux(freeze-9, to-8)
xcomp(went-2, freeze-9)
dobj(freeze-9, 'em-10)
prt(freeze-9, out-11)
conj_and(went-2, stayed-14)
det(spell-17, a-15)
amod(spell-17, little-16)
dobj(stayed-14, spell-17)
advmod(come-21, then-20)
conj_and(went-2, come-21)
prt(come-21, back-22)
det(weather-26, the-24)
amod(weather-26, comfortable-25)
prep_to(come-21, weather-26)
conj_and(went-2, went-28)
ccomp(went-28, lazying-29)
prep_along(lazying-29, twenty-31)
amod(miles-34, twenty-five-33)
prep_along(lazying-29, miles-34)
conj_or(twenty-31, miles-34)
det(hour-36, an-35)
dep(miles-34, hour-36)
det(way-39, the-38)
dobj(lazying-29, way-39)
nsubj(doing-43, we-40)
aux(doing-43, 'd-41)
aux(doing-43, been-42)
rcmod(way-39, doing-43)
det(hours-48, the-45)
amod(hours-48, last-46)
amod(hours-48, few-47)
prep_for(doing-43, hours-48)

(ROOT
  (S
    (S
      (NP (DT The) (NN reason))
      (VP
        (VP (VBD was))
        (, ,)
        (SBAR
          (SBAR (IN that)
            (S
              (SBAR
                (X (DT the) (JJR longer))
                (S
                  (NP (PRP we))
                  (VP (VBD was)
                    (PP (IN in)
                      (NP (DT that) (JJ solemn) (, ,) (JJ peaceful) (NN desert))))))
              (, ,)
              (X (DT the) (JJR more))
              (NP (DT the) (NN hurry)
                (CC and)
                (NNS fuss))
              (VP (VBD got)
                (NP
                  (NP (NN kind))
                  (PP (IN of)
                    (S
                      (VP (VBN soothed)
                        (PRT (RP down))
                        (PP (IN in)
                          (NP (PRP us))))))))))
          (, ,)
          (CC and)
          (SBAR
            (X (DT the)
              (ADJP
                (ADJP (RBR more) (JJ happier))
                (CC and)
                (ADJP (JJ contented)
                  (CC and)
                  (JJ satisfied))))
            (S
              (NP (PRP we))
              (VP (VBD got)
                (PP (TO to)
                  (NP (NN feeling)))))))))
    (, ,)
    (CC and)
    (S
      (X (DT the) (JJR more))
      (NP (PRP we))
      (VP (VBD got)
        (PP (TO to)
          (S
            (VP
              (VP (VBG liking)
                (NP (DT the) (NN desert)))
              (, ,)
              (CC and)
              (VP
                (ADVP (RB then))
                (VBG loving)
                (NP (PRP it))))))))
    (. .)))

det(reason-2, The-1)
nsubj(was-3, reason-2)
root(ROOT-0, was-3)
mark(got-23, that-5)
det(longer-7, the-6)
dep(was-9, longer-7)
nsubj(was-9, we-8)
advcl(got-23, was-9)
det(desert-15, that-11)
amod(desert-15, solemn-12)
amod(desert-15, peaceful-14)
prep_in(was-9, desert-15)
det(more-18, the-17)
dep(got-23, more-18)
det(hurry-20, the-19)
nsubj(got-23, hurry-20)
conj_and(hurry-20, fuss-22)
nsubj(got-23, fuss-22)
ccomp(was-3, got-23)
dobj(got-23, kind-24)
prepc_of(kind-24, soothed-26)
prt(soothed-26, down-27)
prep_in(soothed-26, us-29)
det(happier-34, the-32)
advmod(happier-34, more-33)
dep(got-40, happier-34)
conj_and(happier-34, contented-36)
dep(got-40, contented-36)
conj_and(happier-34, satisfied-38)
conj_and(contented-36, satisfied-38)
nsubj(got-40, we-39)
ccomp(was-3, got-40)
conj_and(got-23, got-40)
prep_to(got-40, feeling-42)
det(more-46, the-45)
dep(got-48, more-46)
nsubj(got-48, we-47)
conj_and(was-3, got-48)
prepc_to(got-48, liking-50)
det(desert-52, the-51)
dobj(liking-50, desert-52)
advmod(loving-56, then-55)
prepc_to(got-48, loving-56)
conj_and(liking-50, loving-56)
dobj(loving-56, it-57)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (VBD had)
      (VP
        (VP (VBN cramped)
          (ADVP
            (NP (DT the) (NN speed))
            (RB down))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP
                (VP (VBD was)
                  (VP (VBG saying)))
                (, ,)
                (CC and)
                (VP (VBD was)
                  (VP (VBG having)
                    (NP
                      (NP (DT a)
                        (ADJP (RBS most) (JJ noble))
                        (JJ good) (JJ lazy) (NN time))
                      (, ,)
                      (VP
                        (ADVP (RB sometimes))
                        (VBG watching)
                        (PP (IN through)
                          (NP (DT the) (NNS glasses)))))))))))
        (, ,)
        (VP
          (ADVP (RB sometimes))
          (VBN stretched)
          (PRT (RP out))
          (PP (IN on)
            (NP (DT the) (JJ lockers) (NN reading))))
        (, ,)
        (S
          (ADVP (RB sometimes))
          (VP (VBG taking)
            (NP (DT a) (NN nap))))))
    (. .)))

dep(cramped-4, So-1)
nsubj(cramped-4, we-2)
aux(cramped-4, had-3)
root(ROOT-0, cramped-4)
det(speed-6, the-5)
npadvmod(down-7, speed-6)
advmod(cramped-4, down-7)
mark(saying-12, as-9)
nsubj(saying-12, I-10)
nsubj(having-16, I-10)
aux(saying-12, was-11)
advcl(cramped-4, saying-12)
aux(having-16, was-15)
advcl(cramped-4, having-16)
conj_and(saying-12, having-16)
det(time-22, a-17)
advmod(noble-19, most-18)
amod(time-22, noble-19)
amod(time-22, good-20)
amod(time-22, lazy-21)
dobj(having-16, time-22)
advmod(watching-25, sometimes-24)
vmod(time-22, watching-25)
det(glasses-28, the-27)
prep_through(watching-25, glasses-28)
advmod(stretched-31, sometimes-30)
dep(cramped-4, stretched-31)
prt(stretched-31, out-32)
det(reading-36, the-34)
amod(reading-36, lockers-35)
prep_on(stretched-31, reading-36)
advmod(taking-39, sometimes-38)
vmod(cramped-4, taking-39)
det(nap-41, a-40)
dobj(taking-39, nap-41)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD did) (RB n't)
        (VP (VB seem)
          (SBAR (IN like)
            (S
              (NP (PRP we))
              (VP (VBD was)
                (NP
                  (NP (DT the) (JJ same) (NN lot))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD was)
                        (PP (IN in)
                          (NP (PDT such) (DT a) (NN state)))
                        (S
                          (VP (TO to)
                            (VP (VB find)
                              (NP (NN land)
                                (CC and)
                                (NN git))
                              (ADVP (RB ashore)))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)))
    (. .)))

nsubj(seem-4, It-1)
aux(seem-4, did-2)
neg(seem-4, n't-3)
root(ROOT-0, seem-4)
mark(lot-10, like-5)
nsubj(lot-10, we-6)
cop(lot-10, was-7)
det(lot-10, the-8)
amod(lot-10, same-9)
advcl(seem-4, lot-10)
nsubj(was-12, lot-10)
nsubj(find-18, lot-10)
rcmod(lot-10, was-12)
predet(state-16, such-14)
det(state-16, a-15)
prep_in(was-12, state-16)
aux(find-18, to-17)
xcomp(was-12, find-18)
dobj(find-18, land-19)
dobj(find-18, git-21)
conj_and(land-19, git-21)
advmod(find-18, ashore-22)
nsubj(was-26, it-25)
conj_but(seem-4, was-26)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBD had)
      (VP (VBN got)
        (PP (IN over)
          (NP
            (NP (DT that))
            (: --)
            (ADJP (JJ clean)
              (PP (IN over)
                (NP (PRP it))))))))
    (. .)))

cc(got-4, But-1)
nsubj(got-4, we-2)
aux(got-4, had-3)
root(ROOT-0, got-4)
prep_over(got-4, that-6)
amod(that-6, clean-8)
prep_over(clean-8, it-10)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD was)
        (VP (VBN used)
          (PP (TO to)
            (NP
              (NP (DT the) (NN balloon))
              (UCP
                (ADVP (RB now))
                (CC and)
                (ADJP (RB not) (JJ afraid)))))
          (ADVP (DT any) (RBR more))))
      (, ,)
      (CC and)
      (VP (VBD did) (RB n't)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN anywheres)
                  (S
                    (ADJP (RB else))))))))))
    (. .)))

nsubjpass(used-3, We-1)
nsubj(want-17, We-1)
nsubjpass(anywheres-20, We-1)
auxpass(used-3, was-2)
root(ROOT-0, used-3)
det(balloon-6, the-5)
prep_to(used-3, balloon-6)
advmod(balloon-6, now-7)
neg(afraid-10, not-9)
advmod(balloon-6, afraid-10)
conj_and(now-7, afraid-10)
dep(more-12, any-11)
advmod(used-3, more-12)
aux(want-17, did-15)
neg(want-17, n't-16)
conj_and(used-3, want-17)
aux(anywheres-20, to-18)
auxpass(anywheres-20, be-19)
xcomp(want-17, anywheres-20)
dep(anywheres-20, else-21)

(ROOT
  (S
    (S
      (INTJ (WRB Why))
      (, ,)
      (NP (PRP it))
      (VP (VBD seemed)
        (ADVP (RB just))
        (PP (IN like)
          (NP (NN home)))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (`` `)
        (VP
          (ADVP (RBS most))
          (VBD seemed)
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (VP (VBN been)
                  (VP (VBN born)
                    (CC and)
                    (VBN raised)
                    (PP (IN in)
                      (NP (PRP it))))))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Jim)
          (CC and)
          (NNP Tom))
        (VP (VBD said)
          (NP (DT the) (JJ same)))))
    (. .)))

discourse(seemed-4, Why-1)
nsubj(seemed-4, it-3)
root(ROOT-0, seemed-4)
advmod(seemed-4, just-5)
prep_like(seemed-4, home-7)
nsubj(seemed-12, it-9)
advmod(seemed-12, most-11)
parataxis(seemed-4, seemed-12)
advmod(born-18, as-13)
mark(born-18, if-14)
nsubjpass(born-18, I-15)
nsubjpass(raised-20, I-15)
aux(born-18, had-16)
auxpass(born-18, been-17)
advcl(seemed-12, born-18)
advcl(seemed-12, raised-20)
conj_and(born-18, raised-20)
prep_in(born-18, it-22)
nsubj(said-28, Jim-25)
conj_and(Jim-25, Tom-27)
nsubj(said-28, Tom-27)
parataxis(seemed-4, said-28)
conj_and(seemed-12, said-28)
det(same-30, the-29)
dobj(said-28, same-30)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB always))
      (NP (PRP I))
      (VP (VBD had)
        (VP (VBN had)
          (NP
            (NP
              (NP (JJ hateful) (NNS people))
              (PP (IN around)
                (NP (PRP me))))
            (, ,)
            (NP
              (NP (NN a-nagging))
              (PP (IN at)
                (NP (PRP me))))
            (, ,)
            (CC and)
            (NP
              (NP (NN pestering))
              (PP (IN of)
                (NP (PRP me))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP
          (VP (VBG scolding))
          (, ,)
          (CC and)
          (VP (VBG finding)
            (NP (NN fault)))
          (, ,)
          (CC and)
          (VP
            (VP (VBG fussing)
              (CC and)
              (VBG bothering))
            (, ,)
            (CC and)
            (VP (VBG sticking)
              (PP (TO to)
                (NP (PRP me))))
            (, ,)
            (CC and)
            (VP (VBG keeping)
              (PP (IN after)
                (NP (PRP me))))
            (, ,)
            (CC and)
            (VP (VBG making)
              (S
                (NP (PRP me))
                (VP (VB do)
                  (NP (DT this)))))
            (, ,)
            (CC and)
            (VP (VBG making)
              (S
                (NP (PRP me))
                (VP (VB do)
                  (S
                    (NP
                      (NP (DT that))
                      (CC and)
                      (NP (NN t)))
                    (`` `)
                    (ADJP (JJ other))))))
            (, ,)
            (CC and)
            (VP
              (ADVP (RB always))
              (VBG selecting)
              (PRT (RP out))
              (NP
                (NP
                  (NP (DT the) (NNS things)
                    (S
                      (S
                        (NP (PRP I))
                        (VP (VBD did) (RB n't)
                          (VP (VB want)
                            (S
                              (VP (TO to)
                                (VP
                                  (VP (VB do))
                                  (, ,)
                                  (CC and)
                                  (VP (RB then)
                                    (S
                                      (VP (VBG giving)
                                        (NP (PRP me))
                                        (NP
                                          (NP
                                            (NP (NNP Sam) (NNP Hill))
                                            (SBAR (IN because)
                                              (S
                                                (NP (PRP I))
                                                (VP
                                                  (VP (VBD shirked))
                                                  (CC and)
                                                  (VP (VBN done)
                                                    (S
                                                      (NP (NN something))
                                                      (ADJP (RB else))))))))
                                          (, ,)
                                          (CC and)
                                          (NP
                                            (NP (RB just) (VBG aggravating))
                                            (PP
                                              (ADVP
                                                (NP (DT the) (NN life))
                                                (IN out))
                                              (IN of)
                                              (NP (DT a) (NN body)))))))))))
                            (NP (PDT all) (DT the) (NN time)))))
                      (: ;)
                      (S (CC but)
                        (ADVP
                          (ADVP (RB up) (RB here))
                          (PP (IN in)
                            (NP (DT the) (NN sky))))
                        (NP (PRP it))
                        (VP (VBD was)
                          (ADJP
                            (ADJP (RB so) (RB still))
                            (CC and)
                            (ADJP (JJ sunshiny)
                              (CC and)
                              (JJ lovely))
                            (, ,)
                            (CC and)
                            (ADVP (RB plenty)))
                          (S
                            (VP (TO to)
                              (VP (VB eat))))))))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (RB plenty))
                    (PP (IN of)
                      (NP (NN sleep)))))
                (, ,)
                (CC and)
                (NP
                  (NP (JJ strange) (NNS things)
                    (S
                      (VP (TO to)
                        (VP (VB see)))))
                  (, ,)
                  (CC and)
                  (NP
                    (NP
                      (NP (DT no) (NN nagging))
                      (CC and)
                      (NP (DT no) (NN pestering)))
                    (, ,)
                    (CC and)
                    (NP (DT no) (JJ good) (NNS people)))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB just))
        (NP (NN holiday))
        (NP (PDT all) (DT the) (NN time))))
    (. .)))

advmod(had-5, always-2)
nsubj(had-5, I-3)
nsubj(scolding-21, I-3)
aux(had-5, had-4)
root(ROOT-0, had-5)
amod(people-7, hateful-6)
dobj(had-5, people-7)
prep_around(people-7, me-9)
dobj(had-5, a-nagging-11)
conj_and(people-7, a-nagging-11)
prep_at(a-nagging-11, me-13)
dobj(had-5, pestering-16)
conj_and(people-7, pestering-16)
prep_of(pestering-16, me-18)
conj_and(had-5, scolding-21)
conj_and(had-5, finding-24)
conj_and(scolding-21, finding-24)
dobj(finding-24, fault-25)
conj_and(had-5, fussing-28)
conj_and(scolding-21, fussing-28)
conj_and(scolding-21, bothering-30)
conj_and(fussing-28, bothering-30)
conj_and(scolding-21, sticking-33)
conj_and(fussing-28, sticking-33)
prep_to(sticking-33, me-35)
conj_and(scolding-21, keeping-38)
conj_and(fussing-28, keeping-38)
prep_after(keeping-38, me-40)
conj_and(scolding-21, making-43)
conj_and(fussing-28, making-43)
nsubj(do-45, me-44)
ccomp(making-43, do-45)
dobj(do-45, this-46)
conj_and(scolding-21, making-49)
conj_and(fussing-28, making-49)
nsubj(do-51, me-50)
ccomp(making-49, do-51)
dep(other-56, that-52)
conj_and(that-52, t-54)
dep(other-56, t-54)
dep(do-51, other-56)
advmod(selecting-60, always-59)
conj_and(scolding-21, selecting-60)
conj_and(fussing-28, selecting-60)
prt(selecting-60, out-61)
det(things-63, the-62)
dobj(selecting-60, things-63)
nsubj(want-67, I-64)
aux(want-67, did-65)
neg(want-67, n't-66)
dep(things-63, want-67)
aux(do-69, to-68)
xcomp(want-67, do-69)
xcomp(want-67, then-72)
conj_and(do-69, then-72)
xcomp(then-72, giving-73)
iobj(giving-73, me-74)
nn(Hill-76, Sam-75)
dobj(giving-73, Hill-76)
mark(shirked-79, because-77)
nsubj(shirked-79, I-78)
nsubj(done-81, I-78)
rcmod(Hill-76, shirked-79)
rcmod(Hill-76, done-81)
conj_and(shirked-79, done-81)
nsubj(else-83, something-82)
xcomp(done-81, else-83)
dobj(giving-73, just-86)
conj_and(Hill-76, just-86)
amod(just-86, aggravating-87)
det(life-89, the-88)
npadvmod(just-86, life-89)
det(body-93, a-92)
prep_out_of(just-86, body-93)
predet(time-96, all-94)
det(time-96, the-95)
dobj(want-67, time-96)
nsubj(do-69, time-96)
advmod(here-100, up-99)
advmod(still-107, here-100)
det(sky-103, the-102)
prep_in(here-100, sky-103)
nsubj(still-107, it-104)
nsubj(sunshiny-109, it-104)
nsubj(eat-116, it-104)
cop(still-107, was-105)
advmod(still-107, so-106)
parataxis(want-67, still-107)
parataxis(want-67, sunshiny-109)
conj_and(still-107, sunshiny-109)
conj_and(still-107, lovely-111)
conj_and(sunshiny-109, lovely-111)
parataxis(want-67, plenty-114)
advmod(still-107, plenty-114)
conj_and(still-107, plenty-114)
aux(eat-116, to-115)
xcomp(still-107, eat-116)
dobj(selecting-60, plenty-119)
conj_and(things-63, plenty-119)
prep_of(plenty-119, sleep-121)
amod(things-125, strange-124)
dobj(selecting-60, things-125)
conj_and(things-63, things-125)
aux(see-127, to-126)
vmod(things-125, see-127)
neg(nagging-131, no-130)
conj_and(things-63, nagging-131)
conj_and(things-125, nagging-131)
neg(pestering-134, no-133)
conj_and(things-125, pestering-134)
conj_and(nagging-131, pestering-134)
neg(people-139, no-137)
amod(people-139, good-138)
conj_and(things-125, people-139)
conj_and(nagging-131, people-139)
advmod(time-146, just-142)
dep(time-146, holiday-143)
predet(time-146, all-144)
det(time-146, the-145)
conj_and(had-5, time-146)
conj_and(scolding-21, time-146)

(ROOT
  (S
    (ADVP (RB Land))
    (, ,)
    (NP (PRP I))
    (VP (VBZ war) (RB n't)
      (ADVP (IN in) (DT no))
      (VP (VB hurry)
        (S
          (VP (TO to)
            (VP
              (VP (VB git)
                (PRT (RP out)))
              (CC and)
              (VP (VB buck)
                (PP (IN at)
                  (NP (NN civilization)))
                (ADVP (RB again))))))))
    (. .)))

advmod(war-4, Land-1)
nsubj(war-4, I-3)
root(ROOT-0, war-4)
neg(war-4, n't-5)
advmod(war-4, in-6)
dep(in-6, no-7)
dep(war-4, hurry-8)
aux(git-10, to-9)
xcomp(hurry-8, git-10)
prt(git-10, out-11)
xcomp(hurry-8, buck-13)
conj_and(git-10, buck-13)
prep_at(buck-13, civilization-15)
advmod(buck-13, again-16)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS worst) (NNS things))
            (PP (IN about)
              (NP (NN civilization))))))
      (VP (VBZ is) (, ,)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN anybody))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ gits)
                    (NP (DT a) (NN letter))
                    (PP (IN with)
                      (NP
                        (NP (NN trouble))
                        (PP (IN in)
                          (NP (PRP it)))))))))
            (VP
              (VP (VBZ comes))
              (CC and)
              (VP
                (VP (VBZ tells)
                  (NP (PRP you))
                  (NP
                    (NP (DT all))
                    (PP (IN about)
                      (NP (PRP it)))))
                (CC and)
                (VP (VBZ makes)
                  (SBAR
                    (S
                      (S
                        (NP (PRP you))
                        (VP (VBP feel)
                          (ADJP (JJ bad))))
                      (, ,)
                      (CC and)
                      (S
                        (NP (DT the) (NNS newspapers))
                        (VP (VBZ fetches)
                          (S
                            (NP (PRP you))
                            (NP
                              (NP (DT the) (NNS troubles))
                              (PP (IN of)
                                (NP (NN everybody)))))
                          (PP (DT all) (IN over)
                            (NP (DT the) (NN world))))))))
                (, ,)
                (CC and)
                (VP (VBZ keeps)
                  (S
                    (NP
                      (NP (PRP you))
                      (ADJP (JJ downhearted)
                        (CC and)
                        (JJ dismal)))
                    (`` `)
                    (ADJP (RBS most) (RB all))))
                (NP (DT the) (NN time))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (PDT such) (DT a) (JJ heavy) (NN load))
          (PP (IN for)
            (NP (DT a) (NN person))))))
    (. .)))

advmod(is-10, Now-1)
nsubj(is-10, one-3)
det(things-7, the-5)
amod(things-7, worst-6)
prep_of(one-3, things-7)
prep_about(things-7, civilization-9)
root(ROOT-0, is-10)
mark(comes-22, that-12)
nsubj(gits-15, anybody-13)
nsubj(comes-22, anybody-13)
nsubj(tells-24, anybody-13)
rcmod(anybody-13, gits-15)
det(letter-17, a-16)
dobj(gits-15, letter-17)
prep_with(gits-15, trouble-19)
prep_in(trouble-19, it-21)
ccomp(is-10, comes-22)
ccomp(is-10, tells-24)
conj_and(comes-22, tells-24)
iobj(tells-24, you-25)
dobj(tells-24, all-26)
prep_about(all-26, it-28)
conj_and(comes-22, makes-30)
conj_and(tells-24, makes-30)
nsubj(feel-32, you-31)
dep(makes-30, feel-32)
acomp(feel-32, bad-33)
det(newspapers-37, the-36)
nsubj(fetches-38, newspapers-37)
dep(makes-30, fetches-38)
conj_and(feel-32, fetches-38)
nsubj(troubles-41, you-39)
det(troubles-41, the-40)
xcomp(fetches-38, troubles-41)
prep_of(troubles-41, everybody-43)
dep(fetches-38, all-44)
det(world-47, the-46)
prep_over(fetches-38, world-47)
conj_and(comes-22, keeps-50)
conj_and(tells-24, keeps-50)
dep(all-57, you-51)
amod(you-51, downhearted-52)
amod(you-51, dismal-54)
conj_and(downhearted-52, dismal-54)
advmod(all-57, most-56)
dep(keeps-50, all-57)
det(time-59, the-58)
dobj(tells-24, time-59)
nsubj(load-67, it-62)
cop(load-67, 's-63)
predet(load-67, such-64)
det(load-67, a-65)
amod(load-67, heavy-66)
conj_and(is-10, load-67)
det(person-70, a-69)
prep_for(load-67, person-70)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP hate)
        (S
          (NP (PRP them))
          (NP (NNS newspapers)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP hate)
        (NP
          (NP (NNS letters))
          (: ;)
          (CC and)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (NP
                  (NP (PRP$ my) (NN way))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD would) (RB n't)
                        (VP (VB allow)
                          (NP (NN nobody))
                          (S
                            (VP (TO to)
                              (VP (VB load)
                                (NP (PRP$ his) (NNS troubles))
                                (PP (IN on)
                                  (PP (TO to)
                                    (NP
                                      (NP (JJ other) (NNS folks))
                                      (SBAR
                                        (S
                                          (NP (PRP he))
                                          (VP (VBP ai) (RB n't)
                                            (ADJP (VBN acquainted)
                                              (PP (IN with))))))))))))))))))))
          (, ,)
          (PP (IN on)
            (NP (NN t)))
          (`` `)
          (NP
            (NP (JJ other) (NN side))
            (PP (IN of)
              (NP
                (NP (DT the) (NN world))
                (, ,)
                (NP (DT that) (NN way))))))))
    (. .)))

nsubj(hate-2, I-1)
root(ROOT-0, hate-2)
nsubj(newspapers-4, them-3)
xcomp(hate-2, newspapers-4)
nsubj(hate-8, I-7)
conj_and(hate-2, hate-8)
dobj(hate-8, letters-9)
mark(had-14, if-12)
nsubj(had-14, I-13)
dobj(hate-8, had-14)
conj_and(letters-9, had-14)
poss(way-16, my-15)
dobj(had-14, way-16)
nsubj(allow-20, I-17)
aux(allow-20, would-18)
neg(allow-20, n't-19)
rcmod(way-16, allow-20)
dobj(allow-20, nobody-21)
nsubj(load-23, nobody-21)
aux(load-23, to-22)
xcomp(allow-20, load-23)
poss(troubles-25, his-24)
dobj(load-23, troubles-25)
prep(load-23, on-26)
pcomp(on-26, to-27)
amod(folks-29, other-28)
pobj(to-27, folks-29)
prep_with(acquainted-33, folks-29)
nsubjpass(acquainted-33, he-30)
auxpass(acquainted-33, ai-31)
neg(acquainted-33, n't-32)
rcmod(folks-29, acquainted-33)
dobj(hate-8, on-36)
conj_and(letters-9, on-36)
prep_on(letters-9, t-37)
amod(side-40, other-39)
dobj(hate-8, side-40)
conj_and(letters-9, side-40)
det(world-43, the-42)
prep_of(side-40, world-43)
det(way-46, that-45)
appos(world-43, way-46)

(ROOT
  (S
    (S
      (FRAG
        (INTJ (UH Well))
        (, ,)
        (ADVP (RB up)
          (PP (IN in)
            (NP (DT a) (NN balloon)))))
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT any))
          (PP (IN of)
            (NP (DT that))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (JJ darlingest) (NN place))
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)))))))
    (. .)))

discourse(up-3, Well-1)
dep(ai-8, up-3)
det(balloon-6, a-5)
prep_in(up-3, balloon-6)
expl(ai-8, there-7)
root(ROOT-0, ai-8)
neg(ai-8, n't-9)
nsubj(ai-8, any-10)
prep_of(any-10, that-12)
nsubj(place-19, it-15)
cop(place-19, 's-16)
det(place-19, the-17)
amod(place-19, darlingest-18)
conj_and(ai-8, place-19)
expl(is-21, there-20)
rcmod(place-19, is-21)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD had)
        (NP (NN supper))))
    (, ,)
    (CC and)
    (S
      (NP (DT that) (NN night))
      (VP (VBD was)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ prettiest) (NNS nights))
              (SBAR
                (S
                  (NP (PRP I))
                  (ADVP (RB ever))
                  (VP (VBP see)))))))))
    (. .)))

nsubj(had-2, We-1)
root(ROOT-0, had-2)
dobj(had-2, supper-3)
det(night-7, that-6)
nsubj(one-9, night-7)
cop(one-9, was-8)
conj_and(had-2, one-9)
det(nights-13, the-11)
amod(nights-13, prettiest-12)
prep_of(one-9, nights-13)
nsubj(see-16, I-14)
advmod(see-16, ever-15)
rcmod(nights-13, see-16)

(ROOT
  (S
    (S
      (NP (DT The) (NN moon))
      (VP (VBD made)
        (NP (PRP it))
        (PP
          (ADVP (RB just))
          (IN like)
          (NP (NN daylight)))
        (, ,)
        (ADVP
          (NP (RB only) (DT a) (NN heap))
          (JJR softer))))
    (: ;)
    (CC and)
    (S
      (S
        (SBAR (IN once)
          (S
            (NP (PRP we))
            (VP (VB see)
              (NP (DT a) (NN lion) (NN standing))
              (ADVP (DT all) (JJ alone)
                (PP (IN by)
                  (NP (PRP himself))))
              (, ,)
              (ADVP (RB just) (DT all) (JJ alone))
              (PP (IN on)
                (NP (DT the) (NN earth))))))
        (, ,)
        (NP (PRP it))
        (VP (VBD seemed)
          (PP (IN like))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ his) (NN shadder))
        (VP (VBN laid)
          (PP (IN on)
            (NP (DT the) (NN sand)))
          (PP (IN by)
            (NP (PRP him)))
          (PP (IN like)
            (NP
              (NP (DT a) (NN puddle))
              (PP (IN of)
                (NP (NN ink))))))))
    (. .)))

det(moon-2, The-1)
nsubj(made-3, moon-2)
root(ROOT-0, made-3)
dobj(made-3, it-4)
advmod(made-3, just-5)
prep_like(made-3, daylight-7)
advmod(heap-11, only-9)
det(heap-11, a-10)
npadvmod(softer-12, heap-11)
advmod(made-3, softer-12)
mark(see-17, once-15)
nsubj(see-17, we-16)
advcl(seemed-34, see-17)
det(standing-20, a-18)
nn(standing-20, lion-19)
dobj(see-17, standing-20)
det(alone-22, all-21)
advmod(see-17, alone-22)
prep_by(alone-22, himself-24)
advmod(alone-28, just-26)
det(alone-28, all-27)
advmod(see-17, alone-28)
det(earth-31, the-30)
prep_on(see-17, earth-31)
nsubj(seemed-34, it-33)
conj_and(made-3, seemed-34)
prep(seemed-34, like-35)
poss(shadder-39, his-38)
nsubj(laid-40, shadder-39)
conj_and(made-3, laid-40)
conj_and(seemed-34, laid-40)
det(sand-43, the-42)
prep_on(laid-40, sand-43)
prep_by(laid-40, him-45)
det(puddle-48, a-47)
prep_like(laid-40, puddle-48)
prep_of(puddle-48, ink-50)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN kind))
        (PP (IN of)
          (NP (NN moonlight)))
        (S
          (VP (TO to)
            (VP (VB have))))))
    (. .)))

nsubj(kind-4, That-1)
cop(kind-4, 's-2)
det(kind-4, the-3)
root(ROOT-0, kind-4)
prep_of(kind-4, moonlight-6)
aux(have-8, to-7)
vmod(kind-4, have-8)

(ROOT
  (S
    (S
      (ADVP (RB Mainly))
      (NP (PRP we))
      (VP
        (VP (VBD laid)
          (PP (IN on)
            (NP (PRP$ our) (NNS backs))))
        (CC and)
        (VP (VBD talked))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBD did) (RB n't)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB go)
                (S
                  (VP (TO to)
                    (VP (VB sleep))))))))))
    (. .)))

advmod(laid-3, Mainly-1)
nsubj(laid-3, we-2)
nsubj(talked-8, we-2)
root(ROOT-0, laid-3)
poss(backs-6, our-5)
prep_on(laid-3, backs-6)
conj_and(laid-3, talked-8)
nsubj(want-13, we-10)
nsubj(go-15, we-10)
nsubj(sleep-17, we-10)
aux(want-13, did-11)
neg(want-13, n't-12)
parataxis(laid-3, want-13)
aux(go-15, to-14)
xcomp(want-13, go-15)
aux(sleep-17, to-16)
xcomp(go-15, sleep-17)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD was)
            (ADVP (RB right)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN midst))
                  (PP (IN of)
                    (NP (DT the) (NNP Arabian) (NNPS Nights))))))
            (ADVP (RB now))))))
    (. .)))

nsubj(said-2, Tom-1)
root(ROOT-0, said-2)
nsubj(was-4, we-3)
ccomp(said-2, was-4)
advmod(was-4, right-5)
det(midst-8, the-7)
prep_in(right-5, midst-8)
det(Nights-12, the-10)
nn(Nights-12, Arabian-11)
prep_of(midst-8, Nights-12)
advmod(was-4, now-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP
                (ADVP (RB right) (RB along) (RB here))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ cutest) (NNS things))
                          (PP (IN in)
                            (NP (DT that) (NN book))))))
                    (VP (VBD happened))))))))))
    (: ;)
    (S (IN so)
      (NP (PRP we))
      (VP
        (VP (VBD looked)
          (PRT (RP down)))
        (CC and)
        (VP (VBD watched)
          (SBAR (IN while)
            (S
              (NP (PRP he))
              (VP (VBD told)
                (PP (IN about)
                  (NP (PRP it)))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (EX there))
                    (VP (VBP ai) (RB n't)
                      (NP
                        (NP (NN anything))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ is)
                              (ADJP (RB so) (JJ interesting))
                              (S
                                (VP (TO to)
                                  (VP (VB look)
                                    (PP (IN at)
                                      (PP (IN as)
                                        (NP (DT a) (NN place)))))))
                              (SBAR (IN that)
                                (S
                                  (NP (DT a) (NN book))
                                  (VP (VBZ has)
                                    (VP (VBN talked)
                                      (PP (IN about)))))))))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(was-4, it-3)
ccomp(said-2, was-4)
advmod(here-7, right-5)
advmod(here-7, along-6)
advmod(was-4, here-7)
mark(happened-17, that-8)
nsubj(happened-17, one-9)
det(things-13, the-11)
amod(things-13, cutest-12)
prep_of(one-9, things-13)
det(book-16, that-15)
prep_in(things-13, book-16)
advcl(here-7, happened-17)
ccomp(here-7, happened-17)
dep(looked-21, so-19)
nsubj(looked-21, we-20)
nsubj(watched-24, we-20)
parataxis(said-2, looked-21)
prt(looked-21, down-22)
parataxis(said-2, watched-24)
conj_and(looked-21, watched-24)
mark(told-27, while-25)
nsubj(told-27, he-26)
advcl(watched-24, told-27)
prep_about(told-27, it-29)
mark(ai-33, because-31)
expl(ai-33, there-32)
advcl(told-27, ai-33)
neg(ai-33, n't-34)
nsubj(ai-33, anything-35)
nsubj(interesting-39, anything-35)
nsubj(look-41, anything-35)
cop(interesting-39, is-37)
advmod(interesting-39, so-38)
rcmod(anything-35, interesting-39)
aux(look-41, to-40)
xcomp(interesting-39, look-41)
prep(look-41, at-42)
pcomp(at-42, as-43)
det(place-45, a-44)
pobj(as-43, place-45)
mark(talked-50, that-46)
det(book-48, a-47)
nsubj(talked-50, book-48)
aux(talked-50, has-49)
ccomp(interesting-39, talked-50)
prep(talked-50, about-51)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN tale))
            (PP (IN about)
              (NP
                (NP (DT a) (NN camel-driver))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (VP (VBN lost)
                        (NP (PRP$ his) (NN camel)))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD come)
            (PRT (RP along))
            (PP (IN in)
              (NP (DT the) (NN desert))))
          (CC and)
          (VP (VBD met)
            (NP (DT a) (NN man)))
          (, ,)
          (CC and)
          (VP (VBZ says)))))
    (: :) (`` ``)
    (SQ (VBP Have)
      (NP (PRP you))
      (VP (VBN run)
        (PRT (RP across))
        (NP (DT a) (JJ stray) (NN camel) (NN to-day) (. ?) ('' ''))))))

nsubj(tale-4, It-1)
cop(tale-4, was-2)
det(tale-4, a-3)
root(ROOT-0, tale-4)
det(camel-driver-7, a-6)
prep_about(tale-4, camel-driver-7)
nsubj(lost-10, camel-driver-7)
aux(lost-10, had-9)
rcmod(camel-driver-7, lost-10)
poss(camel-12, his-11)
dobj(lost-10, camel-12)
nsubj(come-16, he-15)
nsubj(met-22, he-15)
nsubj(says-27, he-15)
conj_and(tale-4, come-16)
prt(come-16, along-17)
det(desert-20, the-19)
prep_in(come-16, desert-20)
conj_and(tale-4, met-22)
conj_and(come-16, met-22)
det(man-24, a-23)
dobj(met-22, man-24)
conj_and(tale-4, says-27)
conj_and(come-16, says-27)
aux(run-32, Have-30)
nsubj(run-32, you-31)
dep(tale-4, run-32)
prt(run-32, across-33)
det(to-day-37, a-34)
amod(to-day-37, stray-35)
nn(to-day-37, camel-36)
dobj(run-32, to-day-37)

(ROOT
  (S (CC And)
    (NP (DT the) (NN man))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (S
          (VP (VBG Was)
            (NP (PRP he))))
        (ADJP (JJ blind)
          (PP (IN in)
            (NP (PRP$ his) (JJ left) (NN eye))))))
    (. ?) ('' '')))

cc(says-4, And-1)
det(man-3, the-2)
nsubj(says-4, man-3)
root(ROOT-0, says-4)
cop(he-8, Was-7)
dep(says-4, he-8)
dep(he-8, blind-9)
poss(eye-13, his-11)
amod(eye-13, left-12)
prep_in(blind-9, eye-13)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Had))
    (NP (PRP he))
    (VP (VBD lost)
      (NP (DT an) (JJ upper) (NN front))
      (ADVP (NN tooth)))
    (. ?) ('' '')))

advmod(lost-4, Had-2)
nsubj(lost-4, he-3)
root(ROOT-0, lost-4)
det(front-7, an-5)
amod(front-7, upper-6)
dobj(lost-4, front-7)
advmod(lost-4, tooth-8)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (VP (VB Was)
      (NP (PRP$ his)
        (ADJP (RB off) (JJ hind))
        (NN leg) (NN lame)))
    (. ?) ('' '')))

cop(lame-7, Was-2)
poss(lame-7, his-3)
advmod(hind-5, off-4)
amod(lame-7, hind-5)
nn(lame-7, leg-6)
root(ROOT-0, lame-7)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Was))
    (NP (PRP he))
    (VP (VBD loaded)
      (PP (IN with)
        (NP
          (ADJP (JJ millet-seed)
            (PP (IN on)
              (NP (CD one))))
          (NN side)
          (CC and)
          (NN honey)))
      (PP (IN on)
        (NP (DT the) (JJ other))))
    (. ?) ('' '')))

advmod(loaded-4, Was-2)
nsubj(loaded-4, he-3)
root(ROOT-0, loaded-4)
amod(side-9, millet-seed-6)
prep_on(millet-seed-6, one-8)
prep_with(loaded-4, side-9)
prep_with(loaded-4, honey-11)
conj_and(side-9, honey-11)
det(other-14, the-13)
prep_on(loaded-4, other-14)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (CC but)
      (NP (PRP you))
      (VP (VBP need) (RB n't)
        (VP (VB go)
          (PP (IN into)
            (NP
              (NP (DT no) (JJR more) (NNS details))
              (: --)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (NP (DT the) (NN one))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (PP (IN in)
          (NP (DT a) (NN hurry)))))
    (. .)))

discourse(need-6, Yes-2)
conj_but(need-6, you-5)
nsubj(need-6, you-5)
root(ROOT-0, need-6)
neg(need-6, n't-7)
dep(need-6, go-8)
neg(details-12, no-10)
amod(details-12, more-11)
prep_into(go-8, details-12)
nsubj(one-17, details-12)
cop(one-17, 's-15)
det(one-17, the-16)
rcmod(details-12, one-17)
nsubj('m-21, I-20)
conj_and(need-6, 'm-21)
det(hurry-24, a-23)
prep_in('m-21, hurry-24)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB see)
        (NP (PRP him))))
    (. ?) ('' '')))

advmod(see-4, Where-1)
aux(see-4, did-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
dobj(see-4, him-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBZ hai) (RB n't)
        (VP (VBN seen)
          (NP (PRP him))
          (ADVP (IN at) (DT all)))))
    (, ,) ('' '')
    (NP (DT the) (NN man))
    (VP (VBZ says))
    (. .)))

nsubj(hai-3, I-2)
ccomp(says-13, hai-3)
neg(hai-3, n't-4)
dep(hai-3, seen-5)
dobj(seen-5, him-6)
advmod(seen-5, at-7)
pobj(at-7, all-8)
det(man-12, the-11)
nsubj(says-13, man-12)
root(ROOT-0, says-13)

(ROOT
  (S (`` ``)
    (NP (NNP Hai))
    (VP (RB n't)
      (S
        (VP (VBN seen)
          (NP (PRP him))
          (PP (IN at)
            (NP (DT all))))))
    (. ?)))

nsubj(n't-3, Hai-2)
root(ROOT-0, n't-3)
dep(n't-3, seen-4)
dobj(seen-4, him-5)
prep_at(seen-4, all-7)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB describe)
        (NP (PRP him))
        (ADVP (RB so) (RB close))
        (, ,)
        (ADVP (RB then))))
    (. ?) ('' '')))

advmod(describe-4, How-1)
aux(describe-4, can-2)
nsubj(describe-4, you-3)
root(ROOT-0, describe-4)
dobj(describe-4, him-5)
advmod(close-7, so-6)
advmod(describe-4, close-7)
advmod(describe-4, then-9)

(ROOT
  (S (`` ``)
    (S
      (PP (IN Because)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT a) (NN person))
            (VP (VBZ knows)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (VP (TO to)
                    (VP (VB use)
                      (NP (PRP$ his) (NNS eyes))))))))))
      (, ,)
      (NP (NN everything))
      (VP (VBZ has)
        (VP (VBN got)
          (NP (DT a) (NN meaning))
          (PP (TO to)
            (NP (PRP it))))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (JJS most) (NNS people) (POS 's))
        (NNS eyes))
      (VP (VBP ai) (RB n't)
        (ADJP (DT any) (JJ good)
          (PP (TO to)
            (NP (PRP them))))))
    (. .)))

dep(got-15, Because-2)
advmod(knows-6, when-3)
det(person-5, a-4)
nsubj(knows-6, person-5)
nsubj(use-9, person-5)
pcomp(Because-2, knows-6)
advmod(use-9, how-7)
aux(use-9, to-8)
ccomp(knows-6, use-9)
xcomp(knows-6, use-9)
poss(eyes-11, his-10)
dobj(use-9, eyes-11)
nsubj(got-15, everything-13)
aux(got-15, has-14)
root(ROOT-0, got-15)
det(meaning-17, a-16)
dobj(got-15, meaning-17)
prep_to(got-15, it-19)
amod(people-23, most-22)
poss(eyes-25, people-23)
nsubj(good-29, eyes-25)
cop(good-29, ai-26)
neg(good-29, n't-27)
det(good-29, any-28)
conj_but(got-15, good-29)
prep_to(good-29, them-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knowed)
      (SBAR
        (S
          (NP (DT a) (NN camel))
          (VP (VBD had)
            (VP (VBN been)
              (ADVP (RB along))))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBN seen)
            (NP (PRP$ his) (NN track))))))
    (. .)))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
det(camel-4, a-3)
nsubj(been-6, camel-4)
aux(been-6, had-5)
ccomp(knowed-2, been-6)
advmod(been-6, along-7)
mark(seen-11, because-9)
nsubj(seen-11, I-10)
advcl(knowed-2, seen-11)
poss(track-13, his-12)
dobj(seen-11, track-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD knowed)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN lame)
                (PP (IN in)
                  (NP (PRP$ his)
                    (ADJP (RB off) (JJ hind))
                    (NN leg)))
                (SBAR (IN because)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN favored)
                        (NP
                          (NP (DT that) (NN foot)
                            (CC and)
                            (NN trod) (NN light))
                          (PP (IN on)
                            (NP (PRP it))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN track))
      (VP (VBD showed)
        (NP (PRP it))))
    (. .)))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
nsubjpass(lame-5, he-3)
auxpass(lame-5, was-4)
ccomp(knowed-2, lame-5)
poss(leg-10, his-7)
advmod(hind-9, off-8)
amod(leg-10, hind-9)
prep_in(lame-5, leg-10)
mark(favored-14, because-11)
nsubj(favored-14, he-12)
aux(favored-14, had-13)
advcl(lame-5, favored-14)
det(light-19, that-15)
nn(light-19, foot-16)
conj_and(foot-16, trod-18)
nn(light-19, trod-18)
dobj(favored-14, light-19)
prep_on(light-19, it-21)
poss(track-25, his-24)
nsubj(showed-26, track-25)
conj_and(knowed-2, showed-26)
dobj(showed-26, it-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knowed)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ blind)
              (PP (IN on)
                (NP (PRP$ his) (JJ left) (NN side))))
            (SBAR (IN because)
              (S
                (NP (PRP he))
                (ADVP (RB only))
                (VP (VBD nibbled)
                  (NP (DT the) (NN grass))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (JJ right) (NN side))
                      (PP (IN of)
                        (NP (DT the) (NN trail))))))))))))
    (. .)))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
nsubj(blind-5, he-3)
cop(blind-5, was-4)
ccomp(knowed-2, blind-5)
poss(side-9, his-7)
amod(side-9, left-8)
prep_on(blind-5, side-9)
mark(nibbled-13, because-10)
nsubj(nibbled-13, he-11)
advmod(nibbled-13, only-12)
advcl(blind-5, nibbled-13)
det(grass-15, the-14)
dobj(nibbled-13, grass-15)
det(side-19, the-17)
amod(side-19, right-18)
prep_on(nibbled-13, side-19)
det(trail-22, the-21)
prep_of(side-19, trail-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knowed)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN lost)
              (NP (DT an) (JJ upper) (NN front))
              (ADVP (NN tooth))
              (SBAR (IN because)
                (S
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP he))
                      (VP (VBD bit)
                        (PP (IN into)
                          (NP (DT the) (NN sod))))))
                  (NP (PRP$ his) (NN teeth-print))
                  (VP (VBD showed)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
nsubj(lost-5, he-3)
aux(lost-5, had-4)
ccomp(knowed-2, lost-5)
det(front-8, an-6)
amod(front-8, upper-7)
dobj(lost-5, front-8)
advmod(lost-5, tooth-9)
mark(showed-19, because-10)
advmod(bit-13, where-11)
nsubj(bit-13, he-12)
advcl(showed-19, bit-13)
det(sod-16, the-15)
prep_into(bit-13, sod-16)
poss(teeth-print-18, his-17)
nsubj(showed-19, teeth-print-18)
advcl(lost-5, showed-19)
dobj(showed-19, it-20)

(ROOT
  (S
    (S
      (NP (DT The) (NN millet-seed))
      (VP (VBN sifted)
        (PRT (RP out))
        (PP (IN on)
          (NP (CD one) (NN side)))))
    (: --)
    (S
      (NP (DT the) (NNS ants))
      (VP (VBD told)
        (S
          (NP (PRP me))
          (NP (DT that)))))
    (: ;)
    (S
      (NP (DT the) (NN honey))
      (VP (VBD leaked)
        (PRT (RP out))
        (PP (IN on)
          (NP (DT the) (JJ other)))))
    (: --)
    (S
      (NP (DT the) (NNS flies))
      (VP (VBD told)
        (S
          (NP (PRP me))
          (NP (DT that)))))
    (. .)))

det(millet-seed-2, The-1)
nsubj(sifted-3, millet-seed-2)
root(ROOT-0, sifted-3)
prt(sifted-3, out-4)
num(side-7, one-6)
prep_on(sifted-3, side-7)
det(ants-10, the-9)
nsubj(told-11, ants-10)
parataxis(sifted-3, told-11)
nsubj(that-13, me-12)
xcomp(told-11, that-13)
det(honey-16, the-15)
nsubj(leaked-17, honey-16)
parataxis(sifted-3, leaked-17)
prt(leaked-17, out-18)
det(other-21, the-20)
prep_on(leaked-17, other-21)
det(flies-24, the-23)
nsubj(told-25, flies-24)
parataxis(sifted-3, told-25)
nsubj(that-27, me-26)
xcomp(told-25, that-27)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (DT all))
          (PP (IN about)
            (NP (PRP$ your) (NN camel))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBZ hai) (RB n't)
        (VP (VBN seen)
          (NP (PRP him)))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, all-3)
poss(camel-6, your-5)
prep_about(all-3, camel-6)
nsubj(hai-10, I-9)
conj_but(know-2, hai-10)
neg(hai-10, n't-11)
dep(hai-10, seen-12)
dobj(seen-12, him-13)

(ROOT
  (FRAG
    (NP (NNP Jim))
    (SBAR
      (S
        (VP (VBZ says))))
    (: :) (`` ``)
    (S
      (S
        (VP (VB Go)
          (PRT (RP on))))
      (, ,)
      (NP
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (VP (VBN hit)))
      (VP (VBZ 's)
        (NP
          (NP (DT a)
            (ADJP (RB mighty) (JJ good))
            (NN tale))
          (, ,)
          (CC and)
          (NP (JJ powerful) (NN interestin))
          ('' '))))
    (. .) ('' '')))

root(ROOT-0, Jim-1)
dep(Jim-1, says-2)
ccomp(tale-16, Go-5)
prt(Go-5, on-6)
nn(Tom-9, Mars-8)
nsubj(tale-16, Tom-9)
vmod(Tom-9, hit-11)
cop(tale-16, 's-12)
det(tale-16, a-13)
advmod(good-15, mighty-14)
amod(tale-16, good-15)
dep(Jim-1, tale-16)
amod(interestin-20, powerful-19)
dep(Jim-1, interestin-20)
conj_and(tale-16, interestin-20)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP (DT all))))
    (, ,) ('' '')
    (NP (NNP Tom))
    (VP (VBZ says))
    (. .)))

nsubj(all-4, That-2)
cop(all-4, 's-3)
ccomp(says-8, all-4)
nsubj(says-8, Tom-7)
root(ROOT-0, says-8)

(ROOT
  (S (`` ``)
    (VP (VB ALL))
    (. ?) ('' '')))

root(ROOT-0, ALL-2)

(ROOT
  (S
    (VP (VBZ says)
      (NP
        (NP (NNP Jim))
        (, ,)
        (VP (VBN astonished))))
    (. .)))

root(ROOT-0, says-1)
dobj(says-1, Jim-2)
vmod(Jim-2, astonished-4)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (`` `) (VB come)
        (ADVP (RB o))
        ('' ')
        (NP (FW de) (FW camel))))
    (. ?) ('' '')))

nsubj(come-4, What-2)
root(ROOT-0, come-4)
advmod(come-4, o-5)
nn(camel-8, de-7)
dobj(come-4, camel-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S (`` ``)
    (NP (NNP Mars) (NNP Tom))
    (PRN (, ,)
      (SINV
        (VP (VBP do) (RB n't))
        (NP (NNP de) (NNP tale))))
    (VP (VBP say))
    (. ?) ('' '')))

nn(Tom-3, Mars-2)
nsubj(say-9, Tom-3)
parataxis(say-9, do-5)
neg(do-5, n't-6)
nn(tale-8, de-7)
nsubj(do-5, tale-8)
root(ROOT-0, say-9)

(ROOT
  (INTJ (`` ``) (UH No) (. .) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD puzzled)
        (NP (DT a) (NN minute))))
    (, ,) (RB then)
    (S
      (NP (PRP he))
      (VP
        (VP (VBZ says))
        (: :) (`` ``)
        (VP (VBZ Well))))
    (. !)))

nsubj(puzzled-2, Jim-1)
root(ROOT-0, puzzled-2)
det(minute-4, a-3)
dobj(puzzled-2, minute-4)
advmod(says-8, then-6)
nsubj(says-8, he-7)
parataxis(puzzled-2, says-8)
dep(says-8, Well-11)

(ROOT
  (S
    (NP (NNP Ef) (NNP dat))
    (VP (VBZ ai) (RB n't)
      (NP
        (NP (NNP de) (NNS beatenes) (POS '))
        (NN tale))
      (ADVP (RB ever))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD struck)))))
    (. .)))

nn(dat-2, Ef-1)
nsubj(tale-8, dat-2)
cop(tale-8, ai-3)
neg(tale-8, n't-4)
nn(beatenes-6, de-5)
poss(tale-8, beatenes-6)
root(ROOT-0, tale-8)
advmod(tale-8, ever-9)
nsubj(struck-11, I-10)
dep(tale-8, struck-11)

(ROOT
  (S
    (NP
      (NP (JJ Jist) (NNS gits))
      (PP (TO to)
        (NP (IN de) (NN place))))
    (VP (VBP whah)
      (SBAR
        (S
          (NP (IN de) (NN intrust))
          (VP (VBZ is)
            (NP
              (NP (NN gittin) (POS '))
              (NN red-hot))
            (, ,)
            (ADVP (IN en) (RB down))
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBZ breaks))))))))
    (. .)))

amod(gits-2, Jist-1)
nsubj(whah-6, gits-2)
amod(place-5, de-4)
prep_to(gits-2, place-5)
root(ROOT-0, whah-6)
amod(intrust-8, de-7)
nsubj(red-hot-12, intrust-8)
cop(red-hot-12, is-9)
poss(red-hot-12, gittin-10)
ccomp(whah-6, red-hot-12)
advmod(red-hot-12, en-14)
advmod(en-14, down-15)
nsubj(breaks-17, she-16)
dep(red-hot-12, breaks-17)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP
      (NP (NNP Mars) (NNP Tom))
      (, ,)
      (NP (NN dey)))
    (VP (VBP ai) (RB n't)
      (NP
        (NP (DT no)
          (ADJP (JJ SENSE)
            (PP (IN in)
              (NP (DT a) (NN tale) (NN dat))))
          (NNS acts))
        (PP (IN like)
          (NP (NN dat)))))
    (. .)))

discourse(acts-15, Why-1)
nn(Tom-4, Mars-3)
nsubj(acts-15, Tom-4)
appos(Tom-4, dey-6)
cop(acts-15, ai-7)
neg(acts-15, n't-8)
neg(acts-15, no-9)
amod(acts-15, SENSE-10)
det(dat-14, a-12)
nn(dat-14, tale-13)
prep_in(SENSE-10, dat-14)
root(ROOT-0, acts-15)
prep_like(acts-15, dat-17)

(ROOT
  (S
    (NP (NNP Hai))
    (RB n't)
    (NP (PRP you))
    (VP (VBD got)
      (NP (DT no) (NN IDEA))
      (SBAR (IN whether)
        (S
          (NP (IN de) (NN man))
          (VP (VBD got)
            (SBAR
              (S
                (NP (NNP de) (NNP camel))
                (ADVP (RB back))
                (VP (VBP er) (RB not))))))))
    (. ?) ('' '')))

nsubj(got-4, Hai-1)
neg(got-4, n't-2)
nsubj(got-4, you-3)
root(ROOT-0, got-4)
neg(IDEA-6, no-5)
dobj(got-4, IDEA-6)
mark(got-10, whether-7)
amod(man-9, de-8)
nsubj(got-10, man-9)
ccomp(got-4, got-10)
nn(camel-12, de-11)
nsubj(er-14, camel-12)
advmod(er-14, back-13)
ccomp(got-10, er-14)
neg(er-14, not-15)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP I))
    (VP (VBP have) (RB n't))
    (. .) ('' '')))

discourse(have-5, No-2)
nsubj(have-5, I-4)
root(ROOT-0, have-5)
neg(have-5, n't-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP myself))
            (ADVP (RB there))
            (VP (VBD war) (RB n't)
              (VP
                (NP (DT no) (NN sense))
                (PP (IN in)
                  (NP (DT the) (NN tale)))))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB chop)
              (NP (NN square))
              (PRT (RP off))
              (ADVP (DT that) (NN way)
                (SBAR (IN before)
                  (S
                    (NP (PRP it))
                    (VP (VBP come)
                      (PP (TO to)
                        (NP (NN anything))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP war) (RB n't)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB say)
                (ADVP (RB so))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB see)
                        (S
                          (S
                            (NP (NNP Tom))
                            (VP (VBD was)
                              (VP (VBN souring)
                                (PRT (RP up))
                                (ADVP (RB pretty) (RB fast)
                                  (PP (IN over)
                                    (NP
                                      (NP (DT the) (NN way))
                                      (SBAR
                                        (S
                                          (NP (PRP it))
                                          (VP (VBD flatted)
                                            (PRT (RP out)))))))))))
                          (CC and)
                          (S
                            (S
                              (NP (DT the) (NN way) (NNP Jim))
                              (VP (VBD had)
                                (VP (VBN popped)
                                  (PP (IN on)
                                    (PP (TO to)
                                      (NP
                                        (NP (DT the) (JJ weak) (NN place))
                                        (PP (IN in)
                                          (NP (PRP it)))))))))
                            (, ,)
                            (CC and)
                            (S
                              (NP (PRP I))
                              (VP (VBP do) (RB n't)
                                (VP (VB think)
                                  (SBAR
                                    (S
                                      (NP (PRP it))
                                      (VP (VBZ 's)
                                        (ADJP (JJ fair)
                                          (PP (IN for)
                                            (NP (NN everybody))))
                                        (S
                                          (VP (TO to)
                                            (VP (VB pile)
                                              (PRT (RP on))
                                              (PP (TO to)
                                                (NP (DT a) (NN feller)))
                                              (SBAR
                                                (WHADVP (WRB when))
                                                (S
                                                  (NP (PRP he))
                                                  (VP (VBZ 's)
                                                    (ADJP (RP down))))))))))))))))))))))))))
    (. .)))

nsubj(see-2, I-1)
nsubj(chop-14, I-1)
root(ROOT-0, see-2)
nsubj(war-5, myself-3)
advmod(war-5, there-4)
ccomp(see-2, war-5)
neg(war-5, n't-6)
neg(sense-8, no-7)
dep(war-5, sense-8)
det(tale-11, the-10)
prep_in(sense-8, tale-11)
aux(chop-14, to-13)
xcomp(see-2, chop-14)
dobj(chop-14, square-15)
prt(chop-14, off-16)
det(way-18, that-17)
advmod(chop-14, way-18)
mark(come-21, before-19)
nsubj(come-21, it-20)
dep(way-18, come-21)
prep_to(come-21, anything-23)
nsubj(war-27, I-26)
conj_but(see-2, war-27)
neg(war-27, n't-28)
dep(war-27, going-29)
aux(say-31, to-30)
xcomp(going-29, say-31)
advmod(say-31, so-32)
mark(see-37, because-34)
nsubj(see-37, I-35)
aux(see-37, could-36)
advcl(say-31, see-37)
nsubjpass(souring-40, Tom-38)
auxpass(souring-40, was-39)
dep(see-37, souring-40)
prt(souring-40, up-41)
advmod(fast-43, pretty-42)
advmod(souring-40, fast-43)
det(way-46, the-45)
prep_over(fast-43, way-46)
nsubj(flatted-48, it-47)
rcmod(way-46, flatted-48)
prt(flatted-48, out-49)
det(Jim-53, the-51)
nn(Jim-53, way-52)
nsubj(popped-55, Jim-53)
aux(popped-55, had-54)
dep(see-37, popped-55)
conj_and(souring-40, popped-55)
prep(popped-55, on-56)
pcomp(on-56, to-57)
det(place-60, the-58)
amod(place-60, weak-59)
pobj(to-57, place-60)
prep_in(place-60, it-62)
nsubj(think-68, I-65)
aux(think-68, do-66)
neg(think-68, n't-67)
conj_and(souring-40, think-68)
conj_and(popped-55, think-68)
nsubj(fair-71, it-69)
nsubj(pile-75, it-69)
cop(fair-71, 's-70)
ccomp(think-68, fair-71)
prep_for(fair-71, everybody-73)
aux(pile-75, to-74)
xcomp(fair-71, pile-75)
prt(pile-75, on-76)
det(feller-79, a-78)
prep_to(pile-75, feller-79)
advmod(down-83, when-80)
nsubj(down-83, he-81)
cop(down-83, 's-82)
advcl(pile-75, down-83)

(ROOT
  (S
    (S (CC But)
      (NP (NNP Tom) (PRP he))
      (VP
        (VP (VBZ whirls)
          (PP (IN on)
            (NP (PRP me))))
        (CC and)
        (VP (VBZ says))))
    (: :) (`` ``)
    (SBARQ
      (WHNP (WP What))
      (SQ (VBP do)
        (NP (PRP YOU))
        (VP (VB think)
          (PP (IN of)
            (NP (DT the) (NN tale))))))
    (. ?) ('' '')))

nsubj(whirls-4, Tom-2)
nsubj(says-8, Tom-2)
dep(Tom-2, he-3)
root(ROOT-0, whirls-4)
prep_on(whirls-4, me-6)
conj_and(whirls-4, says-8)
dobj(think-14, What-11)
aux(think-14, do-12)
nsubj(think-14, YOU-13)
parataxis(whirls-4, think-14)
det(tale-17, the-16)
prep_of(think-14, tale-17)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP
              (VP (VB come)
                (PRT (RP out)))
              (CC and)
              (VP (VB make)
                (NP (DT a) (JJ clean) (NN breast)))))))
      (CC and)
      (VP (VBP say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD did)
              (VP (VB seem)
                (PP (TO to)
                  (NP (PRP me)))
                (, ,)
                (ADVP (RB too))
                (, ,)
                (SBAR
                  (ADVP (JJ same))
                  (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBD did)
                      (PP (TO to)
                        (NP (NNP Jim)))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (SBAR (RB as) (RB long) (IN as)
                            (S
                              (NP (DT the) (NN tale))
                              (VP
                                (VP (VBD stopped)
                                  (NP (NN square))
                                  (PP (IN in)
                                    (NP (DT the) (NN middle))))
                                (CC and)
                                (VP
                                  (ADVP (RB never))
                                  (VBD got)
                                  (PP (TO to)
                                    (NP (DT no) (NN place)))))))
                          (, ,)
                          (NP (PRP it))
                          (ADVP (RB really))
                          (VP (VBP war) (RB n't)
                            (ADJP (JJ worth)))))))))))))
      (NP
        (NP (DT the) (NN trouble))
        (PP (IN of)
          (S
            (VP (VBG telling))))))
    (. .)))

prep_of(had-7, course-2)
advmod(had-7, then-4)
nsubj(had-7, I-6)
nsubj(say-17, I-6)
root(ROOT-0, had-7)
aux(come-9, to-8)
xcomp(had-7, come-9)
prt(come-9, out-10)
xcomp(had-7, make-12)
conj_and(come-9, make-12)
det(breast-15, a-13)
amod(breast-15, clean-14)
dobj(make-12, breast-15)
conj_and(had-7, say-17)
nsubj(seem-20, it-18)
aux(seem-20, did-19)
ccomp(say-17, seem-20)
prep_to(seem-20, me-22)
advmod(seem-20, too-24)
advmod(did-29, same-26)
mark(did-29, as-27)
nsubj(did-29, it-28)
advcl(seem-20, did-29)
prep_to(did-29, Jim-31)
mark(war-53, that-33)
advmod(stopped-39, as-34)
advmod(stopped-39, long-35)
mark(stopped-39, as-36)
det(tale-38, the-37)
nsubj(stopped-39, tale-38)
nsubj(got-46, tale-38)
advcl(war-53, stopped-39)
dobj(stopped-39, square-40)
det(middle-43, the-42)
prep_in(stopped-39, middle-43)
neg(got-46, never-45)
conj_and(stopped-39, got-46)
advcl(war-53, got-46)
neg(place-49, no-48)
prep_to(got-46, place-49)
nsubj(war-53, it-51)
advmod(war-53, really-52)
ccomp(did-29, war-53)
neg(war-53, n't-54)
acomp(war-53, worth-55)
det(trouble-57, the-56)
dobj(had-7, trouble-57)
nsubj(come-9, trouble-57)
nsubj(make-12, trouble-57)
prepc_of(trouble-57, telling-59)

(ROOT
  (S
    (NP
      (NP (NNP Tom) (POS 's))
      (NN chin))
    (VP
      (VP (VBD dropped)
        (PP (IN on)
          (NP (PRP$ his) (NN breast))))
      (, ,)
      (CC and)
      (`` `)
      (VP (VBD stead)
        (PP (IN of)
          (S
            (VP (VBG being)
              (ADJP (JJ mad)
                (PRN (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (PRP I))
                      (VP (VBD reckoned)
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (MD 'd)
                              (VP (VB be))))))))
                  (, ,))
                (S
                  (VP (TO to)
                    (VP (VB hear)
                      (S
                        (S
                          (NP (PRP me))
                          (VP (VBP scoff)
                            (PP (IN at)
                              (NP
                                (NP (PRP$ his) (NN tale))
                                (NP (DT that) (NN way))))
                            (, ,)
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (VBD seemed)
                                  (S
                                    (VP (TO to)
                                      (VP (VB be)
                                        (ADJP (RB only) (JJ sad))))))))))
                        (: ;)
                        (CC and)
                        (S
                          (NP (PRP he))
                          (VP (VBZ says) (: :) (`` ``)
                            (S
                              (S
                                (NP (DT Some) (NNS people))
                                (VP (MD can)
                                  (VP (VB see))))
                              (, ,)
                              (CC and)
                              (S
                                (NP (DT some))
                                (VP (MD ca) (RB n't)))))))))))))))
      (: --)
      (SBAR (RB just) (IN as)
        (S
          (NP (DT that) (NN man))
          (VP (VBD said)))))
    (. .)))

poss(chin-3, Tom-1)
nsubj(dropped-4, chin-3)
nsubj(stead-11, chin-3)
root(ROOT-0, dropped-4)
poss(breast-7, his-6)
prep_on(dropped-4, breast-7)
conj_and(dropped-4, stead-11)
cop(mad-14, being-13)
prepc_of(stead-11, mad-14)
mark(reckoned-18, as-16)
nsubj(reckoned-18, I-17)
dep(mad-14, reckoned-18)
nsubj(be-21, he-19)
aux(be-21, 'd-20)
ccomp(reckoned-18, be-21)
aux(hear-24, to-23)
xcomp(mad-14, hear-24)
nsubj(scoff-26, me-25)
dep(hear-24, scoff-26)
poss(tale-29, his-28)
prep_at(scoff-26, tale-29)
det(way-31, that-30)
dep(tale-29, way-31)
nsubj(seemed-34, he-33)
nsubj(sad-38, he-33)
ccomp(scoff-26, seemed-34)
aux(sad-38, to-35)
cop(sad-38, be-36)
advmod(sad-38, only-37)
xcomp(seemed-34, sad-38)
nsubj(says-42, he-41)
dep(hear-24, says-42)
conj_and(scoff-26, says-42)
det(people-46, Some-45)
nsubj(see-48, people-46)
aux(see-48, can-47)
dep(says-42, see-48)
nsubj(ca-52, some-51)
dep(says-42, ca-52)
conj_and(see-48, ca-52)
neg(ca-52, n't-53)
advmod(said-59, just-55)
mark(said-59, as-56)
det(man-58, that-57)
nsubj(said-59, man-58)
advcl(dropped-4, said-59)
conj_and(dropped-4, said-59)

(ROOT
  (S
    (S
      (VP (NNP Let)
        (NP (RB alone) (DT a) (NN camel))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT a) (NN cyclone))
        (VP (VBD had)
          (VP (VBN gone)
            (PP (IN by))))))
    (, ,)
    (NP (PRP YOU))
    (ADVP (RB duffers))
    (VP (MD would) (RB n't)
      (S
        (NP (`` `)
          (NP (SYM a))
          ('' ')
          (VP (VBN noticed)
            (NP (DT the) (NN track))))))
    (. .) ('' '')))

dep(camel-4, Let-1)
advmod(camel-4, alone-2)
det(camel-4, a-3)
ccomp(would-15, camel-4)
mark(gone-10, if-6)
det(cyclone-8, a-7)
nsubj(gone-10, cyclone-8)
aux(gone-10, had-9)
advcl(would-15, gone-10)
prep(gone-10, by-11)
nsubj(would-15, YOU-13)
advmod(would-15, duffers-14)
root(ROOT-0, would-15)
neg(would-15, n't-16)
dep(would-15, a-18)
vmod(a-18, noticed-20)
det(track-22, the-21)
dobj(noticed-20, track-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (VBD meant)
                (PP (IN by)
                  (NP (DT that)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB n't)
        (VP (VB say))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (RB just) (CD one))
            (PP (IN of)
              (NP (PRP$ his) (NNS irrulevances))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP reckon)))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ full))
        (PP (IN of)
          (NP (PRP them)))
        (, ,)
        (ADVP (RB sometimes))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP
              (VP (VBD was)
                (PP (IN in)
                  (NP (DT a) (JJ close) (NN place))))
              (CC and)
              (VP (MD could) (RB n't)
                (VP (VB see)
                  (NP (DT no) (JJ other) (NN way))
                  (PRT (RP out)))))))))
    (: --)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB mind))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
dobj(meant-7, what-5)
nsubj(meant-7, he-6)
ccomp(know-4, meant-7)
prep_by(meant-7, that-9)
nsubj(say-15, he-12)
aux(say-15, did-13)
neg(say-15, n't-14)
conj_and(know-4, say-15)
nsubj(one-20, it-17)
cop(one-20, was-18)
advmod(one-20, just-19)
ccomp(reckon-26, one-20)
poss(irrulevances-23, his-22)
prep_of(one-20, irrulevances-23)
nsubj(reckon-26, I-25)
conj_and(know-4, reckon-26)
nsubj(full-30, he-28)
cop(full-30, was-29)
conj_and(know-4, full-30)
prep_of(full-30, them-32)
advmod(full-30, sometimes-34)
advmod(was-38, when-36)
nsubj(was-38, he-37)
nsubj(see-46, he-37)
advcl(full-30, was-38)
det(place-42, a-40)
amod(place-42, close-41)
prep_in(was-38, place-42)
aux(see-46, could-44)
neg(see-46, n't-45)
advcl(full-30, see-46)
conj_and(was-38, see-46)
neg(way-49, no-47)
amod(way-49, other-48)
dobj(see-46, way-49)
prt(see-46, out-50)
nsubj(mind-56, I-53)
aux(mind-56, did-54)
neg(mind-56, n't-55)
conj_but(know-4, mind-56)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD 'd)
        (VP (VBN spotted)
          (NP (DT the) (JJ soft) (NN place))
          (PP (IN in)
            (NP
              (NP (DT that) (NN tale))
              (ADJP (JJ sharp) (JJ enough)))))))
    (, ,)
    (NP (PRP he))
    (VP (MD could) (RB n't)
      (VP (VB git)
        (PRT (RP away))
        (PP (IN from)
          (NP (DT that) (JJ little) (NN fact)))))
    (. .)))

nsubj(spotted-3, We-1)
aux(spotted-3, 'd-2)
ccomp(git-16, spotted-3)
det(place-6, the-4)
amod(place-6, soft-5)
dobj(spotted-3, place-6)
det(tale-9, that-8)
prep_in(spotted-3, tale-9)
amod(enough-11, sharp-10)
amod(tale-9, enough-11)
nsubj(git-16, he-13)
aux(git-16, could-14)
neg(git-16, n't-15)
root(ROOT-0, git-16)
det(fact-21, that-19)
amod(fact-21, little-20)
prep_away_from(git-16, fact-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD graveled)
      (NP (PRP him))
      (PP (IN like)
        (NP (DT the) (NN nation)))
      (, ,)
      (ADVP (RB too)))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP reckon)))
      (, ,))
    (SBAR (RB much) (IN as)
      (S
        (NP (PRP he))
        (VP (VBD tried)
          (S (RB not)
            (VP (TO to)
              (VP (VB let)
                (PRT (RP on))))))))
    (. .)))

nsubj(graveled-2, It-1)
root(ROOT-0, graveled-2)
dobj(graveled-2, him-3)
det(nation-6, the-5)
prep_like(graveled-2, nation-6)
advmod(graveled-2, too-8)
nsubj(reckon-11, I-10)
parataxis(graveled-2, reckon-11)
advmod(tried-16, much-13)
mark(tried-16, as-14)
nsubj(tried-16, he-15)
nsubj(let-19, he-15)
dep(graveled-2, tried-16)
neg(let-19, not-17)
aux(let-19, to-18)
xcomp(tried-16, let-19)
prt(let-19, on-20)

(ROOT
  (NP (NNP CHAPTER) (NNP VIII) (. .)))

nn(VIII-2, CHAPTER-1)
root(ROOT-0, VIII-2)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP DISAPPEARING) (NNP LAKE) (NNP WE))
      (VP
        (VP (VBD had)
          (NP
            (NP (DT an) (JJ early) (NN breakfast))
            (PP (IN in)
              (NP (DT the) (NN morning)))))
        (, ,)
        (CC and)
        (VP (VBD set)
          (S
            (VP (VBG looking)
              (PRT (RP down))
              (PP (IN on)
                (NP (DT the) (NN desert))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN weather))
      (VP (VBD was)
        (ADVP (RB ever))
        (ADJP (RB so) (JJ bammy)
          (CC and)
          (JJ lovely))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (PRP we))
            (VP (VBD war) (RB n't)
              (VP
                (ADVP (RB high) (RB up))))))))
    (. .)))

det(WE-4, THE-1)
nn(WE-4, DISAPPEARING-2)
nn(WE-4, LAKE-3)
nsubj(had-5, WE-4)
nsubj(set-14, WE-4)
root(ROOT-0, had-5)
det(breakfast-8, an-6)
amod(breakfast-8, early-7)
dobj(had-5, breakfast-8)
det(morning-11, the-10)
prep_in(breakfast-8, morning-11)
conj_and(had-5, set-14)
xcomp(set-14, looking-15)
prt(looking-15, down-16)
det(desert-19, the-18)
prep_on(looking-15, desert-19)
det(weather-23, the-22)
nsubj(bammy-27, weather-23)
nsubj(lovely-29, weather-23)
cop(bammy-27, was-24)
advmod(bammy-27, ever-25)
advmod(bammy-27, so-26)
conj_and(had-5, bammy-27)
conj_and(had-5, lovely-29)
conj_and(bammy-27, lovely-29)
mark(war-33, although-31)
nsubj(war-33, we-32)
advcl(bammy-27, war-33)
neg(war-33, n't-34)
advmod(up-36, high-35)
dep(war-33, up-36)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB come)
              (PRT (RP down))
              (PP
                (ADVP (JJR lower)
                  (CC and)
                  (JJR lower))
                (IN after)
                (NP
                  (NP (NN sundown))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN desert))
                      (, ,)
                      (SBAR
                        (SBAR (IN because)
                          (S
                            (NP (PRP it))
                            (VP (VBZ cools)
                              (PRT (RP off))
                              (ADVP (RB so) (RB fast)))))
                        (: ;)
                        (CC and)
                        (SBAR (RB so)))))))
              (, ,)
              (PP (IN by)
                (NP
                  (NP (DT the) (NN time))
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (VP (VBG getting)
                          (PP (IN toward)
                            (NP (NN dawn))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG skimming)
        (ADVP (IN along)
          (NP
            (QP (RB only) (DT a) (JJ little))
            (NNS ways)))
        (PP (IN above)
          (NP (DT the) (NN sand)))))
    (. .)))

nsubj(have-2, You-1)
nsubj(come-4, You-1)
ccomp(skimming-36, have-2)
aux(come-4, to-3)
xcomp(have-2, come-4)
prt(come-4, down-5)
advmod(come-4, lower-6)
advmod(come-4, lower-8)
conj_and(lower-6, lower-8)
prep_after(come-4, sundown-10)
det(desert-13, the-12)
prep_in(sundown-10, desert-13)
mark(cools-17, because-15)
nsubj(cools-17, it-16)
dep(desert-13, cools-17)
prt(cools-17, off-18)
advmod(fast-20, so-19)
advmod(cools-17, fast-20)
dep(desert-13, so-23)
conj_and(cools-17, so-23)
det(time-27, the-26)
prep_by(come-4, time-27)
nsubj(getting-30, it-28)
aux(getting-30, is-29)
rcmod(time-27, getting-30)
prep_toward(getting-30, dawn-32)
nsubj(skimming-36, you-34)
aux(skimming-36, are-35)
root(ROOT-0, skimming-36)
advmod(skimming-36, along-37)
quantmod(little-40, only-38)
quantmod(little-40, a-39)
num(ways-41, little-40)
pobj(along-37, ways-41)
det(sand-44, the-43)
prep_above(skimming-36, sand-44)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD was)
      (VP
        (VP (VBG watching)
          (NP
            (NP (DT the) (NN shadder))
            (PP (IN of)
              (NP
                (NP (DT the) (NN balloon) (NN slide))
                (PP (IN along)
                  (NP (DT the) (NN ground)))))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB now)
            (CC and)
            (RB then))
          (VBG gazing)
          (PRT (RP off))
          (PP (IN across)
            (NP (DT the) (NN desert)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (SBAR (IN if)
                      (S
                        (NP (NN anything))
                        (VP (VBD was)
                          (UCP
                            (VP (VBG stirring))
                            (, ,)
                            (CC and)
                            (PP (RB then) (RB down) (IN on)
                              (ADVP
                                (NP (DT the) (NN shadder))
                                (RB again))))
                          (, ,)
                          (SBAR
                            (WHADVP (WRB when)
                              (NP
                                (NP (DT all))
                                (PP (IN of)
                                  (NP (DT a) (JJ sudden)
                                    (ADJP (RB almost) (JJ right)
                                      (PP (IN under)
                                        (NP (PRP us))))))))
                            (S
                              (NP (PRP we))
                              (VP (VBP see)
                                (NP
                                  (NP (DT a) (NN lot))
                                  (PP (IN of)
                                    (NP (NNS men)
                                      (CC and)
                                      (NNS camels)))))))))))))))
          (S
            (VP (VBG laying)
              (VP (VBN scattered)
                (S
                  (ADJP (IN about)))
                (, ,)
                (S
                  (ADJP (RB perfectly) (JJ quiet)))
                (, ,)
                (SBAR (IN like)
                  (S
                    (NP (PRP they))
                    (VP (VBD was)
                      (ADJP (RB asleep)))))))))))
    (. .)))

nsubj(watching-3, We-1)
nsubj(gazing-18, We-1)
aux(watching-3, was-2)
root(ROOT-0, watching-3)
det(shadder-5, the-4)
dobj(watching-3, shadder-5)
det(slide-9, the-7)
nn(slide-9, balloon-8)
prep_of(shadder-5, slide-9)
det(ground-12, the-11)
prep_along(slide-9, ground-12)
advmod(gazing-18, now-15)
conj_and(now-15, then-17)
advmod(gazing-18, then-17)
conj_and(watching-3, gazing-18)
prt(gazing-18, off-19)
det(desert-22, the-21)
prep_across(gazing-18, desert-22)
aux(see-24, to-23)
vmod(desert-22, see-24)
mark(was-27, if-25)
nsubj(was-27, anything-26)
advcl(see-24, was-27)
dep(was-27, stirring-28)
advmod(on-33, then-31)
advmod(on-33, down-32)
dep(was-27, on-33)
conj_and(stirring-28, on-33)
det(shadder-35, the-34)
npadvmod(again-36, shadder-35)
pcomp(on-33, again-36)
advmod(see-48, when-38)
dep(when-38, all-39)
det(right-44, a-41)
amod(right-44, sudden-42)
advmod(right-44, almost-43)
prep_of(all-39, right-44)
prep_under(right-44, us-46)
nsubj(see-48, we-47)
advcl(was-27, see-48)
det(lot-50, a-49)
dobj(see-48, lot-50)
prep_of(lot-50, men-52)
prep_of(lot-50, camels-54)
conj_and(men-52, camels-54)
vmod(gazing-18, laying-55)
dep(laying-55, scattered-56)
dep(scattered-56, about-57)
advmod(quiet-60, perfectly-59)
dep(scattered-56, quiet-60)
mark(asleep-65, like-62)
nsubj(asleep-65, they-63)
cop(asleep-65, was-64)
advcl(scattered-56, asleep-65)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP
          (VP (VBD shut)
            (PRT (RP off))
            (NP (DT the) (NN power)))
          (, ,)
          (CC and)
          (VP (VBN backed)
            (PRT (RP up))))
        (CC and)
        (VP (VBD stood)
          (PRT (RP over))
          (NP (PRP them)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (VBP see)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD was) (RB all)
              (ADJP (JJ dead)))))))
    (. .)))

nsubj(shut-2, We-1)
nsubj(backed-8, We-1)
nsubj(stood-11, We-1)
root(ROOT-0, shut-2)
prt(shut-2, off-3)
det(power-5, the-4)
dobj(shut-2, power-5)
conj_and(shut-2, backed-8)
prt(backed-8, up-9)
conj_and(shut-2, stood-11)
prt(stood-11, over-12)
dobj(stood-11, them-13)
advmod(see-18, then-16)
nsubj(see-18, we-17)
conj_and(shut-2, see-18)
mark(dead-23, that-19)
nsubj(dead-23, they-20)
cop(dead-23, was-21)
advmod(dead-23, all-22)
ccomp(see-18, dead-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBP give)
      (NP (PRP us))
      (NP (DT the) (JJ cold) (NNS shivers)))
    (. .)))

nsubj(give-2, It-1)
root(ROOT-0, give-2)
iobj(give-2, us-3)
det(shivers-6, the-4)
amod(shivers-6, cold-5)
dobj(give-2, shivers-6)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBD made)
      (S
        (NP (PRP us))
        (VP
          (VP (VB hush)
            (PRT (RP down))
            (, ,)
            (ADVP (RB too)))
          (, ,)
          (CC and)
          (VP (VB talk)
            (NP
              (NP (JJ low) (, ,) (JJ like) (NNS people))
              (PP (IN at)
                (NP (DT a) (NN funeral))))))))
    (. .)))

cc(made-3, And-1)
nsubj(made-3, it-2)
root(ROOT-0, made-3)
nsubj(hush-5, us-4)
nsubj(talk-11, us-4)
ccomp(made-3, hush-5)
prt(hush-5, down-6)
advmod(hush-5, too-8)
ccomp(made-3, talk-11)
conj_and(hush-5, talk-11)
amod(people-15, low-12)
amod(people-15, like-14)
dobj(talk-11, people-15)
det(funeral-18, a-17)
prep_at(people-15, funeral-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD dropped)
          (ADJP (RB down) (JJ slow)))
        (CC and)
        (VP (VBD stopped))))
    (, ,)
    (CC and)
    (S
      (NP (PRP me)
        (CC and)
        (NNP Tom))
      (VP
        (VP (VBD clumb)
          (PRT (RP down)))
        (CC and)
        (VP (VBD went)
          (PP (IN among)
            (NP (PRP them))))))
    (. .)))

nsubj(dropped-2, We-1)
nsubj(stopped-6, We-1)
root(ROOT-0, dropped-2)
advmod(slow-4, down-3)
acomp(dropped-2, slow-4)
conj_and(dropped-2, stopped-6)
nsubj(clumb-12, me-9)
nsubj(went-15, me-9)
conj_and(me-9, Tom-11)
nsubj(clumb-12, Tom-11)
conj_and(dropped-2, clumb-12)
prt(clumb-12, down-13)
conj_and(dropped-2, went-15)
conj_and(clumb-12, went-15)
prep_among(went-15, them-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP
          (NP (NNS men))
          (, ,)
          (CC and)
          (NP (NNS women))
          (, ,))
        (CC and)
        (NP (NNS children))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, men-3)
nsubj(was-2, women-6)
conj_and(men-3, women-6)
nsubj(was-2, children-9)
conj_and(men-3, children-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD was)
      (ADJP
        (ADJP (JJ dried)
          (PP (IN by)
            (NP (DT the) (NN sun))))
        (CC and)
        (ADJP (JJ dark)
          (CC and)
          (JJ shriveled)
          (CC and)
          (JJ leathery)))
      (, ,)
      (PP (IN like)
        (NP
          (NP (DT the) (NNS pictures))
          (PP (IN of)
            (NP
              (NP (NNS mummies))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP see)
                    (PP (IN in)
                      (NP (NNS books)))))))))))
    (. .)))

nsubj(dried-3, They-1)
nsubj(shriveled-10, They-1)
cop(dried-3, was-2)
root(ROOT-0, dried-3)
det(sun-6, the-5)
prep_by(dried-3, sun-6)
dep(shriveled-10, dark-8)
conj_and(dried-3, shriveled-10)
conj_and(dried-3, leathery-12)
conj_and(shriveled-10, leathery-12)
det(pictures-16, the-15)
prep_like(dried-3, pictures-16)
prep_of(pictures-16, mummies-18)
nsubj(see-20, you-19)
rcmod(mummies-18, see-20)
prep_in(see-20, books-22)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB yet))
      (NP (PRP they))
      (VP (VBD looked)
        (ADVP (RB just))
        (PP (IN as)
          (NP (NN human)))))
    (, ,)
    (NP (PRP you))
    (VP (MD would) (RB n't)
      (S
        (NP (`` `)
          (NP (SYM a))
          ('' ')
          (VP (VBN believed)
            (S
              (NP (PRP it)))
            (: ;)
            (SBAR (RB just) (IN like)
              (S
                (NP (PRP they))
                (VP (VBD was)
                  (ADJP (RB asleep)))))))))
    (. .)))

cc(looked-4, And-1)
advmod(looked-4, yet-2)
nsubj(looked-4, they-3)
ccomp(would-10, looked-4)
advmod(looked-4, just-5)
prep_as(looked-4, human-7)
nsubj(would-10, you-9)
root(ROOT-0, would-10)
neg(would-10, n't-11)
dep(would-10, a-13)
vmod(a-13, believed-15)
dep(believed-15, it-16)
advmod(asleep-22, just-18)
mark(asleep-22, like-19)
nsubj(asleep-22, they-20)
cop(asleep-22, was-21)
advcl(believed-15, asleep-22)
parataxis(believed-15, asleep-22)

(ROOT
  (S
    (S
      (NP
        (NP (DT Some))
        (PP (IN of)
          (NP (DT the) (NNS people)
            (CC and)
            (NNS animals))))
      (VP (VBD was)
        (VP
          (ADVP (RB partly))
          (VBN covered)
          (UCP
            (PP (IN with)
              (NP (NN sand)))
            (, ,)
            (CC but)
            (NP
              (NP (JJS most))
              (PP (IN of)
                (NP (PRP them))))))))
    (RB not) (, ,)
    (SBAR (IN for)
      (S
        (S
          (NP (DT the) (NN sand))
          (VP (VBD was)
            (ADJP (JJ thin))
            (ADVP (RB there))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN bed))
          (VP (VBD was)
            (ADJP (JJ gravel)
              (CC and)
              (JJ hard))))))
    (. .)))

nsubjpass(covered-9, Some-1)
det(people-4, the-3)
prep_of(Some-1, people-4)
prep_of(Some-1, animals-6)
conj_and(people-4, animals-6)
auxpass(covered-9, was-7)
advmod(covered-9, partly-8)
root(ROOT-0, covered-9)
dep(covered-9, with-10)
pobj(with-10, sand-11)
dep(covered-9, most-14)
conj_but(with-10, most-14)
prep_of(most-14, them-16)
neg(covered-9, not-17)
mark(thin-23, for-19)
det(sand-21, the-20)
nsubj(thin-23, sand-21)
cop(thin-23, was-22)
dep(covered-9, thin-23)
advmod(thin-23, there-24)
det(bed-28, the-27)
nsubj(gravel-30, bed-28)
nsubj(hard-32, bed-28)
cop(gravel-30, was-29)
dep(covered-9, gravel-30)
conj_and(thin-23, gravel-30)
conj_and(thin-23, hard-32)
conj_and(gravel-30, hard-32)

(ROOT
  (S
    (S
      (NP
        (NP (JJS Most))
        (PP (IN of)
          (NP (DT the) (NNS clothes))))
      (VP (VBD had)
        (VP (VBN rotted)
          (PRT (RP away)))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBD took)
            (NP
              (NP (NN hold))
              (PP (IN of)
                (NP (DT a) (NN rag)))))))
      (, ,)
      (NP (PRP it))
      (VP (VBD tore)
        (PP (IN with)
          (NP (DT a) (NN touch)))
        (, ,)
        (PP (IN like)
          (NP (NN spiderweb)))))
    (. .)))

nsubj(rotted-6, Most-1)
det(clothes-4, the-3)
prep_of(Most-1, clothes-4)
aux(rotted-6, had-5)
root(ROOT-0, rotted-6)
prt(rotted-6, away-7)
advmod(took-12, when-10)
nsubj(took-12, you-11)
advcl(tore-19, took-12)
dobj(took-12, hold-13)
det(rag-16, a-15)
prep_of(hold-13, rag-16)
nsubj(tore-19, it-18)
conj_and(rotted-6, tore-19)
det(touch-22, a-21)
prep_with(tore-19, touch-22)
prep_like(tore-19, spiderweb-25)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD reckoned)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBG laying)
                (ADVP (RB there))
                (PP (IN for)
                  (NP (NNS years)))))))))
    (. .)))

nsubj(reckoned-2, Tom-1)
root(ROOT-0, reckoned-2)
nsubj(laying-6, they-3)
aux(laying-6, had-4)
aux(laying-6, been-5)
ccomp(reckoned-2, laying-6)
advmod(laying-6, there-7)
prep_for(laying-6, years-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT Some))
        (PP (IN of)
          (NP (DT the) (NNS men))))
      (VP (VBD had)
        (NP (JJ rusty) (NNS guns))
        (PP (IN by)
          (NP (PRP them)))))
    (, ,)
    (NP (DT some))
    (VP
      (VP (VBD had)
        (NP (NNS swords))
        (PP (IN on)))
      (CC and)
      (VP (VBD had)
        (NP
          (NP (JJ shawl) (NNS belts))
          (PP (IN with)
            (NP
              (NP (JJ long) (, ,) (JJ silver-mounted) (NNS pistols))
              (VP (VBN stuck)
                (PP (IN in)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(had-5, Some-1)
det(men-4, the-3)
prep_of(Some-1, men-4)
ccomp(had-12, had-5)
amod(guns-7, rusty-6)
dobj(had-5, guns-7)
prep_by(had-5, them-9)
nsubj(had-12, some-11)
nsubj(had-16, some-11)
root(ROOT-0, had-12)
dobj(had-12, swords-13)
prep(had-12, on-14)
conj_and(had-12, had-16)
amod(belts-18, shawl-17)
dobj(had-16, belts-18)
amod(pistols-23, long-20)
amod(pistols-23, silver-mounted-22)
prep_with(belts-18, pistols-23)
vmod(pistols-23, stuck-24)
prep_in(stuck-24, them-26)

(ROOT
  (S
    (S
      (NP (PDT All) (DT the) (NNS camels))
      (VP (VBD had)
        (NP (PRP$ their) (NNS loads))
        (PP (IN on)
          (ADVP (RB yet)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NNS packs))
      (VP
        (VP (VBD had)
          (VP (VBN busted)
            (CC or)
            (VBN rotted)))
        (CC and)
        (VP (VBD spilt)
          (NP (DT the) (NN freight))
          (PRT (RP out))
          (PP (IN on)
            (NP (DT the) (NN ground))))))
    (. .)))

predet(camels-3, All-1)
det(camels-3, the-2)
nsubj(had-4, camels-3)
root(ROOT-0, had-4)
poss(loads-6, their-5)
dobj(had-4, loads-6)
prep(had-4, on-7)
pcomp(on-7, yet-8)
det(packs-12, the-11)
nsubj(busted-14, packs-12)
nsubj(rotted-16, packs-12)
nsubj(spilt-18, packs-12)
aux(busted-14, had-13)
conj_but(had-4, busted-14)
conj_but(had-4, rotted-16)
conj_or(busted-14, rotted-16)
conj_but(had-4, spilt-18)
conj_and(busted-14, spilt-18)
det(freight-20, the-19)
dobj(spilt-18, freight-20)
prt(spilt-18, out-21)
det(ground-24, the-23)
prep_on(spilt-18, ground-24)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD did) (RB n't)
        (VP (VB reckon)
          (SBAR
            (S
              (NP (DT the) (NNS swords))
              (VP (VBD was)
                (ADJP (DT any) (JJ good)
                  (PP (TO to)
                    (NP (DT the) (JJ dead) (NNS people))))
                (ADVP (DT any) (RBR more))))))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (VP (VBD took)
        (NP
          (NP
            (NP (CD one))
            (NP (RB apiece)))
          (, ,)
          (CC and)
          (NP (DT some) (NNS pistols)))))
    (. .)))

nsubj(reckon-4, We-1)
aux(reckon-4, did-2)
neg(reckon-4, n't-3)
root(ROOT-0, reckon-4)
det(swords-6, the-5)
nsubj(good-9, swords-6)
cop(good-9, was-7)
det(good-9, any-8)
ccomp(reckon-4, good-9)
det(people-13, the-11)
amod(people-13, dead-12)
prep_to(good-9, people-13)
dep(more-15, any-14)
advmod(good-9, more-15)
dep(reckon-4, so-17)
nsubj(took-19, we-18)
parataxis(reckon-4, took-19)
dobj(took-19, one-20)
dep(one-20, apiece-21)
det(pistols-25, some-24)
dobj(took-19, pistols-25)
conj_and(one-20, pistols-25)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD took)
        (NP (DT a) (JJ small) (NN box))
        (, ,)
        (ADVP (RB too))
        (, ,)
        (SBAR (IN because)
          (S
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP
                  (ADJP (RB so) (JJ handsome))
                  (CC and)
                  (ADJP (RB inlaid) (RB so) (JJ fine)))))
            (: ;)
            (CC and)
            (RB then)
            (S
              (NP (PRP we))
              (VP (VBD wanted)
                (S
                  (VP (TO to)
                    (VP (VB bury)
                      (NP (DT the) (NNS people)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBD war) (RB n't)
        (VP
          (VP
            (NP (DT no) (NN way))
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (PRP it))
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (MD could)
                        (VP (VB think)
                          (PP (IN of))))))))))
          (, ,)
          (CC and)
          (VP
            (NP (NN nothing))
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (PRP it))
                  (PP (IN with)
                    (UCP
                      (PP (CC but)
                        (NP (NN sand)))
                      (, ,)
                      (CC and)
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD would)
                            (VP (VB blow)
                              (ADVP (RB away) (RB again))
                              (, ,)
                              (PP (IN of)
                                (NP (NN course))))))))))))))))
    (. .)))

nsubj(took-2, We-1)
root(ROOT-0, took-2)
det(box-5, a-3)
amod(box-5, small-4)
dobj(took-2, box-5)
advmod(took-2, too-7)
mark(handsome-13, because-9)
nsubj(handsome-13, it-10)
nsubj(fine-17, it-10)
cop(handsome-13, was-11)
advmod(handsome-13, so-12)
advcl(took-2, handsome-13)
advmod(fine-17, inlaid-15)
advmod(fine-17, so-16)
advcl(took-2, fine-17)
conj_and(handsome-13, fine-17)
advmod(wanted-22, then-20)
nsubj(wanted-22, we-21)
nsubj(bury-24, we-21)
advcl(took-2, wanted-22)
conj_and(handsome-13, wanted-22)
aux(bury-24, to-23)
xcomp(wanted-22, bury-24)
det(people-26, the-25)
dobj(bury-24, people-26)
expl(war-30, there-29)
conj_but(took-2, war-30)
neg(war-30, n't-31)
neg(way-33, no-32)
nsubj(war-30, way-33)
aux(do-35, to-34)
vmod(way-33, do-35)
dobj(do-35, it-36)
mark(think-40, that-37)
nsubj(think-40, we-38)
aux(think-40, could-39)
ccomp(do-35, think-40)
prep(think-40, of-41)
nsubj(war-30, nothing-44)
nsubj(war-30, nothing-44)
conj_and(way-33, nothing-44)
aux(do-46, to-45)
vmod(nothing-44, do-46)
dobj(do-46, it-47)
prep(do-46, with-48)
dep(with-48, but-49)
pobj(but-49, sand-50)
nsubj(blow-55, that-53)
aux(blow-55, would-54)
dep(with-48, blow-55)
conj_and(but-49, blow-55)
advmod(again-57, away-56)
advmod(blow-55, again-57)
prep_of(blow-55, course-60)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP
        (VP (VBD mounted)
          (S
            (ADJP (JJ high))))
        (CC and)
        (VP (VBD sailed)
          (PRT (RP away)))
        (, ,)
        (CC and)
        (ADVP (RB pretty) (RB soon))
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ black) (NN spot))
              (PP (IN on)
                (NP (DT the) (NN sand))))
            (VP (VBD was)
              (ADVP (RB out))
              (PP (IN of)
                (NP (NN sight))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD would) (RB n't)
        (ADVP (RB ever))
        (VP (VB see)
          (NP (PRP them))
          (PP
            (ADVP
              (NP (JJ poor) (NNS people))
              (RB again))
            (IN in)
            (NP (DT this) (NN world))))))
    (. .)))

advmod(mounted-3, Then-1)
nsubj(mounted-3, we-2)
nsubj(sailed-6, we-2)
root(ROOT-0, mounted-3)
acomp(mounted-3, high-4)
conj_and(mounted-3, sailed-6)
prt(sailed-6, away-7)
advmod(soon-11, pretty-10)
advmod(mounted-3, soon-11)
conj_and(mounted-3, soon-11)
mark(was-18, that-12)
amod(spot-14, black-13)
nsubj(was-18, spot-14)
det(sand-17, the-16)
prep_on(spot-14, sand-17)
ccomp(mounted-3, was-18)
conj_and(mounted-3, was-18)
prep_out_of(was-18, sight-21)
nsubj(see-28, we-24)
aux(see-28, would-25)
neg(see-28, n't-26)
advmod(see-28, ever-27)
conj_and(mounted-3, see-28)
dobj(see-28, them-29)
amod(people-31, poor-30)
npadvmod(again-32, people-31)
advmod(see-28, again-32)
det(world-35, this-34)
prep_in(see-28, world-35)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD wondered))
        (, ,)
        (CC and)
        (VP (VBD reasoned))
        (, ,)
        (CC and)
        (VP (VBD tried)
          (S
            (VP (TO to)
              (VP (VB guess)
                (SBAR
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (PRP they))
                      (VP (VBP come)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADVP (RB there))))))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (PRP it))
                      (ADVP (DT all))
                      (VP (VBD happened)
                        (PP (TO to)
                          (NP (PRP them)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD could) (RB n't)
        (VP (VB make)
          (NP (PRP it))
          (PRT (RP out)))))
    (. .)))

nsubj(wondered-2, We-1)
nsubj(reasoned-5, We-1)
nsubj(tried-8, We-1)
nsubj(guess-10, We-1)
root(ROOT-0, wondered-2)
conj_and(wondered-2, reasoned-5)
conj_and(wondered-2, tried-8)
aux(guess-10, to-9)
xcomp(tried-8, guess-10)
advmod(come-13, how-11)
nsubj(come-13, they-12)
nsubj(be-15, they-12)
dep(guess-10, come-13)
aux(be-15, to-14)
xcomp(come-13, be-15)
advmod(be-15, there-16)
advmod(happened-22, how-19)
nsubj(happened-22, it-20)
advmod(happened-22, all-21)
dep(guess-10, happened-22)
conj_and(come-13, happened-22)
prep_to(happened-22, them-24)
nsubj(make-30, we-27)
aux(make-30, could-28)
neg(make-30, n't-29)
conj_but(wondered-2, make-30)
dobj(make-30, it-31)
prt(make-30, out-32)

(ROOT
  (S
    (S
      (LST (JJ First))
      (NP (PRP we))
      (VP (VBD thought)
        (SBAR
          (S
            (S
              (ADVP (RB maybe))
              (NP (PRP they))
              (VP (VBD got)
                (SBAR
                  (S
                    (VP
                      (VP (VBD lost))
                      (, ,)
                      (CC and)
                      (VP (VBD wandered)
                        (ADVP (IN around)
                          (CC and)
                          (IN about))
                        (SBAR (IN till)
                          (S
                            (NP (PRP$ their) (NN food)
                              (CC and)
                              (NN water))
                            (VP (VBP give)
                              (PRT (RP out)))))))))))
            (CC and)
            (S
              (S
                (NP (PRP they))
                (VP (VBN starved)
                  (PP (TO to)
                    (NP (NN death)))))
              (: ;)
              (CC but)
              (S
                (NP (NNP Tom))
                (VP (VBD said)
                  (SBAR
                    (S
                      (NP (DT no)
                        (NP (JJ wild) (NNS animals))
                        (CC nor)
                        (NP (NNS vultures)))
                      (VP (VBD had) (RB n't)
                        (VP (VBN meddled)
                          (PP (IN with)
                            (NP (PRP them))))))))))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (DT that) (NN guess))
      (VP (MD would) (RB n't)
        (VP (VB do))))
    (. .)))

dep(thought-3, First-1)
nsubj(thought-3, we-2)
root(ROOT-0, thought-3)
advmod(got-6, maybe-4)
nsubj(got-6, they-5)
dep(thought-3, got-6)
ccomp(got-6, lost-7)
ccomp(got-6, wandered-10)
conj_and(lost-7, wandered-10)
advmod(wandered-10, around-11)
advmod(wandered-10, about-13)
conj_and(around-11, about-13)
mark(give-19, till-14)
poss(food-16, their-15)
nsubj(give-19, food-16)
conj_and(food-16, water-18)
nsubj(give-19, water-18)
advcl(wandered-10, give-19)
prt(give-19, out-20)
nsubj(starved-23, they-22)
dep(thought-3, starved-23)
conj_and(got-6, starved-23)
prep_to(starved-23, death-25)
nsubj(said-29, Tom-28)
conj_and(got-6, said-29)
conj_but(starved-23, said-29)
neg(animals-32, no-30)
amod(animals-32, wild-31)
nsubj(meddled-37, animals-32)
conj_nor(animals-32, vultures-34)
nsubj(meddled-37, vultures-34)
aux(meddled-37, had-35)
neg(meddled-37, n't-36)
ccomp(said-29, meddled-37)
prep_with(meddled-37, them-39)
conj_and(thought-3, so-42)
det(guess-44, that-43)
nsubj(do-47, guess-44)
aux(do-47, would-45)
neg(do-47, n't-46)
ccomp(thought-3, do-47)

(ROOT
  (S (RB So)
    (PP (IN at)
      (NP (JJ last)))
    (NP (PRP we))
    (VP
      (VP (VBP give)
        (NP (PRP it))
        (PRT (RP up)))
      (, ,)
      (CC and)
      (VP (VBN judged)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD would) (RB n't)
              (VP (VB think)
                (PRT (RP about))
                (NP (PRP it))
                (ADVP (DT no) (RBR more))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBD made)
                      (S
                        (NP (PRP us))
                        (ADJP (JJ low-spirited))))))))))))
    (. .)))

advmod(give-5, So-1)
prep_at(give-5, last-3)
nsubj(give-5, we-4)
nsubj(judged-10, we-4)
root(ROOT-0, give-5)
dobj(give-5, it-6)
prt(give-5, up-7)
conj_and(give-5, judged-10)
nsubj(think-14, we-11)
aux(think-14, would-12)
neg(think-14, n't-13)
ccomp(judged-10, think-14)
prt(think-14, about-15)
dobj(think-14, it-16)
neg(more-18, no-17)
advmod(think-14, more-18)
mark(made-22, because-20)
nsubj(made-22, it-21)
advcl(think-14, made-22)
nsubj(low-spirited-24, us-23)
xcomp(made-22, low-spirited-24)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP (VBD opened)
        (NP (DT the) (NN box))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD had)
        (NP
          (NP
            (NP (NNS gems)
              (CC and)
              (NNS jewels))
            (PP (IN in)
              (NP (PRP it))))
          (, ,)
          (NP (RB quite) (DT a) (NN pile))
          (, ,)
          (CC and)
          (NP
            (NP (DT some) (JJ little) (NNS veils))
            (PP (IN of)
              (NP
                (NP (DT the) (NN kind))
                (SBAR
                  (S
                    (NP (DT the) (JJ dead) (NNS women))
                    (VP (VBD had)
                      (PP (IN on)))))))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (NNS fringes))
            (VP (VBN made)
              (PRT (RP out))
              (PP (IN of)
                (NP (JJ curious) (NN gold) (NN money)))
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (VBP war) (RB n't)
                    (ADJP (VBN acquainted)
                      (PP (IN with)))))))))))
    (. .)))

advmod(opened-3, Then-1)
nsubj(opened-3, we-2)
root(ROOT-0, opened-3)
det(box-5, the-4)
dobj(opened-3, box-5)
nsubj(had-9, it-8)
conj_and(opened-3, had-9)
dobj(had-9, gems-10)
dobj(had-9, jewels-12)
conj_and(gems-10, jewels-12)
prep_in(gems-10, it-14)
advmod(pile-18, quite-16)
det(pile-18, a-17)
dobj(had-9, pile-18)
conj_and(gems-10, pile-18)
det(veils-23, some-21)
amod(veils-23, little-22)
dobj(had-9, veils-23)
conj_and(gems-10, veils-23)
det(kind-26, the-25)
prep_of(veils-23, kind-26)
prep_on(had-30, kind-26)
det(women-29, the-27)
amod(women-29, dead-28)
nsubj(had-30, women-29)
rcmod(kind-26, had-30)
prep_with(had-9, fringes-34)
vmod(fringes-34, made-35)
amod(money-40, curious-38)
nn(money-40, gold-39)
prep_out_of(made-35, money-40)
mark(war-43, that-41)
nsubj(war-43, we-42)
ccomp(made-35, war-43)
neg(war-43, n't-44)
acomp(war-43, acquainted-45)
prep(acquainted-45, with-46)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD wondered)
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (ADVP (RB better))
            (VP
              (VP (VB go))
              (CC and)
              (VP (VB try)
                (S
                  (VP (TO to)
                    (VP (VB find)
                      (NP (PRP them))
                      (ADVP (RB again))))))
              (CC and)
              (VP (VB give)
                (NP (PRP it))
                (ADVP (RB back))))))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD thought)
          (NP (PRP it))
          (PRT (RP over)))
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (S
                (INTJ (UH no))
                (, ,)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP
                      (NP (DT a) (NN country))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD was)
                            (ADJP (JJ full)
                              (PP (IN of)
                                (NP (NNS robbers))))))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP they))
                  (VP (MD would)
                    (VP (VB come)
                      (CC and)
                      (VB steal)
                      (NP (PRP it))))))
              (: ;)
              (CC and)
              (RB then)
              (S
                (NP (DT the) (NN sin))
                (VP (MD would)
                  (VP (VB be)
                    (PP (IN on)
                      (NP (PRP us)))
                    (PP (IN for)
                      (S
                        (VP (VBG putting)
                          (NP (DT the) (NN temptation))
                          (PP (IN in)
                            (NP (PRP$ their) (NN way))))))))))))))
    (. .)))

nsubj(wondered-2, We-1)
root(ROOT-0, wondered-2)
mark(go-6, if-3)
nsubj(go-6, we-4)
nsubj(try-8, we-4)
nsubj(find-10, we-4)
nsubj(give-14, we-4)
advmod(go-6, better-5)
advcl(wondered-2, go-6)
advcl(wondered-2, try-8)
conj_and(go-6, try-8)
aux(find-10, to-9)
xcomp(try-8, find-10)
dobj(find-10, them-11)
advmod(find-10, again-12)
advcl(wondered-2, give-14)
conj_and(go-6, give-14)
dobj(give-14, it-15)
advmod(give-14, back-16)
nsubj(thought-20, Tom-19)
nsubj(said-24, Tom-19)
conj_but(wondered-2, thought-20)
dobj(thought-20, it-21)
prt(thought-20, over-22)
conj_but(wondered-2, said-24)
conj_and(thought-20, said-24)
discourse(country-30, no-25)
nsubj(country-30, it-27)
cop(country-30, was-28)
det(country-30, a-29)
dep(said-24, country-30)
nsubj(full-33, country-30)
cop(full-33, was-32)
rcmod(country-30, full-33)
prep_of(full-33, robbers-35)
nsubj(come-40, they-38)
nsubj(steal-42, they-38)
aux(come-40, would-39)
dep(said-24, come-40)
conj_and(country-30, come-40)
nsubj(full-33, come-40)
conj_and(country-30, steal-42)
conj_and(come-40, steal-42)
dobj(come-40, it-43)
advmod(be-50, then-46)
det(sin-48, the-47)
nsubj(be-50, sin-48)
aux(be-50, would-49)
dep(said-24, be-50)
conj_and(country-30, be-50)
nsubj(full-33, be-50)
prep_on(be-50, us-52)
prepc_for(be-50, putting-54)
det(temptation-56, the-55)
dobj(putting-54, temptation-56)
poss(way-59, their-58)
prep_in(putting-54, way-59)

(ROOT
  (S (CC So)
    (S
      (S
        (NP (PRP we))
        (VP (VBD went)
          (PRT (RP on))))
      (: ;)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBD wished)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD had)
                (VP (VBD took)
                  (NP
                    (NP (DT all))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (VBD had))))))))))))
    (, ,) (IN so)
    (S
      (NP (EX there))
      (VP (MD would) (RB n't)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN been)
              (NP
                (NP (DT no) (NN temptation))
                (PP (IN at)
                  (NP (DT all) (NN left)))))))))
    (. .)))

nsubj(went-3, we-2)
root(ROOT-0, went-3)
prt(went-3, on-4)
nsubj(wished-8, I-7)
conj_but(went-3, wished-8)
nsubj(took-11, we-9)
aux(took-11, had-10)
ccomp(wished-8, took-11)
dobj(took-11, all-12)
nsubj(had-14, they-13)
rcmod(all-12, had-14)
dep(went-3, so-16)
expl(would-18, there-17)
parataxis(went-3, would-18)
neg(would-18, n't-19)
dep(would-18, a-21)
cop(temptation-25, been-23)
neg(temptation-25, no-24)
vmod(a-21, temptation-25)
det(left-28, all-27)
prep_at(temptation-25, left-28)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD had)
        (VP (VBN had)
          (NP
            (NP (CD two) (NNS hours))
            (PP (IN of)
              (NP
                (NP (DT that))
                (VP (VBG blazing)
                  (NP (NN weather))
                  (ADVP (RB down) (RB there))))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (NP
          (NP (JJ dreadful) (NNS thirsty))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP we))
              (VP (VBD got)
                (ADVP (IN aboard) (RB again))))))))
    (. .)))

nsubj(had-3, We-1)
aux(had-3, had-2)
root(ROOT-0, had-3)
num(hours-5, two-4)
dobj(had-3, hours-5)
prep_of(hours-5, that-7)
vmod(that-7, blazing-8)
dobj(blazing-8, weather-9)
advmod(there-11, down-10)
advmod(blazing-8, there-11)
cop(thirsty-16, was-14)
amod(thirsty-16, dreadful-15)
conj_and(had-3, thirsty-16)
tmod(got-19, thirsty-16)
advmod(got-19, when-17)
nsubj(got-19, we-18)
rcmod(thirsty-16, got-19)
advmod(got-19, aboard-20)
advmod(aboard-20, again-21)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD went)
        (ADVP (RB straight))
        (PP (IN for)
          (NP (DT the) (NN water)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ spoiled)
          (CC and)
          (JJ bitter))
        (, ,)
        (PP (IN besides)
          (S
            (VP (VBG being)
              (NP
                (ADJP (RB pretty) (IN near) (JJ hot))
                (NN enough)
                (S
                  (VP (TO to)
                    (VP (VB scald)
                      (NP (PRP$ your) (NN mouth)))))))))))
    (. .)))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
advmod(went-2, straight-3)
det(water-6, the-5)
prep_for(went-2, water-6)
nsubj(spoiled-11, it-9)
nsubj(bitter-13, it-9)
cop(spoiled-11, was-10)
conj_but(went-2, spoiled-11)
conj_but(went-2, bitter-13)
conj_and(spoiled-11, bitter-13)
cop(enough-20, being-16)
advmod(hot-19, pretty-17)
dep(hot-19, near-18)
amod(enough-20, hot-19)
prepc_besides(spoiled-11, enough-20)
aux(scald-22, to-21)
vmod(enough-20, scald-22)
poss(mouth-24, your-23)
dobj(scald-22, mouth-24)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD could) (RB n't)
      (VP (VB drink)
        (NP (PRP it))))
    (. .)))

nsubj(drink-4, We-1)
aux(drink-4, could-2)
neg(drink-4, n't-3)
root(ROOT-0, drink-4)
dobj(drink-4, it-5)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (NP
            (NP (NNP Mississippi) (NN river) (NN water))
            (, ,)
            (NP
              (NP (DT the) (JJS best))
              (PP (IN in)
                (NP (DT the) (NN world)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP (VBD stirred)
          (PRT (RP up))
          (NP
            (NP (DT the) (NN mud))
            (PP (IN in)
              (NP (PRP it))))
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR (IN if)
                  (S
                    (NP (DT that))
                    (VP (MD would)
                      (VP (VB help)))))))))))
    (, ,)
    (CC but)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (DT the) (NN mud))
      (VP (VBD was) (RB n't)
        (ADJP
          (ADJP (RB any) (JJR better))
          (PP (IN than)
            (NP (DT the) (NN water))))))
    (. .)))

nsubj(water-5, It-1)
cop(water-5, was-2)
nn(water-5, Mississippi-3)
nn(water-5, river-4)
root(ROOT-0, water-5)
det(best-8, the-7)
appos(water-5, best-8)
det(world-11, the-10)
prep_in(best-8, world-11)
nsubj(stirred-15, we-14)
conj_and(water-5, stirred-15)
prt(stirred-15, up-16)
det(mud-18, the-17)
dobj(stirred-15, mud-18)
prep_in(mud-18, it-20)
aux(see-22, to-21)
vmod(stirred-15, see-22)
mark(help-26, if-23)
nsubj(help-26, that-24)
aux(help-26, would-25)
advcl(see-22, help-26)
discourse(better-36, no-29)
det(mud-32, the-31)
nsubj(better-36, mud-32)
cop(better-36, was-33)
neg(better-36, n't-34)
advmod(better-36, any-35)
conj_but(water-5, better-36)
det(water-39, the-38)
prep_than(better-36, water-39)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (NP (PRP we))
        (VP (VBD had) (RB n't)
          (VP (VBN been)
            (ADJP
              (ADJP (RB so) (RB very))
              (, ,)
              (ADJP (RB very) (JJ thirsty))
              (ADVP (RB before)))
            (, ,)
            (SBAR (IN while)
              (S
                (NP (PRP we))
                (VP (VBD was)
                  (ADJP (JJ interested))
                  (PP (IN in)
                    (NP (DT the) (VBN lost) (NNS people)))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP we))
        (VP (VBD was)
          (ADVP (RB now)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB as) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP we))
            (VP (VBD found)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD could) (RB n't)
                    (VP (VB have)
                      (NP (DT a) (NN drink))))))))))
      (, ,)
      (NP (PRP we))
      (VP (VBD was)
        (ADJP
          (ADJP
            (QP (JJR more) (IN than) (CD thirty-five) (NNS times))
            (RB as) (JJ thirsty))
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN quarter))
                  (PP (IN of)
                    (NP (DT a) (NN minute))))))))
        (ADVP (RB before))))
    (. .)))

discourse(very-8, Well-1)
nsubj(very-8, we-3)
aux(very-8, had-4)
neg(very-8, n't-5)
cop(very-8, been-6)
advmod(very-8, so-7)
root(ROOT-0, very-8)
advmod(thirsty-11, very-10)
dep(very-8, thirsty-11)
advmod(very-8, before-12)
mark(interested-17, while-14)
nsubj(interested-17, we-15)
cop(interested-17, was-16)
advcl(very-8, interested-17)
det(people-21, the-19)
amod(people-21, lost-20)
prep_in(interested-17, people-21)
nsubj(was-25, we-24)
conj_but(very-8, was-25)
advmod(was-25, now-26)
advmod(soon-30, as-29)
advmod(thirsty-48, soon-30)
mark(found-33, as-31)
nsubj(found-33, we-32)
ccomp(soon-30, found-33)
nsubj(have-37, we-34)
aux(have-37, could-35)
neg(have-37, n't-36)
ccomp(found-33, have-37)
det(drink-39, a-38)
dobj(have-37, drink-39)
nsubj(thirsty-48, we-41)
cop(thirsty-48, was-42)
mwe(than-44, more-43)
quantmod(times-46, than-44)
number(times-46, thirty-five-45)
dep(thirsty-48, times-46)
advmod(thirsty-48, as-47)
conj_and(very-8, thirsty-48)
mark(quarter-53, as-49)
nsubj(quarter-53, we-50)
cop(quarter-53, was-51)
det(quarter-53, a-52)
dep(thirsty-48, quarter-53)
det(minute-56, a-55)
prep_of(quarter-53, minute-56)
advmod(thirsty-48, before-57)

(ROOT
  (S
    (ADVP (WRB Why))
    (, ,)
    (PP (IN in)
      (NP (DT a) (JJ little) (NN while)))
    (NP (PRP we))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB hold)
            (NP
              (NP (PRP$ our) (NNS mouths))
              (ADJP (JJ open)
                (CC and)
                (JJ pant)))
            (PP (IN like)
              (NP (DT a) (NN dog)))))))
    (. .)))

advmod(wanted-8, Why-1)
det(while-6, a-4)
amod(while-6, little-5)
prep_in(wanted-8, while-6)
nsubj(wanted-8, we-7)
nsubj(hold-10, we-7)
root(ROOT-0, wanted-8)
aux(hold-10, to-9)
xcomp(wanted-8, hold-10)
poss(mouths-12, our-11)
dobj(hold-10, mouths-12)
amod(mouths-12, open-13)
amod(mouths-12, pant-15)
conj_and(open-13, pant-15)
det(dog-18, a-17)
prep_like(hold-10, dog-18)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD said)
          (S
            (VP (TO to)
              (VP (VB keep)
                (NP (DT a) (JJ sharp) (NN lookout))
                (, ,)
                (ADVP (DT all) (RP around))))))
        (, ,)
        (VP (VBZ everywheres))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP we))
            (VP (VBD 'd)
              (VP (VBN got)
                (S
                  (VP (TO to)
                    (VP (VB find)
                      (NP (DT an) (NN oasis)))))))))))
    (CC or)
    (S
      (NP (EX there))
      (VP (VBP war) (RB n't)
        (ADJP (RB no) (JJ telling)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD would)
                (VP (VB happen))))))))
    (. .)))

nsubj(said-2, Tom-1)
nsubj(keep-4, Tom-1)
nsubj(war-24, Tom-1)
root(ROOT-0, said-2)
aux(keep-4, to-3)
xcomp(said-2, keep-4)
det(lookout-7, a-5)
amod(lookout-7, sharp-6)
dobj(keep-4, lookout-7)
dep(around-10, all-9)
advmod(keep-4, around-10)
dep(said-2, everywheres-12)
mark(got-17, because-14)
nsubj(got-17, we-15)
nsubj(find-19, we-15)
aux(got-17, 'd-16)
advcl(said-2, got-17)
aux(find-19, to-18)
xcomp(got-17, find-19)
det(oasis-21, an-20)
dobj(find-19, oasis-21)
expl(war-24, there-23)
conj_or(said-2, war-24)
neg(war-24, n't-25)
neg(telling-27, no-26)
acomp(war-24, telling-27)
nsubj(happen-30, what-28)
aux(happen-30, would-29)
ccomp(telling-27, happen-30)

(ROOT
  (S (CC So)
    (NP (PRP we))
    (VP (VBN done)
      (NP (PRP it)))
    (. .)))

cc(done-3, So-1)
nsubj(done-3, we-2)
root(ROOT-0, done-3)
dobj(done-3, it-4)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD kept)
      (NP (DT the) (NNS glasses))
      (S
        (VP (VBG gliding)
          (PRT (RP around))
          (NP (PDT all) (DT the) (NN time))))
      (, ,)
      (SBAR (IN till)
        (S
          (NP (PRP$ our) (NNS arms))
          (VP (VBD got)
            (ADJP (RB so) (JJ tired))
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD could) (RB n't)
                  (VP (VB hold)
                    (NP (PRP them))
                    (ADVP (DT any) (RBR more))))))))))
    (. .)))

nsubj(kept-2, We-1)
root(ROOT-0, kept-2)
det(glasses-4, the-3)
dobj(kept-2, glasses-4)
xcomp(kept-2, gliding-5)
prt(gliding-5, around-6)
predet(time-9, all-7)
det(time-9, the-8)
dobj(gliding-5, time-9)
mark(tired-16, till-11)
poss(arms-13, our-12)
nsubj(tired-16, arms-13)
dep(tired-16, got-14)
advmod(tired-16, so-15)
advcl(kept-2, tired-16)
nsubj(hold-20, we-17)
aux(hold-20, could-18)
neg(hold-20, n't-19)
ccomp(tired-16, hold-20)
dobj(hold-20, them-21)
dep(more-23, any-22)
advmod(hold-20, more-23)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (CD Two) (NNS hours)
            (PRN (: --)
              (NP (CD three) (NNS hours))
              (: --)))
          (PP (RB just)
            (NP (VBG gazing)
              (CC and)
              (VBG gazing))))
        (, ,)
        (CC and)
        (NP
          (NP (NN nothing))
          (PP (CC but)
            (NP
              (NP (NN sand))
              (, ,)
              (NP (NN sand)))))
        (, ,))
      (VP (VBD SAND)))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB see)
          (NP
            (NP (DT the) (VBG quivering) (JJ heat-shimmer) (NN playing))
            (PP (IN over)
              (NP (PRP it)))))))
    (. .)))

num(hours-2, Two-1)
nsubj(SAND-19, hours-2)
num(hours-5, three-4)
dep(hours-2, hours-5)
prep(hours-2, just-7)
pobj(just-7, gazing-8)
pobj(just-7, gazing-10)
conj_and(gazing-8, gazing-10)
conj_and(hours-2, nothing-13)
nsubj(SAND-19, nothing-13)
prep(nothing-13, but-14)
pobj(but-14, sand-15)
appos(sand-15, sand-17)
root(ROOT-0, SAND-19)
nsubj(see-24, you-22)
aux(see-24, could-23)
conj_and(SAND-19, see-24)
det(playing-28, the-25)
amod(playing-28, quivering-26)
amod(playing-28, heat-shimmer-27)
dobj(see-24, playing-28)
prep_over(playing-28, it-30)

(ROOT
  (S
    (NP (NNP Dear))
    (, ,)
    (ADJP (RB dear))
    (, ,)
    (NP (DT a) (NN body))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (JJ real) (NN misery))
            (VP (VBZ is)
              (SBAR (IN till)
                (S
                  (NP (PRP he))
                  (VP
                    (VP (VBZ is)
                      (VP (VBG thirsty)
                        (NP (PDT all) (DT the) (NN way))
                        (PRT (RP through))))
                    (CC and)
                    (VP (VBZ is)
                      (ADJP (JJ certain)
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBP ai) (RB n't)
                              (ADVP (RB ever))
                              (VP (VBG going)
                                (S
                                  (VP (TO to)
                                    (VP (VB come)
                                      (PP (TO to)
                                        (NP (DT any) (NN water)))
                                      (ADVP (DT any) (RBR more)))))))))))))))))))
    (. .)))

nsubj(know-9, Dear-1)
dep(know-9, dear-3)
det(body-6, a-5)
nsubj(know-9, body-6)
aux(know-9, do-7)
neg(know-9, n't-8)
root(ROOT-0, know-9)
dobj(is-13, what-10)
amod(misery-12, real-11)
nsubj(is-13, misery-12)
ccomp(know-9, is-13)
mark(thirsty-17, till-14)
nsubj(thirsty-17, he-15)
nsubj(certain-24, he-15)
aux(thirsty-17, is-16)
advcl(is-13, thirsty-17)
predet(way-20, all-18)
det(way-20, the-19)
dobj(thirsty-17, way-20)
prt(thirsty-17, through-21)
cop(certain-24, is-23)
advcl(is-13, certain-24)
conj_and(thirsty-17, certain-24)
nsubj(going-29, he-25)
nsubj(come-31, he-25)
aux(going-29, ai-26)
neg(going-29, n't-27)
advmod(going-29, ever-28)
ccomp(certain-24, going-29)
aux(come-31, to-30)
xcomp(going-29, come-31)
det(water-34, any-33)
prep_to(come-31, water-34)
dep(more-36, any-35)
advmod(come-31, more-36)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (JJ last)))
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB stand)
          (S
            (NP (PRP it))
            (VP (TO to)
              (VP (VB look)
                (PRT (RP around))
                (PP (IN on)
                  (S
                    (NP (PRP them))
                    (VP (VBG baking)
                      (NP (NNS plains)))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD laid)
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (NN locker))))
        (, ,)
        (CC and)
        (VP (VBP give)
          (NP (PRP it))
          (PRT (RP up)))))
    (. .)))

prep_at(stand-6, last-2)
nsubj(stand-6, I-3)
aux(stand-6, could-4)
neg(stand-6, n't-5)
root(ROOT-0, stand-6)
dobj(stand-6, it-7)
nsubj(look-9, it-7)
aux(look-9, to-8)
xcomp(stand-6, look-9)
prt(look-9, around-10)
nsubj(baking-13, them-12)
prepc_on(look-9, baking-13)
dobj(baking-13, plains-14)
nsubj(laid-17, I-16)
nsubj(give-24, I-16)
parataxis(stand-6, laid-17)
prt(laid-17, down-18)
det(locker-21, the-20)
prep_on(laid-17, locker-21)
parataxis(stand-6, give-24)
conj_and(laid-17, give-24)
dobj(give-24, it-25)
prt(give-24, up-26)

(ROOT
  (S (CC But)
    (PP
      (PP (IN by))
      (CC and)
      (PP (IN by)
        (NP
          (NP (NNP Tom))
          (VP (VBN raised)
            (NP
              (NP (DT a) (NN whoop))
              (, ,)
              (CC and)
              (ADVP (RB there)))))))
    (NP (PRP she))
    (VP (VBD was))
    (. !)))

cc(was-13, But-1)
prep(was-13, by-2)
conj_and(by-2, by-4)
prep(was-13, by-4)
pobj(by-4, Tom-5)
vmod(Tom-5, raised-6)
det(whoop-8, a-7)
dobj(raised-6, whoop-8)
dobj(raised-6, there-11)
advmod(whoop-8, there-11)
conj_and(whoop-8, there-11)
nsubj(was-13, she-12)
root(ROOT-0, was-13)

(ROOT
  (S
    (NP
      (NP (DT A) (NN lake))
      (, ,)
      (ADJP (JJ wide)
        (CC and)
        (JJ shiny))
      (, ,)
      (PP (IN with)
        (NP (NN pa))))
    (VP (VBP 'm) (: -)
      (NP
        (NP (NNS trees))
        (VP (VBG leaning)
          (PRT (RP over))
          (NP (PRP it))
          (UCP
            (ADJP (RB asleep))
            (, ,)
            (CC and)
            (NP
              (NP (PRP$ their) (NNS shadders))
              (SBAR
                (S
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN water))
                      (ADJP
                        (ADJP (RB just) (RB as) (JJ soft))
                        (CC and)
                        (ADJP (JJ delicate)
                          (PP (IN as)
                            (ADVP (RB ever)))))))
                  (NP (PRP you))
                  (VP (VBP see)))))))))
    (. .)))

det(lake-2, A-1)
nsubj(trees-12, lake-2)
amod(lake-2, wide-4)
amod(lake-2, shiny-6)
conj_and(wide-4, shiny-6)
prep_with(lake-2, pa-9)
cop(trees-12, 'm-10)
root(ROOT-0, trees-12)
vmod(trees-12, leaning-13)
prt(leaning-13, over-14)
dobj(leaning-13, it-15)
acomp(leaning-13, asleep-16)
poss(shadders-20, their-19)
acomp(leaning-13, shadders-20)
conj_and(asleep-16, shadders-20)
det(water-23, the-22)
prep_in(see-32, water-23)
advmod(soft-26, just-24)
advmod(soft-26, as-25)
amod(water-23, soft-26)
amod(water-23, delicate-28)
conj_and(soft-26, delicate-28)
prep(delicate-28, as-29)
pcomp(as-29, ever-30)
nsubj(see-32, you-31)
rcmod(shadders-20, see-32)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBP see)
      (SBAR
        (S
          (NP (NN anything))
          (VP (VBP look)
            (ADJP (RB so) (JJ good))))))
    (. .)))

nsubj(see-3, I-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
nsubj(look-5, anything-4)
ccomp(see-3, look-5)
advmod(good-7, so-6)
acomp(look-5, good-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP
          (NP (DT a) (JJ long) (NNS ways))
          (RB off))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBD war) (RB n't)
        (VP
          (NP (NN anything))
          (PP (TO to)
            (NP (PRP us))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP
        (VP
          (ADVP (RB just))
          (VBD slapped)
          (PP (IN on)
            (NP (DT a) (JJ hundred-mile) (NN gait))))
        (, ,)
        (CC and)
        (VP (VBN calculated)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADVP (RB there))
                (PP (IN in)
                  (NP (CD seven) (NNS minutes)))))))))
    (: ;)
    (S (CC but)
      (NP (PRP she))
      (VP (VBD stayed)
        (NP (DT the) (JJ same) (JJ old) (NN distance))
        (PRT (RP away))
        (, ,)
        (S
          (NP (PDT all) (DT the) (NN time)))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (MD could) (RB n't)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP
                (VP (VB gain)
                  (PP (IN on)
                    (NP (PRP her)))
                  (: ;)
                  (UCP
                    (NP (RB yes))
                    (, ,)
                    (NP (NN sir))
                    (, ,)
                    (ADVP (RB just) (RB as) (RB far))
                    (, ,)
                    (CC and)
                    (ADJP (JJ shiny))))
                (, ,)
                (CC and)
                (VP (VB like)
                  (NP (DT a) (NN dream)))))))))
    (: ;)
    (S (CC but)
      (NP (PRP we))
      (VP (MD could) (RB n't)
        (VP (VB get)
          (NP (DT no) (NN nearer)))))
    (: ;)
    (CC and)
    (S
      (PP (IN at)
        (NP
          (NP (JJ last))
          (, ,)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (DT a) (JJ sudden))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD was)
        (VP (VBN gone))))
    (. !)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
det(ways-5, a-3)
amod(ways-5, long-4)
npadvmod(off-6, ways-5)
advmod(was-2, off-6)
nsubj(war-10, that-9)
conj_but(was-2, war-10)
neg(war-10, n't-11)
dep(war-10, anything-12)
prep_to(anything-12, us-14)
nsubj(slapped-18, we-16)
nsubj(calculated-25, we-16)
nsubj(be-27, we-16)
advmod(slapped-18, just-17)
conj_but(was-2, slapped-18)
det(gait-22, a-20)
amod(gait-22, hundred-mile-21)
prep_on(slapped-18, gait-22)
conj_but(was-2, calculated-25)
conj_and(slapped-18, calculated-25)
aux(be-27, to-26)
xcomp(calculated-25, be-27)
advmod(be-27, there-28)
num(minutes-31, seven-30)
prep_in(be-27, minutes-31)
cc(stayed-35, but-33)
nsubj(stayed-35, she-34)
conj_but(was-2, stayed-35)
det(distance-39, the-36)
amod(distance-39, same-37)
amod(distance-39, old-38)
dobj(stayed-35, distance-39)
prt(stayed-35, away-40)
predet(time-44, all-42)
det(time-44, the-43)
dep(stayed-35, time-44)
nsubj(seem-49, we-46)
nsubj(gain-51, we-46)
nsubj(like-67, we-46)
aux(seem-49, could-47)
neg(seem-49, n't-48)
conj_but(was-2, seem-49)
aux(gain-51, to-50)
xcomp(seem-49, gain-51)
prep_on(gain-51, her-53)
dobj(gain-51, yes-55)
parataxis(gain-51, yes-55)
dobj(gain-51, sir-57)
parataxis(gain-51, sir-57)
conj_and(yes-55, sir-57)
advmod(far-61, just-59)
advmod(far-61, as-60)
dobj(gain-51, far-61)
parataxis(gain-51, far-61)
advmod(yes-55, far-61)
conj_and(yes-55, far-61)
dobj(gain-51, shiny-64)
parataxis(gain-51, shiny-64)
conj_and(yes-55, shiny-64)
xcomp(seem-49, like-67)
conj_and(gain-51, like-67)
det(dream-69, a-68)
dobj(like-67, dream-69)
cc(get-75, but-71)
nsubj(get-75, we-72)
aux(get-75, could-73)
neg(get-75, n't-74)
conj_but(was-2, get-75)
neg(nearer-77, no-76)
dobj(get-75, nearer-77)
prep_at(gone-90, last-81)
appos(last-81, all-83)
det(sudden-86, a-85)
prep_of(all-83, sudden-86)
nsubjpass(gone-90, she-88)
auxpass(gone-90, was-89)
conj_and(was-2, gone-90)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Tom) (POS 's))
        (NNS eyes))
      (VP (VBD took)
        (NP (DT a) (NN spread))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (UH Boys))
          (, ,)
          (NP (PRP it))
          (VP (VBD was)
            (NP (DT a) (NN MYridge))))))
    (. !) ('' '')))

poss(eyes-3, Tom-1)
nsubj(took-4, eyes-3)
root(ROOT-0, took-4)
det(spread-6, a-5)
dobj(took-4, spread-6)
nsubj(says-10, he-9)
conj_and(took-4, says-10)
discourse(MYridge-18, Boys-13)
nsubj(MYridge-18, it-15)
cop(MYridge-18, was-16)
det(MYridge-18, a-17)
ccomp(says-10, MYridge-18)

(ROOT
  (S
    (NP (NNP Said) (PRP it))
    (VP (VBP like)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ glad))))))
    (. .)))

nsubj(like-3, Said-1)
dep(Said-1, it-2)
root(ROOT-0, like-3)
nsubj(glad-6, he-4)
cop(glad-6, was-5)
ccomp(like-3, glad-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB see)
        (NP (NN nothing))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ glad) (IN about)))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, did-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
dobj(see-4, nothing-5)
aux(glad-8, to-6)
cop(glad-8, be-7)
vmod(see-4, glad-8)
dep(glad-8, about-9)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBZ says))
      (: :) (`` ``)
      (VP (VBZ Maybe)))
    (. .)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
dep(says-2, Maybe-5)

(ROOT
  (SBARQ
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (NP (NN nothing))
          (PP (IN about)
            (NP
              (NP (PRP$ its) (NN name))
              (, ,)
              (NP
                (NP (DT the) (NN thing))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP want)
                      (S
                        (VP (TO to)
                          (VP (VB know)
                            (SBAR
                              (S
                                (VP (VBZ is))))))))))))))))
    (, ,)
    (WHNP (WP what))
    (SQ
      (VP (VBZ 's)
        (VP (VBN become)
          (PP (IN of)
            (NP (PRP it))))))
    (. ?) ('' '')))

nsubj(care-4, I-1)
aux(care-4, do-2)
neg(care-4, n't-3)
dep(become-20, care-4)
dobj(care-4, nothing-5)
poss(name-8, its-7)
prep_about(care-4, name-8)
det(thing-11, the-10)
appos(name-8, thing-11)
nsubj(want-13, I-12)
nsubj(know-15, I-12)
rcmod(thing-11, want-13)
aux(know-15, to-14)
xcomp(want-13, know-15)
ccomp(know-15, is-16)
dobj(become-20, what-18)
nsubjpass(become-20, what-18)
auxpass(become-20, 's-19)
root(ROOT-0, become-20)
prep_of(become-20, it-22)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD was)
        (VP (VBG trembling)
          (ADVP (DT all) (RP over)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB so))
      (VP (VBD scared)
        (SBAR
          (S
            (S
              (NP (PRP he))
              (VP (MD could) (RB n't)
                (VP (VB speak))))
            (, ,)
            (CC but)
            (S
              (NP (PRP he))
              (VP (VBD wanted)
                (S
                  (VP (TO to)
                    (VP (VB ask)
                      (SBAR (IN that)
                        (S
                          (VP (VBP question)
                            (NP (PRP himself))
                            (SBAR (IN if)
                              (S
                                (NP (PRP he))
                                (VP (MD could)))))))))))))))
      (NP (`` `)
        (NP (SYM a))
        ('' ')
        (VP (VBN done)
          (NP (PRP it)))))
    (. .)))

nsubj(trembling-3, Jim-1)
nsubj(scared-9, Jim-1)
aux(trembling-3, was-2)
root(ROOT-0, trembling-3)
dep(over-5, all-4)
advmod(trembling-3, over-5)
advmod(scared-9, so-8)
conj_and(trembling-3, scared-9)
nsubj(speak-13, he-10)
aux(speak-13, could-11)
neg(speak-13, n't-12)
dep(scared-9, speak-13)
nsubj(wanted-17, he-16)
nsubj(ask-19, he-16)
dep(scared-9, wanted-17)
conj_but(speak-13, wanted-17)
aux(ask-19, to-18)
xcomp(wanted-17, ask-19)
mark(question-21, that-20)
ccomp(ask-19, question-21)
dobj(question-21, himself-22)
mark(could-25, if-23)
nsubj(could-25, he-24)
advcl(question-21, could-25)
dep(scared-9, a-27)
vmod(a-27, done-29)
dobj(done-29, it-30)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBZ says)))
    (: :) (`` ``)
    (SBARQ
      (WHNP (WP What))
      (SQ (VBZ 's)
        (NP
          (NP (NNP BECOME))
          (PP (IN of)
            (NP (PRP it))))))
    (. ?)))

nsubj(says-2, Tom-1)
root(ROOT-0, says-2)
parataxis(says-2, What-5)
cop(What-5, 's-6)
nsubj(What-5, BECOME-7)
prep_of(BECOME-7, it-9)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP you))
    (VP (VB see)
      (NP (PRP yourself))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (VP (VBN gone))))))
    (. .) ('' '')))

discourse(see-4, Why-1)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
dobj(see-4, yourself-5)
nsubjpass(gone-8, it-6)
auxpass(gone-8, 's-7)
dep(see-4, gone-8)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP know)))
    (: ;)
    (S (CC but)
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBZ 's)
            (S
              (NP (PRP it))
              (ADJP (VBN gone))))))
      (VP (VBZ TO)))
    (. ?) ('' '')))

discourse(know-5, Yes-2)
nsubj(know-5, I-4)
root(ROOT-0, know-5)
cc(TO-12, but-7)
advmod('s-9, where-8)
advcl(TO-12, 's-9)
csubj(TO-12, 's-9)
nsubj(gone-11, it-10)
xcomp('s-9, gone-11)
parataxis(know-5, TO-12)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD looked)
        (NP (PRP me))
        (PRT (RP over)))
      (CC and)
      (VP (VBZ says) (: :) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (ADVP (RB now))
          (, ,)
          (NP (NNP Huck))
          (VP (VBZ Finn) (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (VP (VBD WOULD)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBP go)
                        (PP (TO to))))))))))))
    (. !)))

nsubj(looked-2, He-1)
nsubj(says-6, He-1)
root(ROOT-0, looked-2)
dobj(looked-2, me-3)
prt(looked-2, over-4)
conj_and(looked-2, says-6)
discourse(Finn-14, Well-9)
advmod(Finn-14, now-11)
nsubj(Finn-14, Huck-13)
ccomp(says-6, Finn-14)
advmod(WOULD-17, where-16)
advcl(Finn-14, WOULD-17)
nsubj(go-19, it-18)
ccomp(WOULD-17, go-19)
prep(go-19, to-20)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT a) (NN myridge))
          (VP (VBZ is)))))
    (. ?) ('' '')))

nsubj(know-4, Do-1)
neg(know-4, n't-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
dobj(is-8, what-5)
det(myridge-7, a-6)
nsubj(is-8, myridge-7)
ccomp(know-4, is-8)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't))
    (. .)))

discourse(do-5, No-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
neg(do-5, n't-6)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (PRP it)))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, is-2)
nsubj(What-1, it-3)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBP ai) (RB n't)
      (ADJP (NN anything)
        (CC but)
        (VBG imagination)))
    (. .)))

nsubj(anything-5, It-2)
nsubj(imagination-7, It-2)
cop(anything-5, ai-3)
neg(anything-5, n't-4)
root(ROOT-0, anything-5)
conj_but(anything-5, imagination-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP ai) (RB n't)
      (NP
        (NP (NN anything))
        (VP (TO TO)
          (NP (PRP it)))))
    (. .) ('' '')))

expl(ai-2, There-1)
root(ROOT-0, ai-2)
neg(ai-2, n't-3)
nsubj(ai-2, anything-4)
dep(anything-4, TO-5)
dobj(TO-5, it-6)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD warmed)
        (NP (PRP me))
        (ADVP (RB up)
          (NP (DT a) (RB little)))
        (S
          (VP (TO to)
            (VP (VB hear)
              (S
                (NP (PRP him))
                (VP (VB talk)
                  (PP (IN like)
                    (NP (DT that))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (WP What))
          (VP (VBZ 's)
            (NP (DT the) (NN use)
              (S
                (NP (PRP you))
                (VP (VBG talking)
                  (NP
                    (NP (DT that) (NN kind))
                    (PP (IN of)
                      (NP
                        (NP (NN stuff))
                        (, ,)
                        (NP (NNP Tom) (NNP Sawyer))))))))))))
    (. ?)))

nsubj(warmed-2, It-1)
root(ROOT-0, warmed-2)
dobj(warmed-2, me-3)
advmod(warmed-2, up-4)
det(little-6, a-5)
pobj(up-4, little-6)
aux(hear-8, to-7)
vmod(warmed-2, hear-8)
nsubj(talk-10, him-9)
ccomp(hear-8, talk-10)
prep_like(talk-10, that-12)
nsubj(says-16, I-15)
conj_and(warmed-2, says-16)
nsubj(use-22, What-19)
cop(use-22, 's-20)
det(use-22, the-21)
ccomp(says-16, use-22)
nsubj(talking-24, you-23)
dep(use-22, talking-24)
det(kind-26, that-25)
dobj(talking-24, kind-26)
prep_of(kind-26, stuff-28)
nn(Sawyer-31, Tom-30)
appos(stuff-28, Sawyer-31)

(ROOT
  (S
    (NP (NNP Did))
    (RB n't)
    (NP (PRP I))
    (VP (VBP see)
      (NP (DT the) (NN lake)))
    (. ?) ('' '')))

nsubj(see-4, Did-1)
neg(see-4, n't-2)
nsubj(see-4, I-3)
root(ROOT-0, see-4)
det(lake-6, the-5)
dobj(see-4, lake-6)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: --)
    (S
      (NP (PRP you))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD did))))))
    (. .) ('' '')))

dep(think-5, Yes-2)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
nsubj(did-7, you-6)
ccomp(think-5, did-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (NP (NN nothing))
          (PP (IN about)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB DID))
    (VP (VBP see)
      (NP (PRP it)))
    (. .) ('' '')))

nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, n't-4)
ccomp(see-12, think-5)
dobj(think-5, nothing-6)
prep_about(think-5, it-8)
nsubj(see-12, I-10)
advmod(see-12, DID-11)
root(ROOT-0, see-12)
dobj(see-12, it-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP DID) (RB N'T)
            (VP (VB see)
              (NP (PRP it))
              (ADVP (RB either))
              (: --)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBP war) (RB n't)
                    (ADVP (RB there))
                    (S
                      (VP (TO to)
                        (VP (VB see))))))))))))
    (. .) ('' '')))

nsubj(tell-3, I-2)
root(ROOT-0, tell-3)
dobj(tell-3, you-4)
nsubj(see-8, you-5)
aux(see-8, DID-6)
neg(see-8, N'T-7)
dep(tell-3, see-8)
dobj(see-8, it-9)
advmod(see-8, either-10)
mark(war-14, because-12)
nsubj(war-14, it-13)
nsubj(see-18, it-13)
advcl(see-8, war-14)
parataxis(see-8, war-14)
neg(war-14, n't-15)
advmod(war-14, there-16)
aux(see-18, to-17)
xcomp(war-14, see-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD astonished)
        (S
          (NP (NNP Jim))
          (VP (TO to)
            (VP (VB hear)
              (S
                (NP (PRP him))
                (VP (VB talk)
                  (ADVP (RB so)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD broke)
          (PRT (RP in)))
        (CC and)
        (VP (VBZ says))))
    (, ,)
    (S
      (NP
        (NP
          (NP (NN kind))
          (PP (IN of)
            (S
              (VP (VBG pleading)
                (CC and)
                (VBG distressed)))))
        (: :) (`` ``)
        (NP (NNP Mars) (NNP Tom))
        (, ,))
      (ADVP (RB PLEASE))
      (VP (VBP do) (RB n't)
        (VP (VB say)
          (NP (JJ sich) (NNS things))
          (PP (IN in)
            (NP
              (NP (JJ sich) (DT an) (JJ awful) (NN time))
              (PP (IN as)
                (NP (NN dis))))))))
    (. .)))

nsubj(astonished-2, It-1)
root(ROOT-0, astonished-2)
dobj(astonished-2, Jim-3)
nsubj(hear-5, Jim-3)
aux(hear-5, to-4)
xcomp(astonished-2, hear-5)
nsubj(talk-7, him-6)
ccomp(hear-5, talk-7)
advmod(talk-7, so-8)
nsubj(broke-12, he-11)
nsubj(says-15, he-11)
conj_and(astonished-2, broke-12)
prt(broke-12, in-13)
conj_and(astonished-2, says-15)
conj_and(broke-12, says-15)
nsubj(say-30, kind-17)
prepc_of(kind-17, pleading-19)
prepc_of(kind-17, distressed-21)
conj_and(pleading-19, distressed-21)
nn(Tom-25, Mars-24)
dep(kind-17, Tom-25)
advmod(say-30, PLEASE-27)
aux(say-30, do-28)
neg(say-30, n't-29)
conj_and(astonished-2, say-30)
parataxis(astonished-2, say-30)
amod(things-32, sich-31)
dobj(say-30, things-32)
amod(time-37, sich-34)
det(time-37, an-35)
amod(time-37, awful-36)
prep_in(say-30, time-37)
prep_as(time-37, dis-39)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP ai) (RB n't)
        (NP
          (NP
            (NP (JJ only) (NN reskin) (POS '))
            (NN yo) (POS '))
          (JJ own) (NN self))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (NN reskin) (POS '))
            (NX
              (NP (PRP us))
              (: --)
              (NP
                (NP (JJ same) (NN way))
                (PP (IN like)
                  (NP (NNP Anna) (NNPS Nias))))))
          (PP (IN en)
            (NP (NNP Siffra))))))
    (. .)))

nsubj(self-10, You-1)
cop(self-10, ai-2)
neg(self-10, n't-3)
amod(reskin-5, only-4)
poss(yo-7, reskin-5)
poss(self-10, yo-7)
amod(self-10, own-9)
root(ROOT-0, self-10)
nsubj(us-17, you-13)
cop(us-17, 's-14)
poss(us-17, reskin-15)
conj_but(self-10, us-17)
amod(way-20, same-19)
dep(us-17, way-20)
nn(Nias-23, Anna-22)
prep_like(way-20, Nias-23)
prep_en(us-17, Siffra-25)

(ROOT
  (S
    (S
      (NP (NNP De) (NNP lake) (NNP WUZ))
      (VP (VBP dah)))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBN seen)
        (S
          (NP (PRP it))
          (NP
            (NP (NNP jis) (POS '))
            (ADJP
              (ADJP (RB as) (JJ plain))
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBZ sees)
                    (NP (PRP you))
                    (PP (IN en)
                      (NP (NNP Huck)))))))
            (NN dis) (NN minute)))))
    (. .) ('' '')))

nn(WUZ-3, De-1)
nn(WUZ-3, lake-2)
nsubj(dah-4, WUZ-3)
root(ROOT-0, dah-4)
nsubj(seen-7, I-6)
parataxis(dah-4, seen-7)
nsubj(minute-20, it-8)
poss(minute-20, jis-9)
advmod(plain-12, as-11)
amod(minute-20, plain-12)
mark(sees-15, as-13)
nsubj(sees-15, I-14)
dep(plain-12, sees-15)
dobj(sees-15, you-16)
prep_en(sees-15, Huck-18)
nn(minute-20, dis-19)
xcomp(seen-7, minute-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (SBAR
          (WHADVP (WRB Why))
          (, ,)
          (S
            (NP (PRP he))
            (VP (VBN seen)
              (S
                (NP (PRP it))
                (NP (PRP himself))))))))
    (. !)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
advmod(seen-8, Why-5)
nsubj(seen-8, he-7)
dep(says-2, seen-8)
nsubj(himself-10, it-9)
xcomp(seen-8, himself-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ very) (NN one))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBN seen)
              (S
                (NP (PRP it))
                (ADJP (JJ first))))))))
    (. .)))

nsubj(one-5, He-1)
cop(one-5, was-2)
det(one-5, the-3)
amod(one-5, very-4)
root(ROOT-0, one-5)
nsubj(seen-7, one-5)
rcmod(one-5, seen-7)
nsubj(first-9, it-8)
xcomp(seen-7, first-9)

(ROOT
  (FRAG
    (ADVP (RB NOW))
    (, ,)
    (NP (RB then))
    (. !) ('' '')))

dep(then-3, NOW-1)
root(ROOT-0, then-3)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (NP (NN hit)))
      (VP (VBZ 's)
        (ADVP (RB so))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB deny)
          (NP (PRP it)))))
    (. .)))

discourse('s-8, Yes-2)
nn(Tom-5, Mars-4)
nsubj('s-8, Tom-5)
appos(Tom-5, hit-7)
root(ROOT-0, 's-8)
advmod('s-8, so-9)
nsubj(deny-14, you-11)
aux(deny-14, ca-12)
neg(deny-14, n't-13)
parataxis('s-8, deny-14)
dobj(deny-14, it-15)

(ROOT
  (S
    (NP (PRP We))
    (PRN
      (S
        (NP (DT all))
        (VP (VBN seen)
          (NP (PRP it))
          (, ,)
          (PP (IN en)
            (NP (NNP dat) (NNP PROVE))))))
    (NP (PRP it))
    (VP (VBD was)
      (VP (VBN dah)))
    (. .) ('' '')))

nsubjpass(dah-11, We-1)
nsubj(seen-3, all-2)
parataxis(dah-11, seen-3)
dobj(seen-3, it-4)
nn(PROVE-8, dat-7)
prep_en(seen-3, PROVE-8)
nsubjpass(dah-11, it-9)
auxpass(dah-11, was-10)
root(ROOT-0, dah-11)

(ROOT
  (S (`` ``)
    (VP (VB Proves)
      (NP (PRP it)))
    (. !)))

root(ROOT-0, Proves-2)
dobj(Proves-2, it-3)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB prove)
        (NP (PRP it))))
    (. ?) ('' '')))

advmod(prove-4, How-1)
aux(prove-4, does-2)
nsubj(prove-4, it-3)
root(ROOT-0, prove-4)
dobj(prove-4, it-5)

(ROOT
  (S (`` ``)
    (NP (JJ Same) (NN way))
    (NP (PRP it))
    (VP (VBZ does)
      (PP (IN in)
        (NP
          (NP (IN de) (NNS courts))
          (PP (IN en)
            (NP
              (NP (NNS everywheres))
              (, ,)
              (NP (NNP Mars) (NNP Tom)))))))
    (. .)))

amod(way-3, Same-2)
nsubj(does-5, way-3)
nsubj(does-5, it-4)
root(ROOT-0, does-5)
amod(courts-8, de-7)
prep_in(does-5, courts-8)
prep_en(courts-8, everywheres-10)
nn(Tom-13, Mars-12)
appos(everywheres-10, Tom-13)

(ROOT
  (S
    (S
      (NP (CD One) (NN pusson))
      (VP (MD might)
        (VP (VB be)
          (ADJP (JJ drunk)))))
    (, ,)
    (CC or)
    (S
      (NP
        (NP (JJ dreamy))
        (CC or)
        (NP (NN suthin))
        ('' '))
      (, ,)
      (ADVP (RB en))
      (NP (PRP he))
      (VP (MD could)
        (VP (VB be)
          (VP (VBN mistaken)))))
    (: ;)
    (S
      (NP (NNP en) (CD two))
      (VP (MD might))
      (, ,)
      (ADVP (RB maybe)))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP tell)
        (SBAR
          (S
            (NP (PRP you))
            (, ,)
            (NP
              (NP (NN sah))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (CD three))
                  (VP (VBZ sees)
                    (S
                      (NP (DT a) (NN thing) (, ,) (JJ drunk) (NN er))
                      (ADJP (JJ sober))))))
              (, ,))
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (NNP SO)))))))
    (. .)))

num(pusson-2, One-1)
nsubj(drunk-5, pusson-2)
aux(drunk-5, might-3)
cop(drunk-5, be-4)
root(ROOT-0, drunk-5)
nsubjpass(mistaken-17, dreamy-8)
conj_or(dreamy-8, suthin-10)
nsubjpass(mistaken-17, suthin-10)
advmod(he-14, en-13)
nsubjpass(mistaken-17, he-14)
aux(mistaken-17, could-15)
auxpass(mistaken-17, be-16)
conj_or(drunk-5, mistaken-17)
nsubj(might-21, en-19)
num(en-19, two-20)
conj_or(drunk-5, might-21)
advmod(might-21, maybe-23)
nsubj(tell-27, I-26)
conj_but(drunk-5, tell-27)
nsubj(SO-44, you-28)
tmod(sees-34, sah-30)
nsubj(SO-44, sah-30)
advmod(sees-34, when-32)
nsubj(sees-34, three-33)
rcmod(sah-30, sees-34)
det(er-39, a-35)
nn(er-39, thing-36)
amod(er-39, drunk-38)
nsubj(sober-40, er-39)
xcomp(sees-34, sober-40)
nsubj(SO-44, it-42)
cop(SO-44, 's-43)
ccomp(tell-27, SO-44)

(ROOT
  (S
    (NP (NNP Dey))
    (VP (VBZ ai) (RB n't)
      (NP
        (NP
          (NP (DT no) (NN gittin) (POS '))
          (NN aroun) (POS '))
        (NN dat))
      (, ,)
      (ADVP (IN en))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBZ knows)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NNP Mars) (NNP Tom)))))))
    (. .) ('' '')))

nsubj(dat-9, Dey-1)
cop(dat-9, ai-2)
neg(dat-9, n't-3)
neg(gittin-5, no-4)
poss(aroun-7, gittin-5)
poss(dat-9, aroun-7)
root(ROOT-0, dat-9)
advmod(dat-9, en-11)
nsubj(knows-13, you-12)
dep(dat-9, knows-13)
dobj(knows-13, it-14)
nn(Tom-17, Mars-16)
appos(it-14, Tom-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP
          (NP (NN nothing))
          (PP (IN of)
            (NP (DT the) (NN kind))))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(know-5, nothing-6)
det(kind-9, the-8)
prep_of(nothing-6, kind-9)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADVP (RB forty))
            (NP
              (NP
                (QP (CD thousand) (CD million))
                (NNS people))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBN seen)
                    (NP (DT the) (NN sun) (NN move))
                    (PP (IN from)
                      (NP
                        (NP (CD one) (NN side))
                        (PP (IN of)
                          (NP (DT the) (NN sky)))))
                    (PP (TO to)
                      (NP
                        (NP (DT the) (JJ other))
                        (NP (DT every) (NN day))))))))))))
    (. .)))

expl(used-2, There-1)
root(ROOT-0, used-2)
aux(people-8, to-3)
cop(people-8, be-4)
advmod(people-8, forty-5)
number(million-7, thousand-6)
num(people-8, million-7)
xcomp(used-2, people-8)
nsubj(seen-10, people-8)
rcmod(people-8, seen-10)
det(move-13, the-11)
nn(move-13, sun-12)
dobj(seen-10, move-13)
num(side-16, one-15)
prep_from(seen-10, side-16)
det(sky-19, the-18)
prep_of(side-16, sky-19)
det(other-22, the-21)
prep_to(seen-10, other-22)
det(day-24, every-23)
dep(other-22, day-24)

(ROOT
  (FRAG
    (NP
      (NP (NNP Did))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP prove)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN sun))
                (VP (VBP DONE)
                  (NP (PRP it)))))))))
    (. ?) ('' '')))

root(ROOT-0, Did-1)
nsubj(prove-3, Did-1)
rcmod(Did-1, prove-3)
mark(DONE-7, that-4)
det(sun-6, the-5)
nsubj(DONE-7, sun-6)
ccomp(prove-3, DONE-7)
dobj(DONE-7, it-8)

(ROOT
  (S (`` ``)
    (ADVP (RB Course))
    (NP (PRP it))
    (VP (VBD did))
    (. .)))

advmod(did-4, Course-2)
nsubj(did-4, it-3)
root(ROOT-0, did-4)

(ROOT
  (S
    (PP
      (NP (NNP En))
      (IN besides))
    (, ,)
    (NP (NN dey))
    (VP (VBD war) (RB n't)
      (VP
        (NP (DT no) (`` `) (NN casion))
        (S
          (VP (TO to)
            (VP (VB prove)
              (NP (PRP it)))))))
    (. .)))

dep(besides-2, En-1)
prep(war-5, besides-2)
nsubj(war-5, dey-4)
root(ROOT-0, war-5)
neg(war-5, n't-6)
neg(casion-9, no-7)
dep(war-5, casion-9)
aux(prove-11, to-10)
vmod(casion-9, prove-11)
dobj(prove-11, it-12)

(ROOT
  (S
    (NP
      (NP (DT A) (NN body))
      (PP (`` `) (IN at)
        (NP (PRP 's))))
    (VP (VBD got)
      (SBAR
        (S
          (NP (DT any) (NN sense))
          (VP (VBP ai) (RB n't)
            (ADJP (JJ gwine)
              (S
                (VP (TO to)
                  (VP (VB doubt)
                    (NP (PRP it))))))))))
    (. .)))

det(body-2, A-1)
nsubj(got-6, body-2)
prep_at(body-2, 's-5)
root(ROOT-0, got-6)
det(sense-8, any-7)
nsubj(gwine-11, sense-8)
nsubj(doubt-13, sense-8)
cop(gwine-11, ai-9)
neg(gwine-11, n't-10)
ccomp(got-6, gwine-11)
aux(doubt-13, to-12)
xcomp(gwine-11, doubt-13)
dobj(doubt-13, it-14)

(ROOT
  (S
    (VP (VB Dah)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBZ is)
            (ADVP (RB now))
            (: --)
            (NP
              (NP
                (NP (DT a) (NN sailin) (POS '))
                (NNP thoo) (NNP de) (NN sky))
              (, ,)
              (SBAR (IN like)
                (S
                  (NP (PRP she))
                  (VP (VBZ allays)
                    (ADJP (VBN done))))))))))
    (. .) ('' '')))

root(ROOT-0, Dah-1)
nsubj(sky-11, she-2)
cop(sky-11, is-3)
advmod(sky-11, now-4)
det(sailin-7, a-6)
poss(sky-11, sailin-7)
nn(sky-11, thoo-9)
nn(sky-11, de-10)
ccomp(Dah-1, sky-11)
mark(allays-15, like-13)
nsubj(allays-15, she-14)
rcmod(sky-11, allays-15)
acomp(allays-15, done-16)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD turned)
        (PP (IN on)
          (NP (PRP me)))
        (, ,)
        (ADVP (RB then))))
    (, ,)
    (CC and)
    (S
      (S
        (VP
          (VP (VBZ says))
          (: :)
          (SBAR (`` ``)
            (WHNP (WP What))
            (S
              (VP (VBP do)
                (SBAR
                  (S
                    (NP (PRP YOU))
                    (VP (VBP say)))))))
          (: --)))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN sun))
          (VP (VBG standing)
            (ADVP (RB still))))))
    (. ?) ('' '')))

nsubj(turned-2, Tom-1)
root(ROOT-0, turned-2)
prep_on(turned-2, me-4)
advmod(turned-2, then-6)
csubj(sun-19, says-9)
nsubj(do-13, What-12)
ccomp(says-9, do-13)
parataxis(says-9, do-13)
nsubj(say-15, YOU-14)
ccomp(do-13, say-15)
cop(sun-19, is-17)
det(sun-19, the-18)
conj_and(turned-2, sun-19)
vmod(sun-19, standing-20)
advmod(standing-20, still-21)

(ROOT
  (S
    (NP (`` ``)
      (NP (NNP Tom) (NNP Sawyer))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (NP (DT the) (NN use)
              (S
                (VP (TO to)
                  (VP (VB ask)
                    (NP (PDT such) (DT a) (NNS jackass))))))))))
    (VP (VBP question))
    (. ?)))

nn(Sawyer-3, Tom-2)
nsubj(use-8, Sawyer-3)
nsubj(question-14, Sawyer-3)
cop(use-8, 's-6)
det(use-8, the-7)
rcmod(Sawyer-3, use-8)
aux(ask-10, to-9)
vmod(use-8, ask-10)
predet(jackass-13, such-11)
det(jackass-13, a-12)
dobj(ask-10, jackass-13)
root(ROOT-0, question-14)

(ROOT
  (S
    (NP
      (NP (NN Anybody))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP ai) (RB n't)
            (ADJP (JJ blind))))))
    (VP (MD can)
      (VP (VB see)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBP do) (RB n't)
              (VP (VB stand)
                (ADVP (RB still))))))))
    (. .) ('' '')))

nsubj(blind-5, Anybody-1)
nsubj(see-7, Anybody-1)
cop(blind-5, ai-3)
neg(blind-5, n't-4)
rcmod(Anybody-1, blind-5)
aux(see-7, can-6)
root(ROOT-0, see-7)
nsubj(stand-11, it-8)
aux(stand-11, do-9)
neg(stand-11, n't-10)
ccomp(see-7, stand-11)
advmod(stand-11, still-12)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Well))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP he))
          (VP (VBZ says)))
        (, ,) (`` ``))
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBN lost)
          (PP (IN in)
            (NP
              (NP (DT the) (NN sky))
              (PP (IN with)
                (NP (DT no) (NN company))))))))
    (CC but)
    (S
      (NP
        (NP (DT a) (NN passel))
        (PP (IN of)
          (NP
            (NP (JJ low-down) (NNS animals))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP do) (RB n't)
                  (VP (VB know)
                    (ADVP (DT no) (RBR more))
                    (PP (IN than)
                      (NP
                        (NP (DT the) (NN head) (NN boss))
                        (PP (IN of)
                          (NP (DT a) (NN university))))))))))))
      (VP (VBD did)
        (NP (CD three)
          (CC or)
          (CD four))
        (ADVP
          (NP (CD hundred) (NNS years))
          (RB ago))))
    (. .) ('' '')))

advmod(lost-11, Well-2)
nsubj(says-6, he-5)
parataxis(lost-11, says-6)
nsubjpass(lost-11, I-9)
auxpass(lost-11, 'm-10)
root(ROOT-0, lost-11)
det(sky-14, the-13)
prep_in(lost-11, sky-14)
neg(company-17, no-16)
prep_with(sky-14, company-17)
det(passel-20, a-19)
nsubj(did-37, passel-20)
amod(animals-23, low-down-22)
prep_of(passel-20, animals-23)
nsubj(know-27, animals-23)
aux(know-27, do-25)
neg(know-27, n't-26)
rcmod(animals-23, know-27)
neg(more-29, no-28)
advmod(know-27, more-29)
det(boss-33, the-31)
nn(boss-33, head-32)
prep_than(know-27, boss-33)
det(university-36, a-35)
prep_of(boss-33, university-36)
conj_but(lost-11, did-37)
dobj(did-37, three-38)
dobj(did-37, four-40)
conj_or(three-38, four-40)
num(years-42, hundred-41)
npadvmod(ago-43, years-42)
advmod(did-37, ago-43)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD war) (RB n't)
        (NP (JJ fair) (NN play))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD let)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP know)
              (NP (PRP it)))))))
    (. .)))

nsubj(war-2, It-1)
root(ROOT-0, war-2)
neg(war-2, n't-3)
amod(play-5, fair-4)
dobj(war-2, play-5)
nsubj(let-9, I-8)
conj_and(war-2, let-9)
nsubj(know-11, him-10)
ccomp(let-9, know-11)
dobj(know-11, it-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ says)))
    (: :) (`` ``)
    (S
      (NP
        (NP (NNP Throwin) (POS '))
        (NN mud))
      (VP (VBP ai) (RB n't)
        (ADJP (JJ arguin) ('' '))
        (, ,)
        (NP (NNP Tom) (NNP Sawyer))))
    (. .) ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
poss(mud-7, Throwin-5)
nsubj(arguin-10, mud-7)
cop(arguin-10, ai-8)
neg(arguin-10, n't-9)
parataxis(says-2, arguin-10)
nn(Sawyer-14, Tom-13)
dep(arguin-10, Sawyer-14)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP$ my) (NN goodness))
    (, ,)
    (INTJ (UH oh))
    (, ,)
    (NP (PRP$ my) (NN goodness))
    (VP (VBZ gracious) (, ,)
      (S
        (NP
          (NP (NNP dah) (POS 's))
          (NNP de) (NN lake) (NN agi))
        (`` `)
        (ADJP (JJ n))))
    (. !) ('' '')))

discourse(gracious-11, Oh-2)
poss(goodness-5, my-4)
nsubj(gracious-11, goodness-5)
discourse(gracious-11, oh-7)
poss(goodness-10, my-9)
nsubj(gracious-11, goodness-10)
root(ROOT-0, gracious-11)
poss(agi-17, dah-13)
nn(agi-17, de-15)
nn(agi-17, lake-16)
dep(n-19, agi-17)
dep(gracious-11, n-19)

(ROOT
  (NP
    (NP (NNP yelled) (NNP Jim))
    (, ,)
    (NP (RB just) (RB then))
    (. .)))

nn(Jim-2, yelled-1)
root(ROOT-0, Jim-2)
advmod(then-5, just-4)
appos(Jim-2, then-5)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP NOW))
      (, ,)
      (NP
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP gwine)
              (S
                (VP (TO to)
                  (VP (VB say)))))))))
    (. ?) ('' '')))

root(ROOT-0, NOW-2)
nn(Tom-5, Mars-4)
appos(NOW-2, Tom-5)
dobj(gwine-9, Tom-5)
nsubj(say-11, Tom-5)
nsubj(gwine-9, you-8)
rcmod(Tom-5, gwine-9)
aux(say-11, to-10)
xcomp(gwine-9, say-11)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP (DT the) (NN lake))
      (ADVP (RB again))
      (, ,)
      (PP (RB away)
        (NP
          (NP (NN yonder))
          (PP (IN across)
            (NP (DT the) (NN desert)))
          (, ,)
          (ADJP (RB perfectly) (JJ plain))
          (, ,)
          (NP (NNS trees))
          (CC and)
          (NP
            (NP (DT all))
            (, ,)
            (NP
              (NP (RB just) (DT the) (JJ same))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADVP (RB before))))))))))
    (. .)))

discourse(was-6, Yes-1)
advmod(was-6, sir-3)
expl(was-6, there-5)
root(ROOT-0, was-6)
det(lake-8, the-7)
nsubj(was-6, lake-8)
advmod(was-6, again-9)
prep(was-6, away-11)
pobj(away-11, yonder-12)
det(desert-15, the-14)
prep_across(yonder-12, desert-15)
advmod(plain-18, perfectly-17)
pobj(away-11, plain-18)
amod(yonder-12, plain-18)
conj_and(yonder-12, plain-18)
pobj(away-11, trees-20)
conj_and(yonder-12, trees-20)
pobj(away-11, all-22)
conj_and(yonder-12, all-22)
advmod(same-26, just-24)
det(same-26, the-25)
appos(all-22, same-26)
mark(was-29, as-27)
nsubj(was-29, it-28)
dep(same-26, was-29)
advmod(was-29, before-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP reckon)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (ADJP (JJ satisfied)
                  (NP
                    (NP (RB now))
                    (, ,)
                    (NP (NNP Tom) (NNP Sawyer))))))))))
    (. .) ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nsubj(reckon-6, I-5)
ccomp(says-2, reckon-6)
nsubj(satisfied-9, you-7)
cop(satisfied-9, 're-8)
ccomp(reckon-6, satisfied-9)
dep(satisfied-9, now-10)
nn(Sawyer-13, Tom-12)
appos(now-10, Sawyer-13)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP
        (VP (VBZ says))
        (, ,)
        (ADVP (RB perfectly))
        (VP (MD ca)
          (VP (VBP 'm)))))
    (: :) (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (ADJP (VBN satisfied)))
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN lake))
        (ADVP (RB there))))
    (. .) ('' '')))

cc(says-3, But-1)
nsubj(says-3, he-2)
root(ROOT-0, says-3)
advmod('m-7, perfectly-5)
aux('m-7, ca-6)
dep(says-3, 'm-7)
discourse(ai-14, Yes-10)
dep(ai-14, satisfied-12)
expl(ai-14, there-13)
parataxis(says-3, ai-14)
neg(ai-14, n't-15)
neg(lake-17, no-16)
nsubj(ai-14, lake-17)
advmod(ai-14, there-18)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (NNP DO) (NNP N'T))
        (VP (VB talk)
          (SBAR (IN so) (, ,)
            (S
              (NP
                (NP (NNP Mars) (NNP Tom))
                (PRN (: --)
                  (S
                    (NP (PRP it))
                    (VP (VBP sk))))
                (`` `))
              (VP (VBZ yers)
                (S
                  (NP (PRP me))
                  (VP (TO to)
                    (VP (VB hear)
                      (NP (PRP you)))))))))))
    (. .)))

nsubj(says-2, Jim-1)
root(ROOT-0, says-2)
nn(N'T-6, DO-5)
nsubj(talk-7, N'T-6)
ccomp(says-2, talk-7)
mark(yers-16, so-8)
nn(Tom-11, Mars-10)
nsubj(yers-16, Tom-11)
nsubj(sk-14, it-13)
dep(Tom-11, sk-14)
advcl(talk-7, yers-16)
dobj(yers-16, me-17)
nsubj(hear-19, me-17)
aux(hear-19, to-18)
xcomp(yers-16, hear-19)
dobj(hear-19, you-20)

(ROOT
  (SINV
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP (RB so) (JJ hot))
        (, ,)
        (ADVP (IN en))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBZ 's)
              (ADJP (RB so) (JJ thirsty)))))))
    (, ,)
    (VP (VBP dat)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP ai) (RB n't)
            (PP (IN in)
              (NP
                (NP (NNP yo) (POS '))
                (NN right)))))))
    (NP
      (NP (NN mine))
      (, ,)
      (NP (NNP Mars) (NNP Tom)))
    (. .)))

nsubj(hot-4, It-1)
cop(hot-4, 's-2)
advmod(hot-4, so-3)
ccomp(dat-12, hot-4)
advmod(hot-4, en-6)
nsubj(thirsty-10, you-7)
cop(thirsty-10, 's-8)
advmod(thirsty-10, so-9)
ccomp(hot-4, thirsty-10)
root(ROOT-0, dat-12)
nsubj(ai-14, you-13)
ccomp(dat-12, ai-14)
neg(ai-14, n't-15)
poss(right-19, yo-17)
prep_in(ai-14, right-19)
nsubj(dat-12, mine-20)
nn(Tom-23, Mars-22)
appos(mine-20, Tom-23)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (ADVP (CC but))
      (VP (VBP do) (RB n't)))
    (NP (PRP she))
    (VP (VBP look)
      (ADJP (JJ good)))
    (. !)))

discourse(do-4, Oh-1)
advmod(do-4, but-3)
dep(look-7, do-4)
neg(do-4, n't-5)
nsubj(look-7, she-6)
root(ROOT-0, look-7)
acomp(look-7, good-8)

(ROOT
  (S
    (S
      (NP (`` `) (JJ clah) (NN I) (NN doan) ('' '))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP I))
            (VP (VBZ 's)
              (ADJP (JJ gwine)
                (S
                  (VP (TO to)
                    (VP (VB wait)
                      (S
                        (VP (VB tell)
                          (SBAR
                            (S
                              (NP (PRP we))
                              (VP (VBZ gits)
                                (NP (NN dah))))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBZ 's)
      (NP (NNP SO) (NNP thirsty)))
    (. .) ('' '')))

amod(doan-4, clah-2)
nn(doan-4, I-3)
nsubj(know-6, doan-4)
ccomp(thirsty-21, know-6)
advmod(gwine-10, how-7)
nsubj(gwine-10, I-8)
nsubj(wait-12, I-8)
cop(gwine-10, 's-9)
ccomp(know-6, gwine-10)
aux(wait-12, to-11)
xcomp(gwine-10, wait-12)
ccomp(wait-12, tell-13)
nsubj(gits-15, we-14)
ccomp(tell-13, gits-15)
dobj(gits-15, dah-16)
nsubj(thirsty-21, I-18)
cop(thirsty-21, 's-19)
nn(thirsty-21, SO-20)
root(ROOT-0, thirsty-21)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (NP (PRP you))
        (VP (MD 'll)
          (VP (VB have)
            (S
              (VP (TO to)
                (VP (VB wait)))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP it))
        (VP (MD wo) (RB n't)
          (VP (VB do)
            (S
              (NP (PRP you))
              (ADJP (RB no) (JJ good)))))))
    (, ,)
    (S
      (ADVP (RB either))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (EX there))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (NN lake))
            (ADVP (RB there)))))
      (, ,)
      (NP (PRP I))
      (VP (VBP tell)
        (NP (PRP you))))
    (. .) ('' '')))

discourse(have-6, Well-2)
nsubj(have-6, you-4)
nsubj(wait-8, you-4)
aux(have-6, 'll-5)
root(ROOT-0, have-6)
aux(wait-8, to-7)
xcomp(have-6, wait-8)
nsubj(do-14, it-11)
aux(do-14, wo-12)
neg(do-14, n't-13)
conj_and(have-6, do-14)
nsubj(good-17, you-15)
neg(good-17, no-16)
xcomp(do-14, good-17)
advmod(tell-30, either-19)
mark(ai-23, because-21)
expl(ai-23, there-22)
advcl(tell-30, ai-23)
neg(ai-23, n't-24)
neg(lake-26, no-25)
nsubj(ai-23, lake-26)
advmod(ai-23, there-27)
nsubj(tell-30, I-29)
parataxis(have-6, tell-30)
dobj(tell-30, you-31)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (NNP Jim))
          (, ,)
          (VP (VB do) (RB n't)))))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP take)
          (NP (PRP$ your) (NN eye))
          (PRT (RP off))
          (PP (IN of)
            (NP (PRP it)))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD wo) (RB n't))
      (, ,)
      (ADVP (RB either)))
    (. .) ('' '') ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nsubj(do-7, Jim-5)
ccomp(says-2, do-7)
neg(do-7, n't-8)
nsubj(take-10, you-9)
dep(says-2, take-10)
poss(eye-12, your-11)
dobj(take-10, eye-12)
prep_off_of(take-10, it-15)
nsubj(wo-19, I-18)
conj_and(says-2, wo-19)
neg(wo-19, n't-20)
advmod(wo-19, either-22)

(ROOT
  (S (`` `)
    (S
      (NP (NNP Deed) (NNP I))
      (VP (MD wo) (RB n't)))
    (: ;)
    (S
      (S
        (VP
          (ADVP (IN en))
          (VB bless)
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NN honey)))))
      (, ,)
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB ef)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD wanted)
                (PP (TO to))))))))
    (. .) ('' '')))

nn(I-3, Deed-2)
nsubj(wo-4, I-3)
root(ROOT-0, wo-4)
neg(wo-4, n't-5)
advmod(bless-8, en-7)
ccomp(ef-16, bless-8)
dobj(bless-8, you-9)
appos(you-9, honey-11)
nsubj(ef-16, I-13)
aux(ef-16, could-14)
neg(ef-16, n't-15)
parataxis(wo-4, ef-16)
nsubj(wanted-18, I-17)
ccomp(ef-16, wanted-18)
prep(wanted-18, to-19)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD went)
        (S
          (VP
            (VP (VBG a-tearing)
              (PRT (RP along))
              (PP (IN toward)
                (NP (PRP it)))
              (, ,)
              (S
                (VP (VBG piling)
                  (NP (DT the) (NNS miles))
                  (PP (IN behind)
                    (NP (PRP us)))
                  (PP (IN like)
                    (NP (NN nothing))))))
            (, ,)
            (CC but)
            (VP
              (ADVP (RB never))
              (VBG gaining)
              (NP
                (NP (DT an) (NN inch))
                (PP (IN on)
                  (NP (PRP it)))))))))
    (: --)
    (CC and)
    (ADVP (RB all) (IN of) (DT a) (JJ sudden))
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBN gone)
          (ADVP (RB again)))))
    (. !)))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
ccomp(went-2, a-tearing-3)
prt(a-tearing-3, along-4)
prep_toward(a-tearing-3, it-6)
vmod(a-tearing-3, piling-8)
det(miles-10, the-9)
dobj(piling-8, miles-10)
prep_behind(piling-8, us-12)
prep_like(piling-8, nothing-14)
neg(gaining-18, never-17)
ccomp(went-2, gaining-18)
conj_but(a-tearing-3, gaining-18)
det(inch-20, an-19)
dobj(gaining-18, inch-20)
prep_on(inch-20, it-22)
advmod(of-26, all-25)
advmod(went-2, of-26)
conj_and(went-2, of-26)
det(of-26, a-27)
advmod(of-26, sudden-28)
nsubjpass(gone-31, it-29)
auxpass(gone-31, was-30)
ccomp(went-2, gone-31)
conj_and(went-2, gone-31)
advmod(gone-31, again-32)

(ROOT
  (S
    (NP (NNP Jim))
    (VP
      (VP (VBD staggered))
      (, ,)
      (CC and)
      (`` `)
      (VP
        (ADVP (RBS most))
        (VBD fell)
        (PRT (RP down))))
    (. .)))

nsubj(staggered-2, Jim-1)
nsubj(fell-7, Jim-1)
root(ROOT-0, staggered-2)
advmod(fell-7, most-6)
conj_and(staggered-2, fell-7)
prt(fell-7, down-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD got)
          (NP (PRP$ his) (NN breath))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBZ says) (, ,)
                (S
                  (VP (VBG gasping)
                    (PP (IN like)
                      (NP
                        (NP (DT a) (NN fish))
                        (: :) (`` ``)
                        (S
                          (NP
                            (NP (NNP Mars) (NNP Tom))
                            (, ,)
                            (VP (VBN hit)))
                          (VP (VBZ 's)
                            (NP (DT a) (NNS GHOS))))
                        ('' ')))))))))))
    (, ,)
    (NP (NN dat))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ is) (, ,)
            (ADVP (IN en))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBZ hopes)
                  (S
                    (VP (TO to)
                      (VP (VB goodness)
                        (SBAR
                          (S
                            (NP (PRP we))
                            (VP (VBP ai) (RB n't)
                              (ADJP (JJ gwine)
                                (S
                                  (VP (TO to)
                                    (VP (VB see)
                                      (S
                                        (NP (PRP it))
                                        (NP (DT no) (NN mo))))))))))))))))))))
    ('' ') (. .)))

advmod(got-3, When-1)
nsubj(got-3, he-2)
advcl('s-25, got-3)
poss(breath-5, his-4)
dobj(got-3, breath-5)
nsubj(says-7, he-6)
dep(got-3, says-7)
xcomp(says-7, gasping-9)
det(fish-12, a-11)
prep_like(gasping-9, fish-12)
nn(Tom-16, Mars-15)
nsubj(GHOS-21, Tom-16)
vmod(Tom-16, hit-18)
cop(GHOS-21, 's-19)
det(GHOS-21, a-20)
dep(fish-12, GHOS-21)
nsubj('s-25, dat-24)
root(ROOT-0, 's-25)
dobj(is-28, what-26)
nsubj(is-28, it-27)
ccomp('s-25, is-28)
advmod(is-28, en-30)
nsubj(hopes-32, I-31)
nsubj(goodness-34, I-31)
ccomp(is-28, hopes-32)
aux(goodness-34, to-33)
xcomp(hopes-32, goodness-34)
nsubj(gwine-38, we-35)
nsubj(see-40, we-35)
cop(gwine-38, ai-36)
neg(gwine-38, n't-37)
ccomp(goodness-34, gwine-38)
aux(see-40, to-39)
xcomp(gwine-38, see-40)
nsubj(mo-43, it-41)
neg(mo-43, no-42)
xcomp(see-40, mo-43)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Dey) (POS 's))
          (ADJP (JJ BEEN)
            (NP
              (NP (DT a) (NN lake))
              (, ,)
              (NP (FW en))))
          (NN suthin))
        (VP (VBZ 's)
          (VP (VBN happened))))
      (, ,)
      (NP (FW en) (FW de) (NN lake))
      (VP (VBZ 's)
        (ADJP (JJ dead))
        (, ,)
        (ADVP (IN en))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBZ 's)
              (VP (VBN seen)
                (NP (PRP$ its) (NNS ghos)))))))
      ('' '))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBZ 's)
        (VP (VBN seen)
          (NP (PRP it))
          (ADVP (RB twiste))
          (, ,)
          (PP (IN en)
            (NP
              (NP (NNP dat) (POS 's))
              (NN proof))))))
    (. .)))

poss(suthin-8, Dey-1)
amod(suthin-8, BEEN-3)
det(lake-5, a-4)
dep(BEEN-3, lake-5)
appos(lake-5, en-7)
nsubjpass(happened-10, suthin-8)
auxpass(happened-10, 's-9)
ccomp(dead-16, happened-10)
nn(lake-14, en-12)
nn(lake-14, de-13)
nsubj(dead-16, lake-14)
cop(dead-16, 's-15)
root(ROOT-0, dead-16)
advmod(dead-16, en-18)
nsubjpass(seen-21, we-19)
auxpass(seen-21, 's-20)
ccomp(dead-16, seen-21)
poss(ghos-23, its-22)
dobj(seen-21, ghos-23)
nsubjpass(seen-28, we-26)
auxpass(seen-28, 's-27)
parataxis(dead-16, seen-28)
dobj(seen-28, it-29)
advmod(seen-28, twiste-30)
poss(proof-35, dat-33)
prep_en(seen-28, proof-35)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP De) (NN desert) (POS 's))
        (NN ha))
      (`` `)
      (S
        (S
          (ADVP (RB nted))
          (, ,)
          (NP (PRP it))
          (VP (VBZ 's)
            (NP
              (NP (NN ha))
              (ADJP (`` `) (JJ nted) (, ,) (JJ sho)))))
        (: ;)
        (S
          (INTJ (UH oh))
          (, ,)
          (NP (NNP Mars) (NNP Tom) (, ,) (NNP le))
          ('' '')
          (VP (VBZ s)
            (NP
              (NP (NN git) (NN outen))
              (SBAR
                (S
                  (NP (PRP it))
                  (: ;)
                  (NP (PRP I))
                  (VP (MD 'd)
                    (ADVP (RB ruther))
                    (VP (VB die)
                      (S
                        (NP (NN den))
                        (VP (VB have)
                          (S
                            (NP (IN de) (NN night))
                            (VP (VB ketch)
                              (NP (PRP us))))))
                      (SBAR (IN in)
                        (S
                          (NP (PRP it))
                          (VP (VBP ag)
                            (SBAR
                              (S (`` `)
                                (PP (IN in)
                                  (NP (FW en) (FW de) (NNS ghos)))
                                ('' ')
                                (NP (NN er) (NN dat) (NN lake))
                                (VP (VBP come)
                                  (NP
                                    (NP (NN a-mournin) (POS '))
                                    (NN aroun))))))))
                      ('' ')
                      (NP (PRP us))
                      (PP (IN en)
                        (S
                          (NP (PRP we))
                          (VP (VBG asleep)
                            (PP (IN en)
                              (NP (NN doan))))))))))))))
      ('' '))
    (VP (VBP know)
      (NP
        (NP (JJ de) (NN danger))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBZ 's)
              (PP (IN in)))))))
    (. .) ('' '')))

nn(desert-2, De-1)
poss(ha-4, desert-2)
nsubj(know-62, ha-4)
advmod(ha-10, nted-6)
nsubj(ha-10, it-8)
cop(ha-10, 's-9)
dep(ha-4, ha-10)
amod(sho-14, nted-12)
amod(ha-10, sho-14)
discourse(outen-25, oh-16)
nn(le-21, Mars-18)
nn(le-21, Tom-19)
nsubj(outen-25, le-21)
cop(outen-25, s-23)
nn(outen-25, git-24)
parataxis(ha-10, outen-25)
nsubj(die-31, it-26)
nsubj(die-31, I-28)
aux(die-31, 'd-29)
advmod(die-31, ruther-30)
rcmod(outen-25, die-31)
nsubj(have-33, den-32)
ccomp(die-31, have-33)
amod(night-35, de-34)
nsubj(ketch-36, night-35)
ccomp(have-33, ketch-36)
dobj(ketch-36, us-37)
mark(ag-40, in-38)
nsubj(ag-40, it-39)
advcl(die-31, ag-40)
nn(ghos-45, en-43)
nn(ghos-45, de-44)
prep_in(come-50, ghos-45)
nn(lake-49, er-47)
nn(lake-49, dat-48)
nsubj(come-50, lake-49)
ccomp(ag-40, come-50)
poss(aroun-53, a-mournin-51)
dobj(come-50, aroun-53)
dobj(die-31, us-55)
nsubj(asleep-58, we-57)
prepc_en(die-31, asleep-58)
prep_en(asleep-58, doan-60)
root(ROOT-0, know-62)
amod(danger-64, de-63)
dobj(know-62, danger-64)
prep_in('s-66, danger-64)
nsubj('s-66, we-65)
rcmod(danger-64, 's-66)

(ROOT
  (S (`` ``)
    (INTJ (UH Ghost))
    (, ,)
    (NP (PRP you))
    (VP (VBP gander))
    (. !)))

discourse(gander-5, Ghost-2)
nsubj(gander-5, you-4)
root(ROOT-0, gander-5)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (NN anything))
          (PP (CC but)
            (NP (NN air)
              (CC and)
              (NN heat))))))
    (CC and)
    (S
      (NP (NNS thirstiness))
      (VP (VBD pasted)
        (ADVP (RB together))
        (PP (IN by)
          (NP
            (NP (DT a) (NN person) (POS 's))
            (NN imagination)))))
    (. .)))

nsubj(anything-4, It-1)
cop(anything-4, ai-2)
neg(anything-4, n't-3)
root(ROOT-0, anything-4)
prep(anything-4, but-5)
pobj(but-5, air-6)
pobj(but-5, heat-8)
conj_and(air-6, heat-8)
nsubj(pasted-11, thirstiness-10)
conj_and(anything-4, pasted-11)
advmod(pasted-11, together-12)
det(person-15, a-14)
poss(imagination-17, person-15)
prep_by(pasted-11, imagination-17)

(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP I))
      (: --)
      (VP (VBP gim)
        (S
          (NP (PRP me))
          (NP (DT the) (NN glass))))
      (. !) ('' ''))))

mark(gim-4, If-1)
nsubj(gim-4, I-2)
root(ROOT-0, gim-4)
nsubj(glass-7, me-5)
det(glass-7, the-6)
xcomp(gim-4, glass-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD grabbed)
        (NP (PRP it)))
      (CC and)
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB gaze)
              (PRT (RP off))
              (PP (TO to)
                (NP (DT the) (NN right))))))))
    (. .)))

nsubj(grabbed-2, He-1)
nsubj(begun-5, He-1)
nsubj(gaze-7, He-1)
root(ROOT-0, grabbed-2)
dobj(grabbed-2, it-3)
conj_and(grabbed-2, begun-5)
aux(gaze-7, to-6)
xcomp(begun-5, gaze-7)
prt(gaze-7, off-8)
det(right-11, the-10)
prep_to(gaze-7, right-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN flock))
          (PP (IN of)
            (NP (NNS birds))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBZ says))
    (. .)))

nsubj(flock-5, It-2)
cop(flock-5, 's-3)
det(flock-5, a-4)
ccomp(says-11, flock-5)
prep_of(flock-5, birds-7)
nsubj(says-11, he-10)
root(ROOT-0, says-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBG getting)
          (PP (IN toward)
            (NP (NN sundown))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (VP (VBG making)
          (NP (DT a) (NN bee-line))
          (PP (IN across)
            (NP
              (NP (PRP$ our) (NN track))
              (PP (IN for)
                (NP (NNS somewheres))))))))
    (. .)))

nsubj(getting-4, It-2)
aux(getting-4, 's-3)
root(ROOT-0, getting-4)
prep_toward(getting-4, sundown-6)
nsubj(making-11, they-9)
aux(making-11, 're-10)
conj_and(getting-4, making-11)
det(bee-line-13, a-12)
dobj(making-11, bee-line-13)
poss(track-16, our-15)
prep_across(making-11, track-16)
prep_for(track-16, somewheres-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP mean)
        (NP (NN business))))
    (: --)
    (S
      (ADVP (RB maybe))
      (NP (PRP they))
      (VP (VBP 're)
        (VP (VBG going)
          (PP (IN for)
            (NP
              (NP (NN food)
                (CC or)
                (NN water))
              (, ,)
              (CC or)
              (NP (DT both)))))))
    (. .)))

nsubj(mean-2, They-1)
root(ROOT-0, mean-2)
dobj(mean-2, business-3)
advmod(going-8, maybe-5)
nsubj(going-8, they-6)
aux(going-8, 're-7)
parataxis(mean-2, going-8)
prep_for(going-8, food-10)
prep_for(going-8, water-12)
conj_or(food-10, water-12)
prep_for(going-8, both-15)
conj_or(food-10, both-15)

(ROOT
  (S
    (VP (VB Let)
      (SBAR
        (S
          (NP (PRP her))
          (VP (VBP go)
            (S
              (VP (TO to)
                (VP (VB starboard))))))))
    (. !)))

root(ROOT-0, Let-1)
nsubj(go-3, her-2)
nsubj(starboard-5, her-2)
ccomp(Let-1, go-3)
aux(starboard-5, to-4)
xcomp(go-3, starboard-5)

(ROOT
  (S
    (LST (: --))
    (VP (VB Port)
      (NP (PRP$ your) (NN hellum)))
    (. !)))

root(ROOT-0, Port-2)
poss(hellum-4, your-3)
dobj(Port-2, hellum-4)

(ROOT
  (FRAG
    (NP (NNP Hard))
    (ADVP (RB down))
    (. !)))

root(ROOT-0, Hard-1)
dep(Hard-1, down-2)

(ROOT
  (S
    (NP (EX There))
    (PRN (: --)
      (S
        (VP (VB ease)
          (PRT (RP up))))
      (: --))
    (VP (VBZ steady) (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP go)))))
    (. .) ('' '')))

expl(steady-6, There-1)
parataxis(steady-6, ease-3)
prt(ease-3, up-4)
root(ROOT-0, steady-6)
mark(go-10, as-8)
nsubj(go-10, you-9)
advcl(steady-6, go-10)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD shut)
        (ADVP
          (ADVP (RB down)
            (NP
              (NP (DT some))
              (PP (IN of)
                (NP (DT the) (NN power)))))
          (, ,) (RB so)
          (ADVP (RB as) (RB not)))
        (S
          (VP (TO to)
            (VP (VB outspeed)
              (NP (PRP them))))))
      (, ,)
      (CC and)
      (VP (VBD took)
        (PRT (RP out))
        (PP (IN after)
          (NP (PRP them)))))
    (. .)))

nsubj(shut-2, We-1)
nsubj(outspeed-13, We-1)
nsubj(took-17, We-1)
root(ROOT-0, shut-2)
advmod(shut-2, down-3)
pobj(down-3, some-4)
det(power-7, the-6)
prep_of(some-4, power-7)
advmod(down-3, so-9)
advmod(not-11, as-10)
advmod(down-3, not-11)
aux(outspeed-13, to-12)
xcomp(shut-2, outspeed-13)
dobj(outspeed-13, them-14)
conj_and(shut-2, took-17)
prt(took-17, out-18)
prep_after(took-17, them-20)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD went)
        (S
          (VP (VBG skimming)
            (PRT (RP along))
            (NP
              (NP (DT a) (NN quarter))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN mile))
                  (PP (IN behind)
                    (NP (PRP them))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP
            (VP (VBD had)
              (VP (VBN followed)
                (S
                  (NP (PRP them))
                  (NP
                    (NP (DT an) (NN hour))
                    (CC and)
                    (NP (DT a) (NN half))))))
            (CC and)
            (VP (VBD was)
              (VP (VBG getting)
                (ADJP (RB pretty) (JJ discouraged))))
            (, ,)
            (CC and)
            (VP (VBD was)
              (ADJP (RB thirsty) (JJ clean))
              (PP (TO to)
                (NP (NNS unendurableness)))))))
      (, ,)
      (NP (NNP Tom))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (S
            (VP (VB Take)
              (NP (DT the) (NN glass))
              (, ,)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (PRP you))))))
          (, ,)
          (CC and)
          (S
            (VP (VB see)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT that))
                  (VP (VBZ is) (, ,)
                    (ADVP (RB away) (RB ahead))
                    (PP (IN of)
                      (NP (DT the) (NNS birds)))))))))))
    (. .) ('' '')))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
xcomp(went-2, skimming-3)
prt(skimming-3, along-4)
det(quarter-6, a-5)
dobj(skimming-3, quarter-6)
det(mile-9, a-8)
prep_of(quarter-6, mile-9)
prep_behind(mile-9, them-11)
advmod(followed-17, when-14)
nsubj(followed-17, we-15)
nsubj(discouraged-28, we-15)
nsubj(clean-33, we-15)
aux(followed-17, had-16)
advcl(says-38, followed-17)
nsubj(hour-20, them-18)
det(hour-20, an-19)
xcomp(followed-17, hour-20)
det(half-23, a-22)
xcomp(followed-17, half-23)
conj_and(hour-20, half-23)
aux(discouraged-28, was-25)
dep(discouraged-28, getting-26)
advmod(discouraged-28, pretty-27)
conj_and(followed-17, discouraged-28)
advcl(says-38, discouraged-28)
cop(clean-33, was-31)
advmod(clean-33, thirsty-32)
conj_and(followed-17, clean-33)
advcl(says-38, clean-33)
prep_to(clean-33, unendurableness-35)
nsubj(says-38, Tom-37)
conj_and(went-2, says-38)
dep(says-38, Take-41)
det(glass-43, the-42)
dobj(Take-41, glass-43)
dobj(Take-41, one-45)
prep_of(one-45, you-47)
dep(says-38, see-50)
conj_and(Take-41, see-50)
dobj(is-53, what-51)
nsubj(is-53, that-52)
ccomp(see-50, is-53)
advmod(is-53, away-55)
det(birds-59, the-58)
prep_ahead_of(is-53, birds-59)

(ROOT
  (S
    (NP (NNP Jim))
    (VP
      (VP (VBD got)
        (NP (DT the) (JJ first) (NN glimpse)))
      (, ,)
      (CC and)
      (VP (VBD slumped)
        (PRT (RP down))
        (PP (IN on)
          (NP (DT the) (NN locker) (JJ sick)))))
    (. .)))

nsubj(got-2, Jim-1)
nsubj(slumped-8, Jim-1)
root(ROOT-0, got-2)
det(glimpse-5, the-3)
amod(glimpse-5, first-4)
dobj(got-2, glimpse-5)
conj_and(got-2, slumped-8)
prt(slumped-8, down-9)
det(locker-12, the-11)
prep_on(slumped-8, locker-12)
amod(locker-12, sick-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (UCP
          (ADJP (RBS most) (JJ crying))
          (, ,)
          (CC and)
          (VP (VBZ says) (: :) (`` ``)
            (S
              (NP (PRP She))
              (VP (VBZ 's)
                (NP
                  (NP (NN dah) (NN ag))
                  (`` `)
                  (PP (IN in)
                    (PRN (, ,)
                      (S
                        (NP (NNP Mars) (NNP Tom))
                        (, ,)
                        (NP (PRP she))
                        (VP (VBZ 's)
                          (ADJP (RB dah) (JJ ag) (`` `)
                            (SBAR
                              (UCP
                                (PP (IN in))
                                (, ,)
                                (ADVP (IN en)))
                              (S
                                (NP (PRP I))
                                (VP (VBZ knows)
                                  (SBAR
                                    (S
                                      (NP (PRP I))
                                      (VP (VBZ 's)
                                        (ADJP (JJ gwine)
                                          (S
                                            (VP (TO to)
                                              (VP (VB die))))))))))))))
                      (, ,) (`` `))
                    (NP
                      (NP (NN case))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (DT a) (NN body))
                          (VP (VBZ sees)
                            (NP
                              (NP (DT a) (NNS ghos) (POS '))
                              (FW de) (NN third) (NN time))))))))))))))
    (, ,)
    (NP (NN dat))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ means)))))
    (. .)))

nsubj(crying-4, He-1)
nsubj(says-7, He-1)
cop(crying-4, was-2)
advmod(crying-4, most-3)
ccomp('s-50, crying-4)
conj_and(crying-4, says-7)
ccomp('s-50, says-7)
nsubj(ag-13, She-10)
cop(ag-13, 's-11)
nn(ag-13, dah-12)
ccomp(says-7, ag-13)
nn(Tom-18, Mars-17)
nsubj(ag-23, Tom-18)
nsubj(ag-23, she-20)
cop(ag-23, 's-21)
advmod(ag-23, dah-22)
dep(ag-13, ag-23)
dep(knows-29, in-25)
dep(in-25, en-27)
nsubj(knows-29, I-28)
ccomp(ag-23, knows-29)
nsubj(gwine-32, I-30)
nsubj(die-34, I-30)
cop(gwine-32, 's-31)
ccomp(knows-29, gwine-32)
aux(die-34, to-33)
xcomp(gwine-32, die-34)
prep_in(ag-13, case-37)
tmod(sees-41, case-37)
advmod(sees-41, when-38)
det(body-40, a-39)
nsubj(sees-41, body-40)
rcmod(case-37, sees-41)
det(ghos-43, a-42)
poss(time-47, ghos-43)
nn(time-47, de-45)
nn(time-47, third-46)
dobj(sees-41, time-47)
nsubj('s-50, dat-49)
root(ROOT-0, 's-50)
dobj(means-53, what-51)
nsubj(means-53, it-52)
ccomp('s-50, means-53)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP wisht)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD 'd)
              (ADVP (RB never))
              (VP (VB come)
                (PP (IN in)
                  (NP (NN dis) (NN balloon)))))))))
    (, ,)
    (ADVP (RB dat))
    (S
      (NP (PRP I))
      (VP (VBZ does)))
    (. .) ('' '')))

nsubj(wisht-2, I-1)
root(ROOT-0, wisht-2)
nsubj(come-6, I-3)
aux(come-6, 'd-4)
neg(come-6, never-5)
ccomp(wisht-2, come-6)
nn(balloon-9, dis-8)
prep_in(come-6, balloon-9)
advmod(does-13, dat-11)
nsubj(does-13, I-12)
parataxis(wisht-2, does-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would) (RB n't)
        (VP (VB look)
          (ADVP (DT no) (RBR more)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD said)
            (SBAR
              (S
                (VP (VBD made)
                  (S
                    (NP (PRP me))
                    (ADJP (JJ afraid)))
                  (, ,)
                  (ADVP (RB too))
                  (, ,)
                  (SBAR (IN because)
                    (S
                      (NP (PRP I))
                      (VP (VBD knowed)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (ADJP (JJ true))
                              (, ,)
                              (PP (IN for)
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ has)
                                      (ADVP (RB always))
                                      (VP (VBN been)
                                        (NP
                                          (NP (DT the) (NN way))
                                          (PP (IN with)
                                            (NP (NNS ghosts)))))))))))))))))))))
      (: ;)
      (ADVP (RB so) (RB then))
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (VP (VB look)
          (ADVP (DT any) (RBR more))
          (, ,)
          (ADVP (RB either)))))
    (. .)))

nsubj(look-4, He-1)
aux(look-4, would-2)
neg(look-4, n't-3)
root(ROOT-0, look-4)
neg(more-6, no-5)
advmod(look-4, more-6)
dobj(said-11, what-9)
nsubj(made-12, what-9)
nsubj(said-11, he-10)
advcl(look-40, said-11)
ccomp(said-11, made-12)
nsubj(afraid-14, me-13)
xcomp(made-12, afraid-14)
advmod(made-12, too-16)
mark(knowed-20, because-18)
nsubj(knowed-20, I-19)
advcl(made-12, knowed-20)
nsubj(true-23, it-21)
cop(true-23, was-22)
ccomp(knowed-20, true-23)
nsubj(way-31, that-26)
aux(way-31, has-27)
advmod(way-31, always-28)
cop(way-31, been-29)
det(way-31, the-30)
prepc_for(true-23, way-31)
prep_with(way-31, ghosts-33)
advmod(then-36, so-35)
advmod(look-40, then-36)
nsubj(look-40, I-37)
aux(look-40, would-38)
neg(look-40, n't-39)
conj_and(look-4, look-40)
dep(more-42, any-41)
advmod(look-40, more-42)
advmod(look-40, either-44)

(ROOT
  (S
    (S
      (NP
        (NP (DT Both))
        (PP (IN of)
          (NP (PRP us))))
      (VP (VBN begged)
        (S
          (NP (NNP Tom))
          (VP (TO to)
            (VP
              (VP (VB turn)
                (PRT (RP off)))
              (CC and)
              (VP (VB go)
                (NP (DT some) (JJ other) (NN way))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (MD would) (RB n't))
        (, ,)
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD was)
                (NP (JJ ignorant) (NN superstitious) (NNS blatherskites))))))))
    (. .)))

nsubj(begged-4, Both-1)
prep_of(Both-1, us-3)
root(ROOT-0, begged-4)
dobj(begged-4, Tom-5)
nsubj(turn-7, Tom-5)
nsubj(go-10, Tom-5)
aux(turn-7, to-6)
xcomp(begged-4, turn-7)
prt(turn-7, off-8)
xcomp(begged-4, go-10)
conj_and(turn-7, go-10)
det(way-13, some-11)
amod(way-13, other-12)
dobj(go-10, way-13)
nsubj(would-17, he-16)
nsubj(said-21, he-16)
conj_but(begged-4, would-17)
neg(would-17, n't-18)
conj_but(begged-4, said-21)
conj_and(would-17, said-21)
nsubj(blatherskites-26, we-22)
cop(blatherskites-26, was-23)
amod(blatherskites-26, ignorant-24)
nn(blatherskites-26, superstitious-25)
ccomp(said-21, blatherskites-26)

(ROOT
  (S
    (ADVP (RB Yes))
    (PRN (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (MD 'll)
          (VP (VB git)
            (S
              (VP (VB come)
                (PRT (RP up))
                (PP (IN with))
                (, ,)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP (DT these) (NNS days)))))))))
      (, ,))
    (NP (PRP I))
    (VP (VBZ says)
      (PP (TO to)
        (NP
          (NP (PRP myself))
          (, ,)
          (NP
            (NP (JJ insulting) (NNS ghosts))
            (NP (DT that) (NN way))))))
    (. .)))

advmod(says-17, Yes-1)
cc(git-6, and-3)
nsubj(git-6, he-4)
aux(git-6, 'll-5)
parataxis(says-17, git-6)
ccomp(git-6, come-7)
prt(come-7, up-8)
prep(come-7, with-9)
dobj(come-7, one-11)
det(days-14, these-13)
prep_of(one-11, days-14)
nsubj(says-17, I-16)
root(ROOT-0, says-17)
prep_to(says-17, myself-19)
amod(ghosts-22, insulting-21)
appos(myself-19, ghosts-22)
det(way-24, that-23)
dep(ghosts-22, way-24)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD 'll)
        (VP (VB stand)
          (NP (PRP it))
          (PP (IN for)
            (NP (DT a) (NN while)))
          (, ,)
          (ADVP (RB maybe)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD wo) (RB n't)
        (VP (VB stand)
          (NP (PRP it))
          (ADVP (RB always))
          (, ,)
          (PP (IN for)
            (NP
              (NP (NN anybody))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ knows)
                    (SBAR
                      (SBAR (IN about)
                        (S
                          (NP (NNS ghosts))
                          (VP (VBZ knows)
                            (SBAR
                              (WHADVP (WRB how)
                                (ADJP (JJ easy)))
                              (S
                                (NP (PRP they))
                                (VP (VBP are)
                                  (VP (VBN hurt))))))))
                      (, ,)
                      (CC and)
                      (SBAR
                        (WHADVP (WRB how)
                          (ADJP (JJ revengeful)))
                        (S
                          (NP (PRP they))
                          (VP (VBP are)))))))))))))
    (. .)))

nsubj(stand-3, They-1)
aux(stand-3, 'll-2)
root(ROOT-0, stand-3)
dobj(stand-3, it-4)
det(while-7, a-6)
prep_for(stand-3, while-7)
advmod(stand-3, maybe-9)
nsubj(stand-15, they-12)
aux(stand-15, wo-13)
neg(stand-15, n't-14)
conj_but(stand-3, stand-15)
dobj(stand-15, it-16)
advmod(stand-15, always-17)
prep_for(stand-15, anybody-20)
nsubj(knows-22, anybody-20)
rcmod(anybody-20, knows-22)
mark(knows-25, about-23)
nsubj(knows-25, ghosts-24)
advcl(knows-22, knows-25)
advmod(hurt-30, how-26)
dep(how-26, easy-27)
nsubjpass(hurt-30, they-28)
auxpass(hurt-30, are-29)
ccomp(knows-25, hurt-30)
advmod(are-36, how-33)
dep(how-33, revengeful-34)
nsubj(are-36, they-35)
advcl(knows-22, are-36)
conj_and(knows-25, are-36)

(ROOT
  (S (IN So)
    (S
      (NP (PRP we))
      (VP (VBD was) (RB all)
        (ADJP (JJ quiet))))
    (CC and)
    (ADVP (RB still))
    (, ,)
    (S
      (NP (NNP Jim)
        (CC and)
        (PRP me))
      (VP (VBG being)
        (ADJP (JJ scared))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (ADJP (JJ busy)))
    (. .)))

dep(quiet-5, So-1)
nsubj(quiet-5, we-2)
nsubj(busy-17, we-2)
cop(quiet-5, was-3)
advmod(quiet-5, all-4)
root(ROOT-0, quiet-5)
advmod(quiet-5, still-7)
conj_and(quiet-5, still-7)
nsubj(scared-13, Jim-9)
conj_and(Jim-9, me-11)
nsubj(scared-13, me-11)
cop(scared-13, being-12)
dep(quiet-5, scared-13)
dep(busy-17, Tom-16)
conj_and(quiet-5, busy-17)

(ROOT
  (S
    (SBAR (IN By)
      (PRN (CC and)
        (PP (IN by)))
      (S
        (NP (NNP Tom))
        (VP
          (VP (VBD fetched)
            (NP (DT the) (NN balloon))
            (PP (TO to)
              (NP (DT a) (NN standstill))))
          (, ,)
          (CC and)
          (VP (VBZ says) (: :) (`` ``)
            (S
              (NP (NNP NOW))
              (VP
                (VP (VB get)
                  (PRT (RP up)))
                (CC and)
                (VP (VB look))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBZ sapheads))
    (. .) ('' '')))

mark(fetched-5, By-1)
cc(by-3, and-2)
dep(fetched-5, by-3)
nsubj(fetched-5, Tom-4)
nsubj(says-13, Tom-4)
advcl(sapheads-23, fetched-5)
det(balloon-7, the-6)
dobj(fetched-5, balloon-7)
det(standstill-10, a-9)
prep_to(fetched-5, standstill-10)
conj_and(fetched-5, says-13)
advcl(sapheads-23, says-13)
nsubj(get-17, NOW-16)
nsubj(look-20, NOW-16)
ccomp(says-13, get-17)
prt(get-17, up-18)
ccomp(says-13, look-20)
conj_and(get-17, look-20)
nsubj(sapheads-23, you-22)
root(ROOT-0, sapheads-23)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBN done)
        (NP (PRP it))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ sure-enough) (NN water) (NN right))
          (PP (IN under)
            (NP (PRP us))))))
    (. !)))

nsubj(done-2, We-1)
root(ROOT-0, done-2)
dobj(done-2, it-3)
expl(was-7, there-6)
conj_and(done-2, was-7)
det(right-11, the-8)
amod(right-11, sure-enough-9)
nn(right-11, water-10)
nsubj(was-7, right-11)
prep_under(right-11, us-13)

(ROOT
  (NP (: --)
    (NP
      (ADJP
        (ADJP (JJ clear))
        (, ,)
        (CC and)
        (ADJP (JJ blue))
        (, ,)
        (CC and)
        (ADJP (JJ cool))
        (, ,)
        (CC and)
        (ADJP (JJ deep))
        (, ,)
        (CC and)
        (ADJP (JJ wavy)
          (PP (IN with)
            (NP
              (NP (DT the) (NN breeze))
              (, ,)
              (NP (DT the) (NN loveliest))))))
      (NN sight)
      (SBAR
        (WHNP (WDT that))
        (S
          (ADVP (RB ever))
          (VP (VBD was)))))
    (. .)))

amod(sight-21, clear-2)
conj_and(clear-2, blue-5)
amod(sight-21, blue-5)
conj_and(clear-2, cool-8)
amod(sight-21, cool-8)
conj_and(clear-2, deep-11)
amod(sight-21, deep-11)
conj_and(clear-2, wavy-14)
amod(sight-21, wavy-14)
det(breeze-17, the-16)
prep_with(wavy-14, breeze-17)
det(loveliest-20, the-19)
appos(breeze-17, loveliest-20)
root(ROOT-0, sight-21)
nsubj(was-24, that-22)
advmod(was-24, ever-23)
ccomp(sight-21, was-24)

(ROOT
  (S (CC And)
    (S
      (NP
        (NP (DT all))
        (PP (IN about)
          (NP (PRP it))))
      (VP (VBD was)
        (NP (JJ grassy) (NNS banks))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (NNS flowers))
          (, ,)
          (CC and)
          (NP
            (NP (JJ shady) (NNS groves))
            (PP (IN of)
              (NP (JJ big) (NNS trees))))
          (, ,))
        (VP (VBD looped)
          (ADVP (RB together))
          (PP (IN with)
            (NP (NNS vines)))))
      (, ,)
      (CC and)
      (RB all)
      (S
        (S
          (VP (VBG looking)
            (ADJP
              (ADJP (RB so) (JJ peaceful)
                (CC and)
                (JJ comfortable))
              (: --)
              (ADJP (JJ enough)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP (DT a) (NN body) (NN cry)))))))))
        (, ,)
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (RB so) (JJ beautiful)))))
    (. .)))

nsubj(banks-7, all-2)
prep_about(all-2, it-4)
cop(banks-7, was-5)
amod(banks-7, grassy-6)
root(ROOT-0, banks-7)
nsubj(looped-19, flowers-10)
amod(groves-14, shady-13)
conj_and(flowers-10, groves-14)
nsubj(looped-19, groves-14)
amod(trees-17, big-16)
prep_of(groves-14, trees-17)
conj_and(banks-7, looped-19)
prep_together_with(looped-19, vines-22)
conj_and(banks-7, all-25)
advmod(looped-19, all-25)
conj_and(looped-19, all-25)
vmod(beautiful-42, looking-26)
advmod(peaceful-28, so-27)
acomp(looking-26, peaceful-28)
acomp(looking-26, comfortable-30)
conj_and(peaceful-28, comfortable-30)
dep(peaceful-28, enough-32)
aux(make-34, to-33)
xcomp(enough-32, make-34)
det(cry-37, a-35)
nn(cry-37, body-36)
dobj(make-34, cry-37)
nsubj(beautiful-42, it-39)
cop(beautiful-42, was-40)
advmod(beautiful-42, so-41)
dep(looped-19, beautiful-42)

(ROOT
  (S
    (S
      (NP (NNP Jim) (NNP DID))
      (VP
        (VP
          (VP (VB cry))
          (, ,)
          (CC and)
          (VP (VB rip)
            (CC and)
            (VB dance)))
        (CC and)
        (VP (VB carry)
          (PRT (RP on)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB so) (JJ thankful)
        (CC and)
        (JJ out))
      (PP (IN of)
        (NP
          (NP (PRP$ his) (NN mind))
          (PP (IN for)
            (NP (NN joy))))))
    (. .)))

nn(DID-2, Jim-1)
nsubj(cry-3, DID-2)
nsubj(rip-6, DID-2)
nsubj(carry-10, DID-2)
ccomp(thankful-16, cry-3)
conj_and(cry-3, rip-6)
ccomp(thankful-16, rip-6)
conj_and(cry-3, dance-8)
conj_and(rip-6, dance-8)
conj_and(cry-3, carry-10)
ccomp(thankful-16, carry-10)
prt(carry-10, on-11)
nsubj(thankful-16, he-13)
nsubj(out-18, he-13)
cop(thankful-16, was-14)
advmod(thankful-16, so-15)
root(ROOT-0, thankful-16)
conj_and(thankful-16, out-18)
poss(mind-21, his-20)
prep_of(thankful-16, mind-21)
prep_for(mind-21, joy-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (PRP$ my) (NN watch))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB stay)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NNS works))
                    (, ,)
                    (CC but)
                    (NP
                      (NP
                        (NP (NNP Tom)
                          (CC and)
                          (NNP Jim))
                        (ADJP
                          (ADJP (JJ clumb) (IN down))
                          (CC and)
                          (ADJP (JJ drunk))))
                      (NP (DT a) (NN barrel)))))
                (ADVP (RB apiece))))))
        (, ,)
        (CC and)
        (VP (VBD fetched)
          (NP (PRP me))
          (ADVP (RB up)
            (NP (DT a) (RB lot))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP
          (VP (VBN tasted)
            (NP (DT a) (JJ many) (DT a) (JJ good) (NN thing))
            (PP (IN in)
              (NP (PRP$ my) (NN life))))
          (, ,)
          (CC but)
          (VP
            (NP
              (NP (NN nothing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (ADVP (RB ever))
                  (VP (VBN begun)
                    (PP (IN with)
                      (NP (DT that) (NN water)))))))))))
    (. .)))

nsubj(watch-4, It-1)
cop(watch-4, was-2)
poss(watch-4, my-3)
root(ROOT-0, watch-4)
dep(watch-4, so-6)
nsubj(had-8, I-7)
nsubj(stay-10, I-7)
nsubj(fetched-28, I-7)
ccomp(watch-4, had-8)
aux(stay-10, to-9)
xcomp(had-8, stay-10)
det(works-13, the-12)
prep_by(stay-10, works-13)
prep_by(stay-10, Tom-16)
conj_but(works-13, Tom-16)
conj_but(works-13, Jim-18)
conj_and(Tom-16, Jim-18)
amod(Tom-16, clumb-19)
dep(clumb-19, down-20)
amod(Tom-16, drunk-22)
conj_and(clumb-19, drunk-22)
det(barrel-24, a-23)
dep(Tom-16, barrel-24)
advmod(stay-10, apiece-25)
ccomp(watch-4, fetched-28)
conj_and(had-8, fetched-28)
dobj(fetched-28, me-29)
advmod(fetched-28, up-30)
det(lot-32, a-31)
pobj(up-30, lot-32)
nsubj(tasted-37, I-35)
aux(tasted-37, 've-36)
conj_and(watch-4, tasted-37)
det(thing-42, a-38)
amod(thing-42, many-39)
det(thing-42, a-40)
amod(thing-42, good-41)
dobj(tasted-37, thing-42)
poss(life-45, my-44)
prep_in(tasted-37, life-45)
conj_and(watch-4, nothing-48)
conj_but(tasted-37, nothing-48)
nsubj(begun-51, nothing-48)
advmod(begun-51, ever-50)
rcmod(nothing-48, begun-51)
det(water-54, that-53)
prep_with(begun-51, water-54)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (PRP we))
        (VP
          (VP (VBD went)
            (PRT (RP down)))
          (CC and)
          (VP (VBD had)
            (NP (DT a) (NN swim)))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (NNP Tom))
        (VP
          (VP (VBD came)
            (PRT (RP up)))
          (CC and)
          (VP (VBN spelled)
            (NP (PRP me))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP me)
          (CC and)
          (NNP Jim))
        (VP (VBD had)
          (NP
            (NP (DT a) (NN swim))
            (, ,)
            (CC and)
            (ADVP (RB then))
            (NP (NNP Jim) (NNP spelled) (NNP Tom)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP me)
            (CC and)
            (NNP Tom))
          (VP (VBD had)
            (NP
              (NP (DT a) (NN foot-race))
              (CC and)
              (NP (DT a) (NN boxing-mill)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB reckon)
              (SBAR
                (S
                  (NP (PRP I))
                  (ADVP (RB ever))
                  (VP (VBD had)
                    (NP
                      (NP (PDT such) (DT a) (JJ good) (NN time))
                      (PP (IN in)
                        (NP (PRP$ my) (NN life))))))))))))
    (. .)))

advmod(went-3, Then-1)
nsubj(went-3, we-2)
nsubj(had-6, we-2)
root(ROOT-0, went-3)
prt(went-3, down-4)
conj_and(went-3, had-6)
det(swim-8, a-7)
dobj(had-6, swim-8)
advmod(came-13, then-11)
nsubj(came-13, Tom-12)
nsubj(spelled-16, Tom-12)
conj_and(went-3, came-13)
prt(came-13, up-14)
conj_and(went-3, spelled-16)
conj_and(came-13, spelled-16)
dobj(spelled-16, me-17)
nsubj(had-23, me-20)
conj_and(me-20, Jim-22)
nsubj(had-23, Jim-22)
conj_and(went-3, had-23)
det(swim-25, a-24)
dobj(had-23, swim-25)
advmod(Tom-31, then-28)
nn(Tom-31, Jim-29)
nn(Tom-31, spelled-30)
dobj(had-23, Tom-31)
conj_and(swim-25, Tom-31)
nsubj(had-37, me-34)
conj_and(me-34, Tom-36)
nsubj(had-37, Tom-36)
conj_and(went-3, had-37)
conj_and(had-23, had-37)
det(foot-race-39, a-38)
dobj(had-37, foot-race-39)
det(boxing-mill-42, a-41)
dobj(had-37, boxing-mill-42)
conj_and(foot-race-39, boxing-mill-42)
nsubj(reckon-48, I-45)
aux(reckon-48, do-46)
neg(reckon-48, n't-47)
conj_and(had-23, reckon-48)
conj_and(had-37, reckon-48)
nsubj(had-51, I-49)
advmod(had-51, ever-50)
ccomp(reckon-48, had-51)
predet(time-55, such-52)
det(time-55, a-53)
amod(time-55, good-54)
dobj(had-51, time-55)
poss(life-58, my-57)
prep_in(time-55, life-58)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD war) (RB n't)
        (VP
          (ADJP (RB so) (RB very) (JJ hot))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP (JJ close)
                  (PP (IN on)
                    (PP (TO to)
                      (NP (NN evening)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD had)
        (NP
          (ADJP (RB n't) (DT any))
          (NNS clothes))
        (PP (IN on))
        (, ,)
        (ADVP (RB anyway))))
    (. .)))

nsubj(war-2, It-1)
root(ROOT-0, war-2)
neg(war-2, n't-3)
advmod(hot-6, so-4)
advmod(hot-6, very-5)
dep(war-2, hot-6)
mark(close-11, because-8)
nsubj(close-11, it-9)
cop(close-11, was-10)
advcl(hot-6, close-11)
prep(close-11, on-12)
pcomp(on-12, to-13)
pobj(to-13, evening-14)
nsubj(had-18, we-17)
conj_and(war-2, had-18)
neg(any-20, n't-19)
amod(clothes-21, any-20)
dobj(had-18, clothes-21)
prep(had-18, on-22)
advmod(had-18, anyway-24)

(ROOT
  (S
    (S
      (NP (NNPS Clothes))
      (VP (VBZ is)
        (ADVP (RB well) (RB enough))
        (PP
          (PP (IN in)
            (NP (NN school)))
          (, ,)
          (CC and)
          (PP (IN in)
            (NP (NNS towns)))
          (, ,)
          (CC and)
          (PP (IN at)
            (NP (NNS balls)))
          (, ,)
          (ADVP (RB too)))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT no) (NN sense))
          (PP (IN in)
            (NP (PRP them))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (EX there))
            (VP (VBP ai) (RB n't)
              (NP
                (NP (DT no) (NN civilization))
                (CC nor)
                (NP
                  (NP (JJ other) (NNS kinds))
                  (PP (IN of)
                    (NP
                      (NP (NNS bothers)
                        (CC and)
                        (NNS fussiness))
                      (ADVP (RB around)))))))))))
    (. .)))

nsubj(is-2, Clothes-1)
nsubj(is-2', Clothes-1)
nsubj(is-2'', Clothes-1)
root(ROOT-0, is-2)
conj_and(is-2, is-2')
conj_and(is-2, is-2'')
advmod(enough-4, well-3)
advmod(is-2, enough-4)
prep_in(is-2, school-6)
prep_in(is-2', towns-10)
prep_at(is-2'', balls-14)
conj_and(is-2, too-16)
expl(ai-20, there-19)
conj_but(is-2, ai-20)
neg(ai-20, n't-21)
neg(sense-23, no-22)
nsubj(ai-20, sense-23)
prep_in(sense-23, them-25)
advmod(ai-28, when-26)
expl(ai-28, there-27)
advcl(ai-20, ai-28)
neg(ai-28, n't-29)
neg(civilization-31, no-30)
nsubj(ai-28, civilization-31)
amod(kinds-34, other-33)
nsubj(ai-28, kinds-34)
conj_nor(civilization-31, kinds-34)
prep_of(kinds-34, bothers-36)
prep_of(kinds-34, fussiness-38)
conj_and(bothers-36, fussiness-38)
advmod(bothers-36, around-39)

(ROOT
  (S
    (VP (`` ``) (VB Lions)
      (NP (NN a-comin))
      ('' '))
    (. !)))

root(ROOT-0, Lions-2)
dobj(Lions-2, a-comin-3)

(ROOT
  (NP (: --) (NNS lions) (. !)))

root(ROOT-0, lions-2)

(ROOT
  (FRAG
    (ADVP (RB Quick))
    (, ,)
    (NP (NNP Mars) (NNP Tom))
    (. !)))

dep(Tom-4, Quick-1)
nn(Tom-4, Mars-3)
root(ROOT-0, Tom-4)

(ROOT
  (FRAG
    (ADJP (JJ Jump)
      (PP (IN for)
        (NP
          (NP (NNP yo) (POS '))
          (NN life))))
    (, ,)
    (NP (NNP Huck))
    (. !) ('' '')))

dep(Huck-7, Jump-1)
poss(life-5, yo-3)
prep_for(Jump-1, life-5)
root(ROOT-0, Huck-7)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (NP (NNP and))
    (VP (VBD did) (RB n't)
      (NP (PRP we)))
    (. !)))

discourse(did-4, Oh-1)
nsubj(did-4, and-3)
root(ROOT-0, did-4)
neg(did-4, n't-5)
dobj(did-4, we-6)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB never))
    (VP
      (VP (VBD stopped)
        (PP (IN for)
          (NP (NNS clothes))))
      (, ,)
      (CC but)
      (VP (VBD waltzed)
        (PRT (RP up))
        (NP (DT the) (NN ladder))
        (NP (RB just) (RB so))))
    (. .)))

nsubj(stopped-3, We-1)
nsubj(waltzed-8, We-1)
neg(stopped-3, never-2)
root(ROOT-0, stopped-3)
prep_for(stopped-3, clothes-5)
conj_but(stopped-3, waltzed-8)
prt(waltzed-8, up-9)
det(ladder-11, the-10)
iobj(waltzed-8, ladder-11)
advmod(so-13, just-12)
dobj(waltzed-8, so-13)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD lost)
        (NP (PRP$ his) (NN head))
        (ADVP (RB straight))
        (PP (RP off))))
    (: --)
    (S
      (NP (PRP he))
      (ADVP (RB always))
      (VP
        (VP (VBN done)
          (NP (PRP it))
          (SBAR
            (WHADVP (WRB whenever))
            (S
              (NP (PRP he))
              (VP (VBD got)
                (ADJP (JJ excited))))))
        (CC and)
        (VP (JJ scared))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB so) (RB now))
      (, ,) (`` `)
      (VP (VBD stead)
        (PP (IN of)
          (S
            (ADVP (RB just))
            (VP (VBG easing)
              (NP (DT the) (NN ladder))
              (PRT (RP up))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN ground))
                  (NP (DT a) (JJ little)))))))))
    (, ,) (IN so)
    (S
      (NP (DT the) (NNS animals))
      (VP (MD could) (RB n't)
        (VP (VB reach)
          (NP (PRP it)))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD turned)
          (PP (IN on)
            (NP
              (NP (DT a) (NN raft))
              (PP (IN of)
                (NP (NN power)))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP we))
      (VP
        (VP (VBD went)
          (S
            (VP (VBG whizzing)
              (PRT (RP up)))))
        (CC and)
        (VP (VBD was)
          (VP (VBG dangling)
            (PP (IN in)
              (NP (DT the) (NN sky)))
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD got)
                    (NP (PRP$ his) (NNS wits))
                    (ADVP (RB together)))
                  (CC and)
                  (VP (VBN seen)
                    (X
                      (X (WP what))
                      (NP
                        (NP (DT a) (JJ foolish) (NN thing))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBG doing)))))))))))))))
    (. .)))

nsubj(lost-2, Jim-1)
nsubj(stead-24, Jim-1)
root(ROOT-0, lost-2)
poss(head-4, his-3)
dobj(lost-2, head-4)
advmod(lost-2, straight-5)
prep(lost-2, off-6)
nsubj(done-10, he-8)
nsubj(scared-17, he-8)
advmod(done-10, always-9)
conj_and(lost-2, done-10)
dobj(done-10, it-11)
advmod(excited-15, whenever-12)
nsubj(excited-15, he-13)
dep(excited-15, got-14)
advcl(done-10, excited-15)
conj_and(lost-2, scared-17)
conj_and(done-10, scared-17)
advmod(now-21, so-20)
advmod(stead-24, now-21)
conj_and(lost-2, stead-24)
advmod(easing-27, just-26)
prepc_of(stead-24, easing-27)
det(ladder-29, the-28)
dobj(easing-27, ladder-29)
prt(easing-27, up-30)
det(ground-33, the-32)
prep_from(easing-27, ground-33)
det(little-35, a-34)
dep(ground-33, little-35)
dep(lost-2, so-37)
det(animals-39, the-38)
nsubj(reach-42, animals-39)
aux(reach-42, could-40)
neg(reach-42, n't-41)
dep(lost-2, reach-42)
dobj(reach-42, it-43)
nsubj(turned-46, he-45)
dep(lost-2, turned-46)
det(raft-49, a-48)
prep_on(turned-46, raft-49)
prep_of(raft-49, power-51)
nsubj(went-55, we-54)
nsubj(dangling-60, we-54)
conj_and(lost-2, went-55)
xcomp(went-55, whizzing-56)
prt(whizzing-56, up-57)
aux(dangling-60, was-59)
conj_and(lost-2, dangling-60)
conj_and(went-55, dangling-60)
det(sky-63, the-62)
prep_in(dangling-60, sky-63)
mark(got-66, before-64)
nsubj(got-66, he-65)
nsubj(seen-71, he-65)
advcl(dangling-60, got-66)
poss(wits-68, his-67)
dobj(got-66, wits-68)
advmod(got-66, together-69)
advcl(dangling-60, seen-71)
conj_and(got-66, seen-71)
dep(thing-75, what-72)
det(thing-75, a-73)
amod(thing-75, foolish-74)
dep(seen-71, thing-75)
nsubj(doing-78, he-76)
aux(doing-78, was-77)
rcmod(thing-75, doing-78)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD stopped)
        (NP (PRP her))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP
          (NP (JJ clean) (NNS forgot))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (TO to)
                (VP (VB do)
                  (ADVP (JJ next)))))))))
    (: ;)
    (S
      (ADVP (RB so) (RB there))
      (NP (PRP we))
      (VP (VBD was) (, ,)
        (ADVP (RB so) (JJ high))
        (SBAR (IN that)
          (S
            (NP (DT the) (NNS lions))
            (VP (VBD looked)
              (PP (IN like)
                (NP (NNS pups))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD was)
        (VP (VBG drifting)
          (PRT (RP off))
          (PP (IN on)
            (NP (DT the) (NN wind))))))
    (. .)))

advmod(stopped-3, Then-1)
nsubj(stopped-3, he-2)
root(ROOT-0, stopped-3)
dobj(stopped-3, her-4)
nsubj(had-8, he-7)
conj_but(stopped-3, had-8)
amod(forgot-10, clean-9)
dobj(had-8, forgot-10)
nsubj(do-13, forgot-10)
aux(do-13, to-12)
rcmod(forgot-10, do-13)
vmod(forgot-10, do-13)
advmod(do-13, next-14)
advmod(there-17, so-16)
advmod(was-19, there-17)
nsubj(was-19, we-18)
conj_but(stopped-3, was-19)
advmod(high-22, so-21)
advmod(was-19, high-22)
mark(looked-26, that-23)
det(lions-25, the-24)
nsubj(looked-26, lions-25)
ccomp(was-19, looked-26)
prep_like(looked-26, pups-28)
nsubj(drifting-33, we-31)
aux(drifting-33, was-32)
conj_and(stopped-3, drifting-33)
prt(drifting-33, off-34)
det(wind-37, the-36)
prep_on(drifting-33, wind-37)

(ROOT
  (SBARQ (CC But)
    (SQ
      (SQ (VBP Tom)
        (NP (PRP he))
        (VP
          (VP (VBN shinned)
            (PRT (RP up)))
          (CC and)
          (VP (VBD went)
            (PP (IN for)
              (NP (DT the) (NNS works))))
          (CC and)
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB slant)
                  (NP (PRP her))
                  (PRT (RP down))))))
          (, ,)
          (FRAG (CC and)
            (ADVP (RB back)
              (PP (IN toward)
                (NP
                  (NP (DT the) (NN lake))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (S
                        (NP (DT the) (NNS animals))
                        (VP (VBD was)
                          (VP (VBG gathering)
                            (PP (IN like)
                              (NP (DT a) (NN camp-meeting))))))
                      (, ,)
                      (CC and)
                      (S
                        (NP (PRP I))
                        (VP (VBP judged)
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (VP (VBN lost)
                                  (NP (PRP$ HIS) (NN head))))))
                          (, ,)
                          (ADVP (RB too))))
                      (: ;)
                      (SBAR (IN for)
                        (S
                          (NP (PRP he))
                          (VP (VBD knowed)
                            (SBAR
                              (S
                                (NP (PRP I))
                                (VP (VBD was)
                                  (ADJP (RB too) (VBN scared)
                                    (S
                                      (VP (TO to)
                                        (VP (VB climb)))))))))))))))))))
      (, ,)
      (CC and)
      (SQ (VBD did)
        (NP (PRP he))
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB dump)
                (NP (PRP me))
                (PP (IN among)
                  (NP (DT the) (NNS tigers)
                    (CC and)
                    (NNS things)))))))))
    (. ?)))

aux(shinned-4, Tom-2)
nsubj(shinned-4, he-3)
nsubj(went-7, he-3)
nsubj(begun-12, he-3)
nsubj(slant-14, he-3)
root(ROOT-0, shinned-4)
prt(shinned-4, up-5)
conj_and(shinned-4, went-7)
det(works-10, the-9)
prep_for(went-7, works-10)
conj_and(shinned-4, begun-12)
aux(slant-14, to-13)
xcomp(begun-12, slant-14)
dobj(slant-14, her-15)
prt(slant-14, down-16)
cc(back-19, and-18)
dep(shinned-4, back-19)
det(lake-22, the-21)
prep_toward(back-19, lake-22)
advmod(gathering-28, where-24)
det(animals-26, the-25)
nsubj(gathering-28, animals-26)
aux(gathering-28, was-27)
rcmod(lake-22, gathering-28)
det(camp-meeting-31, a-30)
prep_like(gathering-28, camp-meeting-31)
nsubj(judged-35, I-34)
rcmod(lake-22, judged-35)
conj_and(gathering-28, judged-35)
nsubj(lost-38, he-36)
aux(lost-38, had-37)
ccomp(judged-35, lost-38)
poss(head-40, HIS-39)
dobj(lost-38, head-40)
advmod(judged-35, too-42)
mark(knowed-46, for-44)
nsubj(knowed-46, he-45)
rcmod(lake-22, knowed-46)
conj_and(gathering-28, knowed-46)
nsubjpass(scared-50, I-47)
nsubj(climb-52, I-47)
auxpass(scared-50, was-48)
advmod(scared-50, too-49)
ccomp(knowed-46, scared-50)
aux(climb-52, to-51)
xcomp(scared-50, climb-52)
aux(want-57, did-55)
nsubj(want-57, he-56)
nsubj(dump-59, he-56)
conj_and(shinned-4, want-57)
aux(dump-59, to-58)
xcomp(want-57, dump-59)
dobj(dump-59, me-60)
det(tigers-63, the-62)
prep_among(dump-59, tigers-63)
prep_among(dump-59, things-65)
conj_and(tigers-63, things-65)

(ROOT
  (S (CC But)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP$ his) (NN head))
      (VP (VBD was)
        (NP (NN level))))
    (, ,)
    (NP (PRP he))
    (VP (VBD knowed)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (IN about))))))
    (. .)))

cc(knowed-10, But-1)
discourse(level-7, no-2)
poss(head-5, his-4)
nsubj(level-7, head-5)
cop(level-7, was-6)
dep(knowed-10, level-7)
nsubj(knowed-10, he-9)
root(ROOT-0, knowed-10)
dobj(about-14, what-11)
nsubj(about-14, he-12)
cop(about-14, was-13)
ccomp(knowed-10, about-14)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD swooped)
        (PRT (RP down))
        (PP (TO to)
          (NP
            (NP
              (UCP
                (PP (IN within)
                  (NP (CD thirty)))
                (CC or)
                (ADVP (RB forty)))
              (NNS feet))
            (PP (IN of)
              (NP (DT the) (NN lake))))))
      (, ,)
      (CC and)
      (VP
        (VP (VBD stopped)
          (ADVP (RB right))
          (PP (IN over)
            (NP (DT the) (NN center))))
        (, ,)
        (CC and)
        (VP (VBN sung)
          (PRT (RP out))))
      (: :) (`` ``)
      (NP
        (NP (NNP Leggo))
        (, ,)
        (CC and)
        (NP (NN drop))))
    (. !) ('' '')))

nsubj(swooped-2, He-1)
nsubj(stopped-15, He-1)
root(ROOT-0, swooped-2)
prt(swooped-2, down-3)
prep(feet-9, within-5)
pobj(within-5, thirty-6)
conj_or(within-5, forty-8)
prep(feet-9, forty-8)
prep_to(swooped-2, feet-9)
det(lake-12, the-11)
prep_of(feet-9, lake-12)
conj_and(swooped-2, stopped-15)
advmod(stopped-15, right-16)
det(center-19, the-18)
prep_over(stopped-15, center-19)
conj_and(swooped-2, sung-22)
conj_and(stopped-15, sung-22)
prt(sung-22, out-23)
conj_and(swooped-2, Leggo-26)
dobj(swooped-2, Leggo-26)
conj_and(swooped-2, drop-29)
dobj(swooped-2, drop-29)
conj_and(Leggo-26, drop-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBN done)
          (NP (PRP it)))
        (, ,)
        (CC and)
        (VP
          (VP (VBN shot)
            (PRT (RP down)))
          (, ,)
          (NP
            (NP (NNS feet))
            (UCP
              (ADJP (JJ first))
              (, ,)
              (CC and)
              (VP (VBD seemed)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (PP (IN about)
                        (NP
                          (NP (DT a) (NN mile))
                          (PP (IN toward)
                            (NP (DT the) (NN bottom))))))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP come)
            (PRT (RP up)))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (RB Now))
          (VP
            (VP (VB lay)
              (PP (IN on)
                (NP (PRP$ your) (NN back))))
            (CC and)
            (VP (VB float)
              (SBAR (IN till)
                (S
                  (NP (PRP you))
                  (VP
                    (VP (VBP 're)
                      (ADJP (JJ rested)))
                    (CC and)
                    (VP (VBD got)
                      (NP (PRP$ your) (NN pluck))
                      (ADVP (RB back)))))))))))
    (, ,)
    (S
      (ADVP (RB then))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB dip)
          (NP
            (NP (DT the) (NN ladder))
            (PP (IN in)
              (NP (DT the) (NN water)))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB climb)
          (ADVP (RB aboard)))))
    (. .) ('' '')))

nsubj(done-2, I-1)
nsubj(shot-6, I-1)
root(ROOT-0, done-2)
dobj(done-2, it-3)
conj_and(done-2, shot-6)
prt(shot-6, down-7)
dobj(shot-6, feet-9)
amod(feet-9, first-10)
amod(feet-9, seemed-13)
conj_and(first-10, seemed-13)
aux(go-15, to-14)
xcomp(seemed-13, go-15)
det(mile-18, a-17)
prep_about(go-15, mile-18)
det(bottom-21, the-20)
prep_toward(mile-18, bottom-21)
advmod(come-26, when-24)
nsubj(come-26, I-25)
advcl(says-30, come-26)
prt(come-26, up-27)
nsubj(says-30, he-29)
conj_and(done-2, says-30)
nsubj(lay-34, Now-33)
nsubj(float-39, Now-33)
ccomp(says-30, lay-34)
poss(back-37, your-36)
prep_on(lay-34, back-37)
ccomp(says-30, float-39)
conj_and(lay-34, float-39)
mark(rested-43, till-40)
nsubj(rested-43, you-41)
nsubj(got-45, you-41)
cop(rested-43, 're-42)
advcl(float-39, rested-43)
advcl(float-39, got-45)
conj_and(rested-43, got-45)
poss(pluck-47, your-46)
dobj(got-45, pluck-47)
advmod(got-45, back-48)
advmod(dip-53, then-50)
nsubj(dip-53, I-51)
aux(dip-53, 'll-52)
conj_and(done-2, dip-53)
det(ladder-55, the-54)
dobj(dip-53, ladder-55)
det(water-58, the-57)
prep_in(ladder-55, water-58)
nsubj(climb-62, you-60)
aux(climb-62, can-61)
conj_and(done-2, climb-62)
advmod(climb-62, aboard-63)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBN done)
      (NP (PRP it)))
    (. .)))

nsubj(done-2, I-1)
root(ROOT-0, done-2)
dobj(done-2, it-3)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT that))
    (VP (VBD was)
      (ADVP (RB ever))
      (ADJP (RB so) (JJ smart)
        (PP (IN in)
          (NP (NNP Tom))))
      (, ,)
      (SBAR (IN because)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN started)
                  (PRT (RP off))
                  (NP
                    (NP (NNS somewheres))
                    (ADJP (RB else)))
                  (S
                    (VP (TO to)
                      (VP (VB drop)
                        (PRT (RP down))
                        (PP (IN on)
                          (NP (DT the) (NN sand))))))))))
          (, ,)
          (NP (DT the) (NN menagerie))
          (VP (MD would) (`` `)
            (ADVP (DT a))
            ('' ')
            (VP
              (VP (VB come)
                (PRT (RP along))
                (, ,)
                (ADVP (RB too)))
              (, ,)
              (CC and)
              (VP (NN might)
                (NP (`` `)
                  (NP (SYM a))
                  ('' ')
                  (SBAR
                    (S
                      (VP (VBD kept)
                        (S
                          (NP (PRP us))
                          (VP (VBG hunting)
                            (NP (DT a) (JJ safe) (NN place))
                            (SBAR (IN till)
                              (S
                                (NP (PRP I))
                                (VP
                                  (VP (VBD got)
                                    (VP (VBN tuckered)
                                      (PRT (RP out))))
                                  (CC and)
                                  (VP (VBD fell)))))))))))))))))
    (. .)))

advmod(smart-6, Now-1)
nsubj(smart-6, that-2)
cop(smart-6, was-3)
advmod(smart-6, ever-4)
advmod(smart-6, so-5)
root(ROOT-0, smart-6)
prep_in(smart-6, Tom-8)
mark(come-31, because-10)
mark(started-14, if-11)
nsubj(started-14, he-12)
aux(started-14, had-13)
advcl(come-31, started-14)
prt(started-14, off-15)
dobj(started-14, somewheres-16)
amod(somewheres-16, else-17)
aux(drop-19, to-18)
vmod(started-14, drop-19)
prt(drop-19, down-20)
det(sand-23, the-22)
prep_on(drop-19, sand-23)
det(menagerie-26, the-25)
nsubj(come-31, menagerie-26)
aux(come-31, would-27)
advmod(come-31, a-29)
advcl(smart-6, come-31)
prt(come-31, along-32)
advmod(come-31, too-34)
advcl(smart-6, might-37)
conj_and(come-31, might-37)
dobj(might-37, a-39)
rcmod(a-39, kept-41)
nsubj(hunting-43, us-42)
dep(kept-41, hunting-43)
det(place-46, a-44)
amod(place-46, safe-45)
dobj(hunting-43, place-46)
mark(tuckered-50, till-47)
nsubjpass(tuckered-50, I-48)
nsubjpass(fell-53, I-48)
auxpass(tuckered-50, got-49)
advcl(hunting-43, tuckered-50)
prt(tuckered-50, out-51)
advcl(hunting-43, fell-53)
conj_and(tuckered-50, fell-53)

(ROOT
  (S
    (S (CC And)
      (S
        (NP (PDT all) (DT this) (NN time))
        (NP (DT the) (NNS lions)
          (CC and)
          (NNS tigers))
        (VP (VBD was)
          (VP
            (VP (VBG sorting)
              (PRT (RP out))
              (NP (DT the) (NNS clothes)))
            (, ,)
            (CC and)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB divide)
                    (NP (PRP them))
                    (PRT (RP up)))))))))
      (IN so)
      (S
        (NP (EX there))
        (VP (MD would)
          (VP (VB be)
            (NP
              (NP (DT some))
              (PP (IN for)
                (NP (DT all))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a)
            (ADJP (JJ misunderstanding)
              (PP (IN about)
                (NP (PRP it))))
            (NNS somewheres))
          (, ,)
          (PP (IN on)
            (NP
              (NP (NN account))
              (PP (IN of)
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (S
                      (NP (PRP them))
                      (VP (VBG trying)
                        (S
                          (VP (TO to)
                            (VP (VB hog)
                              (ADVP (RBR more) (IN than))
                              (NP (PRP$ their) (NN share))))))))))))))
      (: ;) (RB so)
      (S
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP (DT another) (NN insurrection))))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (ADVP (RB never))
          (VP (VBP see)
            (NP
              (NP (NN anything))
              (PP (IN like)
                (NP (PRP it))))
            (PP (IN in)
              (NP (DT the) (NN world)))))))
    (. .)))

predet(time-4, all-2)
det(time-4, this-3)
nsubj(sorting-10, time-4)
nsubj(trying-16, time-4)
nsubj(divide-18, time-4)
det(lions-6, the-5)
nsubj(sorting-10, lions-6)
conj_and(lions-6, tigers-8)
nsubj(sorting-10, tigers-8)
aux(sorting-10, was-9)
root(ROOT-0, sorting-10)
prt(sorting-10, out-11)
det(clothes-13, the-12)
dobj(sorting-10, clothes-13)
conj_and(sorting-10, trying-16)
aux(divide-18, to-17)
xcomp(trying-16, divide-18)
dobj(divide-18, them-19)
prt(divide-18, up-20)
dep(sorting-10, so-21)
expl(some-25, there-22)
aux(some-25, would-23)
cop(some-25, be-24)
parataxis(sorting-10, some-25)
prep_for(some-25, all-27)
expl(was-31, there-30)
conj_but(sorting-10, was-31)
det(somewheres-36, a-32)
amod(somewheres-36, misunderstanding-33)
prep_about(misunderstanding-33, it-35)
nsubj(was-31, somewheres-36)
prep_on_account_of(was-31, some-41)
nsubj(trying-44, them-43)
nsubj(hog-46, them-43)
prepc_of(some-41, trying-44)
aux(hog-46, to-45)
xcomp(trying-44, hog-46)
advmod(than-48, more-47)
advmod(hog-46, than-48)
poss(share-50, their-49)
dobj(hog-46, share-50)
advmod(was-31, so-52)
expl(was-54, there-53)
parataxis(was-31, was-54)
det(insurrection-56, another-55)
nsubj(was-54, insurrection-56)
nsubj(see-61, you-59)
neg(see-61, never-60)
parataxis(was-31, see-61)
conj_and(was-54, see-61)
dobj(see-61, anything-62)
prep_like(anything-62, it-64)
det(world-67, the-66)
prep_in(see-61, world-67)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD must)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN been)
              (ADJP
                (ADJP (JJ fifty)
                  (PP (IN of)
                    (NP (PRP them))))
                (, ,)
                (ADJP (RB all) (JJ mixed))
                (ADVP (RB up) (RB together)))
              (, ,)
              (S
                (VP
                  (VP (VBG snorting))
                  (CC and)
                  (VP
                    (VP (VBG roaring)
                      (CC and)
                      (VBG snapping))
                    (CC and)
                    (VP (VBG biting)
                      (CC and)
                      (VBG tearing)))
                  (, ,)
                  (NP
                    (NP (NNS legs)
                      (CC and)
                      (NNS tails))
                    (PP (IN in)
                      (NP (DT the) (NN air)))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP you))
        (VP (MD could) (RB n't)
          (VP (VB tell)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (VP
                    (FRAG
                      (WHNP (WDT which))))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN sand)
          (CC and)
          (NN fur))
        (VP (VBP a-flying))))
    (. .)))

expl(must-2, There-1)
root(ROOT-0, must-2)
dep(must-2, a-4)
cop(fifty-7, been-6)
vmod(a-4, fifty-7)
prep_of(fifty-7, them-9)
advmod(mixed-12, all-11)
dep(fifty-7, mixed-12)
advmod(together-14, up-13)
advmod(fifty-7, together-14)
ccomp(fifty-7, snorting-16)
ccomp(fifty-7, roaring-18)
conj_and(snorting-16, roaring-18)
conj_and(snorting-16, snapping-20)
conj_and(roaring-18, snapping-20)
conj_and(snorting-16, biting-22)
conj_and(roaring-18, biting-22)
conj_and(roaring-18, tearing-24)
conj_and(biting-22, tearing-24)
dobj(snorting-16, legs-26)
dobj(snorting-16, tails-28)
conj_and(legs-26, tails-28)
det(air-31, the-30)
prep_in(legs-26, air-31)
nsubj(tell-37, you-34)
aux(tell-37, could-35)
neg(tell-37, n't-36)
conj_and(must-2, tell-37)
nsubj(which-40, which-38)
aux(which-40, was-39)
ccomp(tell-37, which-40)
det(sand-44, the-43)
nsubj(a-flying-47, sand-44)
conj_and(sand-44, fur-46)
nsubj(a-flying-47, fur-46)
conj_and(must-2, a-flying-47)
conj_and(tell-37, a-flying-47)

(ROOT
  (S
    (S
      (S (CC And)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD got)
              (VP (VBN done)))))
        (, ,)
        (NP (DT some))
        (VP (VBD was)
          (ADJP (JJ dead))))
      (CC and)
      (S
        (NP (DT some))
        (VP (VBD was)
          (VP (VBG limping)
            (PRT (RP off))
            (S
              (ADJP (VBN crippled)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN rest))
      (VP
        (VP (VBD was)
          (VP (VBG setting)
            (PRT (RP around))
            (PP (IN on)
              (NP (DT the) (NN battlefield)))
            (, ,)
            (NP
              (NP
                (NP (DT some))
                (PP (IN of)
                  (S
                    (NP (PRP them))
                    (VP (VBG licking)
                      (NP (PRP$ their) (JJ sore) (NNS places))))))
              (CC and)
              (NP
                (NP (DT the) (NNS others))
                (VP (VBG looking)
                  (PRT (RP up))
                  (PP (IN at)
                    (NP (PRP us))))))))
        (CC and)
        (VP (VBD seemed)
          (SBAR
            (SBAR
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP (NN kind))
                      (PP (IN of)
                        (S
                          (VP (VBG inviting)
                            (S
                              (NP (PRP us))
                              (VP (TO to)
                                (VP
                                  (VP (VB come)
                                    (PRT (RP down)))
                                  (CC and)
                                  (VP (VB have)
                                    (NP (DT some) (NN fun))))))))))))))
            (, ,)
            (CC but)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP we))
                (VP (VBD did) (RB n't)
                  (VP (VB want)
                    (NP (DT any))))))))))
    (. .)))

advmod(done-5, when-2)
nsubjpass(done-5, they-3)
auxpass(done-5, got-4)
advcl(dead-9, done-5)
nsubj(dead-9, some-7)
cop(dead-9, was-8)
root(ROOT-0, dead-9)
nsubj(limping-13, some-11)
aux(limping-13, was-12)
conj_and(dead-9, limping-13)
prt(limping-13, off-14)
dep(limping-13, crippled-15)
det(rest-19, the-18)
nsubj(setting-21, rest-19)
nsubj(seemed-42, rest-19)
aux(setting-21, was-20)
conj_and(dead-9, setting-21)
prt(setting-21, around-22)
det(battlefield-25, the-24)
prep_on(setting-21, battlefield-25)
dobj(setting-21, some-27)
nsubj(licking-30, them-29)
prepc_of(some-27, licking-30)
poss(places-33, their-31)
amod(places-33, sore-32)
dobj(licking-30, places-33)
det(others-36, the-35)
dobj(setting-21, others-36)
conj_and(some-27, others-36)
vmod(others-36, looking-37)
prt(looking-37, up-38)
prep_at(looking-37, us-40)
conj_and(dead-9, seemed-42)
conj_and(setting-21, seemed-42)
aux(kind-45, to-43)
cop(kind-45, be-44)
dep(seemed-42, kind-45)
prepc_of(kind-45, inviting-47)
dobj(inviting-47, us-48)
nsubj(come-50, us-48)
nsubj(have-53, us-48)
aux(come-50, to-49)
xcomp(inviting-47, come-50)
prt(come-50, down-51)
xcomp(inviting-47, have-53)
conj_and(come-50, have-53)
det(fun-55, some-54)
dobj(have-53, fun-55)
dobj(want-62, which-58)
nsubj(want-62, we-59)
aux(want-62, did-60)
neg(want-62, n't-61)
dep(seemed-42, want-62)
conj_but(kind-45, want-62)
dobj(want-62, any-63)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (DT the) (NNS clothes))))
    (, ,)
    (NP (PRP they))
    (VP (VBP war) (RB n't)
      (NP (DT any))
      (, ,)
      (ADVP (DT any) (RBR more)))
    (. .)))

prepc_as_for(war-7, for-2)
det(clothes-4, the-3)
pobj(war-7, clothes-4)
nsubj(war-7, they-6)
root(ROOT-0, war-7)
neg(war-7, n't-8)
dobj(war-7, any-9)
dep(more-12, any-11)
advmod(war-7, more-12)

(ROOT
  (S
    (S
      (NP
        (NP (DT Every) (JJ last) (NN rag))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD was)
        (ADVP (RB inside))
        (PP (IN of)
          (NP (DT the) (NNS animals)))))
    (: ;)
    (CC and)
    (S
      (S
        (S (RB not)
          (VP (VBG agreeing)
            (PP (IN with)
              (NP (PRP them)))
            (ADVP (RB very) (RB well))))
        (, ,)
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB reckon) (, ,)
            (SBAR (IN for)
              (S
                (NP (EX there))
                (VP (VBD was)
                  (NP
                    (NP (JJ considerable) (JJ many) (NN brass) (NNS buttons))
                    (PP (IN on)
                      (NP (PRP them))))))))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (NNS knives))
            (PP (IN in)
              (NP
                (NP
                  (NP
                    (NP (DT the) (NNS pockets))
                    (, ,) (RB too) (, ,)
                    (CC and)
                    (NP (VBG smoking) (NN tobacco)))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (NNS nails))
                    (CC and)
                    (NP (NN chalk))))
                (CC and)
                (NP
                  (NP (NNS marbles))
                  (CC and)
                  (NP (NNS fishhooks)
                    (CC and)
                    (NNS things)))))))))
    (. .)))

det(rag-3, Every-1)
amod(rag-3, last-2)
nsubj(was-6, rag-3)
prep_of(rag-3, them-5)
root(ROOT-0, was-6)
det(animals-10, the-9)
prep_inside_of(was-6, animals-10)
neg(agreeing-14, not-13)
vmod(reckon-23, agreeing-14)
prep_with(agreeing-14, them-16)
advmod(well-18, very-17)
advmod(agreeing-14, well-18)
nsubj(reckon-23, I-20)
aux(reckon-23, do-21)
neg(reckon-23, n't-22)
conj_and(was-6, reckon-23)
mark(was-27, for-25)
expl(was-27, there-26)
advcl(reckon-23, was-27)
amod(buttons-31, considerable-28)
amod(buttons-31, many-29)
nn(buttons-31, brass-30)
nsubj(was-27, buttons-31)
prep_on(buttons-31, them-33)
expl(was-37, there-36)
conj_and(was-6, was-37)
conj_and(reckon-23, was-37)
nsubj(was-37, knives-38)
det(pockets-41, the-40)
prep_in(knives-38, pockets-41)
prep_in(knives-38, too-43)
advmod(pockets-41, too-43)
conj_and(pockets-41, too-43)
amod(tobacco-47, smoking-46)
prep_in(knives-38, tobacco-47)
conj_and(pockets-41, tobacco-47)
prep_in(knives-38, nails-50)
conj_and(pockets-41, nails-50)
conj_and(pockets-41, chalk-52)
conj_and(nails-50, chalk-52)
prep_in(knives-38, marbles-54)
conj_and(pockets-41, marbles-54)
conj_and(pockets-41, fishhooks-56)
conj_and(marbles-54, fishhooks-56)
conj_and(marbles-54, things-58)
conj_and(fishhooks-56, things-58)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD was) (RB n't)
      (VP (VBG caring)))
    (. .)))

cc(caring-5, But-1)
nsubj(caring-5, I-2)
aux(caring-5, was-3)
neg(caring-5, n't-4)
root(ROOT-0, caring-5)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD was)
            (VP (VBG bothering)
              (NP (PRP me)))))))
    (VP (VBD was)
      (PRN (, ,)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT all))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD had)
                    (ADVP (RB now))))))
            (VP (VBD was)
              (NP
                (NP (DT the) (NN professor) (POS 's))
                (NNS clothes)))))
        (, ,))
      (NP
        (NP (DT a) (JJ big) (JJ enough) (NN assortment))
        (PRN (, ,)
          (CC but)
          (ADJP (RB not) (JJ suitable)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (IN into)
                    (NP (NN company)))
                  (PP (IN with))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP (PRP we))
                      (VP (VBD came)
                        (ADVP (IN across) (DT any))
                        (, ,)
                        (SBAR (IN because)
                          (S
                            (NP (DT the) (NNS britches))
                            (VP (VBD was)
                              (ADVP (RB as) (JJ long)
                                (PP (IN as)
                                  (NP
                                    (NP (NNS tunnels))
                                    (, ,)
                                    (CC and)
                                    (NP (DT the) (NNS coats)
                                      (CC and)
                                      (NNS things)))
                                  (PP (VBG according)))))))))))))))))
    (. .)))

nsubj(bothering-4, All-1)
nsubj(assortment-22, All-1)
aux(bothering-4, was-3)
rcmod(All-1, bothering-4)
dobj(bothering-4, me-5)
cop(assortment-22, was-6)
mark(clothes-17, that-8)
nsubj(clothes-17, all-9)
nsubj(had-11, we-10)
rcmod(all-9, had-11)
advmod(had-11, now-12)
cop(clothes-17, was-13)
det(professor-15, the-14)
poss(clothes-17, professor-15)
parataxis(assortment-22, clothes-17)
det(assortment-22, a-19)
amod(assortment-22, big-20)
amod(assortment-22, enough-21)
root(ROOT-0, assortment-22)
cc(suitable-26, but-24)
neg(suitable-26, not-25)
dep(assortment-22, suitable-26)
aux(go-28, to-27)
xcomp(suitable-26, go-28)
prep_into(go-28, company-30)
prep(go-28, with-31)
mark(came-35, if-33)
nsubj(came-35, we-34)
advcl(go-28, came-35)
advmod(came-35, across-36)
dep(across-36, any-37)
mark(was-42, because-39)
det(britches-41, the-40)
nsubj(was-42, britches-41)
advcl(came-35, was-42)
advmod(long-44, as-43)
advmod(was-42, long-44)
prep_as(long-44, tunnels-46)
det(coats-50, the-49)
prep_as(long-44, coats-50)
conj_and(tunnels-46, coats-50)
conj_and(tunnels-46, things-52)
conj_and(coats-50, things-52)
prep(long-44, according-53)

(ROOT
  (S
    (ADVP (RB Still))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (NN everything))
          (SBAR
            (S
              (NP (DT a) (NN tailor))
              (VP (VBD needed)))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NNP Jim))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN kind))
            (PP (IN of)
              (NP (NN jack) (NN legged) (NN tailor))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD allowed)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)
                (ADVP (RB soon))
                (VP (VB trim)
                  (NP
                    (NP (DT a) (NN suit))
                    (CC or)
                    (NP (CD two)))
                  (ADVP (RB down)
                    (PP (IN for)
                      (NP
                        (NP (PRP us))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (MD would)
                              (VP (VB answer)))))))))))))))
    (. .)))

advmod(was-4, Still-1)
expl(was-4, there-3)
root(ROOT-0, was-4)
nsubj(was-4, everything-5)
det(tailor-7, a-6)
nsubj(needed-8, tailor-7)
rcmod(everything-5, needed-8)
nsubj(kind-14, Jim-11)
cop(kind-14, was-12)
det(kind-14, a-13)
conj_and(was-4, kind-14)
nn(tailor-18, jack-16)
nn(tailor-18, legged-17)
prep_of(kind-14, tailor-18)
nsubj(allowed-22, he-21)
conj_and(was-4, allowed-22)
conj_and(kind-14, allowed-22)
nsubj(trim-26, he-23)
aux(trim-26, could-24)
advmod(trim-26, soon-25)
ccomp(allowed-22, trim-26)
det(suit-28, a-27)
dobj(trim-26, suit-28)
dobj(trim-26, two-30)
conj_or(suit-28, two-30)
advmod(trim-26, down-31)
prep_for(down-31, us-33)
nsubj(answer-36, us-33)
aux(answer-36, would-35)
rcmod(us-33, answer-36)

(ROOT
  (NP (NNP CHAPTER) (NNP IX) (. .)))

nn(IX-2, CHAPTER-1)
root(ROOT-0, IX-2)

(ROOT
  (S
    (S
      (NP
        (NP (NNP TOM) (NNP DISCOURSES))
        (PP (IN ON)
          (NP (DT THE) (NNP DESERT) (NNP STILL)))))
    (, ,)
    (NP (PRP we))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD would)
            (VP
              (VP (VB drop)
                (PRT (RP down))
                (NP
                  (NP (RB there))
                  (NP (DT a) (NN minute))))
              (, ,)
              (CC but)
              (VP
                (PP (IN on)
                  (NP (DT another) (NN errand)))))))))
    (. .)))

nn(DISCOURSES-2, TOM-1)
ccomp(thought-9, DISCOURSES-2)
det(STILL-6, THE-4)
nn(STILL-6, DESERT-5)
prep_on(DISCOURSES-2, STILL-6)
nsubj(thought-9, we-8)
root(ROOT-0, thought-9)
nsubj(drop-12, we-10)
aux(drop-12, would-11)
ccomp(thought-9, drop-12)
prt(drop-12, down-13)
dobj(drop-12, there-14)
iobj(drop-12, there-14)
det(minute-16, a-15)
dep(there-14, minute-16)
ccomp(thought-9, on-19)
conj_but(drop-12, on-19)
det(errand-21, another-20)
pobj(on-19, errand-21)

(ROOT
  (S
    (S
      (NP
        (NP (JJS Most))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NN professor) (POS 's))
              (NN cargo))
            (PP (IN of)
              (NP (NN food))))))
      (VP (VBD was)
        (VP (VBN put)
          (PRT (RP up))
          (PP (IN in)
            (NP (NNS cans)))
          (, ,)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ new) (NN way))
              (SBAR (IN that)
                (S
                  (NP (NN somebody))
                  (VP (VBD had)
                    (ADVP (RB just))
                    (VP (VBN invented))))))))))
    (: ;)
    (S
      (NP (DT the) (NN rest))
      (VP (VBD was)
        (ADJP (JJ fresh))))
    (. .)))

nsubjpass(put-10, Most-1)
det(professor-4, the-3)
poss(cargo-6, professor-4)
prep_of(Most-1, cargo-6)
prep_of(cargo-6, food-8)
auxpass(put-10, was-9)
root(ROOT-0, put-10)
prt(put-10, up-11)
prep_in(put-10, cans-13)
det(way-18, the-16)
amod(way-18, new-17)
prep_in(put-10, way-18)
mark(invented-23, that-19)
nsubj(invented-23, somebody-20)
aux(invented-23, had-21)
advmod(invented-23, just-22)
dep(way-18, invented-23)
det(rest-26, the-25)
nsubj(fresh-28, rest-26)
cop(fresh-28, was-27)
parataxis(put-10, fresh-28)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP fetch)
          (SBAR
            (S
              (NP (NNP Missouri))
              (VP (VBP beefsteak)
                (PP (TO to)
                  (NP (DT the) (NNP Great) (NNP Sahara)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP
            (VP (VB be)
              (ADJP (JJ particular)))
            (CC and)
            (VP (VB stay)
              (PRT (RP up))
              (PP (IN in)
                (NP (DT the) (JJ coolish) (NN weather))))))))
    (. .)))

advmod(fetch-3, When-1)
nsubj(fetch-3, you-2)
advcl(want-12, fetch-3)
nsubj(beefsteak-5, Missouri-4)
ccomp(fetch-3, beefsteak-5)
det(Sahara-9, the-7)
nn(Sahara-9, Great-8)
prep_to(beefsteak-5, Sahara-9)
nsubj(want-12, you-11)
nsubj(particular-15, you-11)
nsubj(stay-17, you-11)
root(ROOT-0, want-12)
aux(particular-15, to-13)
cop(particular-15, be-14)
xcomp(want-12, particular-15)
xcomp(want-12, stay-17)
conj_and(particular-15, stay-17)
prt(stay-17, up-18)
det(weather-22, the-20)
amod(weather-22, coolish-21)
prep_in(stay-17, weather-22)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (VBD reckoned)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD would)
            (VP
              (VP (VB drop)
                (PRT (RP down))
                (PP (IN into)
                  (NP (DT the) (NN lion) (NN market))))
              (CC and)
              (VP (VB see)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP we))
                    (VP (MD could)
                      (VP (VB make)
                        (PRT (RP out))
                        (ADVP (RB there))))))))))))
    (. .)))

dep(reckoned-3, So-1)
nsubj(reckoned-3, we-2)
root(ROOT-0, reckoned-3)
nsubj(drop-6, we-4)
nsubj(see-13, we-4)
aux(drop-6, would-5)
ccomp(reckoned-3, drop-6)
prt(drop-6, down-7)
det(market-11, the-9)
nn(market-11, lion-10)
prep_into(drop-6, market-11)
ccomp(reckoned-3, see-13)
conj_and(drop-6, see-13)
advmod(make-17, how-14)
nsubj(make-17, we-15)
aux(make-17, could-16)
ccomp(see-13, make-17)
prt(make-17, out-18)
advmod(make-17, there-19)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD hauled)
          (PP (IN in)
            (NP (DT the) (NN ladder))))
        (CC and)
        (VP (VBD dropped)
          (ADVP (RB down))
          (SBAR (IN till)
            (S
              (NP (PRP we))
              (VP (VBD was)
                (ADVP (RB just))
                (PP (IN above)
                  (NP
                    (NP (DT the) (NN reach))
                    (PP (IN of)
                      (NP (DT the) (NNS animals)))))))))))
    (, ,) (RB then)
    (S
      (NP (PRP we))
      (VP
        (VP (VBD let)
          (PRT (RP down))
          (NP (DT a) (NN rope))
          (PP (IN with)
            (NP (DT a) (NN slip-knot)))
          (PP (IN in)
            (NP (PRP it))))
        (CC and)
        (VP (VBD hauled)
          (NP
            (NP (RB up) (DT a) (JJ dead) (NN lion))
            (, ,)
            (NP (DT a) (JJ small) (NN tender)))
          (NP (CD one)))
        (, ,)
        (ADVP (RB then))
        (VP (VBD yanked)
          (PRT (RP up))
          (NP (DT a) (NN cub) (NN tiger)))))
    (. .)))

nsubj(hauled-2, We-1)
nsubj(dropped-7, We-1)
root(ROOT-0, hauled-2)
det(ladder-5, the-4)
prep_in(hauled-2, ladder-5)
conj_and(hauled-2, dropped-7)
advmod(dropped-7, down-8)
mark(was-11, till-9)
nsubj(was-11, we-10)
advcl(dropped-7, was-11)
advmod(was-11, just-12)
det(reach-15, the-14)
prep_above(was-11, reach-15)
det(animals-18, the-17)
prep_of(reach-15, animals-18)
advmod(let-22, then-20)
nsubj(let-22, we-21)
nsubj(hauled-32, we-21)
parataxis(hauled-2, let-22)
prt(let-22, down-23)
det(rope-25, a-24)
dobj(let-22, rope-25)
det(slip-knot-28, a-27)
prep_with(let-22, slip-knot-28)
prep_in(let-22, it-30)
parataxis(hauled-2, hauled-32)
conj_and(let-22, hauled-32)
advmod(lion-36, up-33)
det(lion-36, a-34)
amod(lion-36, dead-35)
iobj(hauled-32, lion-36)
det(tender-40, a-38)
amod(tender-40, small-39)
appos(lion-36, tender-40)
dobj(hauled-32, one-41)
advmod(yanked-44, then-43)
dep(let-22, yanked-44)
prt(yanked-44, up-45)
det(tiger-48, a-46)
nn(tiger-48, cub-47)
dobj(yanked-44, tiger-48)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (DT the) (NN congregation))
              (PRT (RP off))
              (PP (IN with)
                (NP (DT the) (NN revolver))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP they))
      (VP
        (VP (MD would)
          (S (`` `)
            (NP (DT a)
              (S
                (NP (POS '))
                (VP (VBD took)
                  (NP (DT a) (NN hand))
                  (PP (IN in)
                    (NP (DT the) (NNS proceedings))))))))
        (CC and)
        (VP (VBD helped))))
    (. .)))

nsubj(had-2, We-1)
nsubj(keep-4, We-1)
root(ROOT-0, had-2)
aux(keep-4, to-3)
xcomp(had-2, keep-4)
det(congregation-6, the-5)
dobj(keep-4, congregation-6)
prt(keep-4, off-7)
det(revolver-10, the-9)
prep_with(keep-4, revolver-10)
nsubj(would-14, they-13)
nsubj(helped-25, they-13)
conj_or(had-2, would-14)
dep(would-14, a-16)
dep(a-16, took-18)
det(hand-20, a-19)
dobj(took-18, hand-20)
det(proceedings-23, the-22)
prep_in(took-18, proceedings-23)
conj_or(had-2, helped-25)
conj_and(would-14, helped-25)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD carved)
        (PRT (RP off))
        (NP (DT a) (NN supply))
        (PP (IN from)
          (NP (DT both))))
      (, ,)
      (CC and)
      (VP (VBD saved)
        (NP (DT the) (NNS skins)))
      (, ,)
      (CC and)
      (VP (VBP hove)
        (NP (DT the) (NN rest))
        (ADVP (RB overboard))))
    (. .)))

nsubj(carved-2, We-1)
nsubj(saved-10, We-1)
nsubj(hove-15, We-1)
root(ROOT-0, carved-2)
prt(carved-2, off-3)
det(supply-5, a-4)
dobj(carved-2, supply-5)
prep_from(carved-2, both-7)
conj_and(carved-2, saved-10)
det(skins-12, the-11)
dobj(saved-10, skins-12)
conj_and(carved-2, hove-15)
det(rest-17, the-16)
dobj(hove-15, rest-17)
advmod(hove-15, overboard-18)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP
      (VP (VBD baited)
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP
              (NP (DT the) (NN professor) (POS 's))
              (NNS hooks))))
        (PP (IN with)
          (NP (DT the) (JJ fresh) (NN meat))))
      (CC and)
      (VP (VBD went)
        (NP (NN a-fishing))))
    (. .)))

advmod(baited-3, Then-1)
nsubj(baited-3, we-2)
nsubj(went-15, we-2)
root(ROOT-0, baited-3)
dobj(baited-3, some-4)
det(professor-7, the-6)
poss(hooks-9, professor-7)
prep_of(some-4, hooks-9)
det(meat-13, the-11)
amod(meat-13, fresh-12)
prep_with(baited-3, meat-13)
conj_and(baited-3, went-15)
dobj(went-15, a-fishing-16)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD stood)
        (PP (IN over)
          (NP (DT the) (NN lake)))
        (NP
          (NP (RB just) (DT a) (JJ convenient) (NN distance))
          (PP (IN above)
            (NP (DT the) (NN water)))))
      (, ,)
      (CC and)
      (VP (VBD catched)
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ nicest) (NN fish))
              (SBAR
                (S
                  (NP (PRP you))
                  (ADVP (RB ever))
                  (VP (VBP see)))))))))
    (. .)))

nsubj(stood-2, We-1)
nsubj(catched-15, We-1)
root(ROOT-0, stood-2)
det(lake-5, the-4)
prep_over(stood-2, lake-5)
advmod(distance-9, just-6)
det(distance-9, a-7)
amod(distance-9, convenient-8)
dobj(stood-2, distance-9)
det(water-12, the-11)
prep_above(distance-9, water-12)
conj_and(stood-2, catched-15)
det(lot-17, a-16)
dobj(catched-15, lot-17)
det(fish-21, the-19)
amod(fish-21, nicest-20)
prep_of(lot-17, fish-21)
nsubj(see-24, you-22)
advmod(see-24, ever-23)
rcmod(fish-21, see-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a)
            (ADJP (RBS most) (JJ amazing))
            (JJ good) (NN supper))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD had)))))
        (: ;)
        (NP
          (NP (NN lion) (NN steak))
          (, ,)
          (NP (NN tiger) (NN steak))
          (, ,)
          (NP (JJ fried) (NN fish))
          (, ,)
          (CC and)
          (NP (JJ hot) (NN corn-pone)))))
    (. .)))

nsubj(supper-7, It-1)
cop(supper-7, was-2)
det(supper-7, a-3)
advmod(amazing-5, most-4)
amod(supper-7, amazing-5)
amod(supper-7, good-6)
root(ROOT-0, supper-7)
nsubj(had-9, we-8)
rcmod(supper-7, had-9)
nn(steak-12, lion-11)
dep(supper-7, steak-12)
nn(steak-15, tiger-14)
dep(supper-7, steak-15)
conj_and(steak-12, steak-15)
amod(fish-18, fried-17)
dep(supper-7, fish-18)
conj_and(steak-12, fish-18)
amod(corn-pone-22, hot-21)
dep(supper-7, corn-pone-22)
conj_and(steak-12, corn-pone-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (NP (NN nothing))
        (ADVP (RBR better))
        (PP (IN than)
          (NP (DT that)))))
    (. .)))

nsubj(want-4, I-1)
aux(want-4, do-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
dobj(want-4, nothing-5)
advmod(want-4, better-6)
prep_than(want-4, that-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD had)
      (NP (DT some) (NN fruit)
        (S
          (VP (TO to)
            (VP (VB finish)
              (PRT (RP off))
              (PP (IN with)))))))
    (. .)))

nsubj(had-2, We-1)
root(ROOT-0, had-2)
det(fruit-4, some-3)
dobj(had-2, fruit-4)
aux(finish-6, to-5)
vmod(fruit-4, finish-6)
prt(finish-6, off-7)
prep(finish-6, with-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD got)
      (NP (PRP it))
      (PRT (RP out))
      (PP (IN of)
        (NP
          (NP (DT the) (NN top))
          (PP (IN of)
            (NP (DT a) (JJ monstrous) (JJ tall) (NN tree))))))
    (. .)))

nsubj(got-2, We-1)
root(ROOT-0, got-2)
dobj(got-2, it-3)
det(top-7, the-6)
prep_out_of(got-2, top-7)
det(tree-12, a-9)
amod(tree-12, monstrous-10)
amod(tree-12, tall-11)
prep_of(top-7, tree-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ slim))
            (NN tree))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD had) (RB n't)
                (ADVP
                  (ADVP
                    (NP (DT a) (NN branch))
                    (PP (IN on)
                      (NP (PRP it))))
                  (PP (IN from)
                    (NP (DT the) (NN bottom))))
                (VP (VBN plumb)
                  (PP (TO to)
                    (NP (DT the) (NN top))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP it))
      (VP (VBD bursted)
        (PRT (RP out))
        (PP (IN like)
          (NP (DT a) (NN feather-duster)))))
    (. .)))

nsubj(tree-6, It-1)
cop(tree-6, was-2)
det(tree-6, a-3)
advmod(slim-5, very-4)
amod(tree-6, slim-5)
root(ROOT-0, tree-6)
nsubj(plumb-17, tree-6)
aux(plumb-17, had-8)
neg(plumb-17, n't-9)
det(branch-11, a-10)
advmod(plumb-17, branch-11)
prep_on(branch-11, it-13)
det(bottom-16, the-15)
prep_from(branch-11, bottom-16)
rcmod(tree-6, plumb-17)
det(top-20, the-19)
prep_to(plumb-17, top-20)
advmod(bursted-25, there-23)
nsubj(bursted-25, it-24)
conj_and(tree-6, bursted-25)
nsubj(plumb-17, bursted-25)
prt(bursted-25, out-26)
det(feather-duster-29, a-28)
prep_like(bursted-25, feather-duster-29)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN pa))
          (SBAR
            (S
              (VP (VBP 'm) (: -)
                (NP
                  (NP (NN tree))
                  (, ,)
                  (PP (IN of)
                    (NP (NN course))))))))))
    (: ;)
    (S
      (NP (NN anybody))
      (VP (VBZ knows)
        (SBAR
          (S
            (NP (DT a) (NN pa))
            (VP (VBP 'm) (: -)
              (NP
                (NP
                  (NP (NN tree))
                  (NP (DT the) (NN minute)))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBP see)
                      (NP (PRP it))
                      (, ,)
                      (PP (IN by)
                        (NP (DT the) (NNS pictures))))))))))))
    (. .)))

nsubj(pa-4, It-1)
cop(pa-4, was-2)
det(pa-4, a-3)
root(ROOT-0, pa-4)
cop(tree-7, 'm-5)
rcmod(pa-4, tree-7)
prep_of(tree-7, course-10)
nsubj(knows-13, anybody-12)
parataxis(pa-4, knows-13)
det(pa-15, a-14)
nsubj(tree-18, pa-15)
cop(tree-18, 'm-16)
ccomp(knows-13, tree-18)
det(minute-20, the-19)
dep(tree-18, minute-20)
nsubj(see-22, he-21)
rcmod(tree-18, see-22)
dobj(see-22, it-23)
det(pictures-27, the-26)
prep_by(see-22, pictures-27)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD went)
        (PP (IN for)
          (NP (NNS cocoanuts)))
        (PP (IN in)
          (NP (DT this) (NN one)))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBD war) (RB n't)
        (NP (NN none))))
    (. .)))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
prep_for(went-2, cocoanuts-4)
det(one-7, this-6)
prep_in(went-2, one-7)
expl(war-11, there-10)
conj_but(went-2, war-11)
neg(war-11, n't-12)
dobj(war-11, none-13)
nsubj(war-11, none-13)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (ADVP (RB only))
        (NP
          (NP (JJ big) (JJ loose) (NNS bunches))
          (PP (IN of)
            (NP
              (NP (NNS things))
              (PP (IN like)
                (NP (JJ oversized) (NNS grapes))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBD allowed)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD was)
              (NP (NNS dates))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP he))
                  (VP (VBD said)
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (VBD answered)
                          (NP (DT the) (NN description))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NNP Arabian) (NNPS Nights))
                              (CC and)
                              (NP (DT the) (JJ other) (NNS books)))))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
advmod(was-2, only-3)
amod(bunches-6, big-4)
amod(bunches-6, loose-5)
nsubj(was-2, bunches-6)
prep_of(bunches-6, things-8)
amod(grapes-11, oversized-10)
prep_like(things-8, grapes-11)
nsubj(allowed-15, Tom-14)
conj_and(was-2, allowed-15)
nsubj(dates-18, they-16)
cop(dates-18, was-17)
ccomp(allowed-15, dates-18)
mark(said-22, because-20)
nsubj(said-22, he-21)
advcl(dates-18, said-22)
nsubj(answered-24, they-23)
ccomp(said-22, answered-24)
det(description-26, the-25)
dobj(answered-24, description-26)
det(Nights-30, the-28)
nn(Nights-30, Arabian-29)
prep_in(answered-24, Nights-30)
det(books-34, the-32)
amod(books-34, other-33)
prep_in(answered-24, books-34)
conj_and(Nights-30, books-34)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (PRP they))
      (VP (MD might) (RB n't)
        (VP (VB be))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP they))
        (VP (MD might)
          (VP (VB be)
            (NP (NN poison)))))
      (: ;) (RB so)
      (S
        (NP (PRP we))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP
                (VP (VB wait)
                  (NP (DT a) (NN spell)))
                (, ,)
                (CC and)
                (VP (VB watch)
                  (CC and)
                  (VB see)
                  (SBAR (IN if)
                    (S
                      (NP (DT the) (NNS birds))
                      (VP (VBZ et)
                        (NP (PRP them))))))))))))
    (. .)))

prep_of(be-6, course-2)
nsubj(be-6, they-3)
aux(be-6, might-4)
neg(be-6, n't-5)
root(ROOT-0, be-6)
nsubj(poison-12, they-9)
aux(poison-12, might-10)
cop(poison-12, be-11)
conj_and(be-6, poison-12)
advmod(poison-12, so-14)
nsubj(had-16, we-15)
nsubj(wait-18, we-15)
nsubj(watch-23, we-15)
parataxis(poison-12, had-16)
aux(wait-18, to-17)
xcomp(had-16, wait-18)
det(spell-20, a-19)
dobj(wait-18, spell-20)
xcomp(had-16, watch-23)
conj_and(wait-18, watch-23)
conj_and(wait-18, see-25)
conj_and(watch-23, see-25)
mark(et-29, if-26)
det(birds-28, the-27)
nsubj(et-29, birds-28)
advcl(watch-23, et-29)
dobj(et-29, them-30)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBN done)
          (NP (PRP it))))
      (: ;) (RB so)
      (S
        (NP (PRP we))
        (VP (VBN done)
          (NP (PRP it))
          (, ,)
          (ADVP (RB too)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD was)
        (ADJP
          (ADJP (RBS most) (JJ amazing))
          (JJ good))))
    (. .)))

nsubj(done-2, They-1)
root(ROOT-0, done-2)
dobj(done-2, it-3)
advmod(done-2, so-5)
nsubj(done-7, we-6)
parataxis(done-2, done-7)
dobj(done-7, it-8)
advmod(done-7, too-10)
nsubj(good-17, they-13)
cop(good-17, was-14)
advmod(amazing-16, most-15)
dep(good-17, amazing-16)
conj_and(done-2, good-17)

(ROOT
  (S
    (PP (IN By)
      (NP (DT this) (NN time)))
    (NP (JJ monstrous) (JJ big) (NNS birds))
    (VP (VBZ begun)
      (S
        (VP (TO to)
          (VP (VB come)
            (CC and)
            (VB settle)
            (PP (IN on)
              (NP (DT the) (JJ dead) (NNS animals)))))))
    (. .)))

det(time-3, this-2)
prep_by(begun-7, time-3)
amod(birds-6, monstrous-4)
amod(birds-6, big-5)
nsubj(begun-7, birds-6)
nsubj(come-9, birds-6)
nsubj(settle-11, birds-6)
root(ROOT-0, begun-7)
aux(come-9, to-8)
xcomp(begun-7, come-9)
xcomp(begun-7, settle-11)
conj_and(come-9, settle-11)
det(animals-15, the-13)
amod(animals-15, dead-14)
prep_on(come-9, animals-15)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD was)
        (ADJP (RB plucky) (JJ creturs))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (MD would)
        (VP (VB tackle)
          (NP
            (NP (CD one) (NN end))
            (PP (IN of)
              (NP
                (NP (DT a) (NN lion))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD was)
                      (VP (VBG being)
                        (VP (VBN gnawed)
                          (PP (IN at)
                            (NP (DT the) (JJ other) (NN end)))
                          (PP (IN by)
                            (NP (DT another) (NN lion))))))))))))))
    (. .)))

nsubj(creturs-4, They-1)
cop(creturs-4, was-2)
advmod(creturs-4, plucky-3)
root(ROOT-0, creturs-4)
nsubj(tackle-8, they-6)
aux(tackle-8, would-7)
parataxis(creturs-4, tackle-8)
num(end-10, one-9)
dobj(tackle-8, end-10)
det(lion-13, a-12)
prep_of(end-10, lion-13)
nsubjpass(gnawed-17, lion-13)
aux(gnawed-17, was-15)
auxpass(gnawed-17, being-16)
rcmod(lion-13, gnawed-17)
det(end-21, the-19)
amod(end-21, other-20)
prep_at(gnawed-17, end-21)
det(lion-24, another-23)
agent(gnawed-17, lion-24)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (DT the) (NN lion))
          (VP (VBD drove)
            (NP (DT the) (NN bird))
            (ADVP (RB away)))))
      (, ,)
      (NP (PRP it))
      (VP (VBD did) (RB n't)
        (VP (VB do)
          (NP (DT no) (JJ good)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADVP (RB back) (RB again))
        (NP
          (NP (DT the) (NN minute))
          (SBAR
            (S
              (NP (DT the) (NN lion))
              (VP (VBD was)
                (ADJP (JJ busy))))))))
    (. .)))

mark(drove-4, If-1)
det(lion-3, the-2)
nsubj(drove-4, lion-3)
advcl(do-12, drove-4)
det(bird-6, the-5)
dobj(drove-4, bird-6)
advmod(drove-4, away-7)
nsubj(do-12, it-9)
aux(do-12, did-10)
neg(do-12, n't-11)
root(ROOT-0, do-12)
neg(good-14, no-13)
dobj(do-12, good-14)
nsubj(minute-21, he-16)
cop(minute-21, was-17)
advmod(again-19, back-18)
advmod(minute-21, again-19)
det(minute-21, the-20)
parataxis(do-12, minute-21)
det(lion-23, the-22)
nsubj(busy-25, lion-23)
cop(busy-25, was-24)
rcmod(minute-21, busy-25)

(ROOT
  (S
    (S
      (NP (DT The) (JJ big) (NNS birds))
      (VP (VBP come)
        (PRT (RP out))
        (PP (IN of)
          (NP
            (NP (DT every) (NN part))
            (PP (IN of)
              (NP (DT the) (NN sky)))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB make)
          (NP (PRP them))
          (PRT (RP out))
          (PP (IN with)
            (NP (DT the) (NN glass)))
          (SBAR (IN while)
            (S
              (NP (PRP they))
              (VP (VBD was)
                (ADVP (RB still))
                (ADVP
                  (ADVP (RB so) (RB far) (RB away))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (MD could) (RB n't)
                        (VP (VB see)
                          (NP (PRP them))
                          (PP (IN with)
                            (NP (PRP$ your) (JJ naked) (NN eye))))))))))))))
    (. .)))

det(birds-3, The-1)
amod(birds-3, big-2)
nsubj(come-4, birds-3)
root(ROOT-0, come-4)
prt(come-4, out-5)
det(part-8, every-7)
prep_of(come-4, part-8)
det(sky-11, the-10)
prep_of(part-8, sky-11)
nsubj(make-15, you-13)
aux(make-15, could-14)
parataxis(come-4, make-15)
dobj(make-15, them-16)
prt(make-15, out-17)
det(glass-20, the-19)
prep_with(make-15, glass-20)
mark(was-23, while-21)
nsubj(was-23, they-22)
advcl(make-15, was-23)
advmod(was-23, still-24)
advmod(away-27, so-25)
advmod(away-27, far-26)
advmod(was-23, away-27)
nsubj(see-31, you-28)
aux(see-31, could-29)
neg(see-31, n't-30)
advcl(away-27, see-31)
dobj(see-31, them-32)
poss(eye-36, your-34)
amod(eye-36, naked-35)
prep_with(see-31, eye-36)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD said)
        (SBAR
          (S
            (NP (DT the) (NNS birds))
            (VP (VBD did) (RB n't)
              (VP (VB find)
                (PRT (RP out))
                (NP
                  (NP (DT the) (NN meat))
                  (SBAR
                    (S
                      (VP (VBD was)
                        (ADVP (RB there))
                        (PP (IN by)
                          (NP (DT the) (NN smell)))))))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (PRP it))
              (PRT (RP out))
              (PP (IN by)
                (S
                  (VP (VBG seeing)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(said-2, Tom-1)
root(ROOT-0, said-2)
det(birds-4, the-3)
nsubj(find-7, birds-4)
aux(find-7, did-5)
neg(find-7, n't-6)
ccomp(said-2, find-7)
prt(find-7, out-8)
det(meat-10, the-9)
dobj(find-7, meat-10)
rcmod(meat-10, was-11)
advmod(was-11, there-12)
det(smell-15, the-14)
prep_by(was-11, smell-15)
nsubj(had-18, they-17)
nsubj(find-20, they-17)
parataxis(said-2, had-18)
aux(find-20, to-19)
xcomp(had-18, find-20)
dobj(find-20, it-21)
prt(find-20, out-22)
prepc_by(find-20, seeing-24)
dobj(seeing-24, it-25)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (ADVP (CC but))
    (VP (VBP ai) (RB n't)
      (ADJP (IN that)
        (NP
          (NP (DT an) (NN eye))
          (PP (IN for)
            (NP (PRP you))))))
    (. !)))

discourse(that-6, Oh-1)
advmod(that-6, but-3)
cop(that-6, ai-4)
neg(that-6, n't-5)
root(ROOT-0, that-6)
det(eye-8, an-7)
dep(that-6, eye-8)
prep_for(eye-8, you-10)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD said)
        (PP (IN at)
          (NP
            (NP (DT the) (NN distance))
            (PP (IN of)
              (NP (CD five) (NN mile)))))
        (SBAR
          (S
            (NP
              (NP (DT a) (NN patch))
              (PP (IN of)
                (NP (JJ dead) (NNS lions))))
            (VP (MD could) (RB n't)
              (VP (VB look)
                (NP (DT any) (JJR bigger))
                (PP (IN than)
                  (NP
                    (NP (DT a) (NN person) (POS 's))
                    (NN finger-nail)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could) (RB n't)
        (VP (VB imagine)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT the) (NNS birds))
              (VP (MD could)
                (VP (VB notice)
                  (NP (PDT such) (DT a) (JJ little) (NN thing))
                  (ADVP (RB so) (RB far) (RB off)))))))))
    (. .)))

nsubj(said-2, Tom-1)
root(ROOT-0, said-2)
det(distance-5, the-4)
prep_at(said-2, distance-5)
num(mile-8, five-7)
prep_of(distance-5, mile-8)
det(patch-10, a-9)
nsubj(look-16, patch-10)
amod(lions-13, dead-12)
prep_of(patch-10, lions-13)
aux(look-16, could-14)
neg(look-16, n't-15)
ccomp(said-2, look-16)
det(bigger-18, any-17)
dobj(look-16, bigger-18)
det(person-21, a-20)
poss(finger-nail-23, person-21)
prep_than(look-16, finger-nail-23)
nsubj(imagine-29, he-26)
aux(imagine-29, could-27)
neg(imagine-29, n't-28)
conj_and(said-2, imagine-29)
advmod(notice-34, how-30)
det(birds-32, the-31)
nsubj(notice-34, birds-32)
aux(notice-34, could-33)
ccomp(imagine-29, notice-34)
predet(thing-38, such-35)
det(thing-38, a-36)
amod(thing-38, little-37)
dobj(notice-34, thing-38)
advmod(off-41, so-39)
advmod(off-41, far-40)
advmod(notice-34, off-41)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (JJ strange)
          (CC and)
          (JJ unnatural)
          (S
            (VP (TO to)
              (VP (VB see)
                (S
                  (NP (NN lion))
                  (VP (VB eat)
                    (NP (NN lion))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD thought)
        (ADVP (RB maybe))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBZ war) (RB n't)
              (VP (VB kin)))))))
    (. .)))

nsubj(strange-3, It-1)
nsubj(unnatural-5, It-1)
nsubj(see-7, It-1)
cop(strange-3, was-2)
root(ROOT-0, strange-3)
conj_and(strange-3, unnatural-5)
aux(see-7, to-6)
xcomp(strange-3, see-7)
nsubj(eat-9, lion-8)
ccomp(see-7, eat-9)
dobj(eat-9, lion-10)
nsubj(thought-14, we-13)
conj_and(strange-3, thought-14)
advmod(thought-14, maybe-15)
nsubj(war-17, they-16)
ccomp(thought-14, war-17)
neg(war-17, n't-18)
dep(war-17, kin-19)

(ROOT
  (S (CC But)
    (NP (NNP Jim))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (VP (VBD did) (RB n't)
            (VP (VB make)
              (NP (DT no) (NN difference)))))))
    (. .)))

cc(said-3, But-1)
nsubj(said-3, Jim-2)
root(ROOT-0, said-3)
mark(make-7, that-4)
aux(make-7, did-5)
neg(make-7, n't-6)
ccomp(said-3, make-7)
neg(difference-9, no-8)
dobj(make-7, difference-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (DT a) (NN hog))
            (VP (VBD was)
              (VP (VBN fond)
                (PP (IN of)
                  (NP (PRP$ her) (JJ own) (NNS children))))))
          (, ,)
          (CC and)
          (S
            (ADVP (RB so))
            (VP (VBD was)
              (NP (DT a) (NN spider)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBN reckoned)
        (ADVP (RB maybe))
        (NP
          (NP (DT a) (NN lion))
          (SBAR
            (S
              (VP (VBD was)
                (ADVP (RB pretty) (RB near) (RB as))
                (ADJP (JJ unprincipled)
                  (SBAR (IN though)
                    (FRAG (RB maybe)
                      (ADVP (RB not) (RB quite)))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
det(hog-4, a-3)
nsubjpass(fond-6, hog-4)
auxpass(fond-6, was-5)
ccomp(said-2, fond-6)
poss(children-10, her-8)
amod(children-10, own-9)
prep_of(fond-6, children-10)
advmod(spider-16, so-13)
cop(spider-16, was-14)
det(spider-16, a-15)
ccomp(said-2, spider-16)
conj_and(fond-6, spider-16)
nsubj(reckoned-20, he-19)
conj_and(said-2, reckoned-20)
advmod(reckoned-20, maybe-21)
det(lion-23, a-22)
dobj(reckoned-20, lion-23)
cop(unprincipled-28, was-24)
advmod(as-27, pretty-25)
advmod(as-27, near-26)
advmod(unprincipled-28, as-27)
rcmod(lion-23, unprincipled-28)
mark(maybe-30, though-29)
dep(unprincipled-28, maybe-30)
dep(quite-32, not-31)
dep(maybe-30, quite-32)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (ADJP (JJ likely)
          (SBAR
            (S
              (NP (DT a) (NN lion))
              (VP (MD would) (RB n't)
                (VP (VB eat)
                  (NP (PRP$ his) (JJ own) (NN father)))))))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBD knowed)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (NP (PRP him))))))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB reckoned))
      (NP (PRP he))
      (VP (MD would)
        (VP (VB eat)
          (NP (PRP$ his) (NN brother-in-law))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (UCP
                  (ADJP (JJ uncommon) (JJ hungry))
                  (, ,)
                  (CC and)
                  (VP (VBP eat)
                    (NP (PRP$ his) (NN mother-in-law))))
                (NP (DT any) (NN time))))))))
    (. .)))

nsubj(thought-2, He-1)
root(ROOT-0, thought-2)
acomp(thought-2, likely-3)
det(lion-5, a-4)
nsubj(eat-8, lion-5)
aux(eat-8, would-6)
neg(eat-8, n't-7)
ccomp(likely-3, eat-8)
poss(father-11, his-9)
amod(father-11, own-10)
dobj(eat-8, father-11)
mark(knowed-15, if-13)
nsubj(knowed-15, he-14)
advcl(thought-2, knowed-15)
nsubj(him-18, which-16)
cop(him-18, was-17)
ccomp(knowed-15, him-18)
advmod(eat-24, reckoned-21)
nsubj(eat-24, he-22)
aux(eat-24, would-23)
conj_but(thought-2, eat-24)
poss(brother-in-law-26, his-25)
dobj(eat-24, brother-in-law-26)
mark(hungry-31, if-27)
nsubj(hungry-31, he-28)
nsubj(eat-34, he-28)
cop(hungry-31, was-29)
amod(hungry-31, uncommon-30)
advcl(eat-24, hungry-31)
advcl(eat-24, eat-34)
conj_and(hungry-31, eat-34)
poss(mother-in-law-36, his-35)
dobj(eat-34, mother-in-law-36)
det(time-38, any-37)
dep(hungry-31, time-38)

(ROOT
  (S (CC But)
    (NP (NNP RECKONING))
    (VP (VBP do) (RB n't)
      (VP (VB settle)
        (NP (NN nothing))))
    (. .)))

cc(settle-5, But-1)
nsubj(settle-5, RECKONING-2)
aux(settle-5, do-3)
neg(settle-5, n't-4)
root(ROOT-0, settle-5)
dobj(settle-5, nothing-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB reckon)
        (SBAR
          (SBAR (IN till)
            (S
              (NP (DT the) (NNS cows))
              (VP (VBP come)
                (NP (NN home)))))
          (, ,)
          (CC but)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP do) (RB n't)
                (VP (VB fetch)
                  (NP (PRP you))
                  (PP (TO to)
                    (NP (DT no) (NN decision))))))))))
    (. .)))

nsubj(reckon-3, You-1)
aux(reckon-3, can-2)
root(ROOT-0, reckon-3)
mark(come-7, till-4)
det(cows-6, the-5)
nsubj(come-7, cows-6)
advcl(reckon-3, come-7)
dobj(come-7, home-8)
nsubj(fetch-14, that-11)
aux(fetch-14, do-12)
neg(fetch-14, n't-13)
advcl(reckon-3, fetch-14)
conj_but(come-7, fetch-14)
dobj(fetch-14, you-15)
neg(decision-18, no-17)
prep_to(fetch-14, decision-18)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP
      (VP (VBP give)
        (NP (PRP it))
        (PRT (RP up)))
      (CC and)
      (VP (VBD let)
        (S
          (NP (PRP it))
          (VP (VB drop)))))
    (. .)))

dep(give-3, So-1)
nsubj(give-3, we-2)
nsubj(let-7, we-2)
root(ROOT-0, give-3)
dobj(give-3, it-4)
prt(give-3, up-5)
conj_and(give-3, let-7)
nsubj(drop-9, it-8)
ccomp(let-7, drop-9)

(ROOT
  (S
    (S
      (ADVP (RB Generly))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB very) (RB still)
          (PP (IN in)
            (NP (DT the) (NNP Desert) (NNS nights))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this) (NN time))
      (ADVP (RB there))
      (VP (VBD was)
        (NP (NN music))))
    (. .)))

advmod(still-5, Generly-1)
nsubj(still-5, it-2)
cop(still-5, was-3)
advmod(still-5, very-4)
root(ROOT-0, still-5)
det(nights-9, the-7)
nn(nights-9, Desert-8)
prep_in(still-5, nights-9)
det(time-13, this-12)
nsubj(music-16, time-13)
advmod(music-16, there-14)
cop(music-16, was-15)
conj_but(still-5, music-16)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN lot))
        (PP (IN of)
          (NP (JJ other) (NNS animals))))
      (VP (VBP come)
        (PP (TO to)
          (NP (NN dinner)))))
    (: ;)
    (S
      (S
        (S
          (VP (VBG sneaking)
            (NP (NNS yelpers))
            (SBAR (IN that)
              (S
                (NP (NNP Tom))
                (VP (VBD allowed))))))
        (VP (VBD was)
          (ADJP (JJ jackals))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (JJ roached-backed) (NNS ones))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD said)))))
        (VP (VBD was)
          (NP (NNS hyenas)))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (PDT all) (DT the) (JJ whole) (NN biling))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD kept)
        (PRT (RP up))
        (NP (DT a) (NN racket))
        (NP (PDT all) (DT the) (NN time))))
    (. .)))

det(lot-2, A-1)
nsubj(come-6, lot-2)
amod(animals-5, other-4)
prep_of(lot-2, animals-5)
root(ROOT-0, come-6)
prep_to(come-6, dinner-8)
csubj(jackals-16, sneaking-10)
dobj(sneaking-10, yelpers-11)
mark(allowed-14, that-12)
nsubj(allowed-14, Tom-13)
ccomp(sneaking-10, allowed-14)
cop(jackals-16, was-15)
conj_and(come-6, jackals-16)
amod(ones-20, roached-backed-19)
nsubj(hyenas-25, ones-20)
mark(said-23, that-21)
nsubj(said-23, he-22)
dep(ones-20, said-23)
cop(hyenas-25, was-24)
conj_and(come-6, hyenas-25)
conj_and(jackals-16, hyenas-25)
predet(biling-31, all-28)
det(biling-31, the-29)
amod(biling-31, whole-30)
nsubj(kept-34, biling-31)
prep_of(biling-31, them-33)
conj_and(come-6, kept-34)
prt(kept-34, up-35)
det(racket-37, a-36)
iobj(kept-34, racket-37)
predet(time-40, all-38)
det(time-40, the-39)
dobj(kept-34, time-40)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD made)
      (NP (DT a) (NN picture))
      (PP (IN in)
        (NP
          (NP (DT the) (NN moonlight))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (ADJP (RBR more) (JJ different)
                  (PP (IN than)
                    (NP
                      (NP (DT any) (NN picture))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (ADVP (RB ever))
                          (VP (VBP see)))))))))))))
    (. .)))

nsubj(made-2, They-1)
root(ROOT-0, made-2)
det(picture-4, a-3)
dobj(made-2, picture-4)
det(moonlight-7, the-6)
prep_in(made-2, moonlight-7)
nsubj(different-11, moonlight-7)
cop(different-11, was-9)
advmod(different-11, more-10)
rcmod(moonlight-7, different-11)
det(picture-14, any-13)
prep_than(different-11, picture-14)
nsubj(see-17, I-15)
advmod(see-17, ever-16)
rcmod(picture-14, see-17)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD had)
          (NP (DT a) (NN line))
          (ADVP (RB out)))
        (CC and)
        (VP (VBD made)
          (ADVP (RB fast))
          (PP (TO to)
            (NP
              (NP (DT the) (NN top))
              (PP (IN of)
                (NP (DT a) (NN tree))))))
        (, ,)
        (CC and)
        (VP (VBD did) (RB n't)
          (VP (VB stand)
            (NP (DT no) (NN watch))))))
    (, ,)
    (CC but)
    (S
      (NP (DT all))
      (VP
        (VP (VBD turned)
          (PRT (RP in)))
        (CC and)
        (VP (VBD slept))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADVP (RB up)
          (NP
            (QP (CD two)
              (CC or)
              (CD three) (NNS times))))
        (S
          (VP (TO to)
            (VP
              (VP (VB look)
                (PRT (RP down))
                (PP (IN at)
                  (NP (DT the) (NNS animals))))
              (CC and)
              (VP (VB hear)
                (NP (DT the) (NN music))))))))
    (. .)))

nsubj(had-2, We-1)
nsubj(made-7, We-1)
nsubj(stand-19, We-1)
root(ROOT-0, had-2)
det(line-4, a-3)
dobj(had-2, line-4)
advmod(had-2, out-5)
conj_and(had-2, made-7)
advmod(made-7, fast-8)
det(top-11, the-10)
prep_to(made-7, top-11)
det(tree-14, a-13)
prep_of(top-11, tree-14)
aux(stand-19, did-17)
neg(stand-19, n't-18)
conj_and(had-2, stand-19)
neg(watch-21, no-20)
dobj(stand-19, watch-21)
nsubj(turned-25, all-24)
nsubj(slept-28, all-24)
conj_but(had-2, turned-25)
prt(turned-25, in-26)
conj_but(had-2, slept-28)
conj_and(turned-25, slept-28)
nsubj(was-32, I-31)
nsubj(look-39, I-31)
nsubj(hear-45, I-31)
conj_but(had-2, was-32)
advmod(was-32, up-33)
pobj(up-33, two-34)
num(times-37, three-36)
pobj(up-33, times-37)
conj_or(two-34, times-37)
aux(look-39, to-38)
xcomp(was-32, look-39)
prt(look-39, down-40)
det(animals-43, the-42)
prep_at(look-39, animals-43)
xcomp(was-32, hear-45)
conj_and(look-39, hear-45)
det(music-47, the-46)
dobj(hear-45, music-47)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN like)
          (S
            (VP (VBG having)
              (NP (DT a) (JJ front) (NN seat))
              (PP (IN at)
                (NP
                  (NP (DT a) (NN menagerie))
                  (PP (IN for)
                    (NP (NN nothing))))))))
        (, ,)
        (SBAR
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP I))
              (VP (VBD had) (RB n't)
                (ADVP (RB ever))
                (VP (VBN had)
                  (PP (IN before))))))
          (, ,)
          (CC and)
          (SBAR (IN so)
            (S
              (NP (PRP it))
              (VP (VBD seemed)
                (ADJP (JJ foolish)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB sleep))
                        (CC and)
                        (RB not)
                        (VP (VB make)
                          (NP
                            (NP (DT the) (JJS most))
                            (PP (IN of)
                              (NP (PRP it)))))))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD might) (RB n't)
        (ADVP (RB ever))
        (VP (VB have)
          (NP (PDT such) (DT a) (NN chance))
          (ADVP (RB again)))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
prepc_like(was-2, having-4)
det(seat-7, a-5)
amod(seat-7, front-6)
dobj(having-4, seat-7)
det(menagerie-10, a-9)
prep_at(having-4, menagerie-10)
prep_for(menagerie-10, nothing-12)
prep_before(had-19, which-14)
nsubj(had-19, I-15)
aux(had-19, had-16)
neg(had-19, n't-17)
advmod(had-19, ever-18)
advcl(was-2, had-19)
mark(seemed-25, so-23)
nsubj(seemed-25, it-24)
advcl(was-2, seemed-25)
conj_and(had-19, seemed-25)
acomp(seemed-25, foolish-26)
aux(sleep-28, to-27)
xcomp(foolish-26, sleep-28)
neg(make-31, not-30)
xcomp(foolish-26, make-31)
conj_and(sleep-28, make-31)
det(most-33, the-32)
dobj(make-31, most-33)
prep_of(most-33, it-35)
nsubj(have-41, I-37)
aux(have-41, might-38)
neg(have-41, n't-39)
advmod(have-41, ever-40)
parataxis(was-2, have-41)
predet(chance-44, such-42)
det(chance-44, a-43)
dobj(have-41, chance-44)
advmod(have-41, again-45)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD went)
        (S
          (VP (VBG a-fishing)
            (ADVP (RB again))
            (PP (IN in)
              (NP (DT the) (JJ early) (NN dawn))))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB then))
        (VBD lazied)
        (PRT (RP around))
        (NP (DT all) (NN day))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ deep) (NN shade))
            (PP (IN on)
              (NP (DT an) (NN island)))))
        (, ,)
        (S
          (VP (VBG taking)
            (NP
              (NP (NN turn))
              (VP (IN about)
                (S
                  (VP (TO to)
                    (VP (VB watch)
                      (CC and)
                      (VB see)
                      (NP
                        (NP (DT that) (NN none))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NNS animals))
                            (VP (VBN come)
                              (S
                                (VP (VBG a-snooping)
                                  (PRT (RP around))
                                  (NP (RB there))
                                  (PP (IN after)
                                    (NP
                                      (NP (NNS erronorts))
                                      (PP (IN for)
                                        (NP (NN dinner))))))))))))))))))))
    (. .)))

nsubj(went-2, We-1)
nsubj(lazied-12, We-1)
root(ROOT-0, went-2)
xcomp(went-2, a-fishing-3)
advmod(a-fishing-3, again-4)
det(dawn-8, the-6)
amod(dawn-8, early-7)
prep_in(a-fishing-3, dawn-8)
advmod(lazied-12, then-11)
conj_and(went-2, lazied-12)
prt(lazied-12, around-13)
det(day-15, all-14)
tmod(lazied-12, day-15)
det(shade-19, the-17)
amod(shade-19, deep-18)
prep_in(lazied-12, shade-19)
det(island-22, an-21)
prep_on(shade-19, island-22)
vmod(lazied-12, taking-24)
dobj(taking-24, turn-25)
dep(turn-25, about-26)
aux(watch-28, to-27)
xcomp(about-26, watch-28)
xcomp(about-26, see-30)
conj_and(watch-28, see-30)
det(none-32, that-31)
dobj(watch-28, none-32)
det(animals-35, the-34)
prep_of(none-32, animals-35)
vmod(animals-35, come-36)
xcomp(come-36, a-snooping-37)
prt(a-snooping-37, around-38)
dobj(a-snooping-37, there-39)
prep_after(a-snooping-37, erronorts-41)
prep_for(erronorts-41, dinner-43)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD was)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB leave)
                  (NP (DT the) (JJ next) (NN day)))))))
        (, ,)
        (CC but)
        (VP (MD could) (RB n't))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (RB too) (JJ lovely)))
    (. .)))

nsubj(going-3, We-1)
nsubj(leave-5, We-1)
aux(going-3, was-2)
ccomp(lovely-17, going-3)
aux(leave-5, to-4)
xcomp(going-3, leave-5)
det(day-8, the-6)
amod(day-8, next-7)
tmod(leave-5, day-8)
conj_but(going-3, could-11)
ccomp(lovely-17, could-11)
neg(could-11, n't-12)
nsubj(lovely-17, it-14)
cop(lovely-17, was-15)
advmod(lovely-17, too-16)
root(ROOT-0, lovely-17)

(ROOT
  (S
    (PP
      (NP (DT The) (NN day))
      (IN after))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP
            (VP (VBD rose)
              (PRT (RP up))
              (PP (IN toward)
                (NP (DT the) (NN sky))))
            (CC and)
            (VP (VBD sailed)
              (PRT (RP off))
              (ADVP (RB eastward))))))
      (, ,)
      (NP (PRP we))
      (VP
        (VP (VBD looked)
          (ADVP (RB back)))
        (CC and)
        (VP (VBD watched)
          (NP (DT that) (NN place))
          (SBAR (IN till)
            (S
              (NP (PRP it))
              (VP (VBD war) (RB n't)
                (VP
                  (NP
                    (NP (NN nothing))
                    (CONJP (CC but)
                      (RB just))
                    (NP (DT a) (NN speck)))
                  (PP (IN in)
                    (NP (DT the) (NNP Desert))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP tell)
        (NP (PRP you))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (PP (IN like)
                (S
                  (VP (VBG saying)
                    (ADJP (JJ good-bye)
                      (PP (TO to)
                        (NP (DT a) (NN friend))))
                    (SBAR (IN that)
                      (S
                        (NP (PRP you))
                        (VP (VBP ai) (RB n't)
                          (ADVP (RB ever))
                          (VP (VBG going)
                            (S
                              (VP (TO to)
                                (VP (VB see)
                                  (ADVP (DT any) (RBR more)))))))))))))))))
    (. .)))

det(day-2, The-1)
npadvmod(after-3, day-2)
prep(looked-18, after-3)
advmod(rose-7, when-5)
nsubj(rose-7, we-6)
nsubj(sailed-13, we-6)
advcl(looked-18, rose-7)
prt(rose-7, up-8)
det(sky-11, the-10)
prep_toward(rose-7, sky-11)
conj_and(rose-7, sailed-13)
advcl(looked-18, sailed-13)
prt(sailed-13, off-14)
advmod(sailed-13, eastward-15)
nsubj(looked-18, we-17)
nsubj(watched-21, we-17)
root(ROOT-0, looked-18)
advmod(looked-18, back-19)
conj_and(looked-18, watched-21)
det(place-23, that-22)
dobj(watched-21, place-23)
mark(war-26, till-24)
nsubj(war-26, it-25)
advcl(watched-21, war-26)
neg(war-26, n't-27)
dep(war-26, nothing-28)
det(speck-32, a-31)
dep(war-26, speck-32)
conj_but(nothing-28, speck-32)
det(Desert-35, the-34)
prep_in(nothing-28, Desert-35)
nsubj(tell-39, I-38)
conj_and(looked-18, tell-39)
dobj(tell-39, you-40)
nsubj(was-42, it-41)
dep(tell-39, was-42)
prepc_like(was-42, saying-44)
acomp(saying-44, good-bye-45)
det(friend-48, a-47)
prep_to(good-bye-45, friend-48)
mark(going-54, that-49)
nsubj(going-54, you-50)
nsubj(see-56, you-50)
aux(going-54, ai-51)
neg(going-54, n't-52)
advmod(going-54, ever-53)
ccomp(saying-44, going-54)
aux(see-56, to-55)
xcomp(going-54, see-56)
dep(more-58, any-57)
advmod(see-56, more-58)

(ROOT
  (S
    (S
      (S
        (NP (NNP Jim))
        (VP (VBD was)
          (VP (VBG thinking)
            (PP (TO to)
              (NP (PRP himself))))))
      (, ,)
      (CC and)
      (S
        (PP (IN at)
          (NP (JJ last)))
        (NP (PRP he))
        (VP (VBZ says))))
    (: :) (`` ``)
    (S
      (NP (NNP Mars) (NNP Tom))
      (PRN (, ,)
        (S
          (NP (PRP we))
          (VP (VBZ 's)
            (ADJP (JJ mos) ('' ')
              (PP (TO to)
                (NP
                  (NP (NNP de) (NN end) (NNP er) (FW de) (NNP Desert))
                  (ADVP (RB now)))))))
        (, ,))
      (NP (PRP I))
      (VP (VBP speck)))
    (. .) ('' '')))

nsubj(thinking-3, Jim-1)
aux(thinking-3, was-2)
root(ROOT-0, thinking-3)
prep_to(thinking-3, himself-5)
prep_at(says-11, last-9)
nsubj(says-11, he-10)
conj_and(thinking-3, says-11)
nn(Tom-15, Mars-14)
nsubj(speck-30, Tom-15)
nsubj(mos-19, we-17)
cop(mos-19, 's-18)
parataxis(speck-30, mos-19)
nn(Desert-26, de-22)
nn(Desert-26, end-23)
nn(Desert-26, er-24)
nn(Desert-26, de-25)
prep_to(mos-19, Desert-26)
advmod(Desert-26, now-27)
nsubj(speck-30, I-29)
parataxis(thinking-3, speck-30)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (VP (VB hit)
      (NP (NN stan))
      ('' ')
      (PP (TO to)
        (NP (NN reason)))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBZ is)))))
    (. .)))

discourse(hit-4, Well-2)
root(ROOT-0, hit-4)
dobj(hit-4, stan-5)
prep_to(hit-4, reason-8)
nsubj(is-10, we-9)
dep(hit-4, is-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ knows)
      (SBAR
        (WHADVP (WRB how) (RB long))
        (S
          (NP (PRP we))
          (VP (VBZ 's)
            (VP (VBN been)
              (ADJP (JJ a-skimmin))
              ('' ')
              (PP (IN over)
                (NP (PRP it))))))))
    (. .)))

nsubj(knows-2, You-1)
root(ROOT-0, knows-2)
advmod(long-4, how-3)
advmod(a-skimmin-8, long-4)
nsubjpass(a-skimmin-8, we-5)
auxpass(a-skimmin-8, 's-6)
cop(a-skimmin-8, been-7)
ccomp(knows-2, a-skimmin-8)
prep_over(a-skimmin-8, it-11)

(ROOT
  (S
    (NP (NNP Mus) (POS '))
    (VP (VBP be)
      (VP (VBN mos) ('' ')
        (PP (IN out)
          (NP
            (NP (NNP o) (POS '))
            (NN san)))
        ('' ')))
    (. .)))

nsubjpass(mos-4, Mus-1)
auxpass(mos-4, be-3)
root(ROOT-0, mos-4)
poss(san-9, o-7)
prep_out(mos-4, san-9)

(ROOT
  (S
    (NP
      (NP (NNP Hit) (POS 's))
      (NP (DT a) (NN wonder))
      (PP (TO to)
        (NP (PRP me))))
    (VP (VBP dat)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (VP (VBN hilt)
              (PRT (RP out))
              (ADVP
                (ADVP (RB as) (RB long))
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBZ has))))))))))
    (. .) ('' '')))

nsubj(dat-7, Hit-1)
possessive(Hit-1, 's-2)
det(wonder-4, a-3)
dep(Hit-1, wonder-4)
prep_to(Hit-1, me-6)
root(ROOT-0, dat-7)
nsubjpass(hilt-10, it-8)
auxpass(hilt-10, 's-9)
ccomp(dat-7, hilt-10)
prt(hilt-10, out-11)
advmod(long-13, as-12)
advmod(hilt-10, long-13)
mark(has-16, as-14)
nsubj(has-16, it-15)
advcl(long-13, has-16)
ccomp(long-13, has-16)

(ROOT
  (S
    (S
      (NP (`` ``) (NNP Shucks) (, ,) (RB there))
      (VP (VBZ 's)
        (NP (NN plenty) (NN sand))))
    (, ,)
    (NP (PRP you))
    (VP (VBP need) (RB n't)
      (VP (VB worry)))
    (. .) ('' '')))

nsubj(sand-7, Shucks-2)
advmod(Shucks-2, there-4)
cop(sand-7, 's-5)
nn(sand-7, plenty-6)
ccomp(need-10, sand-7)
nsubj(need-10, you-9)
root(ROOT-0, need-10)
neg(need-10, n't-11)
dep(need-10, worry-12)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP I))
      (VP
        (VP (VBP ai) (RB n't)
          (ADJP (JJ a-worryin))
          ('' '))
        (, ,)
        (NP
          (NP (NNP Mars) (NNP Tom))
          (, ,) (RB only)
          (NP (NN wonderin) (POS ')))))
    (, ,)
    (NP (NN dat))
    (VP (VBZ 's)
      (NP (DT all)))
    (. .)))

discourse(a-worryin-7, Oh-2)
nsubj(a-worryin-7, I-4)
cop(a-worryin-7, ai-5)
neg(a-worryin-7, n't-6)
ccomp(all-19, a-worryin-7)
nn(Tom-11, Mars-10)
dobj(a-worryin-7, Tom-11)
advmod(Tom-11, only-13)
poss(Tom-11, wonderin-14)
nsubj(all-19, dat-17)
cop(all-19, 's-18)
root(ROOT-0, all-19)

(ROOT
  (S
    (S
      (NP (NNP De) (NNP Lord))
      (VP (VBZ 's)
        (VP (VBN got)
          (NP (RB plenty))
          (S
            (S
              (S
                (NP (NNP san) (POS ')))
              (, ,)
              (NP (PRP I))
              (VP (VBP ai) (RB n't)
                (NP
                  (NP (NN doubtin) (POS '))
                  (NN dat))))
            (: ;)
            (CC but)
            (FRAG
              (ADJP (JJ nemmine)))))))
    (, ,)
    (NP (PRP He))
    (VP (VBP ai) (RB n't)
      (ADJP (JJ gwyne)
        (PP (TO to)
          (NP
            (NP
              (NP (NNP WAS) (POS '))
              (NN E))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBP jist)
                  (PP (IN on)
                    (NP
                      (NP (NN dat) (NN account))
                      (: ;) (`` en)
                      (S
                        (NP (PRP I))
                        (VP (VBZ allows)
                          (NP
                            (NP
                              (NP (NN dat) (NN dis))
                              (NP
                                (NP (NNP Desert) (POS 's))
                                (JJ plenty) (JJ big)
                                (ADJP (RB enough) (RB now))
                                (, ,) (NN jist)))
                            (IN de)
                            (NP
                              (NP (NN way))
                              (SBAR
                                (S
                                  (NP (PRP she))
                                  (VP (VBZ is) (, ,)
                                    (ADVP (IN en))
                                    (SBAR
                                      (S
                                        (NP (PRP you))
                                        (VP (MD ca) (RB n't)
                                          (VP (VB spread)
                                            (NP (PRP her))
                                            (PP (IN out)
                                              (NP
                                                (NP (DT no) (NN mo) (POS '))
                                                (`` `)
                                                (S
                                                  (NP (NN dout))
                                                  (VP (VBD was) (`` `)
                                                    (PP (IN in))))
                                                ('' ') (NN san))))))))))))))
                      ('' '))))))))))
    (. .) ('' '')))

nn(Lord-2, De-1)
nsubjpass(got-4, Lord-2)
auxpass(got-4, 's-3)
ccomp(gwyne-22, got-4)
dobj(got-4, plenty-5)
ccomp(dat-14, san-6)
nsubj(dat-14, I-9)
nsubj(nemmine-17, I-9)
cop(dat-14, ai-10)
neg(dat-14, n't-11)
poss(dat-14, doubtin-12)
dep(got-4, dat-14)
dep(got-4, nemmine-17)
conj_but(dat-14, nemmine-17)
nsubj(gwyne-22, He-19)
cop(gwyne-22, ai-20)
neg(gwyne-22, n't-21)
root(ROOT-0, gwyne-22)
poss(E-26, WAS-24)
prep_to(gwyne-22, E-26)
nsubj(jist-28, it-27)
rcmod(E-26, jist-28)
nn(account-31, dat-30)
prep_on(jist-28, account-31)
punct(account-31, en-33)
nsubj(allows-35, I-34)
dep(account-31, allows-35)
nn(dis-37, dat-36)
dobj(allows-35, dis-37)
iobj(allows-35, dis-37)
poss(jist-45, Desert-38)
amod(jist-45, plenty-40)
amod(jist-45, big-41)
advmod(now-43, enough-42)
amod(jist-45, now-43)
dep(dis-37, jist-45)
amod(dis-37, de-46)
dep(dis-37, way-47)
nsubj(is-49, she-48)
rcmod(way-47, is-49)
advmod(is-49, en-51)
nsubj(spread-55, you-52)
aux(spread-55, ca-53)
neg(spread-55, n't-54)
ccomp(is-49, spread-55)
dobj(spread-55, her-56)
neg(mo-59, no-58)
poss(san-67, mo-59)
nsubj(was-63, dout-62)
dep(san-67, was-63)
prep(was-63, in-65)
prep_out(spread-55, san-67)

(ROOT
  (S
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (VP (VB go)
      (ADJP (`` `) (JJ long)))
    (. !)))

discourse(go-4, Oh-2)
root(ROOT-0, go-4)
acomp(go-4, long-6)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBP ai) (RB n't)
      (ADJP
        (ADJP (RB much) (JJR more))
        (SBAR (IN than)
          (S
            (ADVP (RB fairly))
            (VP (VBD STARTED)
              (PP (IN across)
                (NP (DT this) (NNP Desert)))
              (ADVP (RB yet)))))))
    (. .)))

nsubj(more-5, we-1)
cop(more-5, ai-2)
neg(more-5, n't-3)
advmod(more-5, much-4)
root(ROOT-0, more-5)
mark(STARTED-8, than-6)
advmod(STARTED-8, fairly-7)
ccomp(more-5, STARTED-8)
det(Desert-11, this-10)
prep_across(STARTED-8, Desert-11)
advmod(STARTED-8, yet-12)

(ROOT
  (SINV
    (S
      (NP (DT The) (NNP United) (NNPS States))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (RB pretty) (JJ big))
          (NN country))))
    (, ,)
    (VP (VBP ai) (RB n't))
    (NP (PRP it))
    (. ?)))

det(States-3, The-1)
nn(States-3, United-2)
nsubj(country-8, States-3)
cop(country-8, is-4)
det(country-8, a-5)
advmod(big-7, pretty-6)
amod(country-8, big-7)
ccomp(ai-10, country-8)
root(ROOT-0, ai-10)
neg(ai-10, n't-11)
nsubj(ai-10, it-12)

(ROOT
  (S
    (NP
      (NP (NNP Ai))
      (VP (RB n't)
        (NP (PRP it))))
    (, ,)
    (VP (VBD Huck))
    (. ?) ('' '')))

nsubj(Huck-5, Ai-1)
neg(it-3, n't-2)
dep(Ai-1, it-3)
root(ROOT-0, Huck-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP I))
        (VP (VBZ says) (, ,) (`` ``)
          (S
            (NP (EX there))
            (VP (VBP ai) (RB n't)
              (NP (DT no) (JJR bigger) (NN one))))))
      (, ,))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB reckon)))
    (. .) ('' '')))

advmod(reckon-19, Yes-2)
nsubj(says-6, I-5)
parataxis(reckon-19, says-6)
expl(ai-10, there-9)
ccomp(says-6, ai-10)
neg(ai-10, n't-11)
neg(one-14, no-12)
amod(one-14, bigger-13)
nsubj(ai-10, one-14)
nsubj(reckon-19, I-16)
aux(reckon-19, do-17)
neg(reckon-19, n't-18)
root(ROOT-0, reckon-19)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBZ says) (, ,) (`` ``)
      (S
        (S
          (NP (DT this) (NNP Desert))
          (VP (VBZ is)
            (PP (IN about)
              (NP
                (NP (DT the) (NN shape))
                (PP (IN of)
                  (NP (DT the) (NNP United) (NNPS States)))))))
        (, ,)
        (CC and)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB lay)
                      (NP (PRP it))
                      (PRT (RP down))
                      (PP (IN on)
                        (NP
                          (NP (NN top))
                          (PP (IN of)
                            (NP (DT the) (NNP United) (NNPS States)))))))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB cover)
              (NP
                (NP (DT the) (NN land))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ free) (NN out))
                    (PP (IN of)
                      (NP (NN sight))))))
              (PP (IN like)
                (NP (DT a) (NN blanket))))))))
    (. .)))

dep(says-6, Well-2)
nsubj(says-6, he-5)
root(ROOT-0, says-6)
det(Desert-10, this-9)
nsubj(is-11, Desert-10)
dep(says-6, is-11)
det(shape-14, the-13)
prep_about(is-11, shape-14)
det(States-18, the-16)
nn(States-18, United-17)
prep_of(shape-14, States-18)
mark(was-23, if-21)
nsubj(was-23, you-22)
nsubj(lay-25, you-22)
advcl(cover-37, was-23)
aux(lay-25, to-24)
xcomp(was-23, lay-25)
dobj(lay-25, it-26)
prt(lay-25, down-27)
det(States-33, the-31)
nn(States-33, United-32)
prep_on_top_of(lay-25, States-33)
nsubj(cover-37, it-35)
aux(cover-37, would-36)
dep(says-6, cover-37)
conj_and(is-11, cover-37)
det(land-39, the-38)
dobj(cover-37, land-39)
det(out-43, the-41)
amod(out-43, free-42)
prep_of(land-39, out-43)
prep_of(out-43, sight-45)
det(blanket-48, a-47)
prep_like(cover-37, blanket-48)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD 'd)
        (VP (VB be)
          (NP
            (NP (DT a) (JJ little) (NN corner))
            (VP (VBG sticking)
              (PRT (RP out))))
          (, ,)
          (ADVP
            (ADVP (RB up)
              (PP (IN at)
                (NP (NNP Maine))))
            (CC and)
            (RB away)
            (ADVP (RB up) (RB northwest))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NNP Florida))
        (VP (VBG sticking)
          (PRT (RP out))
          (PP (IN like)
            (NP
              (NP (DT a) (NN turtle) (POS 's))
              (NN tail)))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBZ 's)
          (NP (DT all)))))
    (. .)))

expl(corner-6, There-1)
aux(corner-6, 'd-2)
cop(corner-6, be-3)
det(corner-6, a-4)
amod(corner-6, little-5)
root(ROOT-0, corner-6)
vmod(corner-6, sticking-7)
prt(sticking-7, out-8)
advmod(corner-6, up-10)
prep_at(up-10, Maine-12)
advmod(corner-6, away-14)
conj_and(up-10, away-14)
advmod(northwest-16, up-15)
dep(up-10, northwest-16)
nsubj(sticking-20, Florida-19)
conj_and(corner-6, sticking-20)
prt(sticking-20, out-21)
det(turtle-24, a-23)
poss(tail-26, turtle-24)
prep_like(sticking-20, tail-26)
nsubj(all-31, that-29)
cop(all-31, 's-30)
conj_and(corner-6, all-31)
conj_and(sticking-20, all-31)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBD took)
          (NP (NNP California))
          (PRT (RP away))
          (PP (IN from)
            (NP (DT the) (NNPS Mexicans)))
          (ADVP
            (ADVP
              (NP
                (QP (CD two)
                  (CC or)
                  (CD three))
                (NNS years))
              (IN ago))
            (, ,)
            (ADVP (RB so)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (NN part))
                    (PP (IN of)
                      (NP (DT the) (NNP Pacific) (NN coast))))
                  (VP (VBZ is)
                    (NP (PRP ours))
                    (ADVP (RB now))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD laid)
            (NP (DT the) (NNP Great) (NNP Sahara))
            (PRT (RP down))
            (PP (IN with)
              (NP
                (NP (PRP$ her) (NN edge))
                (PP (IN on)
                  (NP (DT the) (NNP Pacific))))))))
      (, ,)
      (NP (PRP she))
      (VP (MD would)
        (VP
          (VP (VB cover)
            (NP (DT the) (NNP United) (NNPS States)))
          (CC and)
          (VP (VB stick)
            (PRT (RP out))
            (PP (IN past)
              (NP (NNP New) (NNP York)))
            (PP
              (NP
                (QP (CD six) (CD hundred))
                (NNS miles))
              (IN into)
              (NP (DT the) (NNP Atlantic) (NN ocean)))))))
    (. .) ('' '')))

nsubj(took-3, We-1)
aux(took-3, 've-2)
root(ROOT-0, took-3)
dobj(took-3, California-4)
det(Mexicans-8, the-7)
prep_away_from(took-3, Mexicans-8)
num(years-12, two-9)
conj_or(two-9, three-11)
num(years-12, three-11)
npadvmod(ago-13, years-12)
advmod(took-3, ago-13)
advmod(ago-13, so-15)
mark(ours-23, that-16)
nsubj(ours-23, part-17)
det(coast-21, the-19)
nn(coast-21, Pacific-20)
prep_of(part-17, coast-21)
cop(ours-23, is-22)
ccomp(so-15, ours-23)
advmod(ours-23, now-24)
mark(laid-29, if-27)
nsubj(laid-29, you-28)
advcl(cover-43, laid-29)
det(Sahara-32, the-30)
nn(Sahara-32, Great-31)
dobj(laid-29, Sahara-32)
prt(laid-29, down-33)
poss(edge-36, her-35)
prep_with(laid-29, edge-36)
det(Pacific-39, the-38)
prep_on(edge-36, Pacific-39)
nsubj(cover-43, she-41)
nsubj(stick-48, she-41)
aux(cover-43, would-42)
conj_and(took-3, cover-43)
det(States-46, the-44)
nn(States-46, United-45)
dobj(cover-43, States-46)
conj_and(took-3, stick-48)
conj_and(cover-43, stick-48)
prt(stick-48, out-49)
nn(York-52, New-51)
prep_past(stick-48, York-52)
number(hundred-54, six-53)
num(miles-55, hundred-54)
npadvmod(stick-48, miles-55)
det(ocean-59, the-57)
nn(ocean-59, Atlantic-58)
prep_into(stick-48, ocean-59)

(ROOT
  (FRAG
    (NP (PRP I))
    (VP (VB say) (: :) (`` ``)
      (INTJ (JJ Good) (NN land) (. !)))))

root(ROOT-0, I-1)
dep(I-1, say-2)
discourse(say-2, Good-5)
dep(Good-5, land-6)

(ROOT
  (S
    (VP (VB have)
      (S
        (NP (PRP you))
        (VP (VBD got)
          (NP (DT the) (NNS documents))
          (PP (IN for)
            (NP
              (NP (DT that))
              (, ,)
              (NP (NNP Tom) (NNP Sawyer)))))))
    (. ?) ('' '')))

root(ROOT-0, have-1)
nsubj(got-3, you-2)
ccomp(have-1, got-3)
det(documents-5, the-4)
dobj(got-3, documents-5)
prep_for(got-3, that-7)
nn(Sawyer-10, Tom-9)
appos(that-7, Sawyer-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (, ,)
    (S (CC and)
      (NP (PRP they))
      (VP (VBP 're)
        (ADJP (JJ right))
        (ADVP (RB here))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN been)
          (VP (VBG studying)
            (NP (PRP them))))))
    (. .)))

advmod(right-7, Yes-2)
nsubj(right-7, they-5)
cop(right-7, 're-6)
root(ROOT-0, right-7)
advmod(right-7, here-8)
nsubj(studying-14, I-11)
aux(studying-14, 've-12)
aux(studying-14, been-13)
conj_and(right-7, studying-14)
dobj(studying-14, them-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB look)
        (PP (IN for)
          (NP (PRP yourself)))))
    (. .)))

nsubj(look-3, You-1)
aux(look-3, can-2)
root(ROOT-0, look-3)
prep_for(look-3, yourself-5)

(ROOT
  (S
    (PP (IN From)
      (NP (NNP New)))
    (NP
      (NP (NNP York))
      (PP (TO to)
        (NP (DT the) (NNP Pacific))))
    (VP (VBZ is)
      (NP (CD 2,600) (NNS miles)))
    (. .)))

prep_from(miles-9, New-2)
nsubj(miles-9, York-3)
det(Pacific-6, the-5)
prep_to(York-3, Pacific-6)
cop(miles-9, is-7)
num(miles-9, 2,600-8)
root(ROOT-0, miles-9)

(ROOT
  (S
    (PP (IN From)
      (NP (CD one)))
    (NP
      (NP (NN end))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Great) (NNP Desert))
          (PP (TO to)
            (NP (DT the) (JJ other))))))
    (VP (VBZ is)
      (NP (CD 3,200)))
    (. .)))

prep_from(3,200-12, one-2)
nsubj(3,200-12, end-3)
det(Desert-7, the-5)
nn(Desert-7, Great-6)
prep_of(end-3, Desert-7)
det(other-10, the-9)
prep_to(Desert-7, other-10)
cop(3,200-12, is-11)
root(ROOT-0, 3,200-12)

(ROOT
  (S
    (S
      (NP (DT The) (NNP United) (NNPS States))
      (VP (VBZ contains)
        (NP (CD 3,600,000) (JJ square) (NNS miles))))
    (, ,)
    (NP (DT the) (NNP Desert))
    (VP (VBZ contains)
      (NP (CD 4,162,000)))
    (. .)))

det(States-3, The-1)
nn(States-3, United-2)
nsubj(contains-4, States-3)
ccomp(contains-11, contains-4)
num(miles-7, 3,600,000-5)
amod(miles-7, square-6)
dobj(contains-4, miles-7)
det(Desert-10, the-9)
nsubj(contains-11, Desert-10)
root(ROOT-0, contains-11)
dobj(contains-11, 4,162,000-12)

(ROOT
  (S
    (S
      (PP (IN With)
        (NP
          (NP (DT the) (NNP Desert) (POS 's))
          (NN bulk)))
      (NP (PRP you))
      (VP (MD could)
        (VP (VB cover)
          (PRT (RP up))
          (NP
            (NP (DT every) (JJ last) (NN inch))
            (PP (IN of)
              (NP (DT the) (NNP United) (NNPS States)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (PP (IN under)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NNS edges))
              (VP (VBD projected)
                (PRT (RP out)))))))
      (, ,)
      (NP (PRP you))
      (VP (MD could)
        (VP (VB tuck)
          (NP
            (NP (NNP England) (, ,) (NNP Scotland) (, ,) (NNP Ireland) (, ,) (NNP France) (, ,) (NNP Denmark) (, ,))
            (CC and)
            (NP (DT all) (NNP Germany))))))
    (. .)))

det(Desert-3, the-2)
poss(bulk-5, Desert-3)
prep_with(cover-8, bulk-5)
nsubj(cover-8, you-6)
aux(cover-8, could-7)
root(ROOT-0, cover-8)
prt(cover-8, up-9)
det(inch-12, every-10)
amod(inch-12, last-11)
dobj(cover-8, inch-12)
det(States-16, the-14)
nn(States-16, United-15)
prep_of(inch-12, States-16)
prep(tuck-29, in-19)
pcomp(in-19, under-20)
advmod(projected-24, where-21)
det(edges-23, the-22)
nsubj(projected-24, edges-23)
pcomp(under-20, projected-24)
prt(projected-24, out-25)
nsubj(tuck-29, you-27)
aux(tuck-29, could-28)
conj_and(cover-8, tuck-29)
nn(Denmark-38, England-30)
appos(Denmark-38, Scotland-32)
appos(Denmark-38, Ireland-34)
appos(Denmark-38, France-36)
dobj(tuck-29, Denmark-38)
det(Germany-42, all-41)
dobj(tuck-29, Germany-42)
conj_and(Denmark-38, Germany-42)

(ROOT
  (S
    (S
      (S
        (INTJ (UH Yes))
        (, ,)
        (VP (VB sir)))
      (, ,)
      (NP (PRP you))
      (VP (MD could)
        (VP (VB hide)
          (S
            (NP
              (NP (DT the) (NN home))
              (PP (IN of)
                (NP (DT the)
                  (UCP
                    (ADJP (JJ brave))
                    (CC and)
                    (NP
                      (NP (DT all))
                      (PP (IN of)
                        (NP (PRP them)))))
                  (NNS countries))))
            (VP (VB clean)
              (PRT (RP out))
              (PP (IN of)
                (NP (NN sight)))
              (PP (IN under)
                (NP (DT the) (NNP Great) (NNP Sahara))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD would)
        (ADVP (RB still))
        (VP (VB have)
          (NP
            (NP (CD 2,000) (JJ square) (NNS miles))
            (PP (IN of)
              (NP
                (NP (NN sand))
                (VP (VBN left))))))))
    (. .) ('' '')))

discourse(sir-3, Yes-1)
ccomp(hide-7, sir-3)
nsubj(hide-7, you-5)
aux(hide-7, could-6)
root(ROOT-0, hide-7)
det(home-9, the-8)
nsubj(clean-18, home-9)
det(countries-17, the-11)
amod(countries-17, brave-12)
conj_and(brave-12, all-14)
amod(countries-17, all-14)
prep_of(all-14, them-16)
prep_of(home-9, countries-17)
ccomp(hide-7, clean-18)
prep_out_of(clean-18, sight-21)
det(Sahara-25, the-23)
nn(Sahara-25, Great-24)
prep_under(clean-18, Sahara-25)
nsubj(have-31, you-28)
aux(have-31, would-29)
advmod(have-31, still-30)
conj_and(hide-7, have-31)
num(miles-34, 2,000-32)
amod(miles-34, square-33)
dobj(have-31, miles-34)
prep_of(miles-34, sand-36)
vmod(sand-36, left-37)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (NP (PRP I))
    (VP (VBZ says) (, ,) (`` ``)
      (S
        (NP (PRP it))
        (VP (VB clean)
          (S
            (NP (NNS beats))
            (NP (PRP me))))))
    (. .)))

dep(says-6, Well-2)
nsubj(says-6, I-5)
root(ROOT-0, says-6)
nsubj(clean-10, it-9)
ccomp(says-6, clean-10)
nsubj(me-12, beats-11)
xcomp(clean-10, me-12)

(ROOT
  (S
    (FRAG
      (INTJ (WRB Why))
      (, ,)
      (NP (NNP Tom)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ shows)
      (SBAR (IN that)
        (S
          (NP (DT the) (NNP Lord))
          (VP (VBD took)
            (SBAR (IN as)
              (S
                (NP (JJ much) (NNS pains))
                (VP (VBN makin) ('' ')
                  (NP (DT this) (NN Desert))
                  (PP (IN as)
                    (NP
                      (NP (NN makin) (POS '))
                      (NP
                        (NP (DT the) (NNP United) (NNPS States))
                        (CC and)
                        (NP (DT all)
                          (ADJP
                            (NP (PRP them))
                            (JJ other))
                          (NNS countries))))))))))))
    (. .) ('' '')))

discourse(Tom-3, Why-1)
dep(shows-6, Tom-3)
nsubj(shows-6, it-5)
root(ROOT-0, shows-6)
mark(took-10, that-7)
det(Lord-9, the-8)
nsubj(took-10, Lord-9)
ccomp(shows-6, took-10)
mark(makin-14, as-11)
amod(pains-13, much-12)
nsubj(makin-14, pains-13)
advcl(took-10, makin-14)
det(Desert-17, this-16)
dobj(makin-14, Desert-17)
prep_as(makin-14, makin-19)
det(States-23, the-21)
nn(States-23, United-22)
dep(makin-19, States-23)
det(countries-28, all-25)
npadvmod(other-27, them-26)
amod(countries-28, other-27)
dep(makin-19, countries-28)
conj_and(States-23, countries-28)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP
          (NP (NNP Huck))
          (, ,)
          (NP
            (NP (NNP dat) (NNP don) (POS '))
            (NN stan) (POS ')))
        (VP (TO to)
          (VP (VB reason)))))
    (. .)))

nsubj(says-2, Jim-1)
root(ROOT-0, says-2)
dobj(says-2, Huck-5)
nsubj(reason-13, Huck-5)
nn(don-8, dat-7)
poss(stan-10, don-8)
appos(Huck-5, stan-10)
poss(Huck-5, stan-10)
aux(reason-13, to-12)
xcomp(says-2, reason-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP reckon)
      (NP
        (NP (NNP dis) (NNP Desert) (NNP wa)
          (CC 'n')
          (NNP t))
        (VP (VBN made)
          (ADVP (IN at) (DT all)))))
    (. .)))

nsubj(reckon-2, I-1)
root(ROOT-0, reckon-2)
nn(wa-5, dis-3)
nn(wa-5, Desert-4)
dobj(reckon-2, wa-5)
dobj(reckon-2, t-7)
conj_'n'(wa-5, t-7)
vmod(wa-5, made-8)
advmod(made-8, at-9)
pobj(at-9, all-10)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP you))
    (VP (VBP take)
      (PP (IN en)
        (NP (NN look)))
      (PP (IN at)
        (NP (PRP it)))
      (PP (IN like)
        (NP (NN dis)))
      (: --)
      (S
        (NP (PRP you))
        (VP
          (VP (VB look)
            (PP (IN at)
              (NP (PRP it))))
          (, ,)
          (CC and)
          (VP (VB see)
            (NP
              (NP (NN ef))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBZ 's)
                    (ADJP (JJ right))))))))))
    (. .)))

advmod(take-3, Now-1)
nsubj(take-3, you-2)
root(ROOT-0, take-3)
prep_en(take-3, look-5)
prep_at(take-3, it-7)
prep_like(take-3, dis-9)
nsubj(look-12, you-11)
nsubj(see-17, you-11)
ccomp(take-3, look-12)
parataxis(take-3, look-12)
prep_at(look-12, it-14)
ccomp(take-3, see-17)
parataxis(take-3, see-17)
conj_and(look-12, see-17)
dobj(see-17, ef-18)
nsubj(right-21, I-19)
cop(right-21, 's-20)
rcmod(ef-18, right-21)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT a) (NN desert))
      (ADJP (JJ good)
        (PP (IN for))))
    (. ?)))

pobj(good-5, What-1)
cop(good-5, 's-2)
det(desert-4, a-3)
nsubj(good-5, desert-4)
root(ROOT-0, good-5)
prep(good-5, for-6)

(ROOT
  (S (`` `)
    (VP (VB Taint)
      (ADJP (JJ good)
        (PP (IN for)
          (NP (NN nuthin) (POS ')))))
    (. .)))

root(ROOT-0, Taint-2)
acomp(Taint-2, good-3)
prep_for(good-3, nuthin-5)

(ROOT
  (S
    (NP (NNP Dey))
    (VP (VBP ai) (RB n't)
      (NP (DT no) (NN way)
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (PRP it))
                (VP (VB pay))))))))
    (. .)))

nsubj(way-5, Dey-1)
cop(way-5, ai-2)
neg(way-5, n't-3)
neg(way-5, no-4)
root(ROOT-0, way-5)
aux(make-7, to-6)
vmod(way-5, make-7)
nsubj(pay-9, it-8)
ccomp(make-7, pay-9)

(ROOT
  (S
    (VP (VB Hai) (RB n't)
      (VP (VB dat)
        (FRAG
          (ADVP (RB so))
          (, ,)
          (NP (NNP Huck))
          (. ?) ('' ''))))))

root(ROOT-0, Hai-1)
neg(Hai-1, n't-2)
dep(Hai-1, dat-3)
dep(Huck-6, so-4)
dep(dat-3, Huck-6)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP reckon))
    (. .) ('' '')))

discourse(reckon-5, Yes-2)
nsubj(reckon-5, I-4)
root(ROOT-0, reckon-5)

(ROOT
  (S (`` ``)
    (VP (VB Hai)
      (NP
        (NP (RB n't)
          (NP (PRP it))
          (ADVP (RB so)))
        (, ,)
        (NP (NNP Mars) (NNP Tom))))
    (. ?) ('' '')))

root(ROOT-0, Hai-2)
neg(it-4, n't-3)
dobj(Hai-2, it-4)
advmod(it-4, so-5)
nn(Tom-8, Mars-7)
appos(it-4, Tom-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP guess)
      (ADVP (RB so)))
    (. .)))

nsubj(guess-3, I-2)
root(ROOT-0, guess-3)
advmod(guess-3, so-4)

(ROOT
  (S
    (VP (VB Go)
      (PRT (RP on)))
    (. .) ('' '')))

root(ROOT-0, Go-1)
prt(Go-1, on-2)

(ROOT
  (S (`` ``)
    (NP (NNP Ef))
    (PRN
      (S
        (NP (DT a) (NN thing))
        (VP (VBP ai) (RB n't)
          (ADJP (RB no) (JJ good))))
      (, ,)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (VP (VBN made)
            (PP (IN in)
              (NP (JJ vain))))))
      (, ,))
    (VP (VBP ai) (RB n't)
      (NP (PRP it)))
    (. ?) ('' '')))

nsubj(it-18, Ef-2)
det(thing-4, a-3)
nsubj(good-8, thing-4)
cop(good-8, ai-5)
neg(good-8, n't-6)
neg(good-8, no-7)
parataxis(it-18, good-8)
nsubjpass(made-12, it-10)
auxpass(made-12, 's-11)
dep(good-8, made-12)
prep_in(made-12, vain-14)
cop(it-18, ai-16)
neg(it-18, n't-17)
root(ROOT-0, it-18)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (ADVP (RB NOW))
    (, ,)
    (VP (VBZ den))
    (. !)))

advmod(den-4, NOW-2)
root(ROOT-0, den-4)

(ROOT
  (SQ (VBP Do)
    (NP (NNP de) (NNP Lord))
    (VP (VB make)
      (NP (NN anything))
      (PP (IN in)
        (NP (JJ vain))))
    (. ?)))

aux(make-4, Do-1)
nn(Lord-3, de-2)
nsubj(make-4, Lord-3)
root(ROOT-0, make-4)
dobj(make-4, anything-5)
prep_in(make-4, vain-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP answer)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP dat)))))
    (. .) ('' '')))

nsubj(answer-2, You-1)
root(ROOT-0, answer-2)
nsubj(dat-4, me-3)
ccomp(answer-2, dat-4)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Well)))
    (: --)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP He))
      (VP (VBP do) (RB n't)))
    (. .) ('' '')))

dep(do-7, Well-2)
discourse(do-7, no-4)
nsubj(do-7, He-6)
root(ROOT-0, do-7)
neg(do-7, n't-8)

(ROOT
  (S (`` ``)
    (NP (NNP Den))
    (ADVP (WRB how))
    (VP (VB come)
      (S
        (NP (PRP He))
        (VP (VB make)
          (NP (DT a) (NN desert)))))
    (. ?) ('' '')))

nsubj(come-4, Den-2)
advmod(come-4, how-3)
root(ROOT-0, come-4)
nsubj(make-6, He-5)
ccomp(come-4, make-6)
det(desert-8, a-7)
dobj(make-6, desert-8)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (VP (VB go)
      (PRT (RP on)))
    (. .)))

discourse(go-4, Well-2)
root(ROOT-0, go-4)
prt(go-4, on-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ
      (VP (VBP DID))
      (NP (PRP He))
      (VP (VB come)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (PRP it)))))))
    (. ?) ('' '')))

advmod(DID-2, How-1)
root(ROOT-0, DID-2)
nsubj(DID-2, He-3)
dep(DID-2, come-4)
aux(make-6, to-5)
xcomp(come-4, make-6)
dobj(make-6, it-7)

(ROOT
  (S (`` ``)
    (NP (NNP Mars) (NNP Tom))
    (, ,)
    (NP
      (NP (PRP I))
      (NP (SYM b)))
    (VP (`` `) (VB lieve)
      (S
        (NP (PRP it))
        (VP (VB uz)
          (NP
            (NP (NN jes))
            (PP (IN like)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBZ 's)
                    (VP (VBN buildin) (`` ')
                      (NP
                        (NP (DT a) (NN house))
                        (: ;)
                        (S
                          (NP (NNP dey) (POS 's))
                          (VP (VBZ allays)
                            (NP
                              (NP
                                (NP (DT a) (NN lot) (NN o) (POS '))
                                (NN truck))
                              (PP (IN en)
                                (NP (JJ rubbish) (NN lef)))))))
                      ('' ')
                      (ADVP (RB over)))))))))))
    (. .)))

nn(Tom-3, Mars-2)
nsubj(lieve-8, Tom-3)
nsubj(lieve-8, I-5)
dep(I-5, b-6)
root(ROOT-0, lieve-8)
nsubj(uz-10, it-9)
ccomp(lieve-8, uz-10)
dobj(uz-10, jes-11)
advmod(buildin-16, when-13)
nsubjpass(buildin-16, you-14)
auxpass(buildin-16, 's-15)
prepc_like(jes-11, buildin-16)
det(house-19, a-18)
dobj(buildin-16, house-19)
nsubj(allays-23, dey-21)
possessive(dey-21, 's-22)
dep(house-19, allays-23)
det(o-26, a-24)
nn(o-26, lot-25)
poss(truck-28, o-26)
dobj(allays-23, truck-28)
amod(lef-31, rubbish-30)
prep_en(truck-28, lef-31)
advmod(buildin-16, over-33)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (PRP you))
      (VP (VB do)
        (NP (NN wid))
        (NP (PRP it))))
    (. ?)))

dep(do-4, What-1)
aux(do-4, does-2)
nsubj(do-4, you-3)
root(ROOT-0, do-4)
iobj(do-4, wid-5)
dobj(do-4, it-6)

(ROOT
  (S
    (NP
      (NP (NNP Doan) (POS '))
      (NN you))
    (VP (VBP take)
      (PP (IN en)
        (NP (NN k)))
      (S (`` `)
        (VP (VB yart)
          (NP (PRP it))
          (ADVP (RB off) (IN en))
          (VP (VB dump)
            (NP (PRP it))
            (PP (IN into)
              (NP (DT a) (JJ ole) (JJ vacant) (NN back) (NN lot)))))))
    (. ?)))

poss(you-3, Doan-1)
nsubj(take-4, you-3)
root(ROOT-0, take-4)
prep_en(take-4, k-6)
ccomp(take-4, yart-8)
dobj(yart-8, it-9)
advmod(en-11, off-10)
advmod(yart-8, en-11)
dep(yart-8, dump-12)
dobj(dump-12, it-13)
det(lot-19, a-15)
amod(lot-19, ole-16)
amod(lot-19, vacant-17)
nn(lot-19, back-18)
prep_into(dump-12, lot-19)

(ROOT
  (S (`` `)
    (VP (VB Course))
    (. .)))

root(ROOT-0, Course-2)

(ROOT
  (S
    (ADVP (RB Now))
    (PRN (, ,)
      (S
        (NP (NN den))
        (, ,)
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (PRP$ my) (NN opinion) (NN hit))
            (SBAR
              (S
                (VP (VBD was)
                  (VP (VBN jes)
                    (PP (IN like)
                      (NP (NN dat))))))))
          (: --)
          (S
            (NP (NNP dat) (NNP de) (NNP Great) (NNP Sahara) (NN war))
            (VP (RB n't) (VBN made)
              (PP (IN at)
                (NP (DT all)))))))
      (, ,))
    (NP (PRP she))
    (VP (VBP jes)
      (NP (NNP HAPPEN) (POS ')))
    (. .) ('' '')))

advmod(jes-26, Now-1)
nsubj(hit-9, den-3)
nsubj(hit-9, it-5)
cop(hit-9, 's-6)
poss(hit-9, my-7)
nn(hit-9, opinion-8)
parataxis(jes-26, hit-9)
auxpass(jes-11, was-10)
rcmod(hit-9, jes-11)
prep_like(jes-11, dat-13)
nn(war-19, dat-15)
nn(war-19, de-16)
nn(war-19, Great-17)
nn(war-19, Sahara-18)
nsubj(made-21, war-19)
neg(made-21, n't-20)
parataxis(hit-9, made-21)
prep_at(made-21, all-23)
nsubj(jes-26, she-25)
root(ROOT-0, jes-26)
dobj(jes-26, HAPPEN-27)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (DT a) (JJ real) (JJ good) (NN argument)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD believed)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (DT the) (JJS best) (NN one))
                (SBAR
                  (S
                    (NP (NNP Jim))
                    (ADVP (RB ever))
                    (VP (VBD made))))))))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
nsubj(argument-8, it-3)
cop(argument-8, was-4)
det(argument-8, a-5)
amod(argument-8, real-6)
amod(argument-8, good-7)
ccomp(said-2, argument-8)
nsubj(believed-12, I-11)
conj_and(said-2, believed-12)
nsubj(one-17, it-13)
cop(one-17, was-14)
det(one-17, the-15)
amod(one-17, best-16)
ccomp(believed-12, one-17)
nsubj(made-20, Jim-18)
advmod(made-20, ever-19)
rcmod(one-17, made-20)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Tom))
        (SBAR
          (S
            (NP (PRP he))
            (VP
              (VP (VBD said)
                (NP (DT the) (JJ same)))
              (, ,)
              (CC but)
              (VP (VBD said)
                (NP (DT the) (NN trouble))
                (PP (IN about)
                  (NP (NNS arguments))))))))
      (VP
        (VP (VBZ is))
        (PRN (, ,)
          (S
            (NP (PRP they))
            (VP
              (VP (VBP ai) (RB n't)
                (NP (NN nothing)))
              (CC but)
              (VP (VBZ THEORIES))))
          (, ,))
        (ADVP (IN after) (DT all))))
    (, ,)
    (CC and)
    (S
      (NP (NNS theories))
      (VP (VBP do) (RB n't)
        (VP (VB prove)
          (NP (NN nothing)))))
    (, ,)
    (S
      (NP (PRP they))
      (ADVP (RB only))
      (VP (VBP give)
        (NP (PRP you))
        (NP (DT a) (NN place)
          (S
            (VP (TO to)
              (VP (VB rest)
                (PRT (RP on))))))))
    (, ,)
    (S
      (NP (DT a) (NN spell))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBN tuckered)
              (PP (IN out)
                (S
                  (VP
                    (VP (VBG butting)
                      (PRT (RP around)))
                    (CC and)
                    (ADVP (RB around))
                    (VP (VBG trying)
                      (S
                        (VP (TO to)
                          (VP (VB find)
                            (PRT (RP out))
                            (NP (NN something)))))))))))))
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN way)
          (S
            (VP (TO TO)
              (VP (VB find)
                (PRT (RP out))))))))
    (. .)))

nsubj(is-13, Tom-1)
nsubj(said-3, he-2)
nsubj(said-8, he-2)
rcmod(Tom-1, said-3)
det(same-5, the-4)
dobj(said-3, same-5)
rcmod(Tom-1, said-8)
conj_but(said-3, said-8)
det(trouble-10, the-9)
dobj(said-8, trouble-10)
prep_about(said-8, arguments-12)
root(ROOT-0, is-13)
nsubj(nothing-18, they-15)
nsubj(THEORIES-20, they-15)
cop(nothing-18, ai-16)
neg(nothing-18, n't-17)
parataxis(is-13, nothing-18)
parataxis(is-13, THEORIES-20)
conj_but(nothing-18, THEORIES-20)
advmod(is-13, after-22)
dep(after-22, all-23)
nsubj(prove-29, theories-26)
aux(prove-29, do-27)
neg(prove-29, n't-28)
conj_and(is-13, prove-29)
dobj(prove-29, nothing-30)
nsubj(give-34, they-32)
advmod(give-34, only-33)
conj_and(is-13, give-34)
parataxis(is-13, give-34)
iobj(give-34, you-35)
det(place-37, a-36)
dobj(give-34, place-37)
aux(rest-39, to-38)
vmod(place-37, rest-39)
prt(rest-39, on-40)
det(spell-43, a-42)
nsubj(ai-60, spell-43)
advmod(tuckered-48, when-45)
nsubjpass(tuckered-48, you-46)
auxpass(tuckered-48, are-47)
advcl(ai-60, tuckered-48)
prepc_out(tuckered-48, butting-50)
prt(butting-50, around-51)
advmod(trying-54, around-53)
prepc_out(tuckered-48, trying-54)
conj_and(butting-50, trying-54)
aux(find-56, to-55)
xcomp(trying-54, find-56)
prt(find-56, out-57)
dobj(find-56, something-58)
expl(ai-60, there-59)
conj_and(is-13, ai-60)
parataxis(is-13, ai-60)
neg(ai-60, n't-61)
neg(way-63, no-62)
nsubj(ai-60, way-63)
aux(find-65, TO-64)
vmod(way-63, find-65)
prt(find-65, out-66)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (S
          (NP (EX There))
          (VP (VBZ 's)
            (NP
              (NP (DT another) (NN trouble))
              (PP (IN about)
                (NP (NNS theories))))))
        (: :)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (ADVP (RB always))
            (NP
              (NP (DT a) (NN hole))
              (PP (IN in)
                (NP (PRP them))))
            (ADVP (RB somewheres))
            (, ,)
            (ADJP (JJ sure))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP look)
                  (ADJP (RB close) (JJ enough)))))))))
    (. .)))

cc(says-3, And-1)
nsubj(says-3, he-2)
root(ROOT-0, says-3)
expl('s-7, There-6)
dep(says-3, 's-7)
det(trouble-9, another-8)
nsubj('s-7, trouble-9)
prep_about(trouble-9, theories-11)
expl('s-14, there-13)
parataxis('s-7, 's-14)
advmod('s-14, always-15)
det(hole-17, a-16)
nsubj('s-14, hole-17)
prep_in(hole-17, them-19)
advmod('s-14, somewheres-20)
acomp('s-14, sure-22)
mark(look-26, if-24)
nsubj(look-26, you-25)
advcl('s-14, look-26)
advmod(enough-28, close-27)
acomp(look-26, enough-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB just) (RB so))
      (PP (IN with)
        (NP
          (NP (DT this) (NN one))
          (PP (IN of)
            (NP (NNP Jim) (POS 's))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod(so-4, just-3)
advmod('s-2, so-4)
det(one-7, this-6)
prep_with('s-2, one-7)
prep_of(one-7, Jim-9)
possessive(Jim-9, 's-10)

(ROOT
  (S
    (VP (VB Look)
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (NNS billions)
              (CC and)
              (NNS billions))
            (PP (IN of)
              (NP (NNS stars))))
          (ADVP (RB there))
          (VP (VBZ is)))))
    (. .)))

root(ROOT-0, Look-1)
dobj(is-9, what-2)
nsubj(is-9, billions-3)
conj_and(billions-3, billions-5)
nsubj(is-9, billions-5)
prep_of(billions-3, stars-7)
advmod(is-9, there-8)
ccomp(Look-1, is-9)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB come)
        (SBAR (IN that)
          (S
            (S
              (NP (EX there))
              (VP (VBD was)
                (ADVP (RB just))
                (ADJP (RB exactly) (RB enough) (JJ star-stuff))))
            (, ,)
            (CC and)
            (S
              (NP (NN none))
              (VP (VBD left)
                (PRT (RP over))))))))
    (. ?)))

advmod(come-4, How-1)
aux(come-4, does-2)
nsubj(come-4, it-3)
root(ROOT-0, come-4)
mark(was-7, that-5)
expl(was-7, there-6)
ccomp(come-4, was-7)
advmod(was-7, just-8)
advmod(star-stuff-11, exactly-9)
advmod(star-stuff-11, enough-10)
acomp(was-7, star-stuff-11)
nsubj(left-15, none-14)
ccomp(come-4, left-15)
conj_and(was-7, left-15)
prt(left-15, over-16)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB come)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBP ai) (RB n't)
              (ADJP (RB no) (JJ sand-pile))
              (ADVP (RB up) (RB there)))))))
    (. ?) ('' '')))

advmod(come-4, How-1)
aux(come-4, does-2)
nsubj(come-4, it-3)
root(ROOT-0, come-4)
expl(ai-6, there-5)
ccomp(come-4, ai-6)
neg(ai-6, n't-7)
neg(sand-pile-9, no-8)
acomp(ai-6, sand-pile-9)
advmod(there-11, up-10)
advmod(ai-6, there-11)

(ROOT
  (S (CC But)
    (S
      (NP (NNP Jim))
      (VP
        (VP (VBD was)
          (VP (VBN fixed)
            (PP (IN for)
              (NP (PRP him)))))
        (CC and)
        (VP (VBZ says))))
    (: :) (`` ``)
    (SBARQ
      (WHNP (WP What))
      (SQ (VBZ 's)
        (NP (NNP de) (NNP Milky) (NNP Way))))
    (. ?)))

nsubjpass(fixed-4, Jim-2)
nsubj(says-8, Jim-2)
auxpass(fixed-4, was-3)
root(ROOT-0, fixed-4)
prep_for(fixed-4, him-6)
conj_and(fixed-4, says-8)
parataxis(fixed-4, What-11)
cop(What-11, 's-12)
nn(Way-15, de-13)
nn(Way-15, Milky-14)
nsubj(What-11, Way-15)

(ROOT
  (S (: --)
    (NP (NN dat))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB know))))))))
    (. .)))

nsubj('s-3, dat-2)
root(ROOT-0, 's-3)
dobj(want-6, what-4)
nsubj(know-8, what-4)
nsubj(want-6, I-5)
ccomp('s-3, want-6)
aux(know-8, to-7)
xcomp(want-6, know-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (NNP de) (NNP Milky) (NNP Way)))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, 's-2)
nn(Way-5, de-3)
nn(Way-5, Milky-4)
nsubj(What-1, Way-5)

(ROOT
  (S
    (VP (VB Answer)
      (S
        (NP (PRP me))
        (ADJP (JJ dat))))
    (. !) ('' '')))

root(ROOT-0, Answer-1)
nsubj(dat-3, me-2)
xcomp(Answer-1, dat-3)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN opinion)))
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB just))
      (NP (DT a) (NN sockdologer)))
    (. .)))

poss(opinion-3, my-2)
prep_in(sockdologer-8, opinion-3)
nsubj(sockdologer-8, it-4)
cop(sockdologer-8, was-5)
advmod(sockdologer-8, just-6)
det(sockdologer-8, a-7)
root(ROOT-0, sockdologer-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RB only))
        (NP (DT an) (NN opinion))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB only))
        (NP (NNP MY) (NN opinion))))
    (CC and)
    (S
      (NP (NNS others))
      (VP (MD may)
        (VP (VB think)
          (ADJP (JJ different)))))
    (: ;)
    (S (CC but)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (NP (PRP it))
          (ADVP (RB then))))
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP stand)
          (PP (TO to)
            (NP (PRP it)))
          (ADVP (RB now)))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a) (NN sockdologer))))
    (. .)))

nsubj(opinion-5, It-1)
cop(opinion-5, 's-2)
advmod(opinion-5, only-3)
det(opinion-5, an-4)
root(ROOT-0, opinion-5)
nsubj(opinion-11, it-7)
cop(opinion-11, 's-8)
advmod(opinion-11, only-9)
nn(opinion-11, MY-10)
conj_and(opinion-5, opinion-11)
nsubj(think-15, others-13)
aux(think-15, may-14)
conj_and(opinion-5, think-15)
acomp(think-15, different-16)
nsubj(said-20, I-19)
conj_and(opinion-5, said-20)
parataxis(opinion-5, said-20)
dobj(said-20, it-21)
advmod(said-20, then-22)
nsubj(stand-25, I-24)
conj_and(opinion-5, stand-25)
parataxis(opinion-5, stand-25)
conj_and(said-20, stand-25)
prep_to(stand-25, it-27)
advmod(stand-25, now-28)
nsubj(sockdologer-33, it-30)
cop(sockdologer-33, was-31)
det(sockdologer-33, a-32)
conj_and(opinion-5, sockdologer-33)
parataxis(opinion-5, sockdologer-33)

(ROOT
  (S (CC And)
    (ADVP (RB moreover))
    (, ,)
    (ADVP (RB besides))
    (, ,)
    (NP (PRP it))
    (VP (VBD landed)
      (NP (NNP Tom) (NNP Sawyer)))
    (. .)))

cc(landed-7, And-1)
advmod(landed-7, moreover-2)
advmod(landed-7, besides-4)
nsubj(landed-7, it-6)
root(ROOT-0, landed-7)
nn(Sawyer-9, Tom-8)
dobj(landed-7, Sawyer-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could) (RB n't)
      (VP (VB say)
        (NP (DT a) (NN word))))
    (. .)))

nsubj(say-4, He-1)
aux(say-4, could-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
det(word-6, a-5)
dobj(say-4, word-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP (DT that)
          (ADJP (JJ stunned))
          (NN look))
        (PP (IN of)
          (NP
            (NP (DT a) (NN person))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's)
                  (VP (VBN been)
                    (VP (VBN shot)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN back))
                          (PP (IN with)
                            (NP
                              (NP (DT a) (NN kag))
                              (PP (IN of)
                                (NP (NNS nails))))))))))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(look-5, that-3)
amod(look-5, stunned-4)
dobj(had-2, look-5)
det(person-8, a-7)
prep_of(look-5, person-8)
nsubjpass(shot-12, person-8)
auxpass(shot-12, 's-10)
auxpass(shot-12, been-11)
rcmod(person-8, shot-12)
det(back-15, the-14)
prep_in(shot-12, back-15)
det(kag-18, a-17)
prep_with(back-15, kag-18)
prep_of(kag-18, nails-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD said)))))
      (VP (VBD was) (, ,)
        (PP (IN as)
          (PP (IN for)
            (NP (NNS people))))
        (PP (IN like)
          (NP
            (NP (PRP me))
            (CC and)
            (NP (NNP Jim))))))
    (, ,)
    (NP (PRP he))
    (VP (MD 'd)
      (ADVP (RB just) (RB as) (RB soon))
      (VP (VB have)
        (NP
          (NP (JJ intellectual) (NN intercourse))
          (PP (IN with)
            (NP (DT a) (NN catfish))))))
    (. .)))

nsubj(was-4, All-1)
nsubj(said-3, he-2)
rcmod(All-1, said-3)
ccomp(have-19, was-4)
prepc_as_for(was-4, for-7)
pobj(was-4, people-8)
prep_like(was-4, me-10)
prep_like(was-4, Jim-12)
conj_and(me-10, Jim-12)
nsubj(have-19, he-14)
aux(have-19, 'd-15)
advmod(soon-18, just-16)
advmod(soon-18, as-17)
advmod(have-19, soon-18)
root(ROOT-0, have-19)
amod(intercourse-21, intellectual-20)
dobj(have-19, intercourse-21)
det(catfish-24, a-23)
prep_with(intercourse-21, catfish-24)

(ROOT
  (S (CC But)
    (S
      (NP (NN anybody))
      (VP (MD can)
        (VP (VB say)
          (NP (DT that)))))
    (: --)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP notice)
        (SBAR
          (S
            (NP (PRP they))
            (ADVP (RB always))
            (VP (VBP do))))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN somebody))
            (VP (VBZ has)
              (VP (VBD fetched)
                (S
                  (NP (PRP them))
                  (NP (DT a) (NN lifter)))))))))
    (. .)))

nsubj(say-4, anybody-2)
aux(say-4, can-3)
root(ROOT-0, say-4)
dobj(say-4, that-5)
nsubj(notice-9, I-8)
conj_and(say-4, notice-9)
nsubj(do-12, they-10)
advmod(do-12, always-11)
ccomp(notice-9, do-12)
advmod(fetched-17, when-14)
nsubj(fetched-17, somebody-15)
aux(fetched-17, has-16)
advcl(notice-9, fetched-17)
nsubj(lifter-20, them-18)
det(lifter-20, a-19)
xcomp(fetched-17, lifter-20)

(ROOT
  (S
    (NP (NNP Tom) (NNP Sawyer))
    (VP (VBD was)
      (ADJP (JJ tired)
        (PP (IN of)
          (NP
            (NP (DT that) (NN end))
            (PP (IN of)
              (NP (DT the) (NN subject)))))))
    (. .)))

nn(Sawyer-2, Tom-1)
nsubj(tired-4, Sawyer-2)
cop(tired-4, was-3)
root(ROOT-0, tired-4)
det(end-7, that-6)
prep_of(tired-4, end-7)
det(subject-10, the-9)
prep_of(end-7, subject-10)

(ROOT
  (S (IN So)
    (S
      (S
        (NP (PRP we))
        (VP (VBD got)
          (ADVP (RB back))
          (PP (TO to)
            (S
              (VP (VBG talking)
                (PP (IN about)
                  (NP
                    (NP (DT the) (NN size))
                    (PP (IN of)
                      (NP (DT the) (NNP Desert)))))
                (ADVP (RB again)))))))
      (, ,)
      (CC and)
      (S
        (X (DT the) (JJR more))
        (NP (PRP we))
        (VP
          (VP (VBD compared)
            (NP (PRP it))
            (PP (IN with)
              (NP
                (NP (DT this))
                (CC and)
                (NP (DT that)))))
          (CC and)
          (VP (VBP t)
            (NP (`` `)
              (NP (JJ other) (NN thing))
              (, ,)
              (NP (DT the) (JJR more) (NN nobler)))))))
    (CC and)
    (S
      (ADJP (JJR bigger)
        (CC and)
        (JJR grander)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD got)
              (S
                (VP (TO to)
                  (VP (VB look)
                    (ADVP (RB right) (RB along))))))))))
    (. .)))

dep(got-3, So-1)
nsubj(got-3, we-2)
nsubj(bigger-35, we-2)
root(ROOT-0, got-3)
advmod(got-3, back-4)
prepc_to(got-3, talking-6)
det(size-9, the-8)
prep_about(talking-6, size-9)
det(Desert-12, the-11)
prep_of(size-9, Desert-12)
advmod(talking-6, again-13)
det(more-17, the-16)
dep(compared-19, more-17)
nsubj(compared-19, we-18)
nsubj(t-26, we-18)
conj_and(got-3, compared-19)
dobj(compared-19, it-20)
prep_with(compared-19, this-22)
prep_with(compared-19, that-24)
conj_and(this-22, that-24)
conj_and(got-3, t-26)
conj_and(compared-19, t-26)
amod(thing-29, other-28)
dobj(t-26, thing-29)
det(nobler-33, the-31)
amod(nobler-33, more-32)
appos(thing-29, nobler-33)
conj_and(got-3, bigger-35)
conj_and(got-3, grander-37)
conj_and(bigger-35, grander-37)
nsubj(got-39, it-38)
nsubj(look-41, it-38)
ccomp(bigger-35, got-39)
aux(look-41, to-40)
xcomp(got-39, look-41)
advmod(along-43, right-42)
advmod(look-41, along-43)

(ROOT
  (S (CC And)
    (ADVP (RB so))
    (, ,)
    (S
      (VP (VBG hunting)
        (PP (IN among)
          (NP (DT the) (NNS figgers)))))
    (, ,)
    (NP (NNP Tom))
    (VP (VBD found) (, ,)
      (ADVP (RP by)
        (CC and)
        (RP by))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADVP (RB just))
            (NP
              (NP (DT the) (JJ same) (NN size))
              (PP (IN as)
                (NP
                  (NP (DT the) (NN Empire))
                  (PP (IN of)
                    (NP (NNP China))))))))))
    (. .)))

cc(found-10, And-1)
advmod(found-10, so-2)
vmod(found-10, hunting-4)
det(figgers-7, the-6)
prep_among(hunting-4, figgers-7)
nsubj(found-10, Tom-9)
root(ROOT-0, found-10)
advmod(found-10, by-12)
advmod(found-10, by-14)
conj_and(by-12, by-14)
mark(size-22, that-16)
nsubj(size-22, it-17)
cop(size-22, was-18)
advmod(size-22, just-19)
det(size-22, the-20)
amod(size-22, same-21)
ccomp(found-10, size-22)
det(Empire-25, the-24)
prep_as(size-22, Empire-25)
prep_of(Empire-25, China-27)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD showed)
      (NP (PRP us))
      (NP
        (NP
          (NP (DT the) (NN spread))
          (SBAR
            (S
              (NP
                (NP (DT the) (NN Empire))
                (PP (IN of)
                  (NP (NNP China))))
              (VP (VBD made)
                (PP (IN on)
                  (NP (DT the) (NN map)))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN room))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD took)
                (PRT (RP up))
                (PP (IN in)
                  (NP (DT the) (NN world)))))))))
    (. .)))

advmod(showed-3, Then-1)
nsubj(showed-3, he-2)
root(ROOT-0, showed-3)
iobj(showed-3, us-4)
det(spread-6, the-5)
dobj(showed-3, spread-6)
det(Empire-8, the-7)
nsubj(made-11, Empire-8)
prep_of(Empire-8, China-10)
rcmod(spread-6, made-11)
det(map-14, the-13)
prep_on(made-11, map-14)
det(room-18, the-17)
conj_and(spread-6, room-18)
nsubj(took-20, she-19)
rcmod(room-18, took-20)
prt(took-20, up-21)
det(world-24, the-23)
prep_in(took-20, world-24)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ wonderful)
            (S
              (VP (TO to)
                (VP (VB think)
                  (PP (IN of))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBZ says) (: :) (`` ``)
          (S
            (INTJ (WRB Why))
            (, ,)
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN heard)
                (NP (NN talk))
                (PP (IN about)
                  (NP
                    (NP (DT this) (NNP Desert) (NN plenty))
                    (PP (IN of)
                      (NP (NNS times)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD knowed)
        (PP (IN before)
          (SBAR
            (WHADJP (WRB how) (JJ important))
            (S
              (NP (PRP she))
              (VP (VBD was)))))))
    (. .) ('' '')))

discourse(wonderful-5, Well-1)
nsubj(wonderful-5, it-3)
nsubj(think-7, it-3)
cop(wonderful-5, was-4)
root(ROOT-0, wonderful-5)
aux(think-7, to-6)
xcomp(wonderful-5, think-7)
prep(think-7, of-8)
nsubj(says-12, I-11)
conj_and(wonderful-5, says-12)
discourse(heard-19, Why-15)
nsubj(heard-19, I-17)
aux(heard-19, 've-18)
ccomp(says-12, heard-19)
dobj(heard-19, talk-20)
det(plenty-24, this-22)
nn(plenty-24, Desert-23)
prep_about(heard-19, plenty-24)
prep_of(plenty-24, times-26)
nsubj(knowed-31, I-29)
neg(knowed-31, never-30)
conj_but(wonderful-5, knowed-31)
advmod(important-34, how-33)
dep(was-36, important-34)
nsubj(was-36, she-35)
prepc_before(knowed-31, was-36)

(ROOT
  (S (RB Then)
    (NP (NNP Tom))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (VP (VB Important))))
    (. !)))

advmod(says-3, Then-1)
nsubj(says-3, Tom-2)
root(ROOT-0, says-3)
ccomp(says-3, Important-6)

(ROOT
  (S
    (NP (NNP Sahara))
    (ADJP (JJ important))
    (. !)))

dep(important-2, Sahara-1)
root(ROOT-0, important-2)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP
        (NP (DT the) (NN way))
        (PP (IN with)
          (NP (DT some) (NNS people)))))
    (. .)))

nsubj(way-5, That-1)
cop(way-5, 's-2)
advmod(way-5, just-3)
det(way-5, the-4)
root(ROOT-0, way-5)
det(people-8, some-7)
prep_with(way-5, people-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN thing))
        (VP (VBZ 's)
          (ADJP (JJ big)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ important)))
    (. .)))

mark(big-5, If-1)
det(thing-3, a-2)
nsubj(big-5, thing-3)
cop(big-5, 's-4)
advcl(important-9, big-5)
nsubj(important-9, it-7)
cop(important-9, 's-8)
root(ROOT-0, important-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (PDT all) (DT the) (NN sense))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP 've)
              (VP (VBN got)))))))
    (. .)))

nsubj(sense-5, That-1)
cop(sense-5, 's-2)
predet(sense-5, all-3)
det(sense-5, the-4)
root(ROOT-0, sense-5)
nsubj(got-8, they-6)
aux(got-8, 've-7)
rcmod(sense-5, got-8)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD can)
            (VP (VB see))))))
    (VP (VBZ is)
      (ADJP (JJ SIZE)))
    (. .)))

nsubj(SIZE-6, All-1)
nsubj(see-4, they-2)
aux(see-4, can-3)
rcmod(All-1, see-4)
cop(SIZE-6, is-5)
root(ROOT-0, SIZE-6)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (VP (VB look)
      (PP (IN at)
        (NP (NNP England))))
    (. .)))

discourse(look-3, Why-1)
root(ROOT-0, look-3)
prep_at(look-3, England-5)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ important))
            (NN country))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (: ;)
    (CC and)
    (S
      (SBAR (RB yet)
        (S
          (S
            (NP (PRP you))
            (VP (MD could)
              (VP (VB put)
                (NP (PRP it))
                (PP (IN in)
                  (NP
                    (NP (NNP China) (POS 's))
                    (NN vest-pocket))))))
          (: ;)
          (CC and)
          (RB not)
          (S
            (NP (RB only) (WDT that))
            (, ,)
            (CC but)
            (NP (PRP you))
            (VP (MD 'd)
              (VP (VB have)
                (S
                  (NP
                    (NP (DT the) (NNS dickens) (POS 's))
                    (JJ own) (NN time))
                  (VP (TO to)
                    (VP (VB find)
                      (NP (PRP it))
                      (ADVP (RB again))
                      (NP (DT the) (JJ next) (NN time))))))))))
      (NP (PRP you))
      (VP (VBD wanted)
        (NP (PRP it))))
    (. .)))

nsubj(country-6, It-1)
cop(country-6, 's-2)
det(country-6, the-3)
advmod(important-5, most-4)
amod(country-6, important-5)
root(ROOT-0, country-6)
det(world-9, the-8)
prep_in(country-6, world-9)
advmod(put-15, yet-12)
nsubj(put-15, you-13)
aux(put-15, could-14)
advcl(wanted-44, put-15)
dobj(put-15, it-16)
poss(vest-pocket-20, China-18)
prep_in(put-15, vest-pocket-20)
neg(have-30, not-23)
advmod(that-25, only-24)
nsubj(have-30, that-25)
conj_and(put-15, you-28)
conj_but(have-30, you-28)
nsubj(have-30, you-28)
aux(have-30, 'd-29)
conj_and(put-15, have-30)
advcl(wanted-44, have-30)
det(dickens-32, the-31)
poss(time-35, dickens-32)
amod(time-35, own-34)
dobj(have-30, time-35)
nsubj(find-37, time-35)
aux(find-37, to-36)
ccomp(have-30, find-37)
xcomp(have-30, find-37)
dobj(find-37, it-38)
advmod(find-37, again-39)
det(time-42, the-40)
amod(time-42, next-41)
dobj(find-37, time-42)
nsubj(wanted-44, you-43)
conj_and(country-6, wanted-44)
dobj(wanted-44, it-45)

(ROOT
  (S (CC And)
    (VP (VB look)
      (PP (IN at)
        (NP (NNP Russia))))
    (. .)))

cc(look-2, And-1)
root(ROOT-0, look-2)
prep_at(look-2, Russia-4)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBZ spreads)
        (ADVP (DT all) (RB around)
          (CC and)
          (RB everywhere)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB yet))
        (VBP ai) (RB n't)
        (ADJP
          (ADVP (RB no) (RBR more))
          (JJ important))
        (PP (IN in)
          (NP
            (NP (DT this) (NN world))
            (SBAR (IN than)
              (S
                (NP (NNP Rhode) (NNP Island))
                (VP
                  (VP (VBZ is))
                  (, ,)
                  (CC and)
                  (VP (VBZ has) (RB n't)
                    (VP (VBN got)
                      (NP
                        (QP (NN half) (IN as) (JJ much)))
                      (PP (IN in)
                        (NP
                          (NP (PRP it))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ 's)
                                (ADJP (JJ worth))
                                (S
                                  (VP (VBG saving)))))))))))))))))
    (. .) ('' '')))

nsubj(spreads-2, It-1)
nsubj(important-14, It-1)
root(ROOT-0, spreads-2)
dep(around-4, all-3)
advmod(spreads-2, around-4)
advmod(spreads-2, everywhere-6)
conj_and(around-4, everywhere-6)
advmod(important-14, yet-9)
cop(important-14, ai-10)
neg(important-14, n't-11)
neg(more-13, no-12)
advmod(important-14, more-13)
conj_and(spreads-2, important-14)
det(world-17, this-16)
prep_in(important-14, world-17)
mark(is-21, than-18)
nn(Island-20, Rhode-19)
nsubj(is-21, Island-20)
nsubj(got-26, Island-20)
dep(world-17, is-21)
aux(got-26, has-24)
neg(got-26, n't-25)
dep(world-17, got-26)
conj_and(is-21, got-26)
dobj(got-26, half-27)
quantmod(half-27, as-28)
quantmod(half-27, much-29)
prep_in(got-26, it-31)
nsubj(worth-34, it-31)
cop(worth-34, 's-33)
rcmod(it-31, worth-34)
xcomp(worth-34, saving-35)

(ROOT
  (S
    (ADVP (RB Away) (RB off) (RB now))
    (NP (PRP we))
    (VP (VBP see)
      (NP (DT a) (JJ little) (NN hill))
      (, ,)
      (S
        (VP (VBG a-standing)
          (PRT (RP up))
          (PP (RB just) (IN on)
            (NP
              (NP (DT the) (NN edge))
              (PP (IN of)
                (NP (DT the) (NN world))))))))
    (. .)))

advmod(now-3, Away-1)
advmod(now-3, off-2)
advmod(see-5, now-3)
nsubj(see-5, we-4)
root(ROOT-0, see-5)
det(hill-8, a-6)
amod(hill-8, little-7)
dobj(see-5, hill-8)
vmod(see-5, a-standing-10)
prt(a-standing-10, up-11)
advmod(a-standing-10, just-12)
det(edge-15, the-14)
prep_on(a-standing-10, edge-15)
det(world-18, the-17)
prep_of(edge-15, world-18)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD broke)
          (PRT (RP off))
          (NP (PRP$ his) (NN talk)))
        (, ,)
        (CC and)
        (VP (VBD reached)
          (PP (IN for)
            (NP
              (NP (DT a) (NN glass))
              (ADJP (RB very) (RB much) (JJ excited)))))
        (, ,)
        (CC and)
        (VP (VBD took)
          (NP (DT a) (NN look)))
        (, ,)
        (CC and)
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP (DT That))
            (VP (VBZ 's)
              (NP (PRP it)))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN one))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN been)
                  (VP (VBG looking)
                    (PP (IN for))
                    (, ,)
                    (ADVP (RB sure))))))))))
    (. .)))

nsubj(broke-2, Tom-1)
nsubj(reached-8, Tom-1)
nsubj(took-17, Tom-1)
nsubj(says-22, Tom-1)
root(ROOT-0, broke-2)
prt(broke-2, off-3)
poss(talk-5, his-4)
dobj(broke-2, talk-5)
conj_and(broke-2, reached-8)
det(glass-11, a-10)
prep_for(reached-8, glass-11)
advmod(excited-14, very-12)
advmod(excited-14, much-13)
amod(glass-11, excited-14)
conj_and(broke-2, took-17)
det(look-19, a-18)
dobj(took-17, look-19)
conj_and(broke-2, says-22)
nsubj(it-27, That-25)
cop(it-27, 's-26)
ccomp(says-22, it-27)
nsubj(one-32, it-29)
cop(one-32, 's-30)
det(one-32, the-31)
parataxis(broke-2, one-32)
prep_for(looking-36, one-32)
nsubj(looking-36, I-33)
aux(looking-36, 've-34)
aux(looking-36, been-35)
rcmod(one-32, looking-36)
advmod(looking-36, sure-39)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADJP (JJ right)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (S
            (NP (DT the) (NN dervish))
            (VP
              (VP (VBD took)
                (NP (DT the) (NN man))
                (PP (IN into)))
              (CC and)
              (VP (VBD showed)
                (S
                  (NP (PRP him))
                  (NP (PDT all) (DT the) (NNS treasures)))))))))
    (. .) ('' '')))

mark(right-4, If-1)
nsubj(right-4, I-2)
cop(right-4, 'm-3)
advcl(one-9, right-4)
nsubj(one-9, it-6)
cop(one-9, 's-7)
det(one-9, the-8)
root(ROOT-0, one-9)
prep_into(took-12, one-9)
det(dervish-11, the-10)
nsubj(took-12, dervish-11)
nsubj(showed-17, dervish-11)
rcmod(one-9, took-12)
det(man-14, the-13)
dobj(took-12, man-14)
rcmod(one-9, showed-17)
conj_and(took-12, showed-17)
nsubj(treasures-21, him-18)
predet(treasures-21, all-19)
det(treasures-21, the-20)
xcomp(showed-17, treasures-21)

(ROOT
  (S (CC So)
    (S
      (NP (PRP we))
      (VP (VBN begun)
        (PP (TO to)
          (NP (NNP gaze)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB tell)
              (PP (IN about)
                (NP
                  (NP (PRP it))
                  (PP (RB out) (IN of)
                    (NP (DT the) (NNP Arabian) (NNPS Nights))))))))))
    (. .)))

nsubj(begun-3, we-2)
root(ROOT-0, begun-3)
prep_to(begun-3, gaze-5)
nsubj(begun-9, he-8)
nsubj(tell-11, he-8)
conj_and(begun-3, begun-9)
aux(tell-11, to-10)
xcomp(begun-9, tell-11)
prep_about(tell-11, it-13)
det(Nights-18, the-16)
nn(Nights-18, Arabian-17)
prep_out_of(it-13, Nights-18)

(ROOT
  (NP (NNP CHAPTER) (NNP X) (. .)))

nn(X-2, CHAPTER-1)
root(ROOT-0, X-2)

(ROOT
  (S
    (NP (DT THE) (NNP TREASURE-HILL) (NNP TOM))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD happened)
            (PP (IN like)
              (NP (DT this)))))))
    (. .)))

det(TOM-3, THE-1)
nn(TOM-3, TREASURE-HILL-2)
nsubj(said-4, TOM-3)
root(ROOT-0, said-4)
nsubj(happened-6, it-5)
ccomp(said-4, happened-6)
prep_like(happened-6, this-8)

(ROOT
  (S
    (S
      (S
        (NP (DT A) (NN dervish))
        (VP (VBD was)
          (VP (VBG stumping)
            (NP (PRP it))
            (PRT (RP along))
            (PP (IN through)
              (NP (DT the) (NNP Desert)))
            (, ,)
            (PP (IN on)
              (NP
                (NP (NN foot))
                (, ,)
                (NP
                  (NP (CD one))
                  (VP (VBG blazing)
                    (NP (JJ hot) (NN day)))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP he))
          (VP
            (VP (VBD had)
              (VP (VBN come)
                (NP (DT a) (CD thousand) (NNS miles))))
            (CC and)
            (VP (VBD was)
              (ADJP
                (ADJP (RB pretty) (JJ poor))
                (, ,)
                (CC and)
                (ADJP (JJ hungry))
                (, ,)
                (CC and)
                (ADJP
                  (ADJP (JJ ornery))
                  (CC and)
                  (ADJP (VBN tired)))))))
        (, ,)
        (CC and)
        (S
          (ADVP (IN along)
            (PP (IN about)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (ADVP (RB now)))))))
          (NP (PRP he))
          (VP
            (VP (VBP run)
              (PP (IN across)
                (NP
                  (NP (DT a) (NN camel-driver))
                  (PP (IN with)
                    (NP (DT a) (CD hundred) (NNS camels))))))
            (, ,)
            (CC and)
            (VP (VBD asked)
              (NP (PRP him))
              (PP (IN for)
                (NP
                  (NP (DT some))
                  (NP (DT a) (`` `) (NN ms.)))))))))
    (CC But)
    (S
      (NP
        (NP (DT the) (NN cameldriver))
        (NP (PRP he)))
      (VP (VBD asked)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN excused)))))))
    (. .)))

det(dervish-2, A-1)
nsubj(stumping-4, dervish-2)
aux(stumping-4, was-3)
root(ROOT-0, stumping-4)
dobj(stumping-4, it-5)
prt(stumping-4, along-6)
det(Desert-9, the-8)
prep_through(stumping-4, Desert-9)
prep_on(stumping-4, foot-12)
appos(foot-12, one-14)
vmod(one-14, blazing-15)
amod(day-17, hot-16)
tmod(blazing-15, day-17)
nsubj(come-22, he-20)
nsubj(poor-29, he-20)
aux(come-22, had-21)
conj_and(stumping-4, come-22)
det(miles-25, a-23)
num(miles-25, thousand-24)
dobj(come-22, miles-25)
cop(poor-29, was-27)
advmod(poor-29, pretty-28)
conj_and(stumping-4, poor-29)
conj_and(come-22, poor-29)
conj_and(come-22, hungry-32)
conj_and(poor-29, hungry-32)
conj_and(come-22, ornery-35)
conj_and(poor-29, ornery-35)
conj_and(poor-29, tired-37)
conj_and(ornery-35, tired-37)
advmod(run-47, along-40)
advmod(are-44, where-42)
nsubj(are-44, we-43)
prepc_about(along-40, are-44)
advmod(are-44, now-45)
nsubj(run-47, he-46)
nsubj(asked-57, he-46)
conj_and(stumping-4, run-47)
conj_and(come-22, run-47)
det(camel-driver-50, a-49)
prep_across(run-47, camel-driver-50)
det(camels-54, a-52)
num(camels-54, hundred-53)
prep_with(camel-driver-50, camels-54)
conj_and(come-22, asked-57)
conj_and(run-47, asked-57)
dobj(asked-57, him-58)
prep_for(asked-57, some-60)
det(ms.-63, a-61)
dep(some-60, ms.-63)
det(cameldriver-66, the-65)
nsubj(asked-68, cameldriver-66)
nsubjpass(excused-71, cameldriver-66)
dep(cameldriver-66, he-67)
conj_but(stumping-4, asked-68)
aux(excused-71, to-69)
auxpass(excused-71, be-70)
xcomp(asked-68, excused-71)

(ROOT
  (S
    (S
      (NP (DT The) (NN dervish))
      (VP (VBD said)))
    (: :) (`` ``)
    (SQ (VBP Do) (RB n't)
      (NP (PRP you))
      (VP (VB own)
        (NP (DT these) (NN camels) (. ?) ('' ''))))))

det(dervish-2, The-1)
nsubj(said-3, dervish-2)
root(ROOT-0, said-3)
aux(own-9, Do-6)
neg(own-9, n't-7)
nsubj(own-9, you-8)
dep(said-3, own-9)
det(camels-11, these-10)
dobj(own-9, camels-11)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP they))
    (VP (VBP 're)
      (NP (NN mine)))
    (. .) ('' '')))

discourse(mine-6, Yes-2)
nsubj(mine-6, they-4)
cop(mine-6, 're-5)
root(ROOT-0, mine-6)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (NP (PRP you))
      (PP (IN in)
        (NP (NN debt))))
    (. ?) ('' '')))

cop(you-3, Are-2)
root(ROOT-0, you-3)
prep_in(you-3, debt-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ (VBP --)
      (NP (PRP me)))
    (. ?)))

nsubj(---3, Who-2)
dobj(---3, me-4)

(ROOT
  (ADVP (RB No) (. .) ('' '')))

root(ROOT-0, No-1)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (NP
      (NP (DT a) (NN man))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP
            (VP (VBZ owns)
              (NP (DT a) (CD hundred) (NNS camels)))
            (CC and)
            (VP (VBZ ai) (RB n't)
              (PP (IN in)
                (NP (NN debt))))))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ rich)))
      (: --)
      (CC and)
      (VP (RB not)
        (ADJP
          (ADJP (RB only) (JJ rich))
          (, ,)
          (CC but)
          (ADJP (RB very) (JJ rich)))))
    (. .)))

discourse(rich-17, Well-2)
det(man-5, a-4)
nsubj(owns-7, man-5)
nsubj(ai-12, man-5)
nsubj(rich-17, man-5)
nsubj(rich-22, man-5)
rcmod(man-5, owns-7)
det(camels-10, a-8)
num(camels-10, hundred-9)
dobj(owns-7, camels-10)
rcmod(man-5, ai-12)
conj_and(owns-7, ai-12)
neg(ai-12, n't-13)
prep_in(ai-12, debt-15)
cop(rich-17, is-16)
root(ROOT-0, rich-17)
neg(rich-22, not-20)
advmod(rich-22, only-21)
conj_and(rich-17, rich-22)
advmod(rich-26, very-25)
conj_and(rich-17, rich-26)
conj_but(rich-22, rich-26)

(ROOT
  (FRAG
    (S
      (VP (VBD Ai) (RB n't)
        (VP
          (NP (PRP it))
          (ADVP (RB so)))))
    (. ?) ('' '')))

aux(it-3, Ai-1)
neg(it-3, n't-2)
root(ROOT-0, it-3)
advmod(it-3, so-4)

(ROOT
  (S
    (NP (DT The) (NN camel-driver))
    (VP (VBD owned)
      (PRT (RP up))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADVP (RB so))))))
    (. .)))

det(camel-driver-2, The-1)
nsubj(owned-3, camel-driver-2)
root(ROOT-0, owned-3)
prt(owned-3, up-4)
mark(was-7, that-5)
nsubj(was-7, it-6)
ccomp(owned-3, was-7)
advmod(was-7, so-8)

(ROOT
  (S (RB Then)
    (NP (DT the) (NN dervish))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (S
          (NP (NNP God))
          (VP (VBZ has)
            (VP (VBN made)
              (S
                (NP (PRP you))
                (ADJP (JJ rich))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP He))
          (VP (VBZ has)
            (VP (VBN made)
              (S
                (NP (PRP me))
                (ADJP (JJ poor))))))))
    (. .)))

advmod(says-4, Then-1)
det(dervish-3, the-2)
nsubj(says-4, dervish-3)
root(ROOT-0, says-4)
nsubj(made-9, God-7)
aux(made-9, has-8)
dep(says-4, made-9)
nsubj(rich-11, you-10)
xcomp(made-9, rich-11)
nsubj(made-16, He-14)
aux(made-16, has-15)
dep(says-4, made-16)
conj_and(made-9, made-16)
nsubj(poor-18, me-17)
xcomp(made-16, poor-18)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (NP (PRP$ His) (NNS reasons))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (ADJP (JJ wise))
        (, ,)
        (S
          (INTJ (UH blessed))
          (VP (VB be)
            (NP (PRP$ His) (NN name))))))
    (. .)))

nsubj(has-2, He-1)
root(ROOT-0, has-2)
poss(reasons-4, His-3)
dobj(has-2, reasons-4)
nsubj(wise-9, they-7)
cop(wise-9, are-8)
conj_and(has-2, wise-9)
discourse(name-14, blessed-11)
cop(name-14, be-12)
poss(name-14, His-13)
ccomp(wise-9, name-14)

(ROOT
  (S
    (S (CC But)
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN willed)
          (SBAR (IN that)
            (S
              (NP (PRP$ His) (JJ rich))
              (VP (MD shall)
                (VP (VB help)
                  (NP (PRP$ His) (JJ poor)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN turned)
            (PRT (RP away))
            (PP (IN from)
              (NP
                (NP (PRP me))
                (, ,)
                (NP (PRP$ your) (NN brother))
                (, ,)))
            (PP (IN in)
              (NP (PRP$ my) (NN need))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP He))
          (VP (MD will)
            (VP (VB remember)
              (NP (DT this)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB lose)
              (PP (IN by)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubj(willed-4, He-2)
aux(willed-4, has-3)
root(ROOT-0, willed-4)
mark(help-9, that-5)
poss(rich-7, His-6)
nsubj(help-9, rich-7)
aux(help-9, shall-8)
ccomp(willed-4, help-9)
poss(poor-11, His-10)
dobj(help-9, poor-11)
nsubj(turned-16, you-14)
aux(turned-16, have-15)
conj_and(willed-4, turned-16)
prep_away_from(turned-16, me-19)
poss(brother-22, your-21)
appos(me-19, brother-22)
poss(need-26, my-25)
prep_in(turned-16, need-26)
nsubj(remember-31, He-29)
aux(remember-31, will-30)
conj_and(willed-4, remember-31)
conj_and(turned-16, remember-31)
dobj(remember-31, this-32)
nsubj(lose-37, you-35)
aux(lose-37, will-36)
conj_and(turned-16, lose-37)
conj_and(remember-31, lose-37)
prep_by(lose-37, it-39)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD made)
        (SBAR
          (S
            (NP (DT the) (NN camel-driver))
            (VP (VBP feel)
              (ADJP (JJ shaky)))))))
    (, ,)
    (CC but)
    (S
      (S
        (ADVP (PDT all) (DT the) (JJ same))
        (NP (PRP he))
        (VP
          (VP (VBD was)
            (VP (VBN born)
              (ADVP (RB hoggish))
              (PP (IN after)
                (NP (NN money)))))
          (CC and)
          (VP (VBD did) (RB n't)
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB let)
                    (VP (VB go)
                      (NP (DT a) (NN cent))))))))))
      (: ;) (RB so)
      (S
        (NP (PRP he))
        (VP
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB whine)
                  (CC and)
                  (VB explain)))))
          (, ,)
          (CC and)
          (VP (VBD said)
            (SBAR
              (S
                (S
                  (NP (NNS times))
                  (VP (VBD was)
                    (ADJP (JJ hard))))
                (, ,)
                (CC and)
                (S
                  (SBAR (IN although)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP
                          (VP (VBD took)
                            (NP (DT a) (JJ full) (NN freight))
                            (PRT (RP down))
                            (PP (TO to)
                              (NP (NNP Balsora))))
                          (CC and)
                          (VP (VBD got)
                            (NP (DT a) (JJ fat) (NN rate))
                            (PP (IN for)
                              (NP (PRP it))))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (MD could) (RB n't)
                    (VP (VB git)
                      (NP (DT no) (NN return) (NN freight)))))
                (, ,)
                (CC and)
                (RB so)
                (S
                  (NP (PRP he))
                  (VP (VBP war) (RB n't)
                    (VP (VBG making)
                      (NP
                        (NP (DT no) (JJ great) (NNS things))
                        (PP (RB out) (IN of)
                          (NP (PRP$ his) (NN trip)))))))))))))
    (. .)))

nsubj(made-2, That-1)
root(ROOT-0, made-2)
det(camel-driver-4, the-3)
nsubj(feel-5, camel-driver-4)
ccomp(made-2, feel-5)
acomp(feel-5, shaky-6)
dep(same-11, all-9)
det(same-11, the-10)
advmod(born-14, same-11)
nsubjpass(born-14, he-12)
nsubj(like-21, he-12)
nsubj(let-23, he-12)
auxpass(born-14, was-13)
conj_but(made-2, born-14)
advmod(born-14, hoggish-15)
prep_after(born-14, money-17)
aux(like-21, did-19)
neg(like-21, n't-20)
conj_but(made-2, like-21)
conj_and(born-14, like-21)
aux(let-23, to-22)
xcomp(like-21, let-23)
xcomp(let-23, go-24)
det(cent-26, a-25)
dobj(go-24, cent-26)
advmod(born-14, so-28)
nsubj(begun-30, he-29)
nsubj(whine-32, he-29)
nsubj(explain-34, he-29)
nsubj(said-37, he-29)
parataxis(born-14, begun-30)
aux(whine-32, to-31)
xcomp(begun-30, whine-32)
xcomp(begun-30, explain-34)
conj_and(whine-32, explain-34)
parataxis(born-14, said-37)
conj_and(begun-30, said-37)
nsubj(hard-40, times-38)
cop(hard-40, was-39)
dep(said-37, hard-40)
mark(took-46, although-43)
nsubj(took-46, he-44)
nsubj(got-54, he-44)
aux(took-46, had-45)
advcl(git-64, took-46)
det(freight-49, a-47)
amod(freight-49, full-48)
dobj(took-46, freight-49)
prt(took-46, down-50)
prep_to(took-46, Balsora-52)
conj_and(took-46, got-54)
advcl(git-64, got-54)
det(rate-57, a-55)
amod(rate-57, fat-56)
dobj(got-54, rate-57)
prep_for(got-54, it-59)
nsubj(git-64, he-61)
aux(git-64, could-62)
neg(git-64, n't-63)
dep(said-37, git-64)
conj_and(hard-40, git-64)
neg(freight-67, no-65)
nn(freight-67, return-66)
dobj(git-64, freight-67)
nsubj(war-72, he-71)
dep(said-37, war-72)
conj_and(hard-40, war-72)
neg(war-72, n't-73)
dep(war-72, making-74)
neg(things-77, no-75)
amod(things-77, great-76)
dobj(making-74, things-77)
poss(trip-81, his-80)
prep_out_of(things-77, trip-81)

(ROOT
  (S (IN So)
    (NP (DT the) (NN dervish))
    (VP
      (VP (VBZ starts)
        (ADVP (RB along) (RB again)))
      (, ,)
      (CC and)
      (VP (VBZ says))
      (: :) (`` ``)
      (ADVP (DT All) (RB right))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (DT the) (NN risk)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP reckon)
        (SBAR
          (S
            (NP (PRP you))
            (VP
              (VP (VBP 've)
                (VP (VBN made)
                  (NP (DT a) (NN mistake))
                  (NP (DT this) (NN time))))
              (, ,)
              (CC and)
              (VP (VBD missed)
                (NP (DT a) (NN chance))))))))
    (. .) ('' '')))

dep(starts-4, So-1)
det(dervish-3, the-2)
nsubj(starts-4, dervish-3)
nsubj(says-9, dervish-3)
root(ROOT-0, starts-4)
advmod(again-6, along-5)
advmod(starts-4, again-6)
conj_and(starts-4, says-9)
dep(right-13, All-12)
advmod(starts-4, right-13)
conj_and(starts-4, right-13)
mark(want-17, if-15)
nsubj(want-17, you-16)
nsubj(take-19, you-16)
advcl(starts-4, want-17)
conj_and(starts-4, want-17)
aux(take-19, to-18)
xcomp(want-17, take-19)
det(risk-21, the-20)
dobj(take-19, risk-21)
nsubj(reckon-25, I-24)
conj_but(starts-4, reckon-25)
nsubj(made-28, you-26)
nsubj(missed-35, you-26)
aux(made-28, 've-27)
ccomp(reckon-25, made-28)
det(mistake-30, a-29)
iobj(made-28, mistake-30)
det(time-32, this-31)
dobj(made-28, time-32)
ccomp(reckon-25, missed-35)
conj_and(made-28, missed-35)
det(chance-37, a-36)
dobj(missed-35, chance-37)

(ROOT
  (S
    (S
      (S
        (PP (IN Of)
          (NP (NN course)))
        (NP (DT the) (NN camel-driver))
        (VP (VBD wanted)
          (S
            (VP (TO to)
              (VP (VB know)
                (SBAR
                  (SBAR
                    (WHNP (WP what) (NN kind)
                      (PP (IN of)
                        (NP (DT a) (NN chance))))
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN missed)))))
                  (, ,)
                  (SBAR (IN because)
                    (S
                      (ADVP (RB maybe))
                      (NP (EX there))
                      (VP (VBD was)
                        (NP
                          (NP (NN money))
                          (PP (IN in)
                            (NP (PRP it)))))))
                  (: ;)
                  (SBAR (IN so)
                    (S
                      (NP (PRP he))
                      (VP (VBP run)
                        (PP (IN after)
                          (NP (DT the) (NN dervish))))))))))))
      (, ,)
      (CC and)
      (S
        (S
          (VP (VBN begged)
            (S
              (NP (PRP him))
              (ADJP (RB so) (JJ hard)))))
        (CC and)
        (S
          (ADJP (NN earnest)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (NN pity))
                  (PP (IN on)
                    (NP (PRP him)))
                  (SBAR (IN that)
                    (S
                      (PP (IN at)
                        (NP (JJ last)))
                      (NP (DT the) (NN dervish))
                      (VP
                        (VP (VBD gave)
                          (PRT (RP in)))
                        (, ,)
                        (CC and)
                        (VP (VBZ says))))))))))))
    (: :) (`` ``)
    (SQ (VBP Do)
      (NP (PRP you))
      (VP (VB see)
        (NP (DT that) (NN hill) (NN yonder)))
      (. ?))))

prep_of(wanted-5, course-2)
det(camel-driver-4, the-3)
nsubj(wanted-5, camel-driver-4)
nsubj(know-7, camel-driver-4)
nsubj(begged-33, camel-driver-4)
root(ROOT-0, wanted-5)
aux(know-7, to-6)
xcomp(wanted-5, know-7)
det(kind-9, what-8)
dobj(missed-15, kind-9)
det(chance-12, a-11)
prep_of(kind-9, chance-12)
nsubj(missed-15, he-13)
aux(missed-15, had-14)
advcl(know-7, missed-15)
mark(was-20, because-17)
advmod(was-20, maybe-18)
expl(was-20, there-19)
dep(missed-15, was-20)
nsubj(was-20, money-21)
prep_in(money-21, it-23)
mark(run-27, so-25)
nsubj(run-27, he-26)
dep(missed-15, run-27)
det(dervish-30, the-29)
prep_after(run-27, dervish-30)
conj_and(wanted-5, begged-33)
nsubj(hard-36, him-34)
advmod(hard-36, so-35)
xcomp(begged-33, hard-36)
conj_and(wanted-5, earnest-38)
conj_and(begged-33, earnest-38)
aux(take-40, to-39)
xcomp(earnest-38, take-40)
dobj(take-40, pity-41)
prep_on(take-40, him-43)
mark(gave-49, that-44)
prep_at(gave-49, last-46)
det(dervish-48, the-47)
nsubj(gave-49, dervish-48)
nsubj(says-53, dervish-48)
ccomp(take-40, gave-49)
prt(gave-49, in-50)
ccomp(take-40, says-53)
conj_and(gave-49, says-53)
aux(see-58, Do-56)
nsubj(see-58, you-57)
dep(wanted-5, see-58)
det(yonder-61, that-59)
nn(yonder-61, hill-60)
dobj(see-58, yonder-61)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (PP (IN in)
        (S
          (S
            (NP (DT that) (NN hill))
            (VP (VBZ is)
              (NP
                (NP (PDT all) (DT the) (NNS treasures))
                (PP (IN of)
                  (NP (DT the) (NN earth))))))
          (, ,)
          (CC and)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBG looking)
                (PRT (RP around))
                (PP (IN for)
                  (NP
                    (NP (DT a) (NN man))
                    (PP (IN with)
                      (NP
                        (NP (DT a) (JJ particular) (JJ good) (NN kind) (NN heart))
                        (CC and)
                        (NP (DT a)
                          (ADJP (JJ noble) (, ,) (JJ generous))
                          (NN disposition))))))
                (, ,)
                (SBAR (IN because) (IN if)
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB find)
                        (NP (RB just) (DT that) (NN man)))))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN got)
          (NP
            (NP (DT a) (NN kind))
            (PP (IN of)
              (NP
                (NP (DT a) (NN salve))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB put)
                        (PP (IN on)
                          (NP (PRP$ his) (NNS eyes)))))))))))))
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP
          (VP (VB see)
            (NP (DT the) (NNS treasures)))
          (CC and)
          (VP (VB get)
            (NP (PRP them))
            (PRT (RP out))))))
    (. .) ('' '')))

discourse(got-46, Well-1)
det(hill-5, that-4)
nsubj(treasures-9, hill-5)
cop(treasures-9, is-6)
predet(treasures-9, all-7)
det(treasures-9, the-8)
prepc_in(got-46, treasures-9)
det(earth-12, the-11)
prep_of(treasures-9, earth-12)
nsubj(looking-17, I-15)
aux(looking-17, was-16)
conj_and(treasures-9, looking-17)
prepc_in(got-46, looking-17)
prt(looking-17, around-18)
det(man-21, a-20)
prep_for(looking-17, man-21)
det(heart-27, a-23)
amod(heart-27, particular-24)
amod(heart-27, good-25)
nn(heart-27, kind-26)
prep_with(man-21, heart-27)
det(disposition-33, a-29)
amod(generous-32, noble-30)
amod(disposition-33, generous-32)
prep_with(man-21, disposition-33)
conj_and(heart-27, disposition-33)
mark(find-39, because-35)
mark(find-39, if-36)
nsubj(find-39, I-37)
aux(find-39, could-38)
advcl(looking-17, find-39)
advmod(man-42, just-40)
det(man-42, that-41)
dobj(find-39, man-42)
nsubj(got-46, I-44)
aux(got-46, 've-45)
root(ROOT-0, got-46)
det(kind-48, a-47)
dobj(got-46, kind-48)
det(salve-51, a-50)
prep_of(kind-48, salve-51)
nsubj(put-54, I-52)
aux(put-54, could-53)
rcmod(salve-51, put-54)
poss(eyes-57, his-56)
prep_on(put-54, eyes-57)
nsubj(see-61, he-59)
nsubj(get-65, he-59)
aux(see-61, could-60)
conj_and(got-46, see-61)
det(treasures-63, the-62)
dobj(see-61, treasures-63)
conj_and(got-46, get-65)
conj_and(see-61, get-65)
dobj(get-65, them-66)
prt(get-65, out-67)

(ROOT
  (S
    (S (CC So)
      (ADVP (RB then))
      (NP (DT the) (NN camel-driver))
      (VP (VBD was)
        (PP (IN in)
          (NP (DT a) (NN sweat)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD cried))
        (, ,)
        (CC and)
        (VP (VBZ begged))
        (, ,)
        (CC and)
        (VP (VBD took)
          (PRT (RP on)))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PRT (RP down))
          (PP (IN on)
            (NP (PRP$ his) (NNS knees))))
        (, ,)
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (ADVP (RB just))
                (NP
                  (NP (DT that) (NN kind))
                  (PP (IN of)
                    (NP (DT a) (NN man))))))))
        (, ,)
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB fetch)
                  (NP
                    (NP (DT a) (CD thousand) (NNS people))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD would)
                          (VP (VB say)
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (VBD was) (RB n't)
                                  (ADVP (RB ever))
                                  (VP (VBN described)
                                    (ADJP (RB so) (JJ exact))
                                    (ADVP (RB before))))))))))))))))))
    (. .)))

advmod(was-5, then-2)
det(camel-driver-4, the-3)
nsubj(was-5, camel-driver-4)
root(ROOT-0, was-5)
det(sweat-8, a-7)
prep_in(was-5, sweat-8)
nsubj(cried-12, he-11)
nsubj(begged-15, he-11)
nsubj(took-18, he-11)
nsubj(went-22, he-11)
nsubj(said-29, he-11)
nsubj(said-40, he-11)
conj_and(was-5, cried-12)
conj_and(was-5, begged-15)
conj_and(cried-12, begged-15)
conj_and(was-5, took-18)
conj_and(cried-12, took-18)
prt(took-18, on-19)
conj_and(was-5, went-22)
conj_and(cried-12, went-22)
prt(went-22, down-23)
poss(knees-26, his-25)
prep_on(went-22, knees-26)
conj_and(was-5, said-29)
conj_and(cried-12, said-29)
nsubj(kind-34, he-30)
cop(kind-34, was-31)
advmod(kind-34, just-32)
det(kind-34, that-33)
ccomp(said-29, kind-34)
det(man-37, a-36)
prep_of(kind-34, man-37)
conj_and(was-5, said-40)
conj_and(cried-12, said-40)
nsubj(fetch-43, he-41)
aux(fetch-43, could-42)
ccomp(said-40, fetch-43)
det(people-46, a-44)
num(people-46, thousand-45)
dobj(fetch-43, people-46)
nsubj(say-49, people-46)
aux(say-49, would-48)
rcmod(people-46, say-49)
nsubjpass(described-54, he-50)
auxpass(described-54, was-51)
neg(described-54, n't-52)
advmod(described-54, ever-53)
ccomp(say-49, described-54)
advmod(exact-56, so-55)
acomp(described-54, exact-56)
advmod(described-54, before-57)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Well))
      (, ,)
      (ADVP (RB then)))
    (, ,) ('' '')
    (VP (VBZ says)
      (NP (DT the) (NN dervish))
      (, ,) (`` ``)
      (ADVP (DT all) (RB right)))
    (. .)))

discourse(then-4, Well-2)
dep(says-7, then-4)
root(ROOT-0, says-7)
det(dervish-9, the-8)
dobj(says-7, dervish-9)
dep(right-13, all-12)
advmod(says-7, right-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VB load)
          (NP
            (NP (DT the) (CD hundred) (NNS camels))
            (, ,)
            (SBAR
              (S
                (VP (MD can))))))))
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (NN half))
        (PP (IN of)
          (NP (PRP them)))))
    (. ?) ('' '')))

mark(load-3, If-1)
nsubj(load-3, we-2)
advcl(have-10, load-3)
det(camels-6, the-4)
num(camels-6, hundred-5)
dobj(load-3, camels-6)
rcmod(camels-6, can-8)
nsubj(have-10, I-9)
root(ROOT-0, have-10)
dobj(have-10, half-11)
prep_of(half-11, them-13)

(ROOT
  (S
    (S
      (NP (DT The) (NN driver))
      (VP
        (VP (VBD was)
          (ADJP (RB so) (JJ glad)
            (SBAR
              (S
                (NP (PRP he))
                (VP (MD could) (RB n't)
                  (ADVP (RB hardly))
                  (VP (VB hold)
                    (PRT (RP in))))))))
        (, ,)
        (CC and)
        (VP (VBZ says))))
    (: :) (`` ``)
    (S
      (ADVP (RB Now))
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG shouting))))
    (. .) ('' '')))

det(driver-2, The-1)
nsubj(glad-5, driver-2)
nsubj(says-14, driver-2)
cop(glad-5, was-3)
advmod(glad-5, so-4)
root(ROOT-0, glad-5)
nsubj(hold-10, he-6)
aux(hold-10, could-7)
neg(hold-10, n't-8)
advmod(hold-10, hardly-9)
ccomp(glad-5, hold-10)
prt(hold-10, in-11)
conj_and(glad-5, says-14)
advmod(shouting-20, Now-17)
nsubj(shouting-20, you-18)
aux(shouting-20, 're-19)
parataxis(glad-5, shouting-20)

(ROOT
  (S (CC So)
    (S
      (NP (PRP they))
      (VP (VBD shook)
        (NP (NNS hands))
        (PP (IN on)
          (NP (DT the) (NN bargain)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (NN dervish))
        (VP
          (VP (VBD got)
            (PRT (RP out))
            (NP (PRP$ his) (NN box)))
          (CC and)
          (VP (VBD rubbed)
            (NP (DT the) (NN salve))
            (PP (IN on)
              (NP
                (NP (DT the) (NN driver) (POS 's))
                (JJ right) (NN eye))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN hill))
        (VP (VBD opened)))
      (CC and)
      (S
        (S
          (NP (PRP he))
          (VP (VBD went)
            (PRT (RP in))))
        (, ,)
        (CC and)
        (S
          (NP (EX there))
          (, ,)
          (ADVP (RB sure) (RB enough))
          (, ,)
          (VP (VBD was)
            (NP
              (NP (NNS piles)
                (CC and)
                (NNS piles))
              (PP (IN of)
                (NP (NN gold)))))))
      (CC and)
      (S
        (NP
          (NP (NNS jewels) (JJ sparkling))
          (PP (IN like)
            (NP
              (NP (PDT all) (DT the) (NNS stars))
              (PP (IN in)
                (NP (NN heaven))))))
        (VP (VBD had)
          (VP (VBD fell)
            (PRT (RP down))))))
    (. .)))

nsubj(shook-3, they-2)
root(ROOT-0, shook-3)
dobj(shook-3, hands-4)
det(bargain-7, the-6)
prep_on(shook-3, bargain-7)
det(dervish-11, the-10)
nsubj(got-12, dervish-11)
nsubj(rubbed-17, dervish-11)
conj_and(shook-3, got-12)
prt(got-12, out-13)
poss(box-15, his-14)
dobj(got-12, box-15)
conj_and(shook-3, rubbed-17)
conj_and(got-12, rubbed-17)
det(salve-19, the-18)
dobj(rubbed-17, salve-19)
det(driver-22, the-21)
poss(eye-25, driver-22)
amod(eye-25, right-24)
prep_on(rubbed-17, eye-25)
det(hill-29, the-28)
nsubj(opened-30, hill-29)
conj_and(shook-3, opened-30)
conj_and(got-12, opened-30)
nsubj(went-33, he-32)
conj_and(shook-3, went-33)
conj_and(got-12, went-33)
prt(went-33, in-34)
expl(was-42, there-37)
advmod(enough-40, sure-39)
advmod(was-42, enough-40)
conj_and(got-12, was-42)
conj_and(went-33, was-42)
nsubj(was-42, piles-43)
nsubj(was-42, piles-45)
conj_and(piles-43, piles-45)
prep_of(piles-43, gold-47)
nsubj(fell-58, jewels-49)
amod(jewels-49, sparkling-50)
predet(stars-54, all-52)
det(stars-54, the-53)
prep_like(jewels-49, stars-54)
prep_in(stars-54, heaven-56)
aux(fell-58, had-57)
conj_and(shook-3, fell-58)
conj_and(got-12, fell-58)
prt(fell-58, down-59)

(ROOT
  (S (CC So)
    (S
      (NP
        (NP (PRP him))
        (CC and)
        (NP (DT the) (NN dervish)))
      (VP (VBN laid)
        (PP (IN into)
          (NP (PRP it)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP they))
        (VP (VBD loaded)
          (NP (DT every) (NN camel))
          (SBAR (IN till)
            (S
              (NP (PRP he))
              (VP (MD could) (RB n't)
                (VP (VB carry)
                  (ADVP (DT no) (RBR more))))))))
      (: ;) (RB then)
      (S
        (S
          (NP (PRP they))
          (VP (VBD said)
            (ADJP (JJ good-bye))))
        (, ,)
        (CC and)
        (S
          (NP
            (NP (DT each))
            (PP (IN of)
              (NP (PRP them))))
          (VP (VBD started)
            (PRT (RP off))
            (PP (IN with)
              (NP (PRP$ his) (NN fifty)))))))
    (. .)))

nsubj(laid-6, him-2)
det(dervish-5, the-4)
conj_and(him-2, dervish-5)
nsubj(laid-6, dervish-5)
root(ROOT-0, laid-6)
prep_into(laid-6, it-8)
nsubj(loaded-12, they-11)
conj_and(laid-6, loaded-12)
det(camel-14, every-13)
dobj(loaded-12, camel-14)
mark(carry-19, till-15)
nsubj(carry-19, he-16)
aux(carry-19, could-17)
neg(carry-19, n't-18)
advcl(loaded-12, carry-19)
neg(more-21, no-20)
advmod(carry-19, more-21)
advmod(loaded-12, then-23)
nsubj(said-25, they-24)
parataxis(loaded-12, said-25)
acomp(said-25, good-bye-26)
nsubj(started-32, each-29)
prep_of(each-29, them-31)
parataxis(loaded-12, started-32)
conj_and(said-25, started-32)
prt(started-32, off-33)
poss(fifty-36, his-35)
prep_with(started-32, fifty-36)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB pretty) (RB soon))
      (NP (DT the) (NN camel-driver))
      (VP
        (VP (VBP come)
          (NP (NN a-running)))
        (CC and)
        (VP
          (VP (VBP overtook)
            (NP (DT the) (NN dervish)))
          (CC and)
          (VP (VBZ says)))))
    (: :) (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP ai) (RB n't)
        (PP (IN in)
          (NP (NN society)))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP know)))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (ADVP (RB really))
        (VP (VB need)
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP 've)
                  (VP (VBN got)))))))))
    (. .)))

advmod(soon-3, pretty-2)
advmod(come-6, soon-3)
det(camel-driver-5, the-4)
nsubj(come-6, camel-driver-5)
nsubj(overtook-9, camel-driver-5)
root(ROOT-0, come-6)
dobj(come-6, a-running-7)
conj_and(come-6, overtook-9)
det(dervish-11, the-10)
dobj(overtook-9, dervish-11)
conj_and(come-6, says-13)
conj_and(overtook-9, says-13)
nsubj(ai-17, You-16)
ccomp(come-6, ai-17)
conj_and(come-6, ai-17)
neg(ai-17, n't-18)
prep_in(ai-17, society-20)
nsubj(know-23, you-22)
ccomp(come-6, know-23)
conj_and(come-6, know-23)
nsubj(need-30, you-26)
aux(need-30, do-27)
neg(need-30, n't-28)
advmod(need-30, really-29)
conj_and(come-6, need-30)
dobj(need-30, all-31)
nsubj(got-34, you-32)
aux(got-34, 've-33)
rcmod(all-31, got-34)

(ROOT
  (FRAG
    (S
      (VP (MD Wo) (RB n't)
        (NP (PRP you))
        (VP
          (VP (VB be)
            (ADJP (JJ good)))
          (, ,)
          (CC and)
          (VP (VB let)
            (SBAR
              (S
                (NP (PRP me))
                (VP (VBP have)
                  (NP
                    (NP (CD ten))
                    (PP (IN of)
                      (NP (PRP$ your) (NNS camels)))))))))))
    (. ?) ('' '')))

aux(good-5, Wo-1)
neg(good-5, n't-2)
dobj(good-5, you-3)
cop(good-5, be-4)
root(ROOT-0, good-5)
conj_and(good-5, let-8)
nsubj(have-10, me-9)
ccomp(let-8, have-10)
dobj(have-10, ten-11)
poss(camels-14, your-13)
prep_of(ten-11, camels-14)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Well))
      (PRN (, ,) ('' '')
        (S
          (NP (DT the) (NN dervish))
          (VP (VBZ says)))
        (, ,) (`` ``))
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (CC but)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP say))))
      (VP (VBZ is)
        (ADJP (JJ reasonable) (RB enough))))
    (. .) ('' '')))

advmod(know-13, Well-2)
det(dervish-6, the-5)
nsubj(says-7, dervish-6)
parataxis(know-13, says-7)
nsubj(know-13, I-10)
aux(know-13, do-11)
neg(know-13, n't-12)
root(ROOT-0, know-13)
dobj(say-17, what-15)
nsubj(say-17, you-16)
csubj(reasonable-19, say-17)
cop(reasonable-19, is-18)
conj_but(know-13, reasonable-19)
advmod(reasonable-19, enough-20)

(ROOT
  (S (CC So)
    (S
      (S
        (NP (PRP he))
        (VP (VBN done)
          (NP (PRP it))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBN separated))))
    (CC and)
    (S
      (NP (DT the) (NN dervish))
      (VP (VBD started)
        (PRT (RP off))
        (ADVP (RB again))
        (PP (IN with)
          (NP (PRP$ his) (NN forty)))))
    (. .)))

nsubj(done-3, he-2)
root(ROOT-0, done-3)
dobj(done-3, it-4)
nsubj(separated-8, they-7)
conj_and(done-3, separated-8)
det(dervish-11, the-10)
nsubj(started-12, dervish-11)
conj_and(done-3, started-12)
prt(started-12, off-13)
advmod(started-12, again-14)
poss(forty-17, his-16)
prep_with(started-12, forty-17)

(ROOT
  (S (CC But)
    (ADVP (RB pretty) (RB soon))
    (ADVP (RB here))
    (VP
      (VP (VBZ comes)
        (NP (DT the) (JJ camel-driver) (NN bawling))
        (PP (IN after)
          (NP (PRP him)))
        (ADVP (RB again)))
      (, ,)
      (CC and)
      (VP
        (NP (NNS whines)
          (CC and)
          (NNS slobbers))
        (ADVP (RB around)))
      (CC and)
      (VP (VBZ begs)
        (NP (DT another) (NN ten))
        (PRT (RP off))
        (PP (IN of)
          (NP (PRP him))))
      (, ,)
      (S
        (VP (VBG saying)
          (SBAR
            (S
              (NP
                (NP (CD thirty) (NN camel) (NNS loads))
                (PP (IN of)
                  (NP (NNS treasures))))
              (VP (VBD was)
                (ADJP (JJ enough)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB see)
                          (NP (DT a) (NN dervish))
                          (ADVP (RB through))
                          (, ,)
                          (SBAR (IN because)
                            (S
                              (NP (PRP they))
                              (VP (VBP live)
                                (ADJP (RB very) (JJ simple))
                                (, ,)
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP
                                      (VP (VBP know))
                                      (, ,)
                                      (CC and)
                                      (VP (VBP do) (RB n't)
                                        (VP (VB keep)
                                          (NP (NN house))))))
                                  (, ,)
                                  (CC but)
                                  (S
                                    (NP (NN board))
                                    (ADVP (RB around))))))))
                        (CC and)
                        (VP (VB give)
                          (NP (PRP$ their) (NN note)))))))))))))
    (. .)))

advmod(soon-3, pretty-2)
advmod(comes-5, soon-3)
advmod(comes-5, here-4)
root(ROOT-0, comes-5)
det(bawling-8, the-6)
amod(bawling-8, camel-driver-7)
dobj(comes-5, bawling-8)
prep_after(comes-5, him-10)
advmod(comes-5, again-11)
conj_and(comes-5, whines-14)
conj_and(comes-5, slobbers-16)
conj_and(whines-14, slobbers-16)
advmod(whines-14, around-17)
conj_and(comes-5, begs-19)
det(ten-21, another-20)
dobj(begs-19, ten-21)
prep_off_of(begs-19, him-24)
conj_and(comes-5, saying-26)
vmod(comes-5, saying-26)
num(loads-29, thirty-27)
nn(loads-29, camel-28)
nsubj(enough-33, loads-29)
nsubj(see-35, loads-29)
nsubj(give-59, loads-29)
prep_of(loads-29, treasures-31)
cop(enough-33, was-32)
ccomp(saying-26, enough-33)
aux(see-35, to-34)
xcomp(enough-33, see-35)
det(dervish-37, a-36)
dobj(see-35, dervish-37)
advmod(see-35, through-38)
mark(live-42, because-40)
nsubj(live-42, they-41)
advcl(see-35, live-42)
advmod(simple-44, very-43)
acomp(live-42, simple-44)
nsubj(know-47, you-46)
nsubj(keep-52, you-46)
ccomp(live-42, know-47)
aux(keep-52, do-50)
neg(keep-52, n't-51)
ccomp(live-42, keep-52)
conj_and(know-47, keep-52)
dobj(keep-52, house-53)
ccomp(live-42, board-56)
conj_but(know-47, board-56)
advmod(board-56, around-57)
xcomp(enough-33, give-59)
conj_and(see-35, give-59)
poss(note-61, their-60)
dobj(give-59, note-61)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBD war) (RB n't)
      (VP
        (NP (DT the) (NN end))
        (ADVP (RB yet))))
    (. .)))

cc(war-3, But-1)
nsubj(war-3, that-2)
root(ROOT-0, war-3)
neg(war-3, n't-4)
det(end-6, the-5)
dep(war-3, end-6)
advmod(end-6, yet-7)

(ROOT
  (S
    (NP
      (NP (DT That))
      (ADJP (JJ ornery) (JJ hound)))
    (VP
      (VP (VBD kept)
        (S
          (VP (VBG coming)
            (CC and)
            (VBG coming)
            (SBAR (IN till)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN begged)
                    (PRT (RP back))
                    (NP (PDT all) (DT the) (NNS camels)))))))))
      (CC and)
      (VP (VBD had)
        (NP (DT the) (JJ whole) (CD hundred))))
    (. .)))

nsubj(kept-4, That-1)
nsubj(had-17, That-1)
amod(hound-3, ornery-2)
amod(That-1, hound-3)
root(ROOT-0, kept-4)
xcomp(kept-4, coming-5)
xcomp(kept-4, coming-7)
conj_and(coming-5, coming-7)
mark(begged-11, till-8)
nsubj(begged-11, he-9)
aux(begged-11, had-10)
advcl(coming-5, begged-11)
prt(begged-11, back-12)
predet(camels-15, all-13)
det(camels-15, the-14)
dobj(begged-11, camels-15)
conj_and(kept-4, had-17)
det(hundred-20, the-18)
amod(hundred-20, whole-19)
dobj(had-17, hundred-20)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP
        (VP (VBD was)
          (ADJP
            (ADJP (JJ satisfied))
            (, ,)
            (CC and)
            (ADJP (RB ever) (RB so) (JJ grateful))))
        (, ,)
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD would) (RB n't)
                (ADVP (RB ever))
                (VP (VB forgit)
                  (NP (DT the) (NN dervish))
                  (ADVP
                    (ADVP (RB as) (RB long))
                    (SBAR (IN as)
                      (S
                        (NP (PRP he))
                        (VP (VBD lived))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN nobody))
      (VP (VBD had) (RB n't)
        (VP (VBN been)
          (ADJP
            (ADJP (RB so) (JJ good)
              (PP (TO to)
                (NP (PRP him))))
            (ADVP (RB before))
            (, ,)
            (CC and)
            (ADJP (JJ liberal))))))
    (. .)))

advmod(satisfied-4, Then-1)
nsubj(satisfied-4, he-2)
nsubj(grateful-9, he-2)
nsubj(said-12, he-2)
cop(satisfied-4, was-3)
root(ROOT-0, satisfied-4)
advmod(grateful-9, ever-7)
advmod(grateful-9, so-8)
conj_and(satisfied-4, grateful-9)
conj_and(satisfied-4, said-12)
nsubj(forgit-17, he-13)
aux(forgit-17, would-14)
neg(forgit-17, n't-15)
advmod(forgit-17, ever-16)
ccomp(said-12, forgit-17)
det(dervish-19, the-18)
dobj(forgit-17, dervish-19)
advmod(long-21, as-20)
advmod(forgit-17, long-21)
mark(lived-24, as-22)
nsubj(lived-24, he-23)
advcl(long-21, lived-24)
ccomp(long-21, lived-24)
nsubj(good-32, nobody-27)
nsubj(liberal-38, nobody-27)
aux(good-32, had-28)
neg(good-32, n't-29)
cop(good-32, been-30)
advmod(good-32, so-31)
conj_and(satisfied-4, good-32)
prep_to(good-32, him-34)
advmod(good-32, before-35)
conj_and(satisfied-4, liberal-38)
conj_and(good-32, liberal-38)

(ROOT
  (S (IN So)
    (NP (PRP they))
    (VP
      (VP (VBD shook)
        (NP
          (NP (NNS hands))
          (ADJP (JJ good-bye) (, ,)
            (CC and)
            (JJ separated))))
      (CC and)
      (VP (VBD started)
        (PRT (RP off))
        (ADVP (RB again))))
    (. .)))

dep(shook-3, So-1)
nsubj(shook-3, they-2)
nsubj(started-10, they-2)
root(ROOT-0, shook-3)
dobj(shook-3, hands-4)
amod(hands-4, good-bye-5)
amod(hands-4, separated-8)
conj_and(good-bye-5, separated-8)
conj_and(shook-3, started-10)
prt(started-10, off-11)
advmod(started-10, again-12)

(ROOT
  (S (CC But)
    (VBP do)
    (NP (PRP you))
    (VP (VB know) (, ,)
      (S
        (S
          (NP (PRP it))
          (VP (VBZ war) (RB n't)
            (VP (VB ten)
              (NP (NNS minutes))
              (SBAR (IN till)
                (S
                  (NP (DT the) (NN camel-driver))
                  (VP (VBD was)
                    (VP (VBN unsatisfied)
                      (ADVP (RB again))
                      (PRN (: --)
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (NP
                              (NP (DT the) (JJ lowdownest) (NN reptyle))
                              (PP (IN in)
                                (NP (CD seven) (NNS counties))))))
                        (: --)))))))))
        (CC and)
        (S
          (NP (PRP he))
          (VP (VBP come)
            (NP (NN a-running))
            (ADVP (RB again))))))
    (. .)))

cc(know-4, But-1)
dep(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
nsubj(war-7, it-6)
dep(know-4, war-7)
neg(war-7, n't-8)
dep(war-7, ten-9)
dobj(ten-9, minutes-10)
mark(unsatisfied-15, till-11)
det(camel-driver-13, the-12)
nsubjpass(unsatisfied-15, camel-driver-13)
auxpass(unsatisfied-15, was-14)
advcl(ten-9, unsatisfied-15)
advmod(unsatisfied-15, again-16)
nsubj(reptyle-22, he-18)
cop(reptyle-22, was-19)
det(reptyle-22, the-20)
amod(reptyle-22, lowdownest-21)
parataxis(unsatisfied-15, reptyle-22)
num(counties-25, seven-24)
prep_in(reptyle-22, counties-25)
nsubj(come-29, he-28)
dep(know-4, come-29)
conj_and(war-7, come-29)
dobj(come-29, a-running-30)
advmod(come-29, again-31)

(ROOT
  (S (CC And)
    (NP
      (NP
        (NP (DT this) (NN time))
        (NP (DT the) (NN thing)))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD wanted)))))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (DT the) (NN dervish)
              (S
                (VP (TO to)
                  (VP (VB rub)
                    (NP
                      (NP (DT some))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN salve))
                          (PP (IN on)
                            (NP (PRP$ his) (JJ other) (NN eye))))))))))))))
    (. .)))

cc(was-8, And-1)
det(time-3, this-2)
nsubj(was-8, time-3)
nsubj(get-10, time-3)
det(thing-5, the-4)
dep(time-3, thing-5)
nsubj(wanted-7, he-6)
rcmod(time-3, wanted-7)
root(ROOT-0, was-8)
aux(get-10, to-9)
xcomp(was-8, get-10)
det(dervish-12, the-11)
dobj(get-10, dervish-12)
aux(rub-14, to-13)
vmod(dervish-12, rub-14)
dobj(rub-14, some-15)
det(salve-18, the-17)
prep_of(some-15, salve-18)
poss(eye-22, his-20)
amod(eye-22, other-21)
prep_on(salve-18, eye-22)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN dervish)))
    (. .)))

root(ROOT-0, said-1)
det(dervish-3, the-2)
dobj(said-1, dervish-3)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (, ,) ('' '')
    (VP (VBZ says))
    (NP (DT the) (NN driver))
    (. .)))

discourse(know-5, Oh-2)
nsubj(know-5, you-4)
ccomp(says-8, know-5)
root(ROOT-0, says-8)
det(driver-10, the-9)
dep(says-8, driver-10)

(ROOT
  (S (`` ``)
    (VP (VB Know)
      (NP (WP what)))
    (. ?) ('' '')))

root(ROOT-0, Know-2)
dobj(Know-2, what-3)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB fool)
          (NP (PRP me)))))
    (, ,) ('' '')
    (VP (VBZ says))
    (NP (DT the) (NN driver))
    (. .)))

advmod(fool-7, Well-2)
nsubj(fool-7, you-4)
aux(fool-7, ca-5)
neg(fool-7, n't-6)
ccomp(says-11, fool-7)
dobj(fool-7, me-8)
root(ROOT-0, says-11)
det(driver-13, the-12)
nsubj(says-11, driver-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB keep)
                (PRT (RP back))
                (NP (NN something))
                (PP (IN from)
                  (NP (PRP me)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know)
      (S
        (NP (PRP it))
        (ADJP (RB mighty) (JJ well))))
    (. .)))

nsubj(trying-4, You-2)
nsubj(keep-6, You-2)
aux(trying-4, 're-3)
ccomp(know-13, trying-4)
aux(keep-6, to-5)
xcomp(trying-4, keep-6)
prt(keep-6, back-7)
dobj(keep-6, something-8)
prep_from(keep-6, me-10)
nsubj(know-13, you-12)
root(ROOT-0, know-13)
nsubj(well-16, it-14)
advmod(well-16, mighty-15)
xcomp(know-13, well-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know)
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP reckon)))
        (, ,))
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (NP
                  (NP (DT the) (NN salve))
                  (PP (IN on)
                    (NP (DT the) (JJ other) (NN eye)))))))
          (NP (PRP I))
          (VP (MD could)
            (VP (VB see)
              (NP
                (NP
                  (ADJP
                    (NP (DT a) (RB lot))
                    (JJR more))
                  (NNS things))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (ADJP (JJ valuable)))))))))))
    (. .)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
nsubj(reckon-5, I-4)
parataxis(know-2, reckon-5)
mark(see-19, that-7)
mark(had-10, if-8)
nsubj(had-10, I-9)
advcl(see-19, had-10)
det(salve-12, the-11)
dobj(had-10, salve-12)
det(eye-16, the-14)
amod(eye-16, other-15)
prep_on(salve-12, eye-16)
nsubj(see-19, I-17)
aux(see-19, could-18)
ccomp(know-2, see-19)
det(lot-21, a-20)
npadvmod(more-22, lot-21)
amod(things-23, more-22)
dobj(see-19, things-23)
nsubj(valuable-26, things-23)
cop(valuable-26, 's-25)
rcmod(things-23, valuable-26)

(ROOT
  (S
    (S
      (VP (VB Come)))
    (: --)
    (S
      (NP (NNP please))
      (VP (VBD put)
        (NP (PRP it))
        (PP (IN on))))
    (. .) ('' '')))

root(ROOT-0, Come-1)
nsubj(put-4, please-3)
parataxis(Come-1, put-4)
dobj(put-4, it-5)
prep(put-4, on-6)

(ROOT
  (S
    (NP (DT The) (NN dervish))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBD was) (RB n't)
          (VP (VBG keeping)
            (NP (NN anything))
            (ADVP (RB back))
            (PP (IN from)
              (NP (PRP you)))))))
    (. .)))

det(dervish-2, The-1)
nsubj(says-3, dervish-2)
root(ROOT-0, says-3)
nsubj(keeping-9, I-6)
aux(keeping-9, was-7)
neg(keeping-9, n't-8)
ccomp(says-3, keeping-9)
dobj(keeping-9, anything-10)
advmod(keeping-9, back-11)
prep_from(keeping-9, you-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB mind)
        (S
          (VP (VBG telling)
            (NP
              (NP (PRP you))
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (MD would)
                    (VP (VB happen)
                      (SBAR (IN if)
                        (S
                          (NP (PRP I))
                          (VP (VBD put)
                            (NP (PRP it))
                            (PP (IN on))))))))))))))
    (. .)))

nsubj(mind-4, I-1)
aux(mind-4, do-2)
neg(mind-4, n't-3)
root(ROOT-0, mind-4)
xcomp(mind-4, telling-5)
dobj(telling-5, you-6)
nsubj(happen-9, you-6)
aux(happen-9, would-8)
rcmod(you-6, happen-9)
mark(put-12, if-10)
nsubj(put-12, I-11)
advcl(happen-9, put-12)
dobj(put-12, it-13)
prep(put-12, on-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'd)
      (ADVP (RB never))
      (VP (VB see)
        (ADVP (RB again))))
    (. .)))

nsubj(see-4, You-1)
aux(see-4, 'd-2)
neg(see-4, never-3)
root(ROOT-0, see-4)
advmod(see-4, again-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'd)
      (VP (VB be)
        (VP (VBN stone-blind)
          (NP
            (NP (DT the) (NN rest))
            (PP (IN of)
              (NP (PRP$ your) (NNS days)))))))
    (. .) ('' '')))

nsubjpass(stone-blind-4, You-1)
aux(stone-blind-4, 'd-2)
auxpass(stone-blind-4, be-3)
root(ROOT-0, stone-blind-4)
det(rest-6, the-5)
dobj(stone-blind-4, rest-6)
poss(days-9, your-8)
prep_of(rest-6, days-9)

(ROOT
  (S (CC But)
    (VBP do)
    (NP (PRP you))
    (VP (VB know)
      (SBAR (IN that)
        (S
          (NP (NN beat))
          (VP (MD would) (RB n't)
            (VP (VB believe)
              (NP (PRP him)))))))
    (. .)))

cc(know-4, But-1)
dep(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
mark(believe-9, that-5)
nsubj(believe-9, beat-6)
aux(believe-9, would-7)
neg(believe-9, n't-8)
ccomp(know-4, believe-9)
dobj(believe-9, him-10)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBZ begged))
      (CC and)
      (VP (VBN begged) (, ,)
        (CC and)
        (VBN whined)
        (CC and)
        (VBN cried) (, ,)
        (SBAR (IN till)
          (S
            (PP (IN at)
              (NP (JJ last)))
            (NP (DT the) (NN dervish))
            (VP
              (VP (VBD opened)
                (NP (PRP$ his) (NN box)))
              (CC and)
              (VP (VBD told)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB put)
                      (NP (PRP it))
                      (PP (IN on))
                      (, ,)
                      (SBAR (IN if)
                        (S
                          (NP (PRP he))
                          (VP (VBD wanted)
                            (PP (TO to))))))))))))))
    (. .)))

discourse(begged-4, No-1)
nsubj(begged-4, he-3)
nsubj(begged-6, he-3)
root(ROOT-0, begged-4)
conj_and(begged-4, begged-6)
conj_and(begged-4, whined-9)
conj_and(begged-6, whined-9)
conj_and(begged-4, cried-11)
conj_and(begged-6, cried-11)
mark(opened-18, till-13)
prep_at(opened-18, last-15)
det(dervish-17, the-16)
nsubj(opened-18, dervish-17)
nsubj(told-22, dervish-17)
conj_and(begged-4, opened-18)
advcl(begged-6, opened-18)
conj_and(begged-6, opened-18)
poss(box-20, his-19)
dobj(opened-18, box-20)
advcl(begged-6, told-22)
conj_and(begged-6, told-22)
conj_and(opened-18, told-22)
dobj(told-22, him-23)
nsubj(put-25, him-23)
aux(put-25, to-24)
xcomp(told-22, put-25)
dobj(put-25, it-26)
prep(put-25, on-27)
mark(wanted-31, if-29)
nsubj(wanted-31, he-30)
advcl(put-25, wanted-31)
prep(wanted-31, to-32)

(ROOT
  (S (CC So)
    (S
      (NP (DT the) (NN man))
      (VP (VBN done)
        (NP (PRP it))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB sure) (RB enough))
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RB as) (JJ blind))
        (PP (IN as)
          (NP
            (NP (DT a) (NN bat))
            (PP (IN in)
              (NP (DT a) (NN minute)))))))
    (. .)))

det(man-3, the-2)
nsubj(done-4, man-3)
root(ROOT-0, done-4)
dobj(done-4, it-5)
advmod(enough-9, sure-8)
advmod(blind-13, enough-9)
nsubj(blind-13, he-10)
cop(blind-13, was-11)
advmod(blind-13, as-12)
conj_and(done-4, blind-13)
det(bat-16, a-15)
prep_as(blind-13, bat-16)
det(minute-19, a-18)
prep_in(bat-16, minute-19)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (DT the) (NN dervish))
      (VP
        (VP (VBD laughed)
          (PP (IN at)
            (NP (PRP him))))
        (CC and)
        (VP (VBN mocked)
          (PP (IN at)
            (NP (PRP him))))
        (CC and)
        (VP (VBD made)
          (NP
            (NP (NN fun))
            (PP (IN of)
              (NP (PRP him)))))
        (: ;)
        (CC and)
        (VP (VBZ says))))
    (: :) (`` ``)
    (S
      (NP
        (NP (NN Good-bye))
        (: --)
        (NP
          (NP (DT a) (NN man))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (ADJP (JJ blind)))))))
      (VP (VBP hai) (RB n't)
        (VP (VBD got)
          (NP (DT no) (NN use))
          (PP (IN for)
            (NP (NN jewelry))))))
    (. .) ('' '')))

advmod(laughed-4, Then-1)
det(dervish-3, the-2)
nsubj(laughed-4, dervish-3)
nsubj(mocked-8, dervish-3)
nsubj(made-12, dervish-3)
nsubj(says-18, dervish-3)
root(ROOT-0, laughed-4)
prep_at(laughed-4, him-6)
conj_and(laughed-4, mocked-8)
prep_at(mocked-8, him-10)
conj_and(laughed-4, made-12)
dobj(made-12, fun-13)
prep_of(fun-13, him-15)
conj_and(laughed-4, says-18)
nsubj(hai-28, Good-bye-21)
det(man-24, a-23)
dep(Good-bye-21, man-24)
nsubj(blind-27, man-24)
cop(blind-27, 's-26)
rcmod(man-24, blind-27)
parataxis(laughed-4, hai-28)
neg(hai-28, n't-29)
dep(hai-28, got-30)
neg(use-32, no-31)
dobj(got-30, use-32)
prep_for(got-30, jewelry-34)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP
      (VP (VBD cleared)
        (PRT (RP out))
        (PP (IN with)
          (NP (DT the) (CD hundred) (NNS camels))))
      (, ,)
      (CC and)
      (VP (VBD left)
        (NP (DT that) (NN man))
        (S
          (VP (TO to)
            (VP (VB wander)
              (PRT (RP around))
              (NP
                (NP
                  (ADJP (JJ poor)
                    (CC and)
                    (JJ miserable)
                    (CC and)
                    (JJ friendless))
                  (DT the) (NN rest))
                (PP (IN of)
                  (NP (PRP$ his) (NNS days))))
              (PP (IN in)
                (NP (DT the) (NNP Desert))))))))
    (. .)))

nsubj(cleared-3, he-2)
nsubj(left-11, he-2)
root(ROOT-0, cleared-3)
prt(cleared-3, out-4)
det(camels-8, the-6)
num(camels-8, hundred-7)
prep_with(cleared-3, camels-8)
conj_and(cleared-3, left-11)
det(man-13, that-12)
dobj(left-11, man-13)
aux(wander-15, to-14)
vmod(left-11, wander-15)
prt(wander-15, around-16)
dep(miserable-19, poor-17)
amod(rest-23, miserable-19)
conj_and(miserable-19, friendless-21)
amod(rest-23, friendless-21)
det(rest-23, the-22)
dobj(wander-15, rest-23)
poss(days-26, his-25)
prep_of(rest-23, days-26)
det(Desert-29, the-28)
prep_in(wander-15, Desert-29)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD 'd)
            (VP (VB bet)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP
                      (NP (DT a) (NN lesson))
                      (PP (TO to)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(said-2, Jim-1)
root(ROOT-0, said-2)
nsubj(bet-5, he-3)
aux(bet-5, 'd-4)
ccomp(said-2, bet-5)
nsubj(lesson-9, it-6)
cop(lesson-9, was-7)
det(lesson-9, a-8)
ccomp(bet-5, lesson-9)
prep_to(lesson-9, him-11)

(ROOT
  (S
    (S (`` ``)
      (ADVP (RB Yes))
      (, ,) ('' '')
      (NP (NNP Tom))
      (VP (VBZ says)))
    (, ,) (`` ``)
    (CC and)
    (S
      (PP (IN like)
        (NP (DT a) (JJ considerable) (JJ many) (NNS lessons)))
      (NP (DT a) (NN body))
      (VP (VBZ gets)))
    (. .)))

advmod(says-6, Yes-2)
nsubj(says-6, Tom-5)
root(ROOT-0, says-6)
det(lessons-14, a-11)
amod(lessons-14, considerable-12)
amod(lessons-14, many-13)
prep_like(gets-17, lessons-14)
det(body-16, a-15)
nsubj(gets-17, body-16)
conj_and(says-6, gets-17)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP ai) (RB n't)
      (NP (DT no) (NN account))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (DT the) (NN thing))
          (VP
            (VP (VBP do) (RB n't)
              (ADVP (RB ever))
              (VP (VB happen)
                (NP (DT the) (JJ same) (NN way))
                (ADVP (RB again))))
            (: --)
            (CC and)
            (VP (MD ca) (RB n't))))))
    (. .)))

nsubj(account-5, They-1)
cop(account-5, ai-2)
neg(account-5, n't-3)
neg(account-5, no-4)
root(ROOT-0, account-5)
mark(happen-13, because-7)
det(thing-9, the-8)
nsubj(happen-13, thing-9)
aux(happen-13, do-10)
neg(happen-13, n't-11)
advmod(happen-13, ever-12)
advcl(account-5, happen-13)
det(way-16, the-14)
amod(way-16, same-15)
dobj(happen-13, way-16)
advmod(happen-13, again-17)
advcl(account-5, ca-20)
conj_and(happen-13, ca-20)
neg(ca-20, n't-21)

(ROOT
  (S
    (S
      (NP (DT The) (NN time))
      (NP (NNP Hen) (NNP Scovil))
      (VP
        (VP (VBD fell)
          (PRT (RP down))
          (NP (DT the) (NN chimbly)))
        (CC and)
        (VP (VBN crippled)
          (NP (PRP$ his) (NN back))
          (PP (IN for)
            (NP (NN life))))))
    (, ,)
    (NP (NN everybody))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (NP
                (NP (DT a) (NN lesson))
                (PP (TO to)
                  (NP (PRP him)))))))))
    (. .)))

det(time-2, The-1)
nsubj(fell-5, time-2)
nsubj(crippled-10, time-2)
nn(Scovil-4, Hen-3)
nsubj(fell-5, Scovil-4)
ccomp(said-17, fell-5)
prt(fell-5, down-6)
det(chimbly-8, the-7)
dobj(fell-5, chimbly-8)
conj_and(fell-5, crippled-10)
ccomp(said-17, crippled-10)
poss(back-12, his-11)
dobj(crippled-10, back-12)
prep_for(crippled-10, life-14)
nsubj(said-17, everybody-16)
root(ROOT-0, said-17)
nsubj(lesson-22, it-18)
aux(lesson-22, would-19)
cop(lesson-22, be-20)
det(lesson-22, a-21)
ccomp(said-17, lesson-22)
prep_to(lesson-22, him-24)

(ROOT
  (FRAG
    (WHNP (WDT What) (NN kind))
    (PP (IN of)
      (NP (DT a) (NN lesson)))
    (. ?)))

det(kind-2, What-1)
root(ROOT-0, kind-2)
det(lesson-5, a-4)
prep_of(kind-2, lesson-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBD was)
      (NP (PRP he))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB use)
              (NP (PRP it)))))))
    (. ?)))

advmod(going-4, How-1)
aux(going-4, was-2)
nsubj(going-4, he-3)
nsubj(use-6, he-3)
root(ROOT-0, going-4)
aux(use-6, to-5)
xcomp(going-4, use-6)
dobj(use-6, it-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could) (RB n't)
        (VP (VB climb)
          (NP (NNS chimblies))
          (ADVP (DT no) (RBR more)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had) (RB n't)
        (ADVP (DT no) (RBR more))
        (VP (VBN backs)
          (S
            (VP (TO to)
              (VP (VB break)))))))
    (. .) ('' '')))

nsubj(climb-4, He-1)
aux(climb-4, could-2)
neg(climb-4, n't-3)
root(ROOT-0, climb-4)
dobj(climb-4, chimblies-5)
neg(more-7, no-6)
advmod(climb-4, more-7)
nsubj(backs-15, he-10)
nsubj(break-17, he-10)
aux(backs-15, had-11)
neg(backs-15, n't-12)
neg(more-14, no-13)
advmod(backs-15, more-14)
conj_and(climb-4, backs-15)
aux(break-17, to-16)
xcomp(backs-15, break-17)

(ROOT
  (S (`` ``)
    (NP (PDT All)
      (NP (IN de) (JJ same))
      (, ,)
      (NP
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (NP (NN dey))))
    (VP (VBZ IS)
      (VP (VB sich)
        (NP (DT a) (NN thing))
        (PP (IN as)
          (NP (NN learnin)))
        ('' ')
        (PP (IN by)
          (NP (NN expe'ence)))))
    (. .)))

dep(same-4, All-2)
amod(same-4, de-3)
nsubj(sich-11, same-4)
nn(Tom-7, Mars-6)
appos(same-4, Tom-7)
appos(Tom-7, dey-9)
aux(sich-11, IS-10)
root(ROOT-0, sich-11)
det(thing-13, a-12)
dobj(sich-11, thing-13)
prep_as(sich-11, learnin-15)
prep_by(sich-11, expe'ence-18)

(ROOT
  (S
    (NP (NNP De) (NNP Good) (NNP Book))
    (VP (VBP say)
      (SBAR
        (S
          (NP (FW de) (FW burnt) (NN chile))
          (VP (VBP shun)
            (NP (NNP de) (NN fire))))))
    (. .) ('' '')))

nn(Book-3, De-1)
nn(Book-3, Good-2)
nsubj(say-4, Book-3)
root(ROOT-0, say-4)
nn(chile-7, de-5)
nn(chile-7, burnt-6)
nsubj(shun-8, chile-7)
ccomp(say-4, shun-8)
nn(fire-10, de-9)
dobj(shun-8, fire-10)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBP ai) (RB n't)
      (VP (VBG denying)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN thing))
            (VP (VBZ 's)
              (NP (DT a) (NN lesson))
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (NP
                      (NP (DT a) (NN thing))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD can)
                            (VP (VB happen)
                              (NP (RB twice) (RB just) (DT the) (JJ same) (NN way)))))))))))))))
    (. .)))

discourse(denying-7, Well-2)
nsubj(denying-7, I-4)
aux(denying-7, ai-5)
neg(denying-7, n't-6)
root(ROOT-0, denying-7)
mark(lesson-13, that-8)
det(thing-10, a-9)
nsubj(lesson-13, thing-10)
cop(lesson-13, 's-11)
det(lesson-13, a-12)
ccomp(denying-7, lesson-13)
mark(thing-18, if-14)
nsubj(thing-18, it-15)
cop(thing-18, 's-16)
det(thing-18, a-17)
advcl(lesson-13, thing-18)
nsubj(happen-21, thing-18)
aux(happen-21, can-20)
rcmod(thing-18, happen-21)
advmod(way-26, twice-22)
advmod(way-26, just-23)
det(way-26, the-24)
amod(way-26, same-25)
dobj(happen-21, way-26)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP
            (NP (NNS lots))
            (PP (IN of)
              (NP (JJ such) (NNS things))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (NNP THEY))
          (VP (VB educate)
            (NP
              (NP (DT a) (NN person))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNP Uncle) (NNP Abner))
                        (ADVP (RB always))
                        (VP (VBD said))))))))))
        (: ;)
        (CC but)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP
              (NP (JJ forty) (NN MILLION) (NNS lots))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ other) (NN kind))
                  (PRN (: --)
                    (NP
                      (NP (DT the) (NN kind))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP do) (RB n't)
                            (VP (VB happen)
                              (NP (DT the) (JJ same) (NN way))
                              (ADVP (RB twice)))))))
                    (: --)))))))
        (CC and)
        (S
          (NP (PRP they))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (JJ real) (NN use))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP ai) (RB n't)
      (ADJP
        (ADJP (DT no) (RBR more) (JJ instructive))
        (PP (IN than)
          (NP (DT the) (JJ small-pox)))))
    (. .)))

expl('s-2, There-1)
ccomp(ai-53, 's-2)
nsubj('s-2, lots-3)
amod(things-6, such-5)
prep_of(lots-3, things-6)
nsubj(educate-10, THEY-9)
conj_and('s-2, educate-10)
ccomp(ai-53, educate-10)
det(person-12, a-11)
dobj(educate-10, person-12)
nsubj('s-15, person-12)
rcmod(person-12, 's-15)
dobj(said-20, what-16)
nn(Abner-18, Uncle-17)
nsubj(said-20, Abner-18)
advmod(said-20, always-19)
ccomp('s-15, said-20)
expl('s-24, there-23)
conj_and('s-2, 's-24)
conj_but(educate-10, 's-24)
amod(lots-27, forty-25)
nn(lots-27, MILLION-26)
nsubj('s-24, lots-27)
det(kind-31, the-29)
amod(kind-31, other-30)
prep_of(lots-27, kind-31)
det(kind-34, the-33)
dep(kind-31, kind-34)
nsubj(happen-38, kind-34)
aux(happen-38, do-36)
neg(happen-38, n't-37)
rcmod(kind-34, happen-38)
det(way-41, the-39)
amod(way-41, same-40)
dobj(happen-38, way-41)
advmod(happen-38, twice-42)
nsubj(use-50, they-45)
cop(use-50, ai-46)
neg(use-50, n't-47)
neg(use-50, no-48)
amod(use-50, real-49)
conj_and('s-2, use-50)
conj_and(educate-10, use-50)
nsubj(ai-53, they-52)
root(ROOT-0, ai-53)
neg(ai-53, n't-54)
neg(instructive-57, no-55)
advmod(instructive-57, more-56)
acomp(ai-53, instructive-57)
det(small-pox-60, the-59)
prep_than(instructive-57, small-pox-60)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN got)
              (NP (PRP it))))))
      (, ,)
      (NP (PRP it))
      (VP (VBP ai) (RB n't)
        (ADJP (RB no) (JJ good)
          (S
            (VP (TO to)
              (VP (VB find)
                (PRT (RP out)))))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD ought)
                (S
                  (VP (TO to)
                    (VP (VBN been)
                      (VP (VBN vaccinated)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBP ai) (RB n't)
        (ADJP (RB no) (JJ good)
          (S
            (VP (TO to)
              (VP (VB git)
                (ADJP (JJ vaccinated))
                (ADVP (RB afterward))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (DT the) (JJ small-pox))
                    (VP (VBP do) (RB n't)
                      (VP (VB come)
                        (ADVP (RB but) (RB once))))))))))))
    (. .)))

advmod(got-4, When-1)
nsubj(got-4, you-2)
aux(got-4, 've-3)
advcl(good-11, got-4)
dobj(got-4, it-5)
nsubj(good-11, it-7)
nsubj(find-13, it-7)
cop(good-11, ai-8)
neg(good-11, n't-9)
neg(good-11, no-10)
root(ROOT-0, good-11)
aux(find-13, to-12)
xcomp(good-11, find-13)
prt(find-13, out-14)
nsubj(ought-16, you-15)
nsubjpass(vaccinated-19, you-15)
ccomp(good-11, ought-16)
aux(vaccinated-19, to-17)
auxpass(vaccinated-19, been-18)
xcomp(ought-16, vaccinated-19)
nsubj(good-26, it-22)
nsubj(git-28, it-22)
cop(good-26, ai-23)
neg(good-26, n't-24)
neg(good-26, no-25)
conj_and(good-11, good-26)
aux(git-28, to-27)
xcomp(good-26, git-28)
acomp(git-28, vaccinated-29)
advmod(git-28, afterward-30)
mark(come-37, because-32)
det(small-pox-34, the-33)
nsubj(come-37, small-pox-34)
aux(come-37, do-35)
neg(come-37, n't-36)
advcl(git-28, come-37)
advmod(once-39, but-38)
advmod(come-37, once-39)

(ROOT
  (S (CC But)
    (, ,)
    (PP (IN on)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (NP (NNP Uncle) (NNP Abner))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (S
            (NP
              (NP (DT the) (NN person))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD had)
                    (VP (VBD took)
                      (NP (DT a) (NN bull))
                      (PP (IN by)
                        (NP (DT the) (NN tail))))))))
            (ADVP (RB once))
            (VP
              (VP (VBD had)
                (VP (VBN learnt)
                  (NP (NN sixty)
                    (CC or)
                    (NN seventy) (NNS times))
                  (ADVP (RB as) (RB much))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN person))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD had) (RB n't))))))))
              (, ,)
              (CC and)
              (VP (VBD said)
                (SBAR
                  (S
                    (NP
                      (NP (DT a) (NN person))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD started)
                            (PRT (RP in))
                            (S
                              (VP (TO to)
                                (VP (VB carry)
                                  (NP (DT a) (NN cat) (NN home))
                                  (PP (IN by)
                                    (NP (DT the) (NN tail))))))))))
                    (VP (VBD was)
                      (VP (VBG gitting)
                        (NP
                          (NP (NN knowledge))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD was)
                                (ADVP (RB always))
                                (VP (VBG going)
                                  (S
                                    (VP (TO to)
                                      (VP (VB be)
                                        (ADJP (JJ useful)
                                          (PP (TO to)
                                            (NP (PRP him)))))))))))))))))))
          (, ,)
          (CC and)
          (S
            (NP (NN war))
            (VP (RB n't)
              (S
                (VP
                  (ADVP (RB ever))
                  (VBG going)
                  (S
                    (VP (TO to)
                      (VP (VB grow)
                        (ADJP (JJ dim)
                          (CC or)
                          (JJ doubtful))))))))))))
    (. .)))

cc(said-10, But-1)
det(hand-6, the-4)
amod(hand-6, other-5)
prep_on(said-10, hand-6)
nn(Abner-9, Uncle-8)
nsubj(said-10, Abner-9)
root(ROOT-0, said-10)
mark(learnt-24, that-11)
det(person-13, the-12)
nsubj(took-16, person-13)
nsubj(learnt-24, person-13)
nsubj(said-39, person-13)
aux(took-16, had-15)
rcmod(person-13, took-16)
det(bull-18, a-17)
dobj(took-16, bull-18)
det(tail-21, the-20)
prep_by(took-16, tail-21)
advmod(learnt-24, once-22)
aux(learnt-24, had-23)
ccomp(said-10, learnt-24)
nn(times-28, sixty-25)
conj_or(sixty-25, seventy-27)
nn(times-28, seventy-27)
dobj(learnt-24, times-28)
advmod(much-30, as-29)
advmod(learnt-24, much-30)
det(person-33, a-32)
prep_as(learnt-24, person-33)
nsubj(had-35, person-33)
rcmod(person-33, had-35)
neg(had-35, n't-36)
ccomp(said-10, said-39)
conj_and(learnt-24, said-39)
det(person-41, a-40)
nsubj(started-43, person-41)
nsubj(carry-46, person-41)
nsubj(gitting-54, person-41)
rcmod(person-41, started-43)
prt(started-43, in-44)
aux(carry-46, to-45)
xcomp(started-43, carry-46)
det(home-49, a-47)
nn(home-49, cat-48)
dobj(carry-46, home-49)
det(tail-52, the-51)
prep_by(carry-46, tail-52)
aux(gitting-54, was-53)
ccomp(said-39, gitting-54)
dobj(gitting-54, knowledge-55)
nsubj(going-59, knowledge-55)
nsubj(useful-62, knowledge-55)
aux(going-59, was-57)
advmod(going-59, always-58)
rcmod(knowledge-55, going-59)
aux(useful-62, to-60)
cop(useful-62, be-61)
xcomp(going-59, useful-62)
prep_to(useful-62, him-64)
nsubj(n't-68, war-67)
ccomp(said-10, n't-68)
conj_and(learnt-24, n't-68)
advmod(going-70, ever-69)
ccomp(n't-68, going-70)
xcomp(n't-68, going-70)
aux(grow-72, to-71)
xcomp(going-70, grow-72)
acomp(grow-72, dim-73)
acomp(grow-72, doubtful-75)
conj_or(dim-73, doubtful-75)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB tell)
          (S
            (NP (PRP you))
            (, ,)
            (NP (NNP Jim))
            (, ,)
            (NP (NNP Uncle) (NNP Abner))
            (VP (VBD was)
              (ADVP (RB down)
                (PP (IN on)
                  (NP (PRP them))))
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (NP
                        (NP (PDT all) (DT the) (NN time))
                        (VP (VBG trying)
                          (S
                            (VP (TO to)
                              (VP (VB dig)
                                (NP (DT a) (NN lesson))
                                (PRT (RP out))))))
                        (PP (IN of)
                          (NP (NN everything)))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ happens)
                              (PRN (, ,)
                                (ADVP (DT no) (NN matter))
                                (PP (IN whether))
                                (: --)))))))))))
            ('' '')))))
    (CC But)
    (S
      (NP (NNP Jim))
      (VP (VBD was)
        (ADJP (RB asleep))))
    (. .)))

nsubj(tell-4, I-2)
aux(tell-4, can-3)
root(ROOT-0, tell-4)
nsubj(people-15, you-5)
nsubj(people-15, Jim-7)
nn(Abner-10, Uncle-9)
nsubj(people-15, Abner-10)
cop(people-15, was-11)
advmod(people-15, down-12)
prep_on(down-12, them-14)
ccomp(tell-4, people-15)
nsubj(time-20, people-15)
cop(time-20, 's-17)
predet(time-20, all-18)
det(time-20, the-19)
rcmod(people-15, time-20)
nsubj(happens-30, time-20)
vmod(time-20, trying-21)
aux(dig-23, to-22)
xcomp(trying-21, dig-23)
det(lesson-25, a-24)
dobj(dig-23, lesson-25)
prt(dig-23, out-26)
prep_of(time-20, everything-28)
rcmod(time-20, happens-30)
neg(matter-33, no-32)
dep(whether-34, matter-33)
dep(happens-30, whether-34)
nsubj(asleep-40, Jim-38)
cop(asleep-40, was-39)
conj_but(tell-4, asleep-40)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD looked)
      (NP
        (NP (NN kind))
        (PP (IN of)
          (ADJP (JJ ashamed))))
      (, ,)
      (SBAR
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (VP (VBP know)
              (SBAR
                (S
                  (NP (DT a) (NN person))
                  (ADVP (RB always))
                  (VP (VBZ feels)
                    (ADJP (JJ bad))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP (VBZ is)
                          (VP (VBG talking)
                            (ADJP (JJ uncommon))
                            (UCP
                              (ADJP (JJ fine))
                              (CC and)
                              (VP (VBZ thinks)
                                (SBAR
                                  (S
                                    (NP (DT the) (JJ other) (NN person))
                                    (VP (VBZ is)
                                      (VP (VBG admiring)))))))))))))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (JJ other) (NN person))
            (VP (VBZ goes)
              (S
                (VP (TO to)
                  (VP (VB sleep)
                    (NP (DT that) (NN way))))))))))
    (. .)))

nsubj(looked-2, Tom-1)
root(ROOT-0, looked-2)
dobj(looked-2, kind-3)
prep_of(kind-3, ashamed-5)
mark(know-9, because-7)
nsubj(know-9, you-8)
advcl(looked-2, know-9)
ccomp(looked-2, know-9)
det(person-11, a-10)
nsubj(feels-13, person-11)
advmod(feels-13, always-12)
ccomp(know-9, feels-13)
acomp(feels-13, bad-14)
advmod(talking-18, when-15)
nsubj(talking-18, he-16)
aux(talking-18, is-17)
advcl(feels-13, talking-18)
acomp(talking-18, uncommon-19)
acomp(talking-18, fine-20)
acomp(talking-18, thinks-22)
conj_and(fine-20, thinks-22)
det(person-25, the-23)
amod(person-25, other-24)
nsubj(admiring-27, person-25)
aux(admiring-27, is-26)
ccomp(thinks-22, admiring-27)
mark(goes-33, that-30)
amod(person-32, other-31)
nsubj(goes-33, person-32)
nsubj(sleep-35, person-32)
advcl(looked-2, goes-33)
ccomp(looked-2, goes-33)
conj_and(know-9, goes-33)
aux(sleep-35, to-34)
xcomp(goes-33, sleep-35)
det(way-37, that-36)
dobj(sleep-35, way-37)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (PRP he))
      (VP (MD ought)
        (VP (RB n't)
          (S
            (VP (TO to)
              (VP (VB go)
                (S
                  (VP (TO to)
                    (VP (VB sleep)))))))
          (, ,)
          (SBAR (IN because)
            (S
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (JJ shabby))))
              (: ;)
              (S (CC but)
                (NP
                  (NP (DT the) (NN finer))
                  (NP (DT a) (NN person)))
                (VP (VBZ talks)
                  (NP
                    (NP (DT the) (NN certainer))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (S
                            (VP (TO to)
                              (VP (VB make)
                                (S
                                  (NP (PRP you))
                                  (VP (VB sleep))))))))))))
              (, ,)
              (CC and)
              (RB so)
              (S
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP come)
                      (S
                        (VP (TO to)
                          (VP (VB look)
                            (PP (IN at)
                              (NP (PRP it)))))))))
                (NP (PRP it))
                (VP (VBP ai) (RB n't)
                  (NP
                    (NP
                      (NP (NN nobody) (POS 's))
                      (NN fault))
                    (PP (IN in)
                      (NP (NN particular)))))))))))
    (: ;)
    (S
      (NP
        (NP (DT both))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBZ 's)
        (S
          (VP (TO to)
            (VP (VB blame))))))
    (. .)))

prep_of(n't-5, course-2)
nsubj(n't-5, he-3)
nsubj(go-7, he-3)
nsubj(sleep-9, he-3)
aux(n't-5, ought-4)
root(ROOT-0, n't-5)
aux(go-7, to-6)
xcomp(n't-5, go-7)
aux(sleep-9, to-8)
xcomp(go-7, sleep-9)
mark(shabby-14, because-11)
nsubj(shabby-14, it-12)
cop(shabby-14, 's-13)
advcl(n't-5, shabby-14)
cc(talks-21, but-16)
det(finer-18, the-17)
nsubj(talks-21, finer-18)
det(person-20, a-19)
dep(finer-18, person-20)
advcl(n't-5, talks-21)
conj_and(shabby-14, talks-21)
det(certainer-23, the-22)
dobj(talks-21, certainer-23)
nsubj(is-25, it-24)
nsubj(make-27, it-24)
rcmod(certainer-23, is-25)
aux(make-27, to-26)
xcomp(is-25, make-27)
nsubj(sleep-29, you-28)
ccomp(make-27, sleep-29)
advmod(come-35, when-33)
nsubj(come-35, you-34)
nsubj(look-37, you-34)
advcl(fault-45, come-35)
aux(look-37, to-36)
xcomp(come-35, look-37)
prep_at(look-37, it-39)
nsubj(fault-45, it-40)
cop(fault-45, ai-41)
neg(fault-45, n't-42)
poss(fault-45, nobody-43)
advcl(n't-5, fault-45)
conj_and(shabby-14, fault-45)
prep_in(fault-45, particular-47)
nsubj('s-52, both-49)
nsubj(blame-54, both-49)
prep_of(both-49, them-51)
parataxis(n't-5, 's-52)
aux(blame-54, to-53)
xcomp('s-52, blame-54)

(ROOT
  (S
    (NP
      (NP (NNP Jim))
      (VP
        (VP
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB snore) (: --)
                  (NP (JJ soft))))))
          (CC and)
          (VP
            (ADJP (JJ blubbery))
            (PP (IN at)
              (NP (JJ first))))
          (, ,)
          (VP
            (ADVP (RB then))
            (NP (DT a) (JJ long) (NN rasp)))
          (, ,)
          (VP
            (ADVP (RB then))
            (NP (DT a) (JJR stronger) (NN one)))
          (, ,)
          (PP (RB then)
            (S
              (NP
                (NP (DT a)
                  (QP (PDT half) (DT a) (NN dozen))
                  (JJ horrible) (NNS ones))
                (PP (IN like)
                  (NP (DT the) (JJ last) (NN water))))
              (VP (VBG sucking)
                (PRT (RP down))
                (NP
                  (NP
                    (NP (DT the) (NN plug-hole))
                    (PP (IN of)
                      (NP (DT a) (NN bath-tub))))
                  (, ,)
                  (NP
                    (NP (RB then) (DT the) (JJ same))
                    (PP (IN with)
                      (NP
                        (NP (JJR more) (NN power))
                        (PP (TO to)
                          (NP (PRP it))))))
                  (, ,)
                  (CC and)
                  (NP (DT some) (JJ big) (NNS coughs)))))))
        (CC and)
        (VP (VBZ snorts)
          (S
            (VP
              (VP (VBG flung)
                (PRT (RP in)))
              (, ,)
              (NP
                (NP (DT the) (NN way))
                (SBAR
                  (S
                    (NP (DT a) (NN cow))
                    (VP (VBZ does)
                      (SBAR
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ is)
                              (VP (VBG choking)
                                (PP (TO to)
                                  (NP (NN death)))))))
                        (: ;)
                        (CC and)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (DT the) (NN person))
                            (VP
                              (VP (VBZ has)
                                (VP (VBN got)
                                  (PP (TO to)
                                    (SBAR
                                      (WHNP (WDT that) (NN point))
                                      (S
                                        (NP (PRP he))
                                        (VP (VBZ is)
                                          (PP (IN at)
                                            (NP (PRP$ his) (NN level)))
                                          (ADVP (RBS best))))))))
                              (, ,)
                              (CC and)
                              (VP (MD can)))))))))))))))
    (VP
      (VP (VBP wake)
        (PRT (RP up))
        (NP
          (NP (DT a) (NN man))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (PP (IN in)
                  (NP
                    (NP (DT the) (JJ next) (NN block))
                    (PP (IN with)
                      (NP
                        (NP (DT a) (NN dipperful))
                        (PP (IN of)
                          (NP
                            (NP (NN loddanum))
                            (PP (IN in)
                              (NP (PRP him))))))))))))))
      (, ,)
      (CC but)
      (VP (MD ca) (RB n't)
        (VP (VB wake)
          (NP (PRP himself))
          (ADVP (RB up))
          (SBAR (IN although)
            (S
              (NP
                (NP (PDT all) (DT that) (JJ awful) (NN noise))
                (PP (IN of)
                  (NP (PRP$ his) (NN 'n))))
              (VP (VBP ai) (RB n't)
                (ADVP (RB but)
                  (NP (CD three) (NNS inches))
                  (PP (IN from)
                    (NP (PRP$ his) (JJ own) (NNS ears))))))))))
    (. .)))

nsubj(wake-88, Jim-1)
nsubj(wake-109, Jim-1)
dep(Jim-1, begun-2)
aux(snore-4, to-3)
xcomp(begun-2, snore-4)
dobj(snore-4, soft-6)
parataxis(snore-4, soft-6)
dep(Jim-1, blubbery-8)
conj_and(begun-2, blubbery-8)
prep_at(blubbery-8, first-10)
advmod(rasp-15, then-12)
det(rasp-15, a-13)
amod(rasp-15, long-14)
dep(begun-2, rasp-15)
advmod(one-20, then-17)
det(one-20, a-18)
amod(one-20, stronger-19)
dep(begun-2, one-20)
prep(begun-2, then-22)
det(ones-28, a-23)
quantmod(dozen-26, half-24)
quantmod(dozen-26, a-25)
num(ones-28, dozen-26)
amod(ones-28, horrible-27)
nsubj(sucking-33, ones-28)
det(water-32, the-30)
amod(water-32, last-31)
prep_like(ones-28, water-32)
pcomp(then-22, sucking-33)
prt(sucking-33, down-34)
det(plug-hole-36, the-35)
dobj(sucking-33, plug-hole-36)
det(bath-tub-39, a-38)
prep_of(plug-hole-36, bath-tub-39)
advmod(same-43, then-41)
det(same-43, the-42)
dobj(sucking-33, same-43)
conj_and(plug-hole-36, same-43)
amod(power-46, more-45)
prep_with(same-43, power-46)
prep_to(power-46, it-48)
det(coughs-53, some-51)
amod(coughs-53, big-52)
dobj(sucking-33, coughs-53)
conj_and(plug-hole-36, coughs-53)
dep(Jim-1, snorts-55)
conj_and(begun-2, snorts-55)
ccomp(snorts-55, flung-56)
prt(flung-56, in-57)
det(way-60, the-59)
dobj(flung-56, way-60)
nsubj(choking-66, way-60)
det(cow-62, a-61)
nsubj(does-63, cow-62)
rcmod(way-60, does-63)
aux(choking-66, is-65)
dep(does-63, choking-66)
prep_to(choking-66, death-68)
advmod(got-75, when-71)
det(person-73, the-72)
nsubj(got-75, person-73)
aux(got-75, has-74)
dep(does-63, got-75)
conj_and(choking-66, got-75)
det(point-78, that-77)
dobj(is-80, point-78)
nsubj(is-80, he-79)
prepc_to(got-75, is-80)
poss(level-83, his-82)
prep_at(is-80, level-83)
advmod(is-80, best-84)
conj_and(choking-66, can-87)
conj_and(got-75, can-87)
root(ROOT-0, wake-88)
prt(wake-88, up-89)
det(man-91, a-90)
dobj(wake-88, man-91)
nsubj(is-93, man-91)
rcmod(man-91, is-93)
det(block-97, the-95)
amod(block-97, next-96)
prep_in(is-93, block-97)
det(dipperful-100, a-99)
prep_with(block-97, dipperful-100)
prep_of(dipperful-100, loddanum-102)
prep_in(loddanum-102, him-104)
aux(wake-109, ca-107)
neg(wake-109, n't-108)
conj_but(wake-88, wake-109)
dobj(wake-109, himself-110)
advmod(wake-109, up-111)
mark(ai-120, although-112)
predet(noise-116, all-113)
det(noise-116, that-114)
amod(noise-116, awful-115)
nsubj(ai-120, noise-116)
poss('n-119, his-118)
prep_of(noise-116, 'n-119)
advcl(wake-109, ai-120)
neg(ai-120, n't-121)
advmod(ai-120, but-122)
num(inches-124, three-123)
pobj(but-122, inches-124)
poss(ears-128, his-126)
amod(ears-128, own-127)
prep_from(but-122, ears-128)

(ROOT
  (S (CC And)
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ is)
          (NP
            (NP (DT the) (JJ curiosest) (NN thing))
            (PP (IN in)
              (NP (DT the) (NN world)))))))
    (, ,)
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me))))
    (. .)))

cc(seems-11, And-1)
nsubj(thing-6, that-2)
cop(thing-6, is-3)
det(thing-6, the-4)
amod(thing-6, curiosest-5)
dep(seems-11, thing-6)
det(world-9, the-8)
prep_in(thing-6, world-9)
root(ROOT-0, seems-11)
prep_to(seems-11, me-13)

(ROOT
  (S (CC But)
    (S
      (NP (PRP you))
      (VP (VBZ rake)
        (NP (DT a) (NN match)
          (S
            (VP (TO to)
              (VP (VB light)
                (NP (DT the) (NN candle))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT that) (JJ little) (NN bit))
        (PP (IN of)
          (NP (DT a) (NN noise))))
      (VP (MD will)
        (VP (VB fetch)
          (NP (PRP him)))))
    (. .)))

nsubj(rake-3, you-2)
root(ROOT-0, rake-3)
det(match-5, a-4)
dobj(rake-3, match-5)
aux(light-7, to-6)
vmod(match-5, light-7)
det(candle-9, the-8)
dobj(light-7, candle-9)
det(bit-14, that-12)
amod(bit-14, little-13)
nsubj(fetch-19, bit-14)
det(noise-17, a-16)
prep_of(bit-14, noise-17)
aux(fetch-19, will-18)
conj_and(rake-3, fetch-19)
dobj(fetch-19, him-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD knowed)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD was)
                    (NP
                      (NP (DT the) (NN reason))
                      (PP (IN of)
                        (NP (DT that))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBP do) (RB n't)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (DT no) (NN way)
                  (S
                    (VP (TO to)
                      (VP (VB find)
                        (PRT (RP out))))))))))))
    (. .)))

nsubj(wish-2, I-1)
nsubj(seem-16, I-1)
nsubj(way-20, I-1)
root(ROOT-0, wish-2)
nsubj(knowed-4, I-3)
ccomp(wish-2, knowed-4)
nsubj(reason-8, what-5)
cop(reason-8, was-6)
det(reason-8, the-7)
ccomp(knowed-4, reason-8)
prep_of(reason-8, that-10)
expl(seem-16, there-13)
aux(seem-16, do-14)
neg(seem-16, n't-15)
conj_but(wish-2, seem-16)
aux(way-20, to-17)
cop(way-20, be-18)
neg(way-20, no-19)
xcomp(seem-16, way-20)
aux(find-22, to-21)
vmod(way-20, find-22)
prt(find-22, out-23)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (NNP Jim))
          (VP
            (VP (VBG alarming)
              (NP (DT the) (JJ whole) (NN Desert)))
            (, ,)
            (CC and)
            (VP (VBG yanking)
              (NP (DT the) (NNS animals))
              (PRT (RP out)))))
        (, ,)
        (PP (IN for)
          (NP (NNS miles)
            (CC and)
            (NNS miles))
          (ADVP (RB around)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB see)
              (SBAR
                (WHNP (WP what))
                (S
                  (PP (IN in)
                    (NP (DT the) (NN nation)))
                  (VP (VBD was)
                    (VP (VBG going)
                      (PRT (RP on))
                      (ADVP (RB up) (RB there)))))))))))
    (: ;)
    (S
      (S
        (NP (EX there))
        (VP (VBP war) (RB n't)
          (NP
            (NP (NN nobody))
            (CC nor)
            (NP
              (NP (NN nothing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD was)
                    (ADJP (RB as) (JJ close)
                      (PP (TO to)
                        (NP (DT the) (NN noise))))
                    (SBAR (IN as)
                      (S
                        (NP (PRP HE))
                        (VP (VBD was)))))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB yet))
        (NP (PRP he))
        (VP (VBD was)
          (NP
            (NP (DT the) (JJ only) (NN cretur))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was) (RB n't)
                  (VP (VBN disturbed)
                    (PP (IN by)
                      (NP (PRP it)))))))))))
    (. .)))

advmod(was-3, Now-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
nsubj(was-3, Jim-4)
dep(Jim-4, alarming-5)
det(Desert-8, the-6)
amod(Desert-8, whole-7)
dobj(alarming-5, Desert-8)
dep(Jim-4, yanking-11)
conj_and(alarming-5, yanking-11)
det(animals-13, the-12)
dobj(yanking-11, animals-13)
prt(yanking-11, out-14)
prep_for(was-3, miles-17)
prep_for(was-3, miles-19)
conj_and(miles-17, miles-19)
advmod(was-3, around-20)
aux(see-23, to-22)
vmod(was-3, see-23)
nsubj(going-29, what-24)
det(nation-27, the-26)
prep_in(going-29, nation-27)
aux(going-29, was-28)
ccomp(see-23, going-29)
prt(going-29, on-30)
advmod(there-32, up-31)
advmod(going-29, there-32)
expl(war-35, there-34)
parataxis(was-3, war-35)
neg(war-35, n't-36)
dobj(war-35, nobody-37)
nsubj(war-35, nobody-37)
dobj(war-35, nothing-39)
nsubj(war-35, nothing-39)
conj_nor(nobody-37, nothing-39)
nsubj(close-43, nothing-39)
cop(close-43, was-41)
advmod(close-43, as-42)
rcmod(nothing-39, close-43)
det(noise-46, the-45)
prep_to(close-43, noise-46)
mark(was-49, as-47)
nsubj(was-49, HE-48)
advcl(close-43, was-49)
advmod(cretur-57, yet-52)
nsubj(cretur-57, he-53)
cop(cretur-57, was-54)
det(cretur-57, the-55)
amod(cretur-57, only-56)
parataxis(was-3, cretur-57)
conj_and(war-35, cretur-57)
nsubjpass(disturbed-61, cretur-57)
auxpass(disturbed-61, was-59)
neg(disturbed-61, n't-60)
rcmod(cretur-57, disturbed-61)
agent(disturbed-61, it-63)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD yelled)
          (PP (IN at)
            (NP (PRP him))))
        (CC and)
        (VP (VBD whooped)
          (PP (IN at)
            (NP (PRP him))))))
    (, ,)
    (S
      (NP (PRP it))
      (ADVP (RB never))
      (VP (VBN done)
        (S
          (ADJP (RB no) (JJ good)))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (JJ first) (NN time))
      (ADVP (RB there))
      (VP (VBP come)
        (NP
          (NP (DT a) (JJ little) (NN wee) (NN noise))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was) (RB n't)
                (PP (IN of)
                  (NP
                    (NP (DT a) (JJ usual) (NN kind))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD woke)
                          (NP (PRP him))
                          (PRT (RP up)))))))))))))
    (. .)))

nsubj(yelled-2, We-1)
nsubj(whooped-6, We-1)
root(ROOT-0, yelled-2)
prep_at(yelled-2, him-4)
conj_and(yelled-2, whooped-6)
prep_at(whooped-6, him-8)
nsubj(done-12, it-10)
neg(done-12, never-11)
conj_and(yelled-2, done-12)
neg(good-14, no-13)
acomp(done-12, good-14)
det(time-19, the-17)
amod(time-19, first-18)
nsubj(come-21, time-19)
advmod(come-21, there-20)
conj_but(yelled-2, come-21)
det(noise-25, a-22)
amod(noise-25, little-23)
nn(noise-25, wee-24)
dobj(come-21, noise-25)
nsubj(was-27, noise-25)
rcmod(noise-25, was-27)
neg(was-27, n't-28)
det(kind-32, a-30)
amod(kind-32, usual-31)
prep_of(was-27, kind-32)
nsubj(woke-34, it-33)
rcmod(kind-32, woke-34)
dobj(woke-34, him-35)
prt(woke-34, up-36)

(ROOT
  (S
    (S
      (S
        (INTJ (UH No))
        (, ,)
        (VP (VB sir)))
      (, ,)
      (NP (PRP I))
      (VP
        (VP (VBP 've)
          (VP (VBN thought)
            (NP (PRP it))
            (ADVP (DT all) (RP over))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB so))
          (VBZ has)
          (NP (NNP Tom)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN way)
          (S
            (VP (TO to)
              (VP (VB find)
                (PRT (RP out))
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (DT a) (NN snorer))
                    (VP (MD ca) (RB n't)
                      (VP (VB hear)
                        (S
                          (NP (PRP himself))
                          (VP (VB snore)))))))))))))
    (. .)))

discourse(sir-3, No-1)
ccomp(thought-7, sir-3)
nsubj(thought-7, I-5)
nsubj(has-14, I-5)
aux(thought-7, 've-6)
root(ROOT-0, thought-7)
dobj(thought-7, it-8)
dep(over-10, all-9)
advmod(thought-7, over-10)
advmod(has-14, so-13)
conj_and(thought-7, has-14)
dobj(has-14, Tom-15)
expl(ai-19, there-18)
conj_and(thought-7, ai-19)
neg(ai-19, n't-20)
neg(way-22, no-21)
nsubj(ai-19, way-22)
aux(find-24, to-23)
vmod(way-22, find-24)
prt(find-24, out-25)
advmod(hear-31, why-26)
det(snorer-28, a-27)
nsubj(hear-31, snorer-28)
aux(hear-31, ca-29)
neg(hear-31, n't-30)
advcl(find-24, hear-31)
nsubj(snore-33, himself-32)
ccomp(hear-31, snore-33)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had) (RB n't)
              (VP (VBN been)
                (ADJP (RB asleep))))))))
    (: ;)
    (S
      (NP (PRP he))
      (ADVP (RB just))
      (VP (VBD shut)
        (NP (PRP$ his) (NNS eyes))
        (SBAR (IN so)
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB listen)
                (ADVP (RBR better))))))))
    (. .)))

nsubj(said-2, Jim-1)
root(ROOT-0, said-2)
nsubj(asleep-7, he-3)
aux(asleep-7, had-4)
neg(asleep-7, n't-5)
cop(asleep-7, been-6)
ccomp(said-2, asleep-7)
nsubj(shut-11, he-9)
advmod(shut-11, just-10)
parataxis(said-2, shut-11)
poss(eyes-13, his-12)
dobj(shut-11, eyes-13)
mark(listen-17, so-14)
nsubj(listen-17, he-15)
aux(listen-17, could-16)
advcl(shut-11, listen-17)
advmod(listen-17, better-18)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD said)
      (NP
        (NP (NN nobody) (NN war))
        (VP (RB n't) (VBG accusing)
          (NP (PRP him)))))
    (. .)))

nsubj(said-2, Tom-1)
root(ROOT-0, said-2)
nn(war-4, nobody-3)
dobj(said-2, war-4)
neg(accusing-6, n't-5)
vmod(war-4, accusing-6)
dobj(accusing-6, him-7)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBP look)
            (SBAR (IN like)
              (S
                (NP (PRP he))
                (VP (VBD wished)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD had) (RB n't)
                        (VP (VBN said)
                          (NP (NN anything)))))))))))))
    (. .)))

nsubj(made-2, That-1)
root(ROOT-0, made-2)
nsubj(look-4, him-3)
ccomp(made-2, look-4)
mark(wished-7, like-5)
nsubj(wished-7, he-6)
advcl(look-4, wished-7)
nsubj(said-11, he-8)
aux(said-11, had-9)
neg(said-11, n't-10)
ccomp(wished-7, said-11)
dobj(said-11, anything-12)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB git)
              (ADVP (RB away)
                (PP (IN from)
                  (NP (DT the) (NN subject))))
              (PRN (, ,)
                (S
                  (NP (PRP I))
                  (VP (VBP reckon)))
                (, ,))
              (SBAR (IN because)
                (S
                  (NP (PRP he))
                  (VP (VBN begun)
                    (PP (TO to)
                      (NP
                        (NP (NN abuse))
                        (SBAR
                          (S
                            (NP
                              (NP (DT the) (NN camel-driver))
                              (, ,)
                              (NP
                                (NP (RB just) (DT the) (NN way))
                                (NP (DT a) (NN person))))
                            (VP (VBZ does)
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (PRP he))
                                  (VP (VBZ has)
                                    (VP (VBN got)
                                      (S
                                        (VP (VBN catched)
                                          (PP (IN in)
                                            (NP (NN something)))))))))))))))))))))
      (CC and)
      (VP (VBZ wants)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (PRP it))
              (PRT (RP out))
              (PP (IN of)
                (NP (NN somebody) (RB else))))))))
    (. .)))

nsubj(wanted-3, he-2)
nsubj(git-5, he-2)
nsubj(wants-36, he-2)
nsubj(take-38, he-2)
root(ROOT-0, wanted-3)
aux(git-5, to-4)
xcomp(wanted-3, git-5)
det(subject-9, the-8)
prep_away_from(git-5, subject-9)
nsubj(reckon-12, I-11)
parataxis(git-5, reckon-12)
mark(begun-16, because-14)
nsubj(begun-16, he-15)
advcl(git-5, begun-16)
prep_to(begun-16, abuse-18)
det(camel-driver-20, the-19)
nsubj(does-27, camel-driver-20)
advmod(way-24, just-22)
det(way-24, the-23)
appos(camel-driver-20, way-24)
det(person-26, a-25)
dep(way-24, person-26)
rcmod(abuse-18, does-27)
advmod(got-31, when-28)
nsubj(got-31, he-29)
aux(got-31, has-30)
advcl(does-27, got-31)
dep(got-31, catched-32)
prep_in(catched-32, something-34)
conj_and(wanted-3, wants-36)
aux(take-38, to-37)
xcomp(wants-36, take-38)
dobj(take-38, it-39)
prep_out_of(take-38, somebody-42)
advmod(somebody-42, else-43)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD let)
          (PP (IN into)
            (NP (DT the) (NN camel-driver)))
          (NP
            (NP (DT the) (JJS hardest))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD knowed)
                  (NP (WRB how))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB agree)
                (PP (IN with)
                  (NP (PRP him))))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD praised)
          (NP
            (NP
              (ADVP (RB up)
                (NP (DT the) (NN dervish)))
              (DT the) (JJS highest))
            (SBAR
              (S
                (NP (PRP he))
                (VP (MD could))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB agree)
              (PP (IN with)
                (NP (PRP him)))
              (ADVP (RB there))
              (, ,)
              (ADVP (RB too)))))))
    (. .)))

nsubj(let-2, He-1)
root(ROOT-0, let-2)
det(camel-driver-5, the-4)
prep_into(let-2, camel-driver-5)
det(hardest-7, the-6)
dobj(let-2, hardest-7)
nsubj(knowed-9, he-8)
rcmod(hardest-7, knowed-9)
dobj(knowed-9, how-10)
nsubj(had-14, I-13)
nsubj(agree-16, I-13)
conj_and(let-2, had-14)
aux(agree-16, to-15)
xcomp(had-14, agree-16)
prep_with(agree-16, him-18)
nsubj(praised-22, he-21)
conj_and(let-2, praised-22)
advmod(highest-27, up-23)
det(dervish-25, the-24)
pobj(up-23, dervish-25)
det(highest-27, the-26)
dobj(praised-22, highest-27)
nsubj(could-29, he-28)
rcmod(highest-27, could-29)
nsubj(had-33, I-32)
nsubj(agree-35, I-32)
conj_and(let-2, had-33)
aux(agree-35, to-34)
xcomp(had-33, agree-35)
prep_with(agree-35, him-37)
advmod(agree-35, there-38)
advmod(agree-35, too-40)

(ROOT
  (S (CC But)
    (NP (NNP Tom))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP ai) (RB n't)
          (ADJP (RB so) (JJ sure)))))
    (. .)))

cc(says-3, But-1)
nsubj(says-3, Tom-2)
root(ROOT-0, says-3)
nsubj(sure-10, I-6)
cop(sure-10, ai-7)
neg(sure-10, n't-8)
advmod(sure-10, so-9)
ccomp(says-3, sure-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP call)
        (S
          (NP (DT that) (NN dervish))
          (ADJP
            (ADJP (RB so) (RB dreadful) (JJ liberal)
              (CC and)
              (JJ good))
            (CC and)
            (ADJP (JJ unselfish))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (ADVP (RB quite))
        (VP (VB see)
          (NP (PRP it)))))
    (. .)))

nsubj(call-2, You-1)
root(ROOT-0, call-2)
det(dervish-4, that-3)
nsubj(liberal-7, dervish-4)
nsubj(good-9, dervish-4)
nsubj(unselfish-11, dervish-4)
advmod(liberal-7, so-5)
advmod(liberal-7, dreadful-6)
xcomp(call-2, liberal-7)
xcomp(call-2, good-9)
conj_and(liberal-7, good-9)
xcomp(call-2, unselfish-11)
conj_and(liberal-7, unselfish-11)
nsubj(see-18, I-14)
aux(see-18, do-15)
neg(see-18, n't-16)
advmod(see-18, quite-17)
conj_but(call-2, see-18)
dobj(see-18, it-19)

(ROOT
  (SINV
    (S
      (NP (PRP He))
      (VP (VBD did) (RB n't)
        (VP (VB hunt)
          (PRT (RP up))
          (NP (DT another) (JJ poor) (NN dervish)))))
    (, ,)
    (VP (VBD did))
    (NP (PRP he))
    (. ?)))

nsubj(hunt-4, He-1)
aux(hunt-4, did-2)
neg(hunt-4, n't-3)
ccomp(did-10, hunt-4)
prt(hunt-4, up-5)
det(dervish-8, another-6)
amod(dervish-8, poor-7)
dobj(hunt-4, dervish-8)
root(ROOT-0, did-10)
nsubj(did-10, he-11)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (PRP he))
    (VP (VBD did) (RB n't))
    (. .)))

discourse(did-4, No-1)
nsubj(did-4, he-3)
root(ROOT-0, did-4)
neg(did-4, n't-5)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (ADJP (RB so) (JJ unselfish)))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBD did) (RB n't)
      (NP (PRP he))
      (VP
        (VP (VB go)
          (ADVP (IN in) (RB there))
          (NP (PRP himself)))
        (CC and)
        (VP
          (VP (VB take)
            (NP
              (NP (DT a) (NN pocketful))
              (PP (IN of)
                (NP (NNS jewels)))))
          (CC and)
          (VP
            (VP (VB go)
              (PRT (RP along)))
            (CC and)
            (VP (VB be)
              (ADJP (JJ satisfied)))))))
    (. ?)))

mark(unselfish-5, If-1)
nsubj(unselfish-5, he-2)
cop(unselfish-5, was-3)
advmod(unselfish-5, so-4)
advcl(go-11, unselfish-5)
advmod(go-11, why-7)
aux(go-11, did-8)
neg(go-11, n't-9)
nsubj(go-11, he-10)
nsubj(take-16, he-10)
root(ROOT-0, go-11)
advmod(go-11, in-12)
advmod(in-12, there-13)
dobj(go-11, himself-14)
conj_and(go-11, take-16)
det(pocketful-18, a-17)
dobj(take-16, pocketful-18)
prep_of(pocketful-18, jewels-20)
conj_and(go-11, go-22)
conj_and(take-16, go-22)
prt(go-22, along-23)
cop(satisfied-26, be-25)
conj_and(take-16, satisfied-26)
conj_and(go-22, satisfied-26)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP
      (NP (DT the) (NN person))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBG hunting)
              (PP (IN for)))))))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN man))
        (PP (IN with)
          (NP (DT a) (CD hundred) (NNS camels)))))
    (. .)))

discourse(man-13, No-1)
advmod(man-13, sir-3)
det(person-6, the-5)
prep_for(hunting-9, person-6)
nsubj(man-13, person-6)
nsubj(hunting-9, he-7)
aux(hunting-9, was-8)
rcmod(person-6, hunting-9)
cop(man-13, was-11)
det(man-13, a-12)
root(ROOT-0, man-13)
det(camels-17, a-15)
num(camels-17, hundred-16)
prep_with(man-13, camels-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB get)
            (PRT (RP away))
            (PP (IN with)
              (NP
                (NP (PDT all) (DT the) (NN treasure))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD could))))))))))
    (. .) ('' '')))

nsubj(wanted-2, He-1)
nsubj(get-4, He-1)
root(ROOT-0, wanted-2)
aux(get-4, to-3)
xcomp(wanted-2, get-4)
prt(get-4, away-5)
predet(treasure-9, all-7)
det(treasure-9, the-8)
prep_with(get-4, treasure-9)
nsubj(could-11, he-10)
rcmod(treasure-9, could-11)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (, ,)
    (S
      (NP (NNP Mars) (NNP Tom))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ willin) ('' ')
          (PP (TO to)
            (NP (NN divide) (, ,) (NN fair)
              (CC and)
              (NN square))))))
    (: ;)
    (S
      (NP (PRP he))
      (ADVP (RB only))
      (VP (VBD struck)
        (PP (IN for)
          (NP (JJ fifty) (NNS camels)))))
    (. .) ('' '')))

advmod(willin-9, Why-2)
nn(Tom-5, Mars-4)
nsubj(willin-9, Tom-5)
nsubj(willin-9, he-7)
cop(willin-9, was-8)
root(ROOT-0, willin-9)
prep_to(willin-9, divide-12)
prep_to(willin-9, fair-14)
conj_and(divide-12, fair-14)
prep_to(willin-9, square-16)
conj_and(divide-12, square-16)
nsubj(struck-20, he-18)
advmod(struck-20, only-19)
parataxis(willin-9, struck-20)
amod(camels-23, fifty-22)
prep_for(struck-20, camels-23)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP he))
        (VP (VBD knowed))))
    (ADVP (WRB how))
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP
                (NP (DT all))
                (PP (IN of)
                  (NP (PRP them))
                  (PP (IN by)
                    (CC and)
                    (IN by)))))))))
    (. .) ('' '')))

mark(knowed-4, Because-2)
nsubj(knowed-4, he-3)
advcl(going-8, knowed-4)
advmod(going-8, how-5)
nsubj(going-8, he-6)
nsubj(get-10, he-6)
aux(going-8, was-7)
root(ROOT-0, going-8)
aux(get-10, to-9)
xcomp(going-8, get-10)
dobj(get-10, all-11)
prep_of(all-11, them-13)
prep(all-11, by-14)
prep(all-11, by-16)
conj_and(by-14, by-16)

(ROOT
  (S (`` ``)
    (NP (NNP Mars) (NNP Tom))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBP TOLE)
          (NP
            (NP (JJ de) (NN man))
            (IN de)
            (NP (NN truck))))))
    (VP (MD would)
      (VP (VB make)
        (S
          (NP (PRP him))
          (ADJP (JJ bline)))))
    (. .) ('' '')))

nn(Tom-3, Mars-2)
nsubj(make-12, Tom-3)
nsubj(TOLE-6, he-5)
parataxis(make-12, TOLE-6)
amod(man-8, de-7)
dobj(TOLE-6, man-8)
iobj(TOLE-6, man-8)
amod(man-8, de-9)
dep(man-8, truck-10)
aux(make-12, would-11)
root(ROOT-0, make-12)
nsubj(bline-14, him-13)
xcomp(make-12, bline-14)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (PP (IN because)
      (NP (PRP he)))
    (VP (VBD knowed)
      (NP
        (NP (DT the) (NN man) (POS 's))
        (NN character)))
    (. .)))

discourse(knowed-6, Yes-2)
prep_because(knowed-6, he-5)
root(ROOT-0, knowed-6)
det(man-8, the-7)
poss(character-10, man-8)
dobj(knowed-6, character-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB just))
      (NP
        (NP (DT the) (NN kind))
        (PP (IN of)
          (NP
            (NP (DT a) (NN man))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (VP (VBG hunting)
                    (PP (IN for) (: --)
                      (NP
                        (NP (DT a) (NN man))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (ADVP (RB never))
                            (VP (VBZ believes)
                              (PP (IN in)
                                (NP
                                  (NP
                                    (NP (NN anybody) (POS 's))
                                    (NN word))
                                  (CC or)
                                  (NP
                                    (NP (NN anybody) (POS 's))
                                    (NNS honorableness))))
                              (, ,)
                              (SBAR (IN because)
                                (S
                                  (NP (PRP he))
                                  (VP (VBP ai) (RB n't)
                                    (VP (VBN got)
                                      (NP
                                        (NP (NN none))
                                        (PP (IN of)
                                          (NP (PRP$ his) (JJ own)))))))))))))))))))))
    (. .)))

nsubj(kind-5, It-1)
cop(kind-5, was-2)
advmod(kind-5, just-3)
det(kind-5, the-4)
root(ROOT-0, kind-5)
det(man-8, a-7)
prep_of(kind-5, man-8)
nsubj(hunting-11, he-9)
aux(hunting-11, was-10)
rcmod(man-8, hunting-11)
det(man-15, a-14)
prep_for(hunting-11, man-15)
nsubj(believes-18, man-15)
neg(believes-18, never-17)
rcmod(man-15, believes-18)
poss(word-22, anybody-20)
prep_in(believes-18, word-22)
poss(honorableness-26, anybody-24)
prep_in(believes-18, honorableness-26)
conj_or(word-22, honorableness-26)
mark(got-32, because-28)
nsubjpass(got-32, he-29)
auxpass(got-32, ai-30)
neg(got-32, n't-31)
advcl(believes-18, got-32)
dobj(got-32, none-33)
poss(own-36, his-35)
prep_of(none-33, own-36)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP reckon)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP
              (NP (NNS lots))
              (PP (IN of)
                (NP
                  (NP (NNS people))
                  (PP (IN like)
                    (NP (DT that) (NN dervish))))))))))
    (. .)))

nsubj(reckon-2, I-1)
root(ROOT-0, reckon-2)
expl('s-4, there-3)
ccomp(reckon-2, 's-4)
nsubj('s-4, lots-5)
prep_of(lots-5, people-7)
det(dervish-10, that-9)
prep_like(people-7, dervish-10)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD swindle) (, ,)
        (ADVP (RB right)
          (CC and)
          (RB left))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (ADVP (RB always))
      (VP (VBP make)
        (S
          (NP (DT the) (JJ other) (NN person) (NNP SEEM))
          (VP (TO to)
            (VP (VB swindle)
              (NP (PRP himself)))))))
    (. .)))

nsubj(swindle-2, They-1)
root(ROOT-0, swindle-2)
advmod(swindle-2, right-4)
advmod(swindle-2, left-6)
conj_and(right-4, left-6)
nsubj(make-11, they-9)
advmod(make-11, always-10)
conj_but(swindle-2, make-11)
det(SEEM-15, the-12)
amod(SEEM-15, other-13)
nn(SEEM-15, person-14)
dobj(make-11, SEEM-15)
nsubj(swindle-17, SEEM-15)
aux(swindle-17, to-16)
xcomp(make-11, swindle-17)
dobj(swindle-17, himself-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP keep)
        (NP
          (NP (NN inside))
          (PP (IN of)
            (NP
              (NP (DT the) (NN letter))
              (PP (IN of)
                (NP (DT the) (NN law))))))
        (NP (PDT all) (DT the) (NN time))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN way)
          (S
            (VP (TO to)
              (VP (VB git)
                (NP
                  (NP (NN hold))
                  (PP (IN of)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(keep-2, They-1)
root(ROOT-0, keep-2)
iobj(keep-2, inside-3)
det(letter-6, the-5)
prep_of(inside-3, letter-6)
det(law-9, the-8)
prep_of(letter-6, law-9)
predet(time-12, all-10)
det(time-12, the-11)
dobj(keep-2, time-12)
expl(ai-16, there-15)
conj_and(keep-2, ai-16)
neg(ai-16, n't-17)
neg(way-19, no-18)
nsubj(ai-16, way-19)
aux(git-21, to-20)
vmod(way-19, git-21)
dobj(git-21, hold-22)
prep_of(hold-22, them-24)

(ROOT
  (S
    (S
      (NP (NNP THEY))
      (VP (VBP do) (RB n't)
        (VP (VB put)
          (NP (DT the) (NN salve))
          (PRT (RP on)))))
    (: --)
    (S
      (INTJ (UH oh) (, ,) (UH no))
      (, ,)
      (NP (DT that))
      (VP (MD would)
        (VP (VB be)
          (NP (NN sin)))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (PRP they))
        (VP (VBP know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (TO to)
                (VP (VB fool)
                  (NP (PRP YOU))
                  (PP (IN into)
                    (S
                      (VP (VBG putting)
                        (NP (PRP it))
                        (PP (IN on)))))))))))
      (, ,) (RB then)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (PRP you))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ blinds)
                  (NP (PRP yourself)))))))))
    (. .)))

nsubj(put-4, THEY-1)
aux(put-4, do-2)
neg(put-4, n't-3)
root(ROOT-0, put-4)
det(salve-6, the-5)
dobj(put-4, salve-6)
prt(put-4, on-7)
discourse(sin-16, oh-9)
dep(oh-9, no-11)
nsubj(sin-16, that-13)
aux(sin-16, would-14)
cop(sin-16, be-15)
conj_but(put-4, sin-16)
nsubj(know-20, they-19)
nsubj(fool-23, they-19)
conj_but(put-4, know-20)
advmod(fool-23, how-21)
aux(fool-23, to-22)
ccomp(know-20, fool-23)
xcomp(know-20, fool-23)
dobj(fool-23, YOU-24)
prepc_into(fool-23, putting-26)
dobj(putting-26, it-27)
prep(putting-26, on-28)
advmod(you-33, then-30)
nsubj(you-33, it-31)
cop(you-33, 's-32)
parataxis(know-20, you-33)
nsubj(blinds-35, you-33)
rcmod(you-33, blinds-35)
dobj(blinds-35, yourself-36)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP reckon)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN dervish))
            (CC and)
            (NP (DT the) (NN camel-driver)))
          (VP (VBD was)
            (ADVP (RB just))
            (NP
              (NP (DT a) (NN pair))
              (: --)
              (NP
                (NP
                  (NP (DT a) (NN fine))
                  (, ,)
                  (NP
                    (UCP
                      (ADJP (JJ smart) (, ,) (JJ brainy) (JJ rascal))
                      (, ,)
                      (CC and)
                      (NP (DT a) (JJ dull) (, ,) (JJ coarse) (, ,) (JJ ignorant) (NN one))
                      (, ,)
                      (CC but)
                      (ADVP (DT both))
                      (PP (IN of)
                        (NP (PRP them))))
                    (NNS rascals))
                  (, ,))
                (NP (RB just) (DT the) (JJ same))))))))
    (. .) ('' '')))

nsubj(reckon-2, I-1)
root(ROOT-0, reckon-2)
det(dervish-4, the-3)
nsubj(pair-11, dervish-4)
det(camel-driver-7, the-6)
conj_and(dervish-4, camel-driver-7)
nsubj(pair-11, camel-driver-7)
cop(pair-11, was-8)
advmod(pair-11, just-9)
det(pair-11, a-10)
ccomp(reckon-2, pair-11)
det(fine-14, a-13)
dep(pair-11, fine-14)
amod(rascal-19, smart-16)
amod(rascal-19, brainy-18)
amod(rascals-34, rascal-19)
det(one-28, a-22)
amod(one-28, dull-23)
amod(one-28, coarse-25)
amod(one-28, ignorant-27)
conj_and(rascal-19, one-28)
amod(rascals-34, one-28)
advmod(rascal-19, both-31)
conj_but(rascal-19, both-31)
amod(rascals-34, both-31)
conj_but(rascal-19, of-32)
amod(rascals-34, of-32)
prep_of(rascal-19, them-33)
appos(fine-14, rascals-34)
advmod(same-38, just-36)
det(same-38, the-37)
dep(fine-14, same-38)

(ROOT
  (S (`` ``)
    (NP (NNP Mars) (NNP Tom))
    (PRN (, ,)
      (SINV (VBZ does)
        (NP (PRP you))
        (VP (VB reckon)
          (NP (NN dey)))))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT any) (NN o) (POS '))
          (NN dat) (NN kind) (NN o) ('' '))
        (ADJP (JJ salve)
          (PP (IN in)
            (NP (NNP de) (NNP worl) (POS ')))))
      (ADVP (RB now)))
    (. ?) ('' '')))

nn(Tom-3, Mars-2)
nsubj(o-15, Tom-3)
aux(reckon-7, does-5)
nsubj(reckon-7, you-6)
parataxis(o-15, reckon-7)
dobj(reckon-7, dey-8)
cop(o-15, 's-9)
det(o-11, any-10)
poss(o-15, o-11)
nn(o-15, dat-13)
nn(o-15, kind-14)
root(ROOT-0, o-15)
amod(o-15, salve-17)
nn(worl-20, de-19)
prep_in(salve-17, worl-20)
advmod(o-15, now-22)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (NNP Uncle) (NNP Abner))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)))))
    (. .)))

discourse(says-6, Yes-2)
nn(Abner-5, Uncle-4)
nsubj(says-6, Abner-5)
root(ROOT-0, says-6)
expl(is-8, there-7)
ccomp(says-6, is-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP 've)
              (VP (VBN got)
                (NP (PRP it))
                (PP (IN in)
                  (NP (NNP New) (NNP York)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP they))
        (VP
          (VP (VBD put)
            (NP (PRP it))
            (PP (IN on)
              (NP
                (NP (NN country) (NNS people) (POS 's))
                (NNS eyes))))
          (CC and)
          (VP (VBP show)
            (S
              (NP (PRP them))
              (NP
                (NP (PDT all) (DT the) (NNS railroads))
                (PP (IN in)
                  (NP (DT the) (NN world))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP they))
          (VP
            (VP (VBP go)
              (PRT (RP in)))
            (CC and)
            (VP (VBP git)
              (NP (PRP them)))))
        (, ,)
        (CC and)
        (RB then)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBP rub)
                (NP
                  (NP (DT the) (NN salve))
                  (PP (IN on)
                    (NP (DT the) (JJ other) (NN eye))))
                (NP (DT the) (JJ other) (NN man) (NNS bids)))))
          (NP (PRP them))
          (VP
            (VP (VBD goodbye))
            (CC and)
            (VP (VBZ goes)
              (PRT (RP off))
              (PP (IN with)
                (NP (PRP$ their) (NNS railroads))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
nsubj(got-5, they-3)
aux(got-5, 've-4)
ccomp(says-2, got-5)
dobj(got-5, it-6)
nn(York-9, New-8)
prep_in(got-5, York-9)
nsubj(put-13, they-12)
nsubj(show-21, they-12)
conj_and(says-2, put-13)
dobj(put-13, it-14)
nn(people-17, country-16)
poss(eyes-19, people-17)
prep_on(put-13, eyes-19)
conj_and(says-2, show-21)
conj_and(put-13, show-21)
nsubj(railroads-25, them-22)
predet(railroads-25, all-23)
det(railroads-25, the-24)
xcomp(show-21, railroads-25)
det(world-28, the-27)
prep_in(railroads-25, world-28)
nsubj(go-32, they-31)
nsubj(git-35, they-31)
conj_and(says-2, go-32)
conj_and(put-13, go-32)
prt(go-32, in-33)
conj_and(put-13, git-35)
conj_and(go-32, git-35)
dobj(git-35, them-36)
advmod(goodbye-54, then-39)
advmod(rub-42, when-40)
nsubj(rub-42, they-41)
advcl(goodbye-54, rub-42)
det(salve-44, the-43)
iobj(rub-42, salve-44)
det(eye-48, the-46)
amod(eye-48, other-47)
prep_on(salve-44, eye-48)
det(bids-52, the-49)
amod(bids-52, other-50)
nn(bids-52, man-51)
dobj(rub-42, bids-52)
nsubj(goodbye-54, them-53)
nsubj(goes-56, them-53)
conj_and(put-13, goodbye-54)
conj_and(go-32, goodbye-54)
conj_and(go-32, goes-56)
conj_and(goodbye-54, goes-56)
prt(goes-56, off-57)
poss(railroads-60, their-59)
prep_with(goes-56, railroads-60)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP (DT the) (NN treasure-hill))
      (ADVP (RB now)))
    (. .)))

nsubj(treasure-hill-4, Here-1)
cop(treasure-hill-4, 's-2)
det(treasure-hill-4, the-3)
root(ROOT-0, treasure-hill-4)
advmod(treasure-hill-4, now-5)

(ROOT
  (FRAG
    (ADVP (RB Lower))
    (ADVP (RB away) (. !) ('' ''))))

root(ROOT-0, Lower-1)
dep(Lower-1, away-2)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD landed)))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD war) (RB n't)
        (ADJP (RB as) (JJ interesting))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB be))))))))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP we))
                  (VP (MD could) (RB n't)
                    (VP (VB find)
                      (NP (DT the) (NN place))
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (PRP they))
                          (VP (VBD went)
                            (PRT (RP in))
                            (S
                              (VP (TO to)
                                (VP (VB git)
                                  (NP (DT the) (NN treasure)))))))))))))))))
    (. .)))

nsubj(landed-2, We-1)
root(ROOT-0, landed-2)
nsubj(war-6, it-5)
conj_but(landed-2, war-6)
neg(war-6, n't-7)
advmod(interesting-9, as-8)
acomp(war-6, interesting-9)
mark(thought-12, as-10)
nsubj(thought-12, I-11)
advcl(war-6, thought-12)
nsubj(going-15, it-13)
nsubj(be-17, it-13)
aux(going-15, was-14)
ccomp(thought-12, going-15)
aux(be-17, to-16)
xcomp(going-15, be-17)
mark(find-23, because-19)
nsubj(find-23, we-20)
aux(find-23, could-21)
neg(find-23, n't-22)
advcl(thought-12, find-23)
det(place-25, the-24)
dobj(find-23, place-25)
advmod(went-28, where-26)
nsubj(went-28, they-27)
nsubj(git-31, they-27)
advcl(find-23, went-28)
prt(went-28, in-29)
aux(git-31, to-30)
xcomp(went-28, git-31)
det(treasure-33, the-32)
dobj(git-31, treasure-33)

(ROOT
  (S
    (ADVP (RB Still))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB plenty))
      (ADJP (JJ interesting) (RB enough))
      (, ,)
      (SBAR (RB just)
        (S
          (VP (TO to)
            (VP (VB see)
              (S
                (NP (DT the) (JJ mere) (NN hill))
                (NP (PRP itself))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PDT such) (DT a) (JJ wonderful) (NN thing))
                    (VP (VBD happened))))))))))
    (. .)))

advmod(interesting-6, Still-1)
nsubj(interesting-6, it-3)
nsubj(see-11, it-3)
cop(interesting-6, was-4)
advmod(interesting-6, plenty-5)
root(ROOT-0, interesting-6)
advmod(interesting-6, enough-7)
advmod(see-11, just-9)
aux(see-11, to-10)
ccomp(interesting-6, see-11)
xcomp(interesting-6, see-11)
det(hill-14, the-12)
amod(hill-14, mere-13)
nsubj(happened-21, hill-14)
dep(happened-21, itself-15)
advmod(happened-21, where-16)
predet(thing-20, such-17)
det(thing-20, a-18)
amod(thing-20, wonderful-19)
nsubj(happened-21, thing-20)
xcomp(see-11, happened-21)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBP wou)
            (SBAR
              (S (`` `)
                (S
                  (NP (SYM d))
                  (VP (RB n't)
                    (S
                      (NP (`` `)
                        (NP (SYM a))
                        ('' ')
                        (VP (VBN missed)
                          (NP (PRP it))
                          (PP (IN for)
                            (NP (CD three) (NNS dollars))))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP I))
                  (VP (VBD felt)
                    (NP (DT the) (JJ same) (NN way))))))))))
    (. .)))

nsubj(said-2, Jim-1)
root(ROOT-0, said-2)
nsubj(wou-4, he-3)
ccomp(said-2, wou-4)
nsubj(n't-7, d-6)
dep(wou-4, n't-7)
dep(n't-7, a-9)
vmod(a-9, missed-11)
dobj(missed-11, it-12)
num(dollars-15, three-14)
prep_for(missed-11, dollars-15)
nsubj(felt-19, I-18)
dep(wou-4, felt-19)
conj_and(n't-7, felt-19)
det(way-22, the-20)
amod(way-22, same-21)
dobj(felt-19, way-22)

(ROOT
  (S (CC And)
    (PP (TO to)
      (NP
        (NP (PRP me))
        (CC and)
        (NP (NNP Jim))))
    (, ,)
    (NP
      (NP
        (ADJP (RB as) (JJ wonderful))
        (DT a) (NN thing))
      (ADJP (RB as) (DT any)))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (NP (NNP Tom))
              (VP (MD could)
                (VP
                  (VP (VB come)
                    (PP (IN into)
                      (NP
                        (NP (DT a) (JJ strange) (JJ big) (NN country))
                        (PP (IN like)
                          (NP (DT this))))))
                  (CC and)
                  (VP
                    (VP (VB go)
                      (ADVP (RB straight)))
                    (CC and)
                    (VP
                      (VP (VB find)
                        (NP (DT a) (JJ little) (NN hump))
                        (PP (IN like)
                          (NP (DT that))))
                      (CC and)
                      (VP (VB tell)
                        (NP (PRP it))
                        (PP (IN in)
                          (NP (DT a) (NN minute)))
                        (PP (IN from)
                          (NP
                            (NP
                              (NP
                                (QP (DT a) (CD million))
                                (JJ other) (NNS humps))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBD was)
                                    (ADVP (RB almost) (RB just))
                                    (PP (IN like)
                                      (NP (PRP it)))))))
                            (, ,)
                            (CC and)
                            (NP (NN nothing)
                              (S
                                (VP (TO to)
                                  (VP (VB help)
                                    (NP (PRP him))))))))))))))))
        (CONJP (CC but)
          (RB only))
        (NP
          (NP (PRP$ his) (JJ own) (NN learning))
          (CC and)
          (NP (PRP$ his) (JJ own) (JJ natural) (NNS smartness)))))
    (. .)))

prep_to(way-15, me-3)
conj_and(me-3, Jim-5)
prep_to(way-15, Jim-5)
advmod(wonderful-8, as-7)
amod(thing-10, wonderful-8)
det(thing-10, a-9)
nsubj(way-15, thing-10)
advmod(any-12, as-11)
amod(thing-10, any-12)
cop(way-15, was-13)
det(way-15, the-14)
root(ROOT-0, way-15)
nsubj(come-18, Tom-16)
nsubj(go-27, Tom-16)
aux(come-18, could-17)
rcmod(way-15, come-18)
det(country-23, a-20)
amod(country-23, strange-21)
amod(country-23, big-22)
prep_into(come-18, country-23)
prep_like(country-23, this-25)
rcmod(way-15, go-27)
conj_and(come-18, go-27)
advmod(go-27, straight-28)
conj_and(come-18, find-30)
conj_and(go-27, find-30)
det(hump-33, a-31)
amod(hump-33, little-32)
dobj(find-30, hump-33)
prep_like(find-30, that-35)
conj_and(go-27, tell-37)
conj_and(find-30, tell-37)
dobj(tell-37, it-38)
det(minute-41, a-40)
prep_in(tell-37, minute-41)
quantmod(million-44, a-43)
num(humps-46, million-44)
amod(humps-46, other-45)
prep_from(tell-37, humps-46)
nsubj(was-48, humps-46)
rcmod(humps-46, was-48)
advmod(just-50, almost-49)
advmod(was-48, just-50)
prep_like(was-48, it-52)
prep_from(tell-37, nothing-55)
conj_and(humps-46, nothing-55)
nsubj(was-48, nothing-55)
aux(help-57, to-56)
vmod(nothing-55, help-57)
dobj(help-57, him-58)
poss(learning-63, his-61)
amod(learning-63, own-62)
conj_but(way-15, learning-63)
poss(smartness-68, his-65)
amod(smartness-68, own-66)
amod(smartness-68, natural-67)
conj_but(way-15, smartness-68)
conj_and(learning-63, smartness-68)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD talked)
        (CC and)
        (VBD talked)
        (NP (PRP it))
        (PP (IN over)
          (ADVP (RB together))))
      (, ,)
      (CC but)
      (VP (MD could) (RB n't)
        (VP (VB make)
          (PRT (RP out))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP he))
              (VP (VBN done)
                (NP (PRP it))))))))
    (. .)))

nsubj(talked-2, We-1)
nsubj(talked-4, We-1)
nsubj(make-12, We-1)
root(ROOT-0, talked-2)
conj_and(talked-2, talked-4)
dobj(talked-2, it-5)
prep(talked-2, over-6)
pcomp(over-6, together-7)
aux(make-12, could-10)
neg(make-12, n't-11)
conj_but(talked-2, make-12)
prt(make-12, out-13)
advmod(done-16, how-14)
nsubj(done-16, he-15)
ccomp(make-12, done-16)
dobj(done-16, it-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP (DT the) (JJS best) (NN head))
        (PP (IN on)
          (NP (PRP him)))
        (SBAR
          (S
            (S
              (NP (PRP I))
              (ADVP (RB ever))
              (VP (VBP see)))
            (: ;)
            (CC and)
            (RB all)
            (S
              (NP (PRP he))
              (VP (VBD lacked)
                (SBAR
                  (S
                    (VP (VBD was)
                      (NP (NN age))
                      (, ,)
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (S
                              (NP
                                (NP (DT a) (NN name))
                                (PP (IN for)
                                  (NP (PRP himself))))
                              (ADJP (JJ equal)
                                (PP (TO to)
                                  (NP
                                    (NP (NNP Captain) (NNP Kidd))
                                    (CC or)
                                    (NP (NNP George) (NNP Washington))))))))))))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(head-5, the-3)
amod(head-5, best-4)
dobj(had-2, head-5)
prep_on(head-5, him-7)
nsubj(see-10, I-8)
advmod(see-10, ever-9)
rcmod(head-5, see-10)
rcmod(head-5, all-13)
advmod(see-10, all-13)
conj_and(see-10, all-13)
nsubj(lacked-15, he-14)
dep(see-10, lacked-15)
cop(age-17, was-16)
ccomp(lacked-15, age-17)
aux(make-20, to-19)
vmod(age-17, make-20)
det(name-22, a-21)
nsubj(equal-25, name-22)
prep_for(name-22, himself-24)
xcomp(make-20, equal-25)
nn(Kidd-28, Captain-27)
prep_to(equal-25, Kidd-28)
nn(Washington-31, George-30)
prep_to(equal-25, Washington-31)
conj_or(Kidd-28, Washington-31)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBD bet)
          (NP (PRP you))
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD would)
                (S
                  (NP (`` `)
                    (NP (SYM a))
                    ('' ')
                    (VP (VBN crowded)
                      (ADVP (RB either))
                      (PP (IN of)
                        (NP (NNP THEM)))
                      (S
                        (VP (TO to)
                          (VP (VB find)
                            (NP (DT that) (NN hill)))))
                      (, ,)
                      (PP (IN with)
                        (NP (PDT all) (PRP$ their) (NNS gifts)))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD war) (RB n't)
          (VP
            (NP (NN nothing))
            (PP (TO to)
              (NP (NNP Tom) (NNP Sawyer)))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD went)
          (PP (IN across)
            (NP (NNP Sahara))))
        (CC and)
        (VP (VBD put)
          (NP (PRP$ his) (NN finger))
          (PP (IN on)
            (NP
              (NP (PRP it))
              (ADJP (RB as) (JJ easy))))
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (MD could)
                (VP (VB pick)
                  (NP (DT a) (NN nigger))
                  (PRT (RP out))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN bunch))
                      (PP (IN of)
                        (NP (NNS angels))))))))))))
    (. .)))

nsubj(bet-2, I-1)
root(ROOT-0, bet-2)
dobj(bet-2, you-3)
nsubj(would-5, it-4)
dep(bet-2, would-5)
dep(would-5, a-7)
vmod(a-7, crowded-9)
advmod(crowded-9, either-10)
prep_of(crowded-9, THEM-12)
aux(find-14, to-13)
xcomp(crowded-9, find-14)
det(hill-16, that-15)
dobj(find-14, hill-16)
predet(gifts-21, all-19)
poss(gifts-21, their-20)
prep_with(crowded-9, gifts-21)
nsubj(war-25, it-24)
conj_but(bet-2, war-25)
neg(war-25, n't-26)
dep(war-25, nothing-27)
nn(Sawyer-30, Tom-29)
prep_to(nothing-27, Sawyer-30)
nsubj(went-33, he-32)
nsubj(put-37, he-32)
parataxis(bet-2, went-33)
prep_across(went-33, Sahara-35)
parataxis(bet-2, put-37)
conj_and(went-33, put-37)
poss(finger-39, his-38)
dobj(put-37, finger-39)
prep_on(put-37, it-41)
advmod(easy-43, as-42)
amod(it-41, easy-43)
mark(pick-47, as-44)
nsubj(pick-47, you-45)
aux(pick-47, could-46)
advcl(put-37, pick-47)
det(nigger-49, a-48)
dobj(pick-47, nigger-49)
det(bunch-53, a-52)
prep_out_of(pick-47, bunch-53)
prep_of(bunch-53, angels-55)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD found)
          (NP
            (NP (DT a) (NN pond))
            (PP (IN of)
              (NP (NN salt) (NN water) (NN close))))
          (PP (IN by)))
        (CC and)
        (VP (VBD scraped)
          (PRT (RP up))
          (NP
            (NP (DT a) (NN raft))
            (PP (IN of)
              (NP
                (NP (NN salt))
                (PP (IN around)
                  (NP (DT the) (NNS edges)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN loaded)
          (PRT (RP up))
          (NP
            (NP
              (NP (DT the) (NN lion) (POS 's))
              (NN skin))
            (CC and)
            (NP (DT the) (NN tiger)))))
      (VP (VBZ 's)
        (SBAR (RB so) (IN as)
          (S
            (NP (PRP they))
            (VP (MD would)
              (VP (VB keep)
                (SBAR (IN till)
                  (S
                    (NP (NNP Jim))
                    (VP (MD could)
                      (VP (VB tan)
                        (NP (PRP them))))))))))))
    (. .)))

nsubj(found-2, We-1)
nsubj(scraped-11, We-1)
root(ROOT-0, found-2)
det(pond-4, a-3)
dobj(found-2, pond-4)
nn(close-8, salt-6)
nn(close-8, water-7)
prep_of(pond-4, close-8)
prep(found-2, by-9)
conj_and(found-2, scraped-11)
prt(scraped-11, up-12)
det(raft-14, a-13)
dobj(scraped-11, raft-14)
prep_of(raft-14, salt-16)
det(edges-19, the-18)
prep_around(salt-16, edges-19)
csubj('s-31, loaded-22)
prt(loaded-22, up-23)
det(lion-25, the-24)
poss(skin-27, lion-25)
dobj(loaded-22, skin-27)
det(tiger-30, the-29)
dobj(loaded-22, tiger-30)
conj_and(skin-27, tiger-30)
conj_and(found-2, 's-31)
advmod(keep-36, so-32)
mark(keep-36, as-33)
nsubj(keep-36, they-34)
aux(keep-36, would-35)
advcl('s-31, keep-36)
mark(tan-40, till-37)
nsubj(tan-40, Jim-38)
aux(tan-40, could-39)
advcl(keep-36, tan-40)
dobj(tan-40, them-41)

(ROOT
  (NP (NNP CHAPTER) (NNP XI) (. .)))

nn(XI-2, CHAPTER-1)
root(ROOT-0, XI-2)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP SAND-STORM) (NNP WE))
      (VP (VBD went)
        (S
          (VP (VBG a-fooling)
            (PRT (RP along))
            (PP (IN for)
              (NP
                (NP (DT a) (NN day))
                (CC or)
                (NP (CD two))))))))
    (, ,)
    (CC and)
    (S (RB then)
      (SBAR (RB just) (IN as)
        (S
          (NP (DT the) (JJ full) (NN moon))
          (VP (VBD was)
            (VP (VBG touching)
              (NP (DT the) (NN ground))
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ other) (NN side))
                  (PP (IN of)
                    (NP (DT the) (NN desert)))))))))
      (, ,)
      (NP (PRP we))
      (VP (VBP see)
        (NP
          (NP (DT a) (NN string))
          (PP (IN of)
            (NP
              (NP (JJ little) (JJ black) (NNS figgers))
              (VP (VBG moving)
                (PP (IN across)
                  (NP (PRP$ its) (JJ big) (NN silver) (NN face)))))))))
    (. .)))

det(WE-3, THE-1)
nn(WE-3, SAND-STORM-2)
nsubj(went-4, WE-3)
root(ROOT-0, went-4)
xcomp(went-4, a-fooling-5)
prt(a-fooling-5, along-6)
det(day-9, a-8)
prep_for(a-fooling-5, day-9)
prep_for(a-fooling-5, two-11)
conj_or(day-9, two-11)
advmod(see-33, then-14)
advmod(touching-21, just-15)
mark(touching-21, as-16)
det(moon-19, the-17)
amod(moon-19, full-18)
nsubj(touching-21, moon-19)
aux(touching-21, was-20)
advcl(see-33, touching-21)
det(ground-23, the-22)
dobj(touching-21, ground-23)
det(side-27, the-25)
amod(side-27, other-26)
prep_on(touching-21, side-27)
det(desert-30, the-29)
prep_of(side-27, desert-30)
nsubj(see-33, we-32)
conj_and(went-4, see-33)
det(string-35, a-34)
dobj(see-33, string-35)
amod(figgers-39, little-37)
amod(figgers-39, black-38)
prep_of(string-35, figgers-39)
vmod(figgers-39, moving-40)
poss(face-45, its-42)
amod(face-45, big-43)
nn(face-45, silver-44)
prep_across(moving-40, face-45)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD could)
      (VP (VB see)
        (S
          (NP (PRP them))
          (ADJP (RB as) (JJ plain))
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP they))
              (VP (VBD was)
                (VP (VBN painted)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN moon))
                      (PP (IN with)
                        (NP (NN ink))))))))))))
    (. .)))

nsubj(see-3, You-1)
aux(see-3, could-2)
root(ROOT-0, see-3)
nsubjpass(painted-11, them-4)
advmod(plain-6, as-5)
dep(painted-11, plain-6)
advmod(painted-11, as-7)
mark(painted-11, if-8)
nsubjpass(painted-11, they-9)
auxpass(painted-11, was-10)
xcomp(see-3, painted-11)
det(moon-14, the-13)
prep_on(painted-11, moon-14)
prep_with(moon-14, ink-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT another) (NN caravan)))
    (. .)))

nsubj(caravan-4, It-1)
cop(caravan-4, was-2)
det(caravan-4, another-3)
root(ROOT-0, caravan-4)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD cooled)
        (PRT (RP down))
        (NP (PRP$ our) (NN speed)))
      (CC and)
      (VP (VBN tagged)
        (PRT (RP along))
        (PP (IN after)
          (NP (PRP it)))
        (, ,)
        (S
          (ADVP (RB just))
          (VP (TO to)
            (VP (VB have)
              (NP (NN company)))))
        (, ,)
        (SBAR (IN though)
          (S
            (NP (PRP it))
            (VP (VBP war) (RB n't)
              (VP (VBG going)
                (NP (PRP$ our) (NN way))))))))
    (. .)))

nsubj(cooled-2, We-1)
nsubj(tagged-7, We-1)
nsubj(have-14, We-1)
root(ROOT-0, cooled-2)
prt(cooled-2, down-3)
poss(speed-5, our-4)
dobj(cooled-2, speed-5)
conj_and(cooled-2, tagged-7)
prt(tagged-7, along-8)
prep_after(tagged-7, it-10)
advmod(have-14, just-12)
aux(have-14, to-13)
xcomp(tagged-7, have-14)
dobj(have-14, company-15)
mark(war-19, though-17)
nsubj(war-19, it-18)
advcl(tagged-7, war-19)
neg(war-19, n't-20)
dep(war-19, going-21)
poss(way-23, our-22)
dobj(going-21, way-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN rattler))
        (, ,)
        (NP (DT that) (NN caravan))
        (, ,)
        (CC and)
        (NP (DT a) (JJS most) (NN bully) (NN sight)))
      (S
        (VP (TO to)
          (VP (VB look)
            (PP (IN at)
              (NP (JJ next) (NN morning)))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NN sun))
                (VP (VBP come)
                  (S
                    (VP
                      (VP (VBG a-streaming)
                        (PP (IN across)
                          (NP (DT the) (NN desert))))
                      (CC and)
                      (VP (VBG flung)
                        (NP
                          (NP (DT the) (JJ long) (NNS shadders))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NNS camels))
                              (PP (IN on)
                                (NP (DT the) (JJ gold) (NN sand))))))))))))))
        (PP (IN like)
          (NP (DT a) (CD thousand) (NNS grand-daddy-long-legses)))
        (S
          (VP (VBG marching)
            (PP (IN in)
              (NP (NN procession)))))))
    (. .)))

nsubj(rattler-4, It-1)
cop(rattler-4, was-2)
det(rattler-4, a-3)
root(ROOT-0, rattler-4)
det(caravan-7, that-6)
conj_and(rattler-4, caravan-7)
det(sight-13, a-10)
amod(sight-13, most-11)
nn(sight-13, bully-12)
conj_and(rattler-4, sight-13)
aux(look-15, to-14)
vmod(rattler-4, look-15)
amod(morning-18, next-17)
prep_at(look-15, morning-18)
advmod(come-22, when-19)
det(sun-21, the-20)
nsubj(come-22, sun-21)
advcl(look-15, come-22)
ccomp(come-22, a-streaming-23)
det(desert-26, the-25)
prep_across(a-streaming-23, desert-26)
ccomp(come-22, flung-28)
conj_and(a-streaming-23, flung-28)
det(shadders-31, the-29)
amod(shadders-31, long-30)
dobj(flung-28, shadders-31)
det(camels-34, the-33)
prep_of(shadders-31, camels-34)
det(sand-38, the-36)
amod(sand-38, gold-37)
prep_on(camels-34, sand-38)
det(grand-daddy-long-legses-42, a-40)
num(grand-daddy-long-legses-42, thousand-41)
prep_like(look-15, grand-daddy-long-legses-42)
dep(look-15, marching-43)
prep_in(marching-43, procession-45)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB never))
    (VP (VBD went)
      (ADVP (RB very)
        (PP (IN near)
          (NP (PRP it))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP we))
          (VP (VBD knowed)
            (ADVP
              (ADVP (RBR better))
              (SBAR
                (ADVP (RB now))
                (IN than)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB act)
                        (PP (IN like)
                          (NP (DT that))))
                      (CC and)
                      (VP
                        (VP (VB scare)
                          (NP
                            (NP (NNS people) (POS 's))
                            (NNS camels)))
                        (CC and)
                        (VP (VB break)
                          (PRT (RP up))
                          (NP (PRP$ their) (NNS caravans)))))))))))))
    (. .)))

nsubj(went-3, We-1)
neg(went-3, never-2)
root(ROOT-0, went-3)
advmod(went-3, very-4)
prep_near(very-4, it-6)
mark(knowed-10, because-8)
nsubj(knowed-10, we-9)
advcl(went-3, knowed-10)
advmod(knowed-10, better-11)
advmod(act-15, now-12)
mark(act-15, than-13)
aux(act-15, to-14)
advcl(better-11, act-15)
prep_like(act-15, that-17)
advcl(better-11, scare-19)
conj_and(act-15, scare-19)
poss(camels-22, people-20)
dobj(scare-19, camels-22)
conj_and(act-15, break-24)
conj_and(scare-19, break-24)
prt(break-24, up-25)
poss(caravans-27, their-26)
dobj(break-24, caravans-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ gayest) (NN outfit))
        (SBAR
          (S
            (NP (PRP you))
            (VP
              (ADVP (RB ever))
              (VBP see) (, ,)
              (PP (IN for)
                (NP
                  (NP (JJ rich) (NNS clothes))
                  (CC and)
                  (NP (JJ nobby) (NN style)))))))))
    (. .)))

nsubj(outfit-5, It-1)
cop(outfit-5, was-2)
det(outfit-5, the-3)
amod(outfit-5, gayest-4)
root(ROOT-0, outfit-5)
nsubj(see-8, you-6)
advmod(see-8, ever-7)
rcmod(outfit-5, see-8)
amod(clothes-12, rich-11)
prep_for(see-8, clothes-12)
amod(style-15, nobby-14)
prep_for(see-8, style-15)
conj_and(clothes-12, style-15)

(ROOT
  (S
    (S
      (NP
        (NP (DT Some))
        (PP (IN of)
          (NP (DT the) (NNS chiefs))))
      (VP (VBD rode)
        (PP (IN on)
          (NP
            (NP (NNS dromedaries))
            (, ,)
            (UCP
              (NP
                (NP (DT the) (JJ first))
                (SBAR
                  (S
                    (NP (PRP we))
                    (ADVP (RB ever))
                    (VP (VBP see)))))
              (, ,)
              (CC and)
              (ADJP (RB very) (JJ tall)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP go)
        (S
          (S
            (VP (VBG plunging)
              (PRT (RP along))
              (SBAR (IN like)
                (S
                  (S
                    (NP (PRP they))
                    (VP (VBD was)
                      (PP (IN on)
                        (NP (NNS stilts)))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP they))
                    (VP
                      (VP (VB rock)
                        (NP
                          (NP (DT the) (NN man))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ is)
                                (PP (IN on)
                                  (NP (PRP them)))
                                (ADJP (RB pretty) (JJ violent)))))))
                      (CC and)
                      (VP (VB churn)
                        (PRT (RP up))
                        (NP (PRP$ his) (NN dinner)))))))))
          (ADJP (JJ considerable)))))
    (, ,)
    (S
      (S
        (NP (PRP I))
        (VP (VBP bet)
          (NP (PRP you))))
      (, ,)
      (CC but)
      (S
        (NP (PRP they))
        (VP (VBP make)
          (ADJP (JJ noble))
          (NP (JJ good) (NN time)))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN camel))
      (VP (VBP ai) (RB n't)
        (ADJP (JJ nowheres)
          (PP (IN with)
            (NP (PRP them))))
        (PP (IN for)
          (NP (NN speed)))))
    (. .)))

nsubj(rode-5, Some-1)
det(chiefs-4, the-3)
prep_of(Some-1, chiefs-4)
root(ROOT-0, rode-5)
prep_on(rode-5, dromedaries-7)
det(first-10, the-9)
appos(dromedaries-7, first-10)
nsubj(see-13, we-11)
advmod(see-13, ever-12)
rcmod(first-10, see-13)
advmod(tall-17, very-16)
appos(dromedaries-7, tall-17)
conj_and(first-10, tall-17)
nsubj(go-21, they-20)
conj_and(rode-5, go-21)
dep(go-21, plunging-22)
prt(plunging-22, along-23)
mark(was-26, like-24)
nsubj(was-26, they-25)
advcl(plunging-22, was-26)
prep_on(was-26, stilts-28)
nsubj(rock-32, they-31)
nsubj(churn-42, they-31)
advcl(plunging-22, rock-32)
conj_and(was-26, rock-32)
det(man-34, the-33)
dobj(rock-32, man-34)
nsubj(violent-40, man-34)
cop(violent-40, is-36)
prep_on(violent-40, them-38)
advmod(violent-40, pretty-39)
rcmod(man-34, violent-40)
conj_and(was-26, churn-42)
conj_and(rock-32, churn-42)
prt(churn-42, up-43)
poss(dinner-45, his-44)
dobj(churn-42, dinner-45)
dep(plunging-22, considerable-46)
nsubj(bet-49, I-48)
ccomp(rode-5, bet-49)
conj_and(rode-5, bet-49)
dobj(bet-49, you-50)
nsubj(make-54, they-53)
ccomp(rode-5, make-54)
conj_and(rode-5, make-54)
conj_but(bet-49, make-54)
acomp(make-54, noble-55)
amod(time-57, good-56)
dobj(make-54, time-57)
det(camel-61, a-60)
nsubj(nowheres-64, camel-61)
cop(nowheres-64, ai-62)
neg(nowheres-64, n't-63)
conj_and(rode-5, nowheres-64)
prep_with(nowheres-64, them-66)
prep_for(nowheres-64, speed-68)

(ROOT
  (S
    (S
      (NP (DT The) (NN caravan))
      (VP (VBD camped) (, ,)
        (PP (IN during)
          (NP
            (NP (DT the) (JJ middle) (NN part))
            (PP (IN of)
              (NP (DT the) (NN day)))))))
    (, ,)
    (CC and)
    (S
      (NP (RB then))
      (VP (VBD started)
        (ADVP (RB again))
        (PP (IN about)
          (NP
            (NP (DT the) (NN middle))
            (PP (IN of)
              (NP (DT the) (NN afternoon)))))))
    (. .)))

det(caravan-2, The-1)
nsubj(camped-3, caravan-2)
root(ROOT-0, camped-3)
det(part-8, the-6)
amod(part-8, middle-7)
prep_during(camped-3, part-8)
det(day-11, the-10)
prep_of(part-8, day-11)
nsubj(started-15, then-14)
conj_and(camped-3, started-15)
advmod(started-15, again-16)
det(middle-19, the-18)
prep_about(started-15, middle-19)
det(afternoon-22, the-21)
prep_of(middle-19, afternoon-22)

(ROOT
  (S
    (ADVP (IN Before) (RB long))
    (NP (DT the) (NN sun))
    (VP (VBZ begun)
      (S
        (VP (TO to)
          (VP (VB look)
            (NP (RB very) (JJ curious))))))
    (. .)))

advmod(begun-5, Before-1)
advmod(Before-1, long-2)
det(sun-4, the-3)
nsubj(begun-5, sun-4)
nsubj(look-7, sun-4)
root(ROOT-0, begun-5)
aux(look-7, to-6)
xcomp(begun-5, look-7)
advmod(curious-9, very-8)
dobj(look-7, curious-9)

(ROOT
  (S
    (LST (JJ First))
    (S
      (NP (PRP it))
      (ADVP (NN kind) (IN of))
      (VP (VBD turned)
        (PP
          (PP (TO to)
            (NP (NN brass)))
          (, ,)
          (CC and)
          (RB then)
          (PP (TO to)
            (NP (NN copper))))))
    (, ,)
    (CC and)
    (S
      (PP (IN after)
        (NP
          (SBAR (IN that)
            (S
              (S
                (NP (PRP it))
                (VP (VBN begun)
                  (S
                    (VP (TO to)
                      (VP (VB look)
                        (PP (IN like)
                          (NP (DT a) (JJ blood-red) (NN ball))))))))
              (, ,)
              (CC and)
              (S
                (NP (DT the) (NN air))
                (VP (VBD got)
                  (ADJP (JJ hot)
                    (CC and)
                    (JJ close))))))
          (, ,)
          (CC and)
          (ADVP (RB pretty) (RB soon))
          (NP
            (NP
              (NP (PDT all) (DT the) (NN sky))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN west))
                  (VP
                    (VP (VBN darkened)
                      (PRT (RP up)))
                    (CC and)
                    (VP (VBN looked)
                      (ADJP
                        (ADJP (JJ thick)
                          (CC and)
                          (JJ foggy))
                        (, ,)
                        (CC but)
                        (ADJP (JJ fiery)
                          (CC and)
                          (JJ dreadful))))))))
            (PRN (: --)
              (SBAR (IN like)
                (S
                  (NP (PRP it))
                  (VP (VBZ looks)
                    (PP (IN through)
                      (NP
                        (NP (DT a) (NN piece))
                        (PP (IN of)
                          (NP (JJ red) (NN glass))))))))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (. .)))

dep(turned-5, First-1)
nsubj(turned-5, it-2)
dep(of-4, kind-3)
advmod(turned-5, of-4)
root(ROOT-0, turned-5)
prep_to(turned-5, brass-7)
advmod(turned-5, then-10)
prep_to(turned-5, copper-12)
conj_and(brass-7, copper-12)
mark(begun-18, that-16)
nsubj(begun-18, it-17)
nsubj(look-20, it-17)
dep(sky-39, begun-18)
aux(look-20, to-19)
xcomp(begun-18, look-20)
det(ball-24, a-22)
amod(ball-24, blood-red-23)
prep_like(look-20, ball-24)
det(air-28, the-27)
nsubj(hot-30, air-28)
nsubj(close-32, air-28)
dep(hot-30, got-29)
conj_and(begun-18, hot-30)
dep(sky-39, hot-30)
conj_and(begun-18, close-32)
conj_and(hot-30, close-32)
advmod(soon-36, pretty-35)
advmod(sky-39, soon-36)
conj_and(sky-39, soon-36)
prep_after(know-67, soon-36)
predet(sky-39, all-37)
det(sky-39, the-38)
prep_after(know-67, sky-39)
det(west-42, the-41)
prep_in(sky-39, west-42)
dep(west-42, darkened-43)
prt(darkened-43, up-44)
dep(west-42, looked-46)
conj_and(darkened-43, looked-46)
acomp(looked-46, thick-47)
acomp(looked-46, foggy-49)
conj_and(thick-47, foggy-49)
acomp(looked-46, fiery-52)
conj_but(thick-47, fiery-52)
conj_but(thick-47, dreadful-54)
conj_and(fiery-52, dreadful-54)
mark(looks-58, like-56)
nsubj(looks-58, it-57)
dep(sky-39, looks-58)
det(piece-61, a-60)
prep_through(looks-58, piece-61)
amod(glass-64, red-63)
prep_of(piece-61, glass-64)
nsubj(know-67, you-66)
conj_and(turned-5, know-67)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD looked)
        (PRT (RP down)))
      (CC and)
      (VP (VBP see)
        (NP
          (NP
            (NP (DT a) (JJ big) (NN confusion))
            (VP (VBG going)
              (PRT (RP on))
              (PP (IN in)
                (NP (DT the) (NN caravan)))))
          (, ,)
          (CC and)
          (NP
            (NP (DT a) (JJ rushing) (DT every))
            (SBAR
              (WHNP (WDT which))
              (S
                (S
                  (NP
                    (NP (NN way))
                    (PP (IN like)
                      (NP (PRP they))))
                  (VP (VBD was)
                    (ADJP (VBN scared))))
                (: ;)
                (CC and)
                (RB then)
                (S
                  (NP (PRP they))
                  (ADVP (DT all))
                  (VP
                    (VP (VBD flopped)
                      (ADVP (RB down) (JJ flat))
                      (PP (IN in)
                        (NP (DT the) (NN sand))))
                    (CC and)
                    (VP (VBD laid)
                      (S
                        (NP (EX there))
                        (ADJP (RB perfectly) (RB still))))))))))))
    (. .)))

nsubj(looked-2, We-1)
nsubj(see-5, We-1)
root(ROOT-0, looked-2)
prt(looked-2, down-3)
conj_and(looked-2, see-5)
det(confusion-8, a-6)
amod(confusion-8, big-7)
dobj(see-5, confusion-8)
vmod(confusion-8, going-9)
prt(going-9, on-10)
det(caravan-13, the-12)
prep_in(going-9, caravan-13)
det(every-18, a-16)
amod(every-18, rushing-17)
dobj(see-5, every-18)
conj_and(confusion-8, every-18)
dep(scared-24, every-18)
nsubjpass(scared-24, way-20)
prep_like(way-20, they-22)
auxpass(scared-24, was-23)
rcmod(every-18, scared-24)
advmod(flopped-30, then-27)
nsubj(flopped-30, they-28)
nsubj(laid-37, they-28)
advmod(flopped-30, all-29)
rcmod(every-18, flopped-30)
conj_and(scared-24, flopped-30)
advmod(flat-32, down-31)
advmod(flopped-30, flat-32)
det(sand-35, the-34)
prep_in(flopped-30, sand-35)
conj_and(scared-24, laid-37)
conj_and(flopped-30, laid-37)
expl(still-40, there-38)
nsubj(still-40, there-38)
advmod(still-40, perfectly-39)
xcomp(laid-37, still-40)

(ROOT
  (S
    (S
      (ADVP (RB Pretty) (RB soon))
      (NP (PRP we))
      (VP
        (VP (VBP see)
          (NP (NN something))
          (S
            (VP (VBG coming)
              (SBAR (IN that)
                (S
                  (VP
                    (VP (VBD stood)
                      (PRT (RP up))
                      (PP (IN like)
                        (NP (DT an) (JJ amazing) (JJ wide) (NN wall))))
                    (, ,)
                    (CC and)
                    (VP (VBD reached)
                      (PP (IN from)
                        (NP (DT the) (NNP Desert)))
                      (ADVP (RB up)
                        (PP (IN into)
                          (NP (DT the) (NN sky)))))))))))
        (CC and)
        (VP (VBP hid)
          (NP (DT the) (NN sun)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBG coming)
          (PP (IN like)
            (NP (DT the) (NN nation)))
          (, ,)
          (ADVP (RB too)))))
    (. .)))

advmod(soon-2, Pretty-1)
advmod(see-4, soon-2)
nsubj(see-4, we-3)
nsubj(hid-26, we-3)
root(ROOT-0, see-4)
dobj(see-4, something-5)
xcomp(see-4, coming-6)
mark(stood-8, that-7)
ccomp(coming-6, stood-8)
prt(stood-8, up-9)
det(wall-14, an-11)
amod(wall-14, amazing-12)
amod(wall-14, wide-13)
prep_like(stood-8, wall-14)
ccomp(coming-6, reached-17)
conj_and(stood-8, reached-17)
det(Desert-20, the-19)
prep_from(reached-17, Desert-20)
advmod(reached-17, up-21)
det(sky-24, the-23)
prep_into(up-21, sky-24)
conj_and(see-4, hid-26)
det(sun-28, the-27)
dobj(hid-26, sun-28)
nsubj(coming-33, it-31)
aux(coming-33, was-32)
conj_and(see-4, coming-33)
det(nation-36, the-35)
prep_like(coming-33, nation-36)
advmod(coming-33, too-38)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (DT a) (JJ little) (JJ faint) (NN breeze))
        (VP (VBD struck)
          (NP (PRP us))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (S
          (NP (PRP it))
          (VP (VBP come)
            (ADVP (RBR harder))))
        (, ,)
        (CC and)
        (S
          (S
            (NP
              (NP (NNS grains))
              (PP (IN of)
                (NP (NN sand))))
            (VP
              (VP (VBN begun)
                (S
                  (VP (TO to)
                    (VP (VB sift)
                      (PP (IN against)
                        (NP (PRP$ our) (NNS faces)))))))
              (CC and)
              (VP (VBG sting)
                (PP (IN like)
                  (NP (NN fire))))))
          (, ,)
          (CC and)
          (S
            (NP (NNP Tom))
            (VP (VBN sung)
              (PRT (RP out)))))))
    (: :) (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN sand-storm))
          (: --)
          (VP (VB turn)
            (NP (PRP$ your) (NNS backs))
            (PP (TO to)
              (NP (PRP it)))))))
    (. !) ('' '')))

advmod(struck-6, Then-1)
det(breeze-5, a-2)
amod(breeze-5, little-3)
amod(breeze-5, faint-4)
nsubj(struck-6, breeze-5)
root(ROOT-0, struck-6)
dobj(struck-6, us-7)
advmod(come-12, then-10)
nsubj(come-12, it-11)
conj_and(struck-6, come-12)
advmod(come-12, harder-13)
nsubj(begun-19, grains-16)
nsubj(sift-21, grains-16)
nsubj(sting-26, grains-16)
prep_of(grains-16, sand-18)
conj_and(struck-6, begun-19)
conj_and(come-12, begun-19)
aux(sift-21, to-20)
xcomp(begun-19, sift-21)
poss(faces-24, our-23)
prep_against(sift-21, faces-24)
conj_and(come-12, sting-26)
conj_and(begun-19, sting-26)
prep_like(sting-26, fire-28)
nsubj(sung-32, Tom-31)
conj_and(come-12, sung-32)
conj_and(begun-19, sung-32)
prt(sung-32, out-33)
nsubj(sand-storm-39, It-36)
cop(sand-storm-39, 's-37)
det(sand-storm-39, a-38)
parataxis(struck-6, sand-storm-39)
dep(sand-storm-39, turn-41)
poss(backs-43, your-42)
dobj(turn-41, backs-43)
prep_to(turn-41, it-45)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBN done)
        (NP (PRP it))))
    (: ;)
    (CC and)
    (S
      (S
        (PP (IN in)
          (NP (DT another) (NN minute)))
        (NP (PRP it))
        (VP (VBD was)
          (VP (VBG blowing)
            (NP (DT a) (NN gale)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN sand))
          (VP (VBD beat)
            (PP (IN against)
              (NP (PRP us)))
            (PP (IN by)
              (NP (DT the) (NN shovelful)))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN air))
          (VP (VBD was)
            (ADJP (RB so) (JJ thick)
              (PP (IN with)
                (NP
                  (NP (PRP it))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (MD could) (RB n't)
                        (VP (VB see)
                          (NP (DT a) (NN thing)))))))))))))
    (. .)))

nsubj(done-2, We-1)
root(ROOT-0, done-2)
dobj(done-2, it-3)
det(minute-8, another-7)
prep_in(blowing-11, minute-8)
nsubj(blowing-11, it-9)
aux(blowing-11, was-10)
conj_and(done-2, blowing-11)
det(gale-13, a-12)
dobj(blowing-11, gale-13)
det(sand-17, the-16)
nsubj(beat-18, sand-17)
conj_and(done-2, beat-18)
conj_and(blowing-11, beat-18)
prep_against(beat-18, us-20)
det(shovelful-23, the-22)
prep_by(beat-18, shovelful-23)
det(air-27, the-26)
nsubj(thick-30, air-27)
cop(thick-30, was-28)
advmod(thick-30, so-29)
conj_and(blowing-11, thick-30)
conj_and(beat-18, thick-30)
prep_with(thick-30, it-32)
nsubj(see-36, we-33)
aux(see-36, could-34)
neg(see-36, n't-35)
rcmod(it-32, see-36)
det(thing-38, a-37)
dobj(see-36, thing-38)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (CD five) (NNS minutes)))
      (NP (DT the) (NN boat))
      (VP (VBD was)
        (ADJP (NN level) (JJ full))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (VBD was)
          (VP (VBG setting)
            (PP (IN on)
              (NP
                (NP (DT the) (NNS lockers))
                (VP (VBN buried)
                  (PRT (RP up))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN chin))
                      (PP (IN in)
                        (NP (NN sand)))))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB only))
        (NP (PRP$ our))
        (VP
          (VP (VBZ heads)
            (PRT (RP out)))
          (CC and)
          (VP (MD could)
            (ADVP (RB hardly))
            (VP (VB breathe))))))
    (. .)))

num(minutes-3, five-2)
prep_in(full-8, minutes-3)
det(boat-5, the-4)
nsubj(full-8, boat-5)
cop(full-8, was-6)
npadvmod(full-8, level-7)
root(ROOT-0, full-8)
nsubj(setting-13, we-11)
aux(setting-13, was-12)
conj_and(full-8, setting-13)
det(lockers-16, the-15)
prep_on(setting-13, lockers-16)
vmod(lockers-16, buried-17)
prt(buried-17, up-18)
det(chin-21, the-20)
prep_to(buried-17, chin-21)
prep_in(chin-21, sand-23)
advmod(heads-28, only-26)
nsubj(heads-28, our-27)
nsubj(breathe-33, our-27)
conj_and(full-8, heads-28)
conj_and(setting-13, heads-28)
prt(heads-28, out-29)
aux(breathe-33, could-31)
advmod(breathe-33, hardly-32)
conj_and(setting-13, breathe-33)
conj_and(heads-28, breathe-33)

(ROOT
  (S (RB Then)
    (S
      (NP (DT the) (NN storm))
      (VP (VBN thinned)))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP see)
        (SBAR (IN that)
          (S
            (NP (JJ monstrous) (NN wall))
            (VP (VBP go)
              (S
                (VP (VBG a-sailing)
                  (PRT (RP off))
                  (PP (IN across)
                    (NP (DT the) (NN desert)))))
              (, ,)
              (ADJP (JJ awful)
                (S
                  (VP (TO to)
                    (VP (VB look)
                      (PP (IN at))
                      (, ,)
                      (S
                        (NP (PRP I))
                        (VP (VB tell)
                          (NP (PRP you)))))))))))))
    (. .)))

advmod(thinned-4, Then-1)
det(storm-3, the-2)
nsubj(thinned-4, storm-3)
root(ROOT-0, thinned-4)
nsubj(see-8, we-7)
conj_and(thinned-4, see-8)
mark(go-12, that-9)
amod(wall-11, monstrous-10)
nsubj(go-12, wall-11)
ccomp(see-8, go-12)
xcomp(go-12, a-sailing-13)
prt(a-sailing-13, off-14)
det(desert-17, the-16)
prep_across(a-sailing-13, desert-17)
acomp(go-12, awful-19)
aux(look-21, to-20)
xcomp(awful-19, look-21)
prep(look-21, at-22)
nsubj(tell-25, I-24)
ccomp(look-21, tell-25)
dobj(tell-25, you-26)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD dug)
          (NP (PRP ourselves))
          (PRT (RP out)))
        (CC and)
        (VP (VBD looked)
          (PRT (RP down)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NN caravan))
          (VP (VBD was)
            (ADVP (RB before)))))
      (NP (EX there))
      (VP (VBD was) (RB n't)
        (ADJP
          (ADJP
            (ADJP (NN anything))
            (PRN (CC but)
              (ADVP (RB just))
              (ADVP
                (ADVP
                  (NP (DT the) (NN sand) (NN ocean))
                  (RB now))
                (, ,)
                (CC and)
                (RB all)
                (ADVP (RB still)))))
          (CC and)
          (ADJP (JJ quiet)))))
    (. .)))

nsubj(dug-2, We-1)
nsubj(looked-6, We-1)
nsubj(was-16, We-1)
root(ROOT-0, dug-2)
dobj(dug-2, ourselves-3)
prt(dug-2, out-4)
conj_and(dug-2, looked-6)
prt(looked-6, down-7)
advmod(was-13, where-10)
det(caravan-12, the-11)
nsubj(was-13, caravan-12)
advcl(was-16, was-13)
advmod(was-13, before-14)
expl(was-16, there-15)
conj_and(dug-2, was-16)
neg(was-16, n't-17)
acomp(was-16, anything-18)
cc(just-20, but-19)
dep(anything-18, just-20)
det(ocean-23, the-21)
nn(ocean-23, sand-22)
npadvmod(now-24, ocean-23)
dep(just-20, now-24)
dep(just-20, all-27)
conj_and(now-24, all-27)
dep(now-24, still-28)
acomp(was-16, quiet-30)
conj_and(anything-18, quiet-30)

(ROOT
  (S
    (S
      (NP
        (NP (DT All) (PRP them) (NNS people))
        (CC and)
        (NP (NNS camels)))
      (VP
        (VP (VBD was)
          (ADJP (JJ smothered)
            (CC and)
            (JJ dead)))
        (CC and)
        (VP (VBD buried) (: --)
          (VP (VBN buried)
            (PP (IN under)
              (NP
                (NP (CD ten) (NN foot))
                (PP (IN of)
                  (NP (NN sand)))))))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBN reckoned)))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NNP Tom))
        (VP (VBD allowed)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD might)
                (VP (VB be)
                  (NP (NNS years))
                  (SBAR (IN before)
                    (S
                      (NP (DT the) (NN wind))
                      (VP (VBD uncovered)
                        (NP (PRP them)))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PDT all) (DT that) (NN time))
        (NP (PRP$ their) (NNS friends))
        (VP (MD would) (RB n't)
          (ADVP (RB ever))
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBN become)
                  (PP (IN of)
                    (NP (DT that) (NN caravan))))))))))
    (. .)))

det(people-3, All-1)
dep(people-3, them-2)
nsubj(smothered-7, people-3)
nsubj(dead-9, people-3)
nsubj(buried-11, people-3)
conj_and(people-3, camels-5)
nsubj(smothered-7, camels-5)
cop(smothered-7, was-6)
root(ROOT-0, smothered-7)
conj_and(smothered-7, dead-9)
conj_and(smothered-7, buried-11)
dep(buried-11, buried-13)
num(foot-16, ten-15)
prep_under(buried-13, foot-16)
prep_of(foot-16, sand-18)
nsubj(reckoned-21, we-20)
conj_and(smothered-7, reckoned-21)
nsubj(allowed-25, Tom-24)
conj_and(smothered-7, allowed-25)
nsubj(years-29, it-26)
aux(years-29, might-27)
cop(years-29, be-28)
ccomp(allowed-25, years-29)
mark(uncovered-33, before-30)
det(wind-32, the-31)
nsubj(uncovered-33, wind-32)
advcl(years-29, uncovered-33)
dobj(uncovered-33, them-34)
predet(time-39, all-37)
det(time-39, that-38)
nsubj(know-45, time-39)
poss(friends-41, their-40)
nsubj(know-45, friends-41)
aux(know-45, would-42)
neg(know-45, n't-43)
advmod(know-45, ever-44)
conj_and(smothered-7, know-45)
conj_and(allowed-25, know-45)
nsubj(become-47, what-46)
ccomp(know-45, become-47)
det(caravan-50, that-49)
prep_of(become-47, caravan-50)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD said) (: :) (`` ``)
      (S
        (ADVP (RB NOW))
        (NP (PRP we))
        (VP (VBP know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBD was)
                (SBAR (IN that)
                  (S
                    (VP (VBD happened)
                      (PP (TO to)
                        (NP (DT the) (NNS people)))
                      (SBAR
                        (S
                          (NP (PRP we))
                          (VP (VBD got)
                            (NP (DT the) (NNS swords)
                              (CC and)
                              (NNS pistols))
                            (PP (IN from))))))))))))))
    (. .) ('' '')))

nsubj(said-2, Tom-1)
root(ROOT-0, said-2)
advmod(know-7, NOW-5)
nsubj(know-7, we-6)
ccomp(said-2, know-7)
dobj(was-10, what-8)
nsubj(happened-12, what-8)
nsubj(was-10, it-9)
ccomp(know-7, was-10)
mark(happened-12, that-11)
ccomp(was-10, happened-12)
det(people-15, the-14)
prep_to(happened-12, people-15)
nsubj(got-17, we-16)
ccomp(happened-12, got-17)
det(swords-19, the-18)
dobj(got-17, swords-19)
dobj(got-17, pistols-21)
conj_and(swords-19, pistols-21)
prep(got-17, from-22)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (DT that))
    (VP (VBD was)
      (ADVP (RB just))
      (NP (PRP it)))
    (. .)))

discourse(it-8, Yes-1)
advmod(it-8, sir-3)
nsubj(it-8, that-5)
cop(it-8, was-6)
advmod(it-8, just-7)
root(ROOT-0, it-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB as) (JJ plain)
        (PP (IN as)
          (NP (NN day))))
      (ADVP (RB now)))
    (. .)))

nsubj(plain-4, It-1)
cop(plain-4, was-2)
advmod(plain-4, as-3)
root(ROOT-0, plain-4)
prep_as(plain-4, day-6)
advmod(plain-4, now-7)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD got)
        (VP (VBN buried)
          (PP (IN in)
            (NP (DT a) (NN sand-storm))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (JJ wild) (NNS animals))
        (VP (MD could) (RB n't)
          (VP (VB get)
            (PP (IN at)
              (NP (PRP them))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN wind))
        (VP
          (ADVP (RB never))
          (VBD uncovered)
          (NP (PRP them))
          (ADVP (RB again))
          (SBAR (IN until)
            (S
              (NP (PRP they))
              (VP (VBD was)
                (ADVP (RB dried)
                  (PP (TO to)
                    (NP (NN leather)
                      (CC and)
                      (NN war))))
                (RB n't)
                (VP (VBN fit)
                  (S
                    (VP (TO to)
                      (VP (VB eat)))))))))))
    (. .)))

nsubjpass(buried-3, They-1)
auxpass(buried-3, got-2)
root(ROOT-0, buried-3)
det(sand-storm-6, a-5)
prep_in(buried-3, sand-storm-6)
det(animals-11, the-9)
amod(animals-11, wild-10)
nsubj(get-14, animals-11)
aux(get-14, could-12)
neg(get-14, n't-13)
conj_and(buried-3, get-14)
prep_at(get-14, them-16)
det(wind-20, the-19)
nsubj(uncovered-22, wind-20)
neg(uncovered-22, never-21)
conj_and(buried-3, uncovered-22)
conj_and(get-14, uncovered-22)
dobj(uncovered-22, them-23)
advmod(uncovered-22, again-24)
mark(fit-34, until-25)
nsubjpass(fit-34, they-26)
nsubj(eat-36, they-26)
auxpass(fit-34, was-27)
advmod(fit-34, dried-28)
prep_to(dried-28, leather-30)
prep_to(dried-28, war-32)
conj_and(leather-30, war-32)
neg(fit-34, n't-33)
advcl(uncovered-22, fit-34)
aux(eat-36, to-35)
xcomp(fit-34, eat-36)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD had)
              (VP
                (VP (VBN felt)
                  (PP (IN as)
                    (NP
                      (ADJP (JJ sorry)
                        (PP (IN for)
                          (NP (PRP them))))
                      (JJ poor) (NNS people)))
                  (SBAR (IN as)
                    (S
                      (NP (DT a) (NN person))
                      (VP (MD could)
                        (PP (IN for)
                          (NP (NN anybody)))))))
                (, ,)
                (CC and)
                (VP
                  (PP (IN as)
                    (NP (NN mournful)))
                  (, ,)
                  (ADVP (RB too))))))
          (, ,)
          (CC but)
          (S
            (NP (PRP we))
            (VP (VBD was)
              (VP (VBN mistaken)))))))
    (: ;)
    (S
      (NP
        (NP (DT this) (JJ last) (NN caravan) (POS 's))
        (NN death))
      (VP (VBD went)
        (ADVP
          (ADVP (RBR harder))
          (PP (IN with)
            (NP
              (NP (PRP us))
              (, ,)
              (NP (DT a) (JJ good) (NN deal)))))
        (ADVP (RBR harder))))
    (. .)))

nsubj(seemed-2, It-1)
root(ROOT-0, seemed-2)
prep_to(seemed-2, me-4)
nsubj(felt-7, we-5)
aux(felt-7, had-6)
ccomp(seemed-2, felt-7)
amod(people-13, sorry-9)
prep_for(sorry-9, them-11)
amod(people-13, poor-12)
prep_as(felt-7, people-13)
mark(could-17, as-14)
det(person-16, a-15)
nsubj(could-17, person-16)
advcl(felt-7, could-17)
prep_for(could-17, anybody-19)
ccomp(seemed-2, as-22)
conj_and(felt-7, as-22)
pobj(as-22, mournful-23)
advmod(as-22, too-25)
nsubjpass(mistaken-30, we-28)
auxpass(mistaken-30, was-29)
ccomp(seemed-2, mistaken-30)
conj_but(felt-7, mistaken-30)
det(caravan-34, this-32)
amod(caravan-34, last-33)
poss(death-36, caravan-34)
nsubj(went-37, death-36)
parataxis(seemed-2, went-37)
advmod(went-37, harder-38)
prep_with(harder-38, us-40)
det(deal-44, a-42)
amod(deal-44, good-43)
appos(us-40, deal-44)
advmod(went-37, harder-45)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (PRN (, ,)
      (S
        (NP (DT the) (NNS others))
        (VP (VBD was)
          (NP (JJ total) (NNS strangers))))
      (, ,))
    (CC and)
    (S
      (S
        (NP (PRP we))
        (ADVP (RB never))
        (VP (VBD got)
          (PP (TO to)
            (S
              (VP (VBG feeling)
                (ADJP (VBN acquainted)
                  (PP (IN with)
                    (NP (PRP them)))))))
          (PP (IN at)
            (NP (DT all)))
          (, ,)
          (PP (IN except))
          (, ,)
          (ADVP (RB maybe))
          (, ,)
          (PP
            (NP (DT a) (JJ little))
            (IN with)
            (NP
              (NP (DT the) (NN man))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD was)
                    (VP (VBG watching)
                      (NP (DT the) (NN girl))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ different)
            (PP (IN with)
              (NP (DT this) (JJ last) (NN caravan)))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
det(others-5, the-4)
nsubj(strangers-8, others-5)
cop(strangers-8, was-6)
amod(strangers-8, total-7)
dep(see-2, strangers-8)
nsubj(got-13, we-11)
neg(got-13, never-12)
conj_and(see-2, got-13)
prepc_to(got-13, feeling-15)
acomp(feeling-15, acquainted-16)
prep_with(acquainted-16, them-18)
prep_at(got-13, all-20)
prep(got-13, except-22)
advmod(got-13, maybe-24)
det(little-27, a-26)
npadvmod(got-13, little-27)
det(man-30, the-29)
prep_with(got-13, man-30)
nsubj(watching-33, man-30)
aux(watching-33, was-32)
rcmod(man-30, watching-33)
det(girl-35, the-34)
dobj(watching-33, girl-35)
nsubj(different-40, it-38)
cop(different-40, was-39)
conj_and(see-2, different-40)
conj_but(got-13, different-40)
det(caravan-44, this-42)
amod(caravan-44, last-43)
prep_with(different-40, caravan-44)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD was)
        (VP (VBG huvvering)
          (PP (IN around)
            (NP (PRP them)))
          (NP
            (NP (DT a) (JJ whole) (NN night))
            (CC and)
            (`` `)
            (NP
              (NP (JJS most))
              (NP (DT a) (JJ whole) (NN day))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (VP (VBN got)
          (PP (TO to)
            (S
              (VP (VBG feeling)
                (ADJP
                  (ADJP (RB real) (JJ friendly))
                  (PP (IN with)
                    (NP (PRP them)))
                  (, ,)
                  (CC and)
                  (ADJP (VBN acquainted)))))))))
    (. .)))

nsubj(huvvering-3, We-1)
nsubj(got-18, We-1)
aux(huvvering-3, was-2)
root(ROOT-0, huvvering-3)
prep_around(huvvering-3, them-5)
det(night-8, a-6)
amod(night-8, whole-7)
dobj(huvvering-3, night-8)
dobj(huvvering-3, most-11)
conj_and(night-8, most-11)
det(day-14, a-12)
amod(day-14, whole-13)
dep(most-11, day-14)
aux(got-18, had-17)
conj_and(huvvering-3, got-18)
prepc_to(got-18, feeling-20)
advmod(friendly-22, real-21)
acomp(feeling-20, friendly-22)
prep_with(friendly-22, them-24)
acomp(feeling-20, acquainted-27)
conj_and(friendly-22, acquainted-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN found)
        (PRT (RP out))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP ai) (RB n't)
              (NP (DT no) (NN surer) (NN way))
              (S
                (VP (TO to)
                  (VP
                    (VP (VB find)
                      (PRT (RP out))
                      (SBAR (IN whether)
                        (S
                          (NP (PRP you))
                          (VP (VBP like)
                            (NP (NNS people))))))
                    (CC or)
                    (VP (VB hate)
                      (NP (PRP them))
                      (SBAR (IN than)
                        (S
                          (VP (TO to)
                            (VP (VB travel)
                              (PP (IN with)
                                (NP (PRP them))))))))))))))))
    (. .)))

nsubj(found-3, I-1)
aux(found-3, have-2)
root(ROOT-0, found-3)
prt(found-3, out-4)
mark(ai-7, that-5)
expl(ai-7, there-6)
ccomp(found-3, ai-7)
neg(ai-7, n't-8)
neg(way-11, no-9)
nn(way-11, surer-10)
nsubj(ai-7, way-11)
aux(find-13, to-12)
vmod(ai-7, find-13)
prt(find-13, out-14)
mark(like-17, whether-15)
nsubj(like-17, you-16)
ccomp(find-13, like-17)
dobj(like-17, people-18)
vmod(ai-7, hate-20)
conj_or(find-13, hate-20)
dobj(hate-20, them-21)
nsubj(travel-24, them-21)
mark(travel-24, than-22)
aux(travel-24, to-23)
advcl(hate-20, travel-24)
xcomp(hate-20, travel-24)
prep_with(travel-24, them-26)

(ROOT
  (NP
    (NP (RB Just) (RB so))
    (PP (IN with)
      (NP (DT these)))
    (. .)))

advmod(so-2, Just-1)
root(ROOT-0, so-2)
prep_with(so-2, these-4)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (NN kind) (IN of))
      (VP (VBD liked)
        (NP (PRP them))
        (PP (IN from)
          (NP (DT the) (NN start)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG traveling)
          (PP (IN with)
            (NP (PRP them)))))
      (VP (VBD put)
        (PP (IN on)
          (NP (DT the) (NN finisher)))))
    (. .)))

nsubj(liked-4, We-1)
dep(of-3, kind-2)
advmod(liked-4, of-3)
root(ROOT-0, liked-4)
dobj(liked-4, them-5)
det(start-8, the-7)
prep_from(liked-4, start-8)
csubj(put-14, traveling-11)
prep_with(traveling-11, them-13)
conj_and(liked-4, put-14)
det(finisher-17, the-16)
prep_on(put-14, finisher-17)

(ROOT
  (S
    (S
      (X (DT The) (JJR longer))
      (NP (PRP we))
      (VP (VBD traveled)
        (PP (IN with)
          (NP (PRP them)))))
    (, ,)
    (CC and)
    (S
      (S
        (SBAR
          (X (DT the) (JJR more))
          (S
            (NP (PRP we))
            (VP (VBD got)
              (VP (VBN used)
                (PP (TO to)
                  (NP (PRP$ their) (NNS ways)))))))
        (, ,)
        (X (DT the)
          (ADJP
            (ADJP (JJR better))
            (CC and)
            (ADJP (JJR better))))
        (NP (PRP we))
        (VP (VBD liked)
          (NP (PRP them))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT the) (NN gladder))
          (CC and)
          (NP (NN gladder)))
        (NP (PRP we))
        (VP (VBD was)
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP run)
                (PP (IN across)
                  (NP (PRP them)))))))))
    (. .)))

det(longer-2, The-1)
dep(traveled-4, longer-2)
nsubj(traveled-4, we-3)
root(ROOT-0, traveled-4)
prep_with(traveled-4, them-6)
det(more-10, the-9)
dep(used-13, more-10)
nsubjpass(used-13, we-11)
auxpass(used-13, got-12)
advcl(liked-23, used-13)
poss(ways-16, their-15)
prep_to(used-13, ways-16)
det(better-19, the-18)
dep(liked-23, better-19)
conj_and(better-19, better-21)
dep(liked-23, better-21)
nsubj(liked-23, we-22)
conj_and(traveled-4, liked-23)
dobj(liked-23, them-24)
det(gladder-28, the-27)
nsubj(was-32, gladder-28)
conj_and(gladder-28, gladder-30)
nsubj(was-32, gladder-30)
nsubj(was-32, we-31)
conj_and(traveled-4, was-32)
conj_and(liked-23, was-32)
mark(run-35, that-33)
nsubj(run-35, we-34)
ccomp(was-32, run-35)
prep_across(run-35, them-37)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD had)
        (VP (VBN come)
          (S
            (VP (TO to)
              (VP (VB know)
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (NP (PRP them))))
                (ADVP
                  (ADVP (RB so) (RB well))
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP
                        (VP (VBD called)
                          (NP (PRP them))
                          (PP (IN by)
                            (NP (NN name)))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP we))
                              (VP (VBD was)
                                (VP (VBG talking)
                                  (PP (IN about)
                                    (NP (PRP them))))))))
                        (, ,)
                        (CC and)
                        (VP
                          (ADVP (RB soon))
                          (VBD got)
                          (ADJP (RB so) (JJ familiar)
                            (CC and)
                            (JJ sociable)
                            (SBAR (IN that)
                              (S
                                (NP (PRP we))
                                (VP
                                  (VP
                                    (ADVP (RB even))
                                    (VBD dropped)
                                    (NP (DT the) (NNP Miss)
                                      (CC and)
                                      (NNP Mister)))
                                  (CC and)
                                  (VP
                                    (ADVP (RB just))
                                    (VBD used)
                                    (NP (PRP$ their) (JJ plain) (NNS names)))))))
                          (PP (IN without)
                            (NP (DT any) (NN handle))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD did) (RB not)
        (VP (VB seem)
          (NP
            (NP (NN unpolite))
            (, ,)
            (CONJP (CC but)
              (RB just))
            (NP (DT the) (JJ right) (NN thing))))))
    (. .)))

nsubj(come-3, We-1)
nsubj(know-5, We-1)
aux(come-3, had-2)
root(ROOT-0, come-3)
aux(know-5, to-4)
xcomp(come-3, know-5)
dobj(know-5, some-6)
prep_of(some-6, them-8)
advmod(well-10, so-9)
advmod(know-5, well-10)
mark(called-13, that-11)
nsubj(called-13, we-12)
nsubj(familiar-28, we-12)
advcl(well-10, called-13)
ccomp(well-10, called-13)
dobj(called-13, them-14)
prep_by(called-13, name-16)
advmod(talking-20, when-17)
nsubj(talking-20, we-18)
aux(talking-20, was-19)
advcl(called-13, talking-20)
prep_about(talking-20, them-22)
advmod(familiar-28, soon-25)
dep(familiar-28, got-26)
advmod(familiar-28, so-27)
advcl(well-10, familiar-28)
ccomp(well-10, familiar-28)
conj_and(called-13, familiar-28)
conj_and(called-13, sociable-30)
conj_and(familiar-28, sociable-30)
mark(dropped-34, that-31)
nsubj(dropped-34, we-32)
nsubj(used-41, we-32)
advmod(dropped-34, even-33)
ccomp(familiar-28, dropped-34)
det(Miss-36, the-35)
dobj(dropped-34, Miss-36)
dobj(dropped-34, Mister-38)
conj_and(Miss-36, Mister-38)
advmod(used-41, just-40)
ccomp(familiar-28, used-41)
conj_and(dropped-34, used-41)
poss(names-44, their-42)
amod(names-44, plain-43)
dobj(used-41, names-44)
det(handle-47, any-46)
prep_without(familiar-28, handle-47)
nsubj(seem-53, it-50)
aux(seem-53, did-51)
neg(seem-53, not-52)
conj_and(come-3, seem-53)
xcomp(seem-53, unpolite-54)
det(thing-60, the-58)
amod(thing-60, right-59)
xcomp(seem-53, thing-60)
conj_but(unpolite-54, thing-60)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (, ,)
      (NP (PRP it))
      (VP (VBD was) (RB n't)
        (NP (PRP$ their) (JJ own) (NNS names))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB names))
      (NP (PRP we))
      (VP (VBP give)
        (NP (PRP them))))
    (. .)))

prep_of(names-9, course-2)
nsubj(names-9, it-4)
cop(names-9, was-5)
neg(names-9, n't-6)
poss(names-9, their-7)
amod(names-9, own-8)
root(ROOT-0, names-9)
advmod(give-14, names-12)
nsubj(give-14, we-13)
conj_but(names-9, give-14)
dobj(give-14, them-15)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP
            (NP (NNP Mr.) (NNP Elexander) (NNP Robinson))
            (CC and)
            (NP (NNP Miss) (NNP Adaline) (NNP Robinson)))
          (, ,)
          (CC and)
          (NP
            (NP (NNP Colonel) (NNP Jacob) (NNP McDougal))
            (CC and)
            (NP (NNP Miss) (NNP Harryet) (NNP McDougal)))
          (, ,)
          (CC and)
          (NP
            (NP (NNP Judge) (NNP Jeremiah) (NNP Butler))
            (CC and)
            (NP (JJ young) (NNP Bushrod) (NNP Butler))))))
    (, ,)
    (CC and)
    (S
      (NP (DT these))
      (VP (VBD was)
        (NP
          (NP
            (NP (JJ big) (NNS chiefs))
            (ADVP (RB mostly))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBD wore)
                    (NP (JJ splendid) (JJ great) (NNS turbans)))
                  (CC and)
                  (VP (VBZ simmeters))
                  (, ,)
                  (CC and)
                  (VP (VBD dressed)
                    (PP (IN like)
                      (NP (DT the) (NNP Grand) (NNP Mogul))))))))
          (, ,)
          (CC and)
          (NP (PRP$ their) (NNS families)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nn(Robinson-5, Mr.-3)
nn(Robinson-5, Elexander-4)
nsubj(was-2, Robinson-5)
nn(Robinson-9, Miss-7)
nn(Robinson-9, Adaline-8)
nsubj(was-2, Robinson-9)
conj_and(Robinson-5, Robinson-9)
nn(McDougal-14, Colonel-12)
nn(McDougal-14, Jacob-13)
nsubj(was-2, McDougal-14)
conj_and(Robinson-5, McDougal-14)
nn(McDougal-18, Miss-16)
nn(McDougal-18, Harryet-17)
conj_and(Robinson-5, McDougal-18)
conj_and(McDougal-14, McDougal-18)
nn(Butler-23, Judge-21)
nn(Butler-23, Jeremiah-22)
nsubj(was-2, Butler-23)
conj_and(Robinson-5, Butler-23)
amod(Butler-27, young-25)
nn(Butler-27, Bushrod-26)
conj_and(Robinson-5, Butler-27)
conj_and(Butler-23, Butler-27)
nsubj(chiefs-33, these-30)
cop(chiefs-33, was-31)
amod(chiefs-33, big-32)
conj_and(was-2, chiefs-33)
nsubj(wore-36, chiefs-33)
nsubj(simmeters-41, chiefs-33)
nsubj(dressed-44, chiefs-33)
advmod(chiefs-33, mostly-34)
rcmod(chiefs-33, wore-36)
amod(turbans-39, splendid-37)
amod(turbans-39, great-38)
dobj(wore-36, turbans-39)
rcmod(chiefs-33, simmeters-41)
conj_and(wore-36, simmeters-41)
rcmod(chiefs-33, dressed-44)
conj_and(wore-36, dressed-44)
det(Mogul-48, the-46)
nn(Mogul-48, Grand-47)
prep_like(dressed-44, Mogul-48)
poss(families-52, their-51)
conj_and(was-2, families-52)
conj_and(chiefs-33, families-52)
nsubj(wore-36, families-52)

(ROOT
  (S (CC But)
    (ADVP (RB as) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP come)
            (S
              (VP (TO to)
                (VP
                  (VP (VB know)
                    (S
                      (NP (PRP them))
                      (ADJP (JJ good))))
                  (, ,)
                  (CC and)
                  (VP (VB like)
                    (S
                      (NP (PRP them))
                      (ADJP (RB very) (JJ much)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD war) (RB n't)
      (UCP
        (NP
          (NP
            (NP (NNP Mister))
            (, ,)
            (CC nor)
            (NP (NNP Judge))
            (, ,)
            (NP (CC nor)
              (NN nothing))
            (, ,)
            (ADJP (DT any) (JJR more))
            (, ,))
          (PP (CC but)
            (NP (JJ only) (NNP Elleck))))
        (, ,)
        (CC and)
        (NP (NNP Addy))
        (, ,)
        (CC and)
        (NP (NNP Jake))
        (, ,)
        (CC and)
        (NP (NNP Hattie))
        (, ,)
        (CC and)
        (NP (NNP Jerry))
        (, ,)
        (CC and)
        (NP (NNP Buck))
        (, ,)
        (CC and)
        (ADVP (RB so))
        (PP (IN on))))
    (. .)))

cc(war-19, But-1)
advmod(soon-3, as-2)
advmod(war-19, soon-3)
mark(come-6, as-4)
nsubj(come-6, we-5)
nsubj(know-8, we-5)
nsubj(like-13, we-5)
ccomp(soon-3, come-6)
aux(know-8, to-7)
xcomp(come-6, know-8)
nsubj(good-10, them-9)
xcomp(know-8, good-10)
xcomp(come-6, like-13)
conj_and(know-8, like-13)
nsubj(much-16, them-14)
advmod(much-16, very-15)
xcomp(like-13, much-16)
nsubj(war-19, it-18)
root(ROOT-0, war-19)
neg(war-19, n't-20)
dobj(war-19, Mister-21)
dobj(war-19, Judge-24)
conj_nor(Mister-21, Judge-24)
cc(nothing-27, nor-26)
dobj(war-19, nothing-27)
conj_nor(Mister-21, nothing-27)
det(more-30, any-29)
dobj(war-19, more-30)
amod(Mister-21, more-30)
conj_nor(Mister-21, more-30)
prep(Mister-21, but-32)
amod(Elleck-34, only-33)
pobj(but-32, Elleck-34)
dobj(war-19, Addy-37)
conj_and(Mister-21, Addy-37)
dobj(war-19, Jake-40)
conj_and(Mister-21, Jake-40)
dobj(war-19, Hattie-43)
conj_and(Mister-21, Hattie-43)
dobj(war-19, Jerry-46)
conj_and(Mister-21, Jerry-46)
dobj(war-19, Buck-49)
conj_and(Mister-21, Buck-49)
advmod(on-53, so-52)
dobj(war-19, on-53)
conj_and(Mister-21, on-53)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (S
          (SBAR
            (X (DT the) (JJR more))
            (S
              (NP (PRP you))
              (VP (VB join)
                (PRT (RP in))
                (PP (IN with)
                  (NP
                    (NP
                      (NP (NNS people))
                      (PP (IN in)
                        (NP (PRP$ their) (NNS joys))))
                    (CC and)
                    (NP
                      (NP (PRP$ their) (NNS sorrows))
                      (, ,)
                      (NP (DT the) (JJR more) (NN nearer))
                      (CC and)
                      (NP (NN dearer))))))))
          (NP (PRP they))
          (VP (VBP come)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (TO to)
                    (NP (PRP you))))))))))
    (. .)))

cc(know-3, And-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
det(more-5, the-4)
dep(join-7, more-5)
nsubj(join-7, you-6)
advcl(come-24, join-7)
prt(join-7, in-8)
prep_with(join-7, people-10)
poss(joys-13, their-12)
prep_in(people-10, joys-13)
poss(sorrows-16, their-15)
prep_with(join-7, sorrows-16)
conj_and(people-10, sorrows-16)
det(nearer-20, the-18)
amod(nearer-20, more-19)
conj_and(people-10, nearer-20)
conj_and(sorrows-16, nearer-20)
conj_and(people-10, dearer-22)
conj_and(sorrows-16, dearer-22)
nsubj(come-24, they-23)
nsubj(be-26, they-23)
ccomp(know-3, come-24)
aux(be-26, to-25)
xcomp(come-24, be-26)
prep_to(be-26, you-28)

(ROOT
  (S
    (ADVP (RB Now))
    (PRN
      (S
        (S
          (NP (PRP we))
          (VP (VBP war) (RB n't)
            (ADJP (JJ cold)
              (CC and)
              (JJ indifferent))))
        (, ,)
        (S
          (NP
            (NP (DT the) (NN way))
            (SBAR
              (S
                (NP (JJS most) (NNS travelers))
                (VP (VBZ is)))))
          (, ,)
          (NP (PRP we))
          (VP
            (VP (VBD was)
              (ADVP (RB right) (RB down))
              (ADJP (JJ friendly)
                (CC and)
                (JJ sociable)))
            (, ,)
            (CC and)
            (VP (VBD took)
              (NP (DT a) (NN chance))
              (PP (IN in)
                (NP
                  (NP (NN everything))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD was)
                        (VP (VBG going))))))))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN caravan))
          (VP (MD could)
            (VP (VB depend)
              (PP (IN on)
                (NP (PRP us)))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (PP (IN on)
                      (NP (NN hand)))
                    (NP (DT every) (NN time)))))))))
      (, ,))
    (NP (PRP it))
    (VP (VBD did) (RB n't)
      (VP (VB make)
        (NP
          (NP (DT no) (NN difference))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBD was)))))))
    (. .)))

advmod(make-50, Now-1)
nsubj(war-3, we-2)
parataxis(make-50, war-3)
neg(war-3, n't-4)
acomp(war-3, cold-5)
acomp(war-3, indifferent-7)
conj_and(cold-5, indifferent-7)
det(way-10, the-9)
nsubj(friendly-19, way-10)
nsubj(sociable-21, way-10)
nsubj(took-24, way-10)
amod(travelers-12, most-11)
nsubj(is-13, travelers-12)
rcmod(way-10, is-13)
nsubj(friendly-19, we-15)
cop(friendly-19, was-16)
advmod(down-18, right-17)
advmod(friendly-19, down-18)
ccomp(war-3, friendly-19)
conj_and(war-3, friendly-19)
parataxis(make-50, friendly-19)
ccomp(war-3, sociable-21)
conj_and(war-3, sociable-21)
conj_and(friendly-19, sociable-21)
ccomp(war-3, took-24)
conj_and(war-3, took-24)
conj_and(friendly-19, took-24)
det(chance-26, a-25)
dobj(took-24, chance-26)
prep_in(took-24, everything-28)
nsubj(going-31, everything-28)
aux(going-31, was-30)
rcmod(everything-28, going-31)
det(caravan-35, the-34)
nsubj(depend-37, caravan-35)
nsubj(time-45, caravan-35)
aux(depend-37, could-36)
conj_and(war-3, depend-37)
parataxis(make-50, depend-37)
prep_on(depend-37, us-39)
aux(time-45, to-40)
cop(time-45, be-41)
prep_on(time-45, hand-43)
det(time-45, every-44)
xcomp(depend-37, time-45)
nsubj(make-50, it-47)
aux(make-50, did-48)
neg(make-50, n't-49)
root(ROOT-0, make-50)
neg(difference-52, no-51)
dobj(make-50, difference-52)
dobj(was-55, difference-52)
nsubj(was-55, it-54)
rcmod(difference-52, was-55)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD camped))))
    (, ,)
    (NP (PRP we))
    (VP (VBD camped)
      (PP (RB right) (IN over)
        (NP (PRP them)))
      (, ,)
      (NP
        (NP
          (QP (CD ten)
            (CC or)
            (CD twelve) (CD hundred))
          (NNS feet))
        (ADVP (RB up)
          (PP (IN in)
            (NP (DT the) (NN air))))))
    (. .)))

advmod(camped-3, When-1)
nsubj(camped-3, they-2)
advcl(camped-6, camped-3)
nsubj(camped-6, we-5)
root(ROOT-0, camped-6)
advmod(camped-6, right-7)
prep_over(camped-6, them-9)
num(feet-15, ten-11)
num(hundred-14, twelve-13)
conj_or(ten-11, hundred-14)
num(feet-15, hundred-14)
dobj(camped-6, feet-15)
advmod(feet-15, up-16)
det(air-19, the-18)
prep_in(up-16, air-19)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP they))
          (VP (VBZ et)
            (NP (DT a) (NN meal)))))
      (, ,)
      (NP (PRP we))
      (VP (VBZ et)
        (NP (NN ourn))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD made)
        (NP (PRP it))
        (NP (RB ever)
          (ADJP (RB so) (JJ much))
          (NN home-liker)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (PRP$ their) (NN company))))))))
    (. .)))

advmod(et-3, When-1)
nsubj(et-3, they-2)
advcl(et-8, et-3)
det(meal-5, a-4)
dobj(et-3, meal-5)
nsubj(et-8, we-7)
root(ROOT-0, et-8)
dobj(et-8, ourn-9)
nsubj(made-13, it-12)
conj_and(et-8, made-13)
iobj(made-13, it-14)
advmod(home-liker-18, ever-15)
advmod(much-17, so-16)
amod(home-liker-18, much-17)
dobj(made-13, home-liker-18)
aux(have-20, to-19)
vmod(home-liker-18, have-20)
poss(company-22, their-21)
dobj(have-20, company-22)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP (PRP they))
            (VP (VBD had)
              (NP
                (NP (DT a) (NN wedding))
                (NP (DT that) (NN night)))))
          (, ,)
          (CC and)
          (S
            (NP (NNP Buck)
              (CC and)
              (NNP Addy))
            (VP (VBD got)
              (ADJP (JJ married))))))
      (, ,)
      (NP (PRP we))
      (VP (VBD got)
        (NP (PRP ourselves))
        (PP (RP up)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ very) (NN starchiest))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN professor) (POS 's))
                  (NNS duds))))))
        (PP (IN for)
          (NP (DT the) (NN blow-out)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBN danced))))
      (NP (PRP we))
      (VP
        (VP (VBD jined)
          (PRT (RP in)))
        (CC and)
        (VP (VBD shook)
          (NP (DT a) (NN foot))
          (ADVP (RB up) (RB there)))))
    (. .)))

advmod(had-3, When-1)
nsubj(had-3, they-2)
advcl(got-17, had-3)
det(wedding-5, a-4)
dobj(had-3, wedding-5)
det(night-7, that-6)
dep(wedding-5, night-7)
nsubj(married-14, Buck-10)
conj_and(Buck-10, Addy-12)
nsubj(married-14, Addy-12)
dep(married-14, got-13)
conj_and(had-3, married-14)
advcl(got-17, married-14)
nsubj(got-17, we-16)
root(ROOT-0, got-17)
dobj(got-17, ourselves-18)
prep(got-17, up-19)
det(starchiest-23, the-21)
amod(starchiest-23, very-22)
prep_in(up-19, starchiest-23)
det(professor-26, the-25)
poss(duds-28, professor-26)
prep_of(starchiest-23, duds-28)
det(blow-out-31, the-30)
prep_for(got-17, blow-out-31)
advmod(danced-36, when-34)
nsubj(danced-36, they-35)
advcl(jined-38, danced-36)
nsubj(jined-38, we-37)
nsubj(shook-41, we-37)
conj_and(got-17, jined-38)
prt(jined-38, in-39)
conj_and(got-17, shook-41)
conj_and(jined-38, shook-41)
det(foot-43, a-42)
dobj(shook-41, foot-43)
advmod(there-45, up-44)
advmod(shook-41, there-45)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (NN sorrow)
            (CC and)
            (NN trouble))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ brings)
                (NP (PRP you))
                (NP (DT the) (JJS nearest))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN funeral))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBN done)
                (NP (PRP it))
                (PP (IN with)
                  (NP (PRP us)))))))))
    (. .)))

nsubj(sorrow-4, it-2)
cop(sorrow-4, is-3)
root(ROOT-0, sorrow-4)
nsubj(brings-8, sorrow-4)
conj_and(sorrow-4, trouble-6)
nsubj(brings-8, trouble-6)
rcmod(sorrow-4, brings-8)
iobj(brings-8, you-9)
det(nearest-11, the-10)
dobj(brings-8, nearest-11)
nsubj(funeral-17, it-14)
cop(funeral-17, was-15)
det(funeral-17, a-16)
conj_and(sorrow-4, funeral-17)
nsubj(done-19, funeral-17)
rcmod(funeral-17, done-19)
dobj(done-19, it-20)
prep_with(done-19, us-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (JJ next) (NN morning))
      (, ,)
      (PP
        (ADVP (RB just))
        (IN in)
        (NP (DT the) (JJ still) (NN dawn))))
    (. .)))

nsubj(morning-4, It-1)
cop(morning-4, was-2)
amod(morning-4, next-3)
root(ROOT-0, morning-4)
advmod(morning-4, just-6)
det(dawn-10, the-8)
amod(dawn-10, still-9)
prep_in(morning-4, dawn-10)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBD did) (RB n't)
          (VP (VB know)
            (NP (DT the) (JJ diseased)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD war) (RB n't)
          (VP
            (PP (IN in)
              (NP (PRP$ our) (NN set)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (ADVP (RB never))
      (VP (VBD made)
        (NP (DT no) (NN difference))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD belonged)
        (PP (TO to)
          (NP (DT the) (NN caravan)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT that))
        (VP (VBD was)
          (ADJP (JJ enough))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBZ war) (RB n't)
          (ADVP (DT no) (RBR more))
          (VP (VB sincerer)
            (S
              (NP (NNS tears))
              (VP (VB shed)
                (PRT (RP over))
                (NP (PRP him))
                (PP (IN than)
                  (NP (DT the) (NNS ones)))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBD dripped)
                      (PP (IN on)
                        (NP (PRP him)))
                      (PP (IN from)
                        (S
                          (VP
                            (ADVP (RB up) (RB there))
                            (VBG eleven)
                            (NP (CD hundred) (NN foot))
                            (PP (IN on)
                              (ADJP (JJ high)))))))))))))))
    (. .)))

nsubj(know-4, We-1)
aux(know-4, did-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
det(diseased-6, the-5)
dobj(know-4, diseased-6)
nsubj(war-10, he-9)
conj_and(know-4, war-10)
neg(war-10, n't-11)
dep(war-10, in-12)
poss(set-14, our-13)
pobj(in-12, set-14)
nsubj(made-19, that-17)
neg(made-19, never-18)
conj_but(know-4, made-19)
neg(difference-21, no-20)
dobj(made-19, difference-21)
nsubj(belonged-24, he-23)
conj_but(know-4, belonged-24)
det(caravan-27, the-26)
prep_to(belonged-24, caravan-27)
nsubj(enough-32, that-30)
nsubj(war-36, that-30)
cop(enough-32, was-31)
conj_and(know-4, enough-32)
expl(war-36, there-35)
conj_and(know-4, war-36)
conj_and(enough-32, war-36)
neg(war-36, n't-37)
neg(more-39, no-38)
advmod(war-36, more-39)
dep(war-36, sincerer-40)
nsubj(shed-42, tears-41)
ccomp(sincerer-40, shed-42)
prt(shed-42, over-43)
dobj(shed-42, him-44)
det(ones-47, the-46)
prep_than(shed-42, ones-47)
nsubj(dripped-49, we-48)
dep(shed-42, dripped-49)
prep_on(dripped-49, him-51)
advmod(there-54, up-53)
advmod(eleven-55, there-54)
prepc_from(dripped-49, eleven-55)
num(foot-57, hundred-56)
dobj(eleven-55, foot-57)
prep_on(eleven-55, high-59)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP
      (NP (NN parting))
      (PP (IN with)
        (NP (DT this) (NN caravan))))
    (VP (VBD was)
      (UCP
        (ADJP
          (ADJP (RB much) (RBR more) (JJ bitterer))
          (SBAR (IN than)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (PP (TO to)
                  (NP (NN part)))
                (PP (IN with)
                  (NP
                    (NP (PRP them) (NNS others))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD was)
                          (NP (JJ comparative) (NNS strangers)))))
                    (, ,)))))))
        (CC and)
        (VP (VBN been)
          (ADJP (JJ dead))
          (ADVP (RB so) (RB long))))
      (, ,)
      (ADVP (RB anyway)))
    (. .)))

discourse(bitterer-10, Yes-1)
nsubjpass(bitterer-10, parting-3)
nsubj(dead-27, parting-3)
det(caravan-6, this-5)
prep_with(parting-3, caravan-6)
auxpass(bitterer-10, was-7)
cop(bitterer-10, was-7)
advmod(bitterer-10, much-8)
advmod(bitterer-10, more-9)
root(ROOT-0, bitterer-10)
mark(was-13, than-11)
nsubj(was-13, it-12)
ccomp(bitterer-10, was-13)
prep_to(was-13, part-15)
dep(others-18, them-17)
prep_with(was-13, others-18)
nsubj(strangers-23, others-18)
cop(strangers-23, was-21)
amod(strangers-23, comparative-22)
rcmod(others-18, strangers-23)
cop(dead-27, been-26)
conj_and(bitterer-10, dead-27)
advmod(long-29, so-28)
advmod(dead-27, long-29)
advmod(bitterer-10, anyway-31)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD had)
          (VP (VBN knowed)
            (NP
              (NP (DT these))
              (PP (IN in)
                (NP (PRP$ their) (NNS lives))))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (VBN fond)
            (PP (IN of)
              (NP (PRP them)))
            (, ,)
            (ADVP (RB too))))))
    (, ,)
    (CC and)
    (S
      (S
        (S
          (ADVP (RB now))
          (VP (TO to)
            (VP (VB have)
              (S
                (NP (NN death))
                (VP
                  (VP (VB snatch)
                    (NP (PRP them))
                    (PP (IN from)
                      (NP (NN right)))
                    (SBAR (IN before)
                      (S
                        (NP (PRP$ our))
                        (VP (VBZ faces)
                          (SBAR (IN while)
                            (S
                              (NP (PRP we))
                              (VP (VBD was)
                                (VP (VBG looking)))))))))
                  (, ,)
                  (CC and)
                  (VP (VB leave)
                    (S
                      (NP (PRP us))
                      (ADJP (RB so) (JJ lonesome)
                        (CC and)
                        (JJ friendless))))))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN middle))
                  (PP (IN of)
                    (NP (DT that) (JJ big) (NN desert))))))))
        (, ,)
        (NP (PRP it))
        (VP (VBD did)
          (VP (VBN hurt)
            (ADVP (RB so)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP (VBD wished)
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD might) (RB n't)
                (ADVP (RB ever))
                (VP (VB make)
                  (NP
                    (NP (DT any) (JJR more) (NNS friends))
                    (PP (IN on)
                      (NP (DT that) (NN voyage))))
                  (SBAR (IN if)
                    (S
                      (NP (PRP we))
                      (VP (VBD was)
                        (VP (VBG going)
                          (S
                            (VP (TO to)
                              (VP (VB lose)
                                (NP (PRP them))
                                (ADVP (RB again))
                                (PP (IN like)
                                  (NP (DT that)))))))))))))))))
    (. .)))

nsubj(knowed-3, We-1)
nsubjpass(fond-11, We-1)
aux(knowed-3, had-2)
root(ROOT-0, knowed-3)
dobj(knowed-3, these-4)
poss(lives-7, their-6)
prep_in(these-4, lives-7)
auxpass(fond-11, was-10)
conj_and(knowed-3, fond-11)
prep_of(fond-11, them-13)
advmod(fond-11, too-15)
advmod(have-20, now-18)
aux(have-20, to-19)
advcl(hurt-51, have-20)
nsubj(snatch-22, death-21)
nsubj(leave-35, death-21)
ccomp(have-20, snatch-22)
dobj(snatch-22, them-23)
prep_from(snatch-22, right-25)
mark(faces-28, before-26)
nsubj(faces-28, our-27)
advcl(snatch-22, faces-28)
mark(looking-32, while-29)
nsubj(looking-32, we-30)
aux(looking-32, was-31)
advcl(faces-28, looking-32)
ccomp(have-20, leave-35)
conj_and(snatch-22, leave-35)
nsubj(lonesome-38, us-36)
nsubj(friendless-40, us-36)
advmod(lonesome-38, so-37)
xcomp(leave-35, lonesome-38)
xcomp(leave-35, friendless-40)
conj_and(lonesome-38, friendless-40)
det(middle-43, the-42)
prep_in(have-20, middle-43)
det(desert-47, that-45)
amod(desert-47, big-46)
prep_of(middle-43, desert-47)
nsubj(hurt-51, it-49)
aux(hurt-51, did-50)
conj_and(knowed-3, hurt-51)
advmod(hurt-51, so-52)
nsubj(wished-56, we-55)
conj_and(knowed-3, wished-56)
conj_and(hurt-51, wished-56)
nsubj(make-61, we-57)
aux(make-61, might-58)
neg(make-61, n't-59)
advmod(make-61, ever-60)
ccomp(wished-56, make-61)
det(friends-64, any-62)
amod(friends-64, more-63)
dobj(make-61, friends-64)
det(voyage-67, that-66)
prep_on(friends-64, voyage-67)
mark(going-71, if-68)
nsubj(going-71, we-69)
nsubj(lose-73, we-69)
aux(going-71, was-70)
advcl(make-61, going-71)
aux(lose-73, to-72)
xcomp(going-71, lose-73)
dobj(lose-73, them-74)
advmod(lose-73, again-75)
prep_like(lose-73, that-77)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could) (RB n't)
        (VP (VB keep)
          (PP (IN from)
            (S
              (VP (VBG talking)
                (PP (IN about)
                  (NP (PRP them)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD was) (RB all)
        (NP (DT the) (NN time)
          (S
            (VP
              (VP (VBG coming)
                (PRT (RP up))
                (PP (IN in)
                  (NP (PRP$ our) (NN memory))))
              (, ,)
              (CC and)
              (VP (VBG looking)
                (ADVP (RB just))
                (NP
                  (NP (DT the) (NN way))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD looked)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP we))
                            (VP (VBD was)
                              (ADJP (DT all) (JJ alive)
                                (CC and)
                                (JJ happy)))))))))))))
        (ADVP (RB together))))
    (. .)))

nsubj(keep-4, We-1)
aux(keep-4, could-2)
neg(keep-4, n't-3)
root(ROOT-0, keep-4)
prepc_from(keep-4, talking-6)
prep_about(talking-6, them-8)
nsubj(time-15, they-11)
cop(time-15, was-12)
advmod(time-15, all-13)
det(time-15, the-14)
conj_and(keep-4, time-15)
dep(time-15, coming-16)
prt(coming-16, up-17)
poss(memory-20, our-19)
prep_in(coming-16, memory-20)
dep(time-15, looking-23)
conj_and(coming-16, looking-23)
advmod(looking-23, just-24)
det(way-26, the-25)
dobj(looking-23, way-26)
nsubj(looked-28, they-27)
rcmod(way-26, looked-28)
advmod(alive-33, when-29)
nsubj(alive-33, we-30)
nsubj(happy-35, we-30)
cop(alive-33, was-31)
dep(alive-33, all-32)
advcl(looked-28, alive-33)
advcl(looked-28, happy-35)
conj_and(alive-33, happy-35)
advmod(time-15, together-36)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could)
        (VP (VB see)
          (NP
            (NP
              (NP (DT the) (NN line))
              (VP (VBG marching)))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (JJ shiny) (NNS spearheads) (NN a-winking))
              (PP (IN in)
                (NP (DT the) (NN sun))))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (MD could)
        (VP (VB see)
          (NP
            (NP (DT the) (NNS dromedaries))
            (VP (VBG lumbering)
              (PRT (RP along)))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (MD could)
        (VP (VB see)
          (NP
            (NP (DT the) (NN wedding))
            (CC and)
            (NP (DT the) (NN funeral))))))
    (: ;)
    (CC and)
    (S
      (FRAG
        (ADJP (RBR more) (JJ oftener)
          (PP (IN than)
            (NP (NN anything))))
        (ADJP (RB else)))
      (NP (PRP we))
      (VP (MD could)
        (VP (VB see)
          (S
            (NP (PRP them))
            (VP (VBG praying)))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (VBP do) (RB n't)
                (VP (VB allow)
                  (NP (NN nothing))
                  (S
                    (VP (TO to)
                      (VP (VB prevent)
                        (NP
                          (NP
                            (NP (DT that))
                            (: ;)
                            (SBAR
                              (WHADVP (WRB whenever))
                              (S
                                (NP (DT the) (NN call))
                                (VP (VBP come))))
                            (, ,)
                            (NP
                              (NP (JJ several) (NNS times))
                              (NP (DT a) (NN day)))
                            (PRN (, ,)
                              (S
                                (NP (PRP they))
                                (VP (MD would)
                                  (VP
                                    (VP (VB stop)
                                      (ADVP (RB right) (RB there)))
                                    (, ,)
                                    (CC and)
                                    (VP
                                      (VP (VB stand)
                                        (PRT (RP up)))
                                      (CC and)
                                      (VP (VB face)
                                        (PP (TO to)
                                          (NP (DT the) (JJ east))))
                                      (, ,)
                                      (CC and)
                                      (VP (VB lift)
                                        (PRT (RP back))
                                        (NP (PRP$ their) (NNS heads))))
                                    (, ,)
                                    (CC and)
                                    (VP
                                      (VP (VB spread)
                                        (PRT (RP out))
                                        (NP (PRP$ their) (NNS arms)))
                                      (CC and)
                                      (VP (VB begin))))))
                              (, ,)))
                          (CC and)
                          (NP
                            (NP (CD four)
                              (CC or)
                              (CD five) (NNS times))
                            (SBAR
                              (S
                                (NP (PRP they))
                                (VP (MD would)
                                  (VP
                                    (VP (VB go)
                                      (PRT (RP down))
                                      (PP (IN on)
                                        (NP (PRP$ their) (NNS knees))))
                                    (, ,)
                                    (CC and)
                                    (ADVP (RB then))
                                    (VP
                                      (VP (VB fall)
                                        (ADVP (RB forward)))
                                      (CC and)
                                      (VP (VB touch)
                                        (NP (PRP$ their) (NN forehead))
                                        (PP (TO to)
                                          (NP (DT the) (NN ground)))))))))))))))))))))
    (. .)))

nsubj(see-3, We-1)
aux(see-3, could-2)
root(ROOT-0, see-3)
det(line-5, the-4)
dobj(see-3, line-5)
vmod(line-5, marching-6)
det(a-winking-12, the-9)
amod(a-winking-12, shiny-10)
nn(a-winking-12, spearheads-11)
dobj(see-3, a-winking-12)
conj_and(line-5, a-winking-12)
det(sun-15, the-14)
prep_in(a-winking-12, sun-15)
nsubj(see-19, we-17)
aux(see-19, could-18)
conj_and(see-3, see-19)
det(dromedaries-21, the-20)
dobj(see-19, dromedaries-21)
vmod(dromedaries-21, lumbering-22)
prt(lumbering-22, along-23)
nsubj(see-27, we-25)
aux(see-27, could-26)
conj_and(see-3, see-27)
det(wedding-29, the-28)
dobj(see-27, wedding-29)
det(funeral-32, the-31)
dobj(see-27, funeral-32)
conj_and(wedding-29, funeral-32)
advmod(oftener-36, more-35)
dep(see-42, oftener-36)
prep_than(oftener-36, anything-38)
dep(oftener-36, else-39)
nsubj(see-42, we-40)
aux(see-42, could-41)
conj_and(see-3, see-42)
nsubj(praying-44, them-43)
dep(see-42, praying-44)
mark(allow-50, because-46)
nsubj(allow-50, they-47)
aux(allow-50, do-48)
neg(allow-50, n't-49)
advcl(see-42, allow-50)
dobj(allow-50, nothing-51)
nsubj(prevent-53, nothing-51)
aux(prevent-53, to-52)
xcomp(allow-50, prevent-53)
dobj(prevent-53, that-54)
advmod(come-59, whenever-56)
det(call-58, the-57)
nsubj(come-59, call-58)
rcmod(that-54, come-59)
amod(times-62, several-61)
appos(that-54, times-62)
det(day-64, a-63)
dep(times-62, day-64)
nsubj(stop-68, they-66)
nsubj(stand-73, they-66)
nsubj(spread-88, they-66)
aux(stop-68, would-67)
dep(that-54, stop-68)
advmod(there-70, right-69)
advmod(stop-68, there-70)
dep(that-54, stand-73)
conj_and(stop-68, stand-73)
prt(stand-73, up-74)
conj_and(stop-68, face-76)
conj_and(stand-73, face-76)
det(east-79, the-78)
prep_to(face-76, east-79)
conj_and(stop-68, lift-82)
conj_and(stand-73, lift-82)
prt(lift-82, back-83)
poss(heads-85, their-84)
dobj(lift-82, heads-85)
dep(that-54, spread-88)
conj_and(stop-68, spread-88)
prt(spread-88, out-89)
poss(arms-91, their-90)
dobj(spread-88, arms-91)
conj_and(stop-68, begin-93)
conj_and(spread-88, begin-93)
nn(times-99, four-96)
conj_or(four-96, five-98)
nn(times-99, five-98)
conj_and(that-54, times-99)
nsubj(go-102, they-100)
nsubj(fall-110, they-100)
aux(go-102, would-101)
rcmod(times-99, go-102)
prt(go-102, down-103)
poss(knees-106, their-105)
prep_on(go-102, knees-106)
advmod(fall-110, then-109)
rcmod(times-99, fall-110)
conj_and(go-102, fall-110)
advmod(fall-110, forward-111)
conj_and(go-102, touch-113)
conj_and(fall-110, touch-113)
poss(forehead-115, their-114)
dobj(touch-113, forehead-115)
det(ground-118, the-117)
prep_to(touch-113, ground-118)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (VBP war) (RB n't)
      (ADJP (JJ good)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN on)
                (S
                  (VP
                    (VP (VBG talking)
                      (PP (IN about)
                        (NP (PRP them))))
                    (, ,)
                    (VP (VBG lovely)
                      (SBAR (IN as)
                        (S
                          (NP (PRP they))
                          (VP (VBD was)
                            (PP (IN in)
                              (NP (PRP$ their) (NN life)))))))
                    (, ,)
                    (CC and)
                    (VP (VBG dear)
                      (PP (TO to)
                        (NP (PRP us)))
                      (PP (IN in)
                        (NP
                          (NP (PRP$ their) (NN life)
                            (CC and)
                            (NN death))
                          (NP (DT both))))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (PRP it))
                          (VP
                            (VP (VBD did) (RB n't)
                              (VP (VB do)
                                (NP (DT no) (JJ good))))
                            (, ,)
                            (CC and)
                            (VP (VBD made)
                              (S
                                (NP (PRP us))
                                (ADJP (RB too) (JJ down-hearted))))))))))))))))
    (. .)))

discourse(war-4, Well-1)
nsubj(war-4, it-3)
root(ROOT-0, war-4)
neg(war-4, n't-5)
acomp(war-4, good-6)
aux(go-8, to-7)
xcomp(good-6, go-8)
prepc_on(go-8, talking-10)
prep_about(talking-10, them-12)
prepc_on(go-8, lovely-14)
conj_and(talking-10, lovely-14)
mark(was-17, as-15)
nsubj(was-17, they-16)
advcl(lovely-14, was-17)
poss(life-20, their-19)
prep_in(was-17, life-20)
prepc_on(go-8, dear-23)
conj_and(talking-10, dear-23)
prep_to(dear-23, us-25)
poss(life-28, their-27)
prep_in(dear-23, life-28)
prep_in(dear-23, death-30)
conj_and(life-28, death-30)
dep(life-28, both-31)
mark(do-37, because-33)
nsubj(do-37, it-34)
nsubj(made-42, it-34)
aux(do-37, did-35)
neg(do-37, n't-36)
advcl(dear-23, do-37)
neg(good-39, no-38)
dobj(do-37, good-39)
advcl(dear-23, made-42)
conj_and(do-37, made-42)
nsubj(down-hearted-45, us-43)
advmod(down-hearted-45, too-44)
xcomp(made-42, down-hearted-45)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD allowed)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (PP (IN as)
                        (NP (JJ good) (DT a) (NN life)))
                      (SBAR (IN as)
                        (S
                          (S
                            (NP (PRP he))
                            (VP (MD could)))
                          (, ,) (IN so)
                          (S
                            (S
                              (NP (PRP he))
                              (VP (MD could)
                                (VP (VB see)
                                  (NP (PRP them))
                                  (ADVP (RB again))
                                  (PP (IN in)
                                    (NP (DT a) (JJR better) (NN world))))))
                            (: ;)
                            (CC and)
                            (S
                              (NP (NNP Tom))
                              (VP
                                (VP (VBD kept)
                                  (ADVP (RB still)))
                                (CC and)
                                (VP (VBD did) (RB n't)
                                  (VP (VB tell)
                                    (NP (PRP him))
                                    (SBAR
                                      (S
                                        (NP (PRP they))
                                        (VP (VBD was)
                                          (NP (JJ only) (NNS Mohammedans))))))))))
                          (: ;)
                          (S
                            (NP (PRP it))
                            (VP (VBP war) (RB n't)
                              (NP (DT no) (NN use)
                                (S
                                  (VP (TO to)
                                    (VP (VB disappoint)
                                      (NP (PRP him)))))))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG feeling)
        (ADVP (RB bad) (RB enough))
        (SBAR (RB just) (IN as)
          (S
            (NP (PRP it))
            (VP (VBD was))))))
    (. .)))

nsubj(allowed-2, Jim-1)
ccomp(feeling-52, allowed-2)
nsubj(going-5, he-3)
nsubj(live-7, he-3)
aux(going-5, was-4)
ccomp(allowed-2, going-5)
aux(live-7, to-6)
xcomp(going-5, live-7)
amod(life-11, good-9)
det(life-11, a-10)
prep_as(live-7, life-11)
mark(could-14, as-12)
nsubj(could-14, he-13)
advcl(live-7, could-14)
dep(could-14, so-16)
nsubj(see-19, he-17)
aux(see-19, could-18)
parataxis(could-14, see-19)
dobj(see-19, them-20)
advmod(see-19, again-21)
det(world-25, a-23)
amod(world-25, better-24)
prep_in(see-19, world-25)
nsubj(kept-29, Tom-28)
nsubj(tell-34, Tom-28)
parataxis(could-14, kept-29)
conj_and(see-19, kept-29)
advmod(kept-29, still-30)
aux(tell-34, did-32)
neg(tell-34, n't-33)
conj_and(see-19, tell-34)
conj_and(kept-29, tell-34)
dobj(tell-34, him-35)
nsubj(Mohammedans-39, they-36)
cop(Mohammedans-39, was-37)
amod(Mohammedans-39, only-38)
dep(tell-34, Mohammedans-39)
nsubj(war-42, it-41)
parataxis(could-14, war-42)
neg(war-42, n't-43)
neg(use-45, no-44)
dobj(war-42, use-45)
aux(disappoint-47, to-46)
vmod(use-45, disappoint-47)
dobj(disappoint-47, him-48)
nsubj(feeling-52, he-50)
aux(feeling-52, was-51)
root(ROOT-0, feeling-52)
advmod(enough-54, bad-53)
advmod(feeling-52, enough-54)
advmod(was-58, just-55)
mark(was-58, as-56)
nsubj(was-58, it-57)
advcl(feeling-52, was-58)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP we))
          (VP (VBD woke)
            (PRT (RP up))
            (NP (JJ next) (NN morning)))))
      (NP (PRP we))
      (VP
        (VP (VBD was)
          (VP (VBG feeling)
            (NP (DT a) (JJ little) (NN cheerfuller))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN had)
            (NP
              (NP (DT a)
                (ADJP (RBS most) (JJ powerful))
                (JJ good) (NN sleep))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (NN sand))
                  (VP (VBZ is)
                    (NP
                      (NP (DT the) (JJ comfortablest) (NN bed))
                      (SBAR
                        (S
                          (NP (EX there))
                          (VP (VBZ is)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD can)
                      (VP (VB afford)
                        (NP (PRP it)))))))
              (VP (VBP do) (RB n't)
                (VP (VB have)
                  (S
                    (NP (PRP it))
                    (ADJP (JJR more))))))))))
    (. .)))

advmod(woke-3, When-1)
nsubj(woke-3, we-2)
advcl(feeling-9, woke-3)
prt(woke-3, up-4)
amod(morning-6, next-5)
tmod(woke-3, morning-6)
nsubj(feeling-9, we-7)
nsubj(had-16, we-7)
aux(feeling-9, was-8)
root(ROOT-0, feeling-9)
det(cheerfuller-12, a-10)
amod(cheerfuller-12, little-11)
dobj(feeling-9, cheerfuller-12)
aux(had-16, had-15)
conj_and(feeling-9, had-16)
det(sleep-21, a-17)
advmod(powerful-19, most-18)
amod(sleep-21, powerful-19)
amod(sleep-21, good-20)
dobj(had-16, sleep-21)
mark(bed-28, because-23)
nsubj(bed-28, sand-24)
cop(bed-28, is-25)
det(bed-28, the-26)
amod(bed-28, comfortablest-27)
dep(sleep-21, bed-28)
expl(is-30, there-29)
rcmod(bed-28, is-30)
nsubj(see-36, I-33)
aux(see-36, do-34)
neg(see-36, n't-35)
conj_and(feeling-9, see-36)
advmod(have-45, why-37)
nsubj(afford-41, people-38)
nsubj(have-45, people-38)
aux(afford-41, can-40)
rcmod(people-38, afford-41)
dobj(afford-41, it-42)
aux(have-45, do-43)
neg(have-45, n't-44)
advcl(see-36, have-45)
nsubj(more-47, it-46)
xcomp(have-45, more-47)

(ROOT
  (S
    (S (CC And)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (JJ terrible) (JJ good) (NN ballast))
        (, ,)
        (ADVP (RB too))))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP see)
        (S
          (NP (DT the) (NN balloon))
          (ADJP (RB so) (JJ steady))
          (ADVP (RB before)))))
    (. .)))

cc(ballast-6, And-1)
nsubj(ballast-6, it-2)
cop(ballast-6, 's-3)
amod(ballast-6, terrible-4)
amod(ballast-6, good-5)
root(ROOT-0, ballast-6)
advmod(ballast-6, too-8)
nsubj(see-12, I-10)
neg(see-12, never-11)
parataxis(ballast-6, see-12)
det(balloon-14, the-13)
nsubj(steady-16, balloon-14)
advmod(steady-16, so-15)
xcomp(see-12, steady-16)
advmod(steady-16, before-17)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD allowed)
        (SBAR
          (S
            (NP (PRP we))
            (VP
              (VP (VBD had)
                (NP
                  (NP (CD twenty) (NNS tons))
                  (PP (IN of)
                    (NP (PRP it)))))
              (, ,)
              (CC and)
              (VP (VBD wondered)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP we))
                    (ADVP (RB better))
                    (VP (VBP do)
                      (PP (IN with)
                        (NP (PRP it))))))))))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (JJ good) (NN sand))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD did) (RB n't)
          (VP (VB seem)
            (NP (JJ good) (NN sense))
            (S
              (VP (TO to)
                (VP (VB throw)
                  (NP (PRP it))
                  (ADVP (RB away)))))))))
    (. .)))

nsubj(allowed-2, Tom-1)
root(ROOT-0, allowed-2)
nsubj(had-4, we-3)
nsubj(wondered-11, we-3)
ccomp(allowed-2, had-4)
num(tons-6, twenty-5)
dobj(had-4, tons-6)
prep_of(tons-6, it-8)
ccomp(allowed-2, wondered-11)
conj_and(had-4, wondered-11)
dobj(do-15, what-12)
nsubj(do-15, we-13)
advmod(do-15, better-14)
ccomp(wondered-11, do-15)
prep_with(do-15, it-17)
nsubj(sand-22, it-19)
cop(sand-22, was-20)
amod(sand-22, good-21)
parataxis(allowed-2, sand-22)
nsubj(seem-28, it-25)
aux(seem-28, did-26)
neg(seem-28, n't-27)
parataxis(allowed-2, seem-28)
conj_and(sand-22, seem-28)
amod(sense-30, good-29)
xcomp(seem-28, sense-30)
aux(throw-32, to-31)
vmod(seem-28, throw-32)
dobj(throw-32, it-33)
advmod(throw-32, away-34)

(ROOT
  (SQ
    (S
      (NP (NNP Jim))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (NNP Mars))
          (VP (VB Tom)))))
    (, ,)
    (SQ (MD ca) (RB n't)
      (NP (PRP we))
      (VP (VB tote)
        (S
          (NP (PRP it))
          (VP
            (ADVP (JJ back) (NN home) (IN en))
            (VB sell)
            (NP (PRP it))))))
    (. ?)))

nsubj(says-2, Jim-1)
dep(tote-11, says-2)
nsubj(Tom-6, Mars-5)
ccomp(says-2, Tom-6)
aux(tote-11, ca-8)
neg(tote-11, n't-9)
nsubj(tote-11, we-10)
root(ROOT-0, tote-11)
nsubj(sell-16, it-12)
advmod(en-15, back-13)
dep(en-15, home-14)
advmod(sell-16, en-15)
ccomp(tote-11, sell-16)
dobj(sell-16, it-17)

(ROOT
  (SBARQ
    (WHNP (WRB How) (RB long))
    (SQ
      (VP (MD 'll))
      (NP (PRP it))
      (VP (VB take)))
    (. ?) ('' '')))

advmod(long-2, How-1)
nsubj('ll-3, long-2)
root(ROOT-0, 'll-3)
nsubj('ll-3, it-4)
dep('ll-3, take-5)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Depends))
      (PP (IN on)
        (NP (DT the) (NN way) (PRP we))))
    (VP (VBP go))
    (. .) ('' '')))

nsubj(go-7, Depends-2)
det(way-5, the-4)
prep_on(Depends-2, way-5)
dep(way-5, we-6)
root(ROOT-0, go-7)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH Well))
        (, ,)
        (NP (NN sah)))
      (, ,)
      (NP (PRP she))
      (VP (VBZ 's)
        (ADVP (RB wuth))
        (NP
          (NP (DT a) (NN quarter))
          (PP (IN of)
            (NP
              (NP (DT a) (NN dollar))
              (NP
                (NP (DT a) (NN load))
                (PP (IN at)
                  (NP (NN home)))))))
        (, ,)
        (ADVP (IN en))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP reckon)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBZ 's)
                    (VP (VBN got)
                      (NP
                        (QP (RB as) (JJ much) (IN as) (CD twenty))
                        (NNS loads)))))))))))
    (, ,)
    (VP (VBP hai) (RB n't))
    (NP (PRP we))
    (. ?)))

discourse(sah-4, Well-2)
dep(quarter-10, sah-4)
nsubj(quarter-10, she-6)
cop(quarter-10, 's-7)
advmod(quarter-10, wuth-8)
det(quarter-10, a-9)
ccomp(hai-31, quarter-10)
det(dollar-13, a-12)
prep_of(quarter-10, dollar-13)
det(load-15, a-14)
dep(dollar-13, load-15)
prep_at(load-15, home-17)
advmod(quarter-10, en-19)
nsubj(reckon-21, I-20)
dep(quarter-10, reckon-21)
nsubjpass(got-24, we-22)
auxpass(got-24, 's-23)
ccomp(reckon-21, got-24)
advmod(as-27, as-25)
advmod(as-27, much-26)
quantmod(twenty-28, as-27)
num(loads-29, twenty-28)
dobj(got-24, loads-29)
root(ROOT-0, hai-31)
neg(hai-31, n't-32)
nsubj(hai-31, we-33)

(ROOT
  (SBARQ
    (WHNP (WRB How) (JJ much))
    (SQ (MD would)
      (NP (NN dat))
      (VP (VB be)))
    (. ?) ('' '')))

advmod(much-2, How-1)
dep(be-5, much-2)
aux(be-5, would-3)
nsubj(be-5, dat-4)
root(ROOT-0, be-5)

(ROOT
  (S (`` ``)
    (VP (VB Five)
      (NP (NNS dollars)))
    (. .) ('' '')))

root(ROOT-0, Five-2)
dobj(Five-2, dollars-3)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (NP
        (NP (NNS jings))
        (, ,)
        (NP (NNP Mars) (NNP Tom))))
    (, ,)
    (NP (FW le))
    (VP (VBZ 's)
      (VP (VBN shove)
        (PP (IN for)
          (NP
            (NP (NN home) (NN right))
            (PP (IN on)
              (NP (IN de) (NN spot)))))))
    (. !)))

agent(shove-10, jings-3)
nn(Tom-6, Mars-5)
appos(jings-3, Tom-6)
nsubjpass(shove-10, le-8)
auxpass(shove-10, 's-9)
root(ROOT-0, shove-10)
nn(right-13, home-12)
prep_for(shove-10, right-13)
amod(spot-16, de-15)
prep_on(right-13, spot-16)

(ROOT
  (SINV
    (S
      (NP (NNP Hit))
      (VP (VBZ 's)
        (ADJP (RBR more) (JJ 'n))
        (ADVP
          (NP (DT a) (NN dollar))
          (IN en)
          (NP
            (NP (DT a) (NN half))
            (NP (RB apiece))))))
    (, ,)
    (VP (VBP hai) (RB n't))
    (NP (PRP it))
    (. ?) ('' '')))

nsubj('n-4, Hit-1)
cop('n-4, 's-2)
advmod('n-4, more-3)
ccomp(hai-12, 'n-4)
det(dollar-6, a-5)
npadvmod(en-7, dollar-6)
advmod('n-4, en-7)
det(half-9, a-8)
pobj(en-7, half-9)
dep(half-9, apiece-10)
root(ROOT-0, hai-12)
neg(hai-12, n't-13)
nsubj(hai-12, it-14)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (NN ef) (NN dat))
    (VP (VBZ ai) (RB n't)
      (NP
        (NP
          (NP (NN makin) (POS '))
          (NN money))
        (ADJP (FW de) (FW easiest)))
      (ADVP (RB ever))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD struck)))))
    (. !)))

discourse(money-10, Well-2)
nn(dat-5, ef-4)
nsubj(money-10, dat-5)
cop(money-10, ai-6)
neg(money-10, n't-7)
poss(money-10, makin-8)
root(ROOT-0, money-10)
amod(money-10, de-11)
dep(de-11, easiest-12)
advmod(money-10, ever-13)
nsubj(struck-15, I-14)
dep(money-10, struck-15)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBP jes)
      (SBAR
        (S
          (NP (POS '))
          (VP (VBD rained)
            (PP (IN in)
              (PRN (: --)
                (S
                  (VP
                    (ADVP (RB never))
                    (VB cos) (`` ')
                    (NP (PRP us)))))
              (NP
                (NP (DT a) (NN lick) (NN o) (POS '))
                (NN work)))))))
    (. .)))

nsubj(jes-2, She-1)
root(ROOT-0, jes-2)
ccomp(jes-2, rained-4)
neg(cos-8, never-7)
dep(rained-4, cos-8)
dobj(cos-8, us-10)
det(o-13, a-11)
nn(o-13, lick-12)
poss(work-15, o-13)
prep_in(rained-4, work-15)

(ROOT
  (S
    (NP (NNP Le))
    (VP (VBZ 's)
      (ADVP (RB mosey))
      (ADVP (RB right) (RB along))
      (, ,)
      (NP (NNP Mars) (NNP Tom)))
    (. .) ('' '')))

nsubj(Tom-8, Le-1)
cop(Tom-8, 's-2)
advmod(Tom-8, mosey-3)
advmod(along-5, right-4)
advmod(Tom-8, along-5)
nn(Tom-8, Mars-7)
root(ROOT-0, Tom-8)

(ROOT
  (S (CC But)
    (S
      (NP (NNP Tom))
      (VP (VBD was)
        (VP (VBG thinking)
          (CC and)
          (VBG ciphering)
          (ADVP (RB away)))))
    (IN so)
    (S
      (S
        (ADJP (JJ busy)
          (CC and)
          (JJ excited)))
      (NP (PRP he))
      (ADVP (RB never))
      (VP (VBD heard)
        (NP (PRP him))))
    (. .)))

nsubj(thinking-4, Tom-2)
nsubj(ciphering-6, Tom-2)
aux(thinking-4, was-3)
root(ROOT-0, thinking-4)
conj_and(thinking-4, ciphering-6)
advmod(thinking-4, away-7)
dep(thinking-4, so-8)
dep(heard-14, busy-9)
conj_and(busy-9, excited-11)
dep(heard-14, excited-11)
nsubj(heard-14, he-12)
neg(heard-14, never-13)
parataxis(thinking-4, heard-14)
dobj(heard-14, him-15)

(ROOT
  (S
    (ADVP (RB Pretty) (RB soon))
    (NP (PRP he))
    (VP (VBZ says) (: :) (`` ``)
      (NP
        (NP (CD Five) (NNS dollars))
        (: --)
        (NP (NN sho))))
    (. !)))

advmod(soon-2, Pretty-1)
advmod(says-4, soon-2)
nsubj(says-4, he-3)
root(ROOT-0, says-4)
num(dollars-8, Five-7)
dobj(says-4, dollars-8)
dep(dollars-8, sho-10)

(ROOT
  (S
    (S
      (VP (VB Look)
        (ADVP (RB here))))
    (, ,)
    (NP (DT this) (NN sand))
    (VP (VBZ 's)
      (ADJP (JJ worth)
        (PRN (: --)
          (PP (JJ worth))
          (: --))
        (SBAR
          (WHADVP (WRB why))
          (, ,)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (IN worth)
                (NP
                  (NP (DT no) (NN end))
                  (PP (IN of)
                    (NP (NN money))))))))))
    (. .) ('' '')))

ccomp(worth-7, Look-1)
advmod(Look-1, here-2)
det(sand-5, this-4)
nsubj(worth-7, sand-5)
cop(worth-7, 's-6)
root(ROOT-0, worth-7)
dep(worth-7, worth-9)
advmod(worth-15, why-11)
nsubj(worth-15, it-13)
cop(worth-15, 's-14)
ccomp(worth-7, worth-15)
neg(end-17, no-16)
dep(worth-15, end-17)
prep_of(end-17, money-19)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (NN dat))
        (, ,)
        (NP (NNP Mars) (NNP Tom))))
    (. ?)))

advmod(is-3, How-2)
root(ROOT-0, is-3)
nsubj(is-3, dat-4)
nn(Tom-7, Mars-6)
appos(dat-4, Tom-7)

(ROOT
  (S
    (S
      (VP (VB Go)
        (PRT (RP on))))
    (, ,)
    (ADVP (RB honey))
    (, ,)
    (VP (VBP go)
      (PRT (RP on)))
    (. !) ('' '')))

ccomp(go-6, Go-1)
prt(Go-1, on-2)
advmod(go-6, honey-4)
root(ROOT-0, go-6)
prt(go-6, on-7)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (DT the) (NN minute) (NNS people))
      (VP (VBZ knows)
        (NP
          (NP
            (NP (PRP it) (POS 's))
            (JJ genuwyne) (NN sand))
          (PP (IN from)
            (NP
              (NP (DT the) (JJ genuwyne) (NN Desert))
              (PP (IN of)
                (NP (NNP Sahara))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD 'll)
      (ADVP (RB just))
      (VP (VB be)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ perfect) (NN state))
            (PP (IN of)
              (NP (NN mind)))))
        (S
          (VP (TO to)
            (VP (VB git)
              (NP
                (NP (NN hold))
                (PP (IN of)
                  (NP
                    (NP (DT some))
                    (PP (IN of)
                      (NP (PRP it))))))
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NN what-not))
                        (PP (IN in)
                          (NP
                            (NP (DT a) (NN vial))
                            (PP (IN with)
                              (NP
                                (NP (DT a) (NN label))
                                (PP (IN on)
                                  (NP (PRP it)))))))))
                    (PP (IN for)
                      (NP (DT a) (NN curiosity)))))))))))
    (. .)))

discourse(knows-7, Well-2)
det(people-6, the-4)
nn(people-6, minute-5)
nsubj(knows-7, people-6)
ccomp(be-22, knows-7)
poss(sand-11, it-8)
amod(sand-11, genuwyne-10)
dobj(knows-7, sand-11)
det(Desert-15, the-13)
amod(Desert-15, genuwyne-14)
prep_from(sand-11, Desert-15)
prep_of(Desert-15, Sahara-17)
nsubj(be-22, they-19)
nsubj(git-30, they-19)
aux(be-22, 'll-20)
advmod(be-22, just-21)
root(ROOT-0, be-22)
det(state-26, a-24)
amod(state-26, perfect-25)
prep_in(be-22, state-26)
prep_of(state-26, mind-28)
aux(git-30, to-29)
xcomp(be-22, git-30)
dobj(git-30, hold-31)
prep_of(hold-31, some-33)
prep_of(some-33, it-35)
aux(keep-37, to-36)
vmod(git-30, keep-37)
det(what-not-40, the-39)
prep_on(keep-37, what-not-40)
det(vial-43, a-42)
prep_in(what-not-40, vial-43)
det(label-46, a-45)
prep_with(vial-43, label-46)
prep_on(label-46, it-48)
det(curiosity-51, a-50)
prep_for(keep-37, curiosity-51)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD got)
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP
            (VP (VB put)
              (NP (PRP it))
              (PRT (RP up))
              (PP (IN in)
                (NP (NNS vials))))
            (CC and)
            (VP
              (VP (VB float)
                (ADVP (IN around) (DT all))
                (PP (IN over)
                  (NP (DT the) (NNP United) (NNPS States))))
              (CC and)
              (VP (VB peddle)
                (NP (PRP them))
                (PRT (RP out))
                (PP (IN at)
                  (NP
                    (NP (CD ten) (NNS cents))
                    (NP (RB apiece))))))))))
    (. .)))

nsubj(is-6, All-1)
nsubj(put-8, All-1)
nsubj(float-14, All-1)
nsubj(got-3, we-2)
nsubj(do-5, we-2)
rcmod(All-1, got-3)
aux(do-5, to-4)
xcomp(got-3, do-5)
root(ROOT-0, is-6)
aux(put-8, to-7)
xcomp(is-6, put-8)
dobj(put-8, it-9)
prt(put-8, up-10)
prep_in(put-8, vials-12)
xcomp(is-6, float-14)
conj_and(put-8, float-14)
advmod(float-14, around-15)
dep(around-15, all-16)
det(States-20, the-18)
nn(States-20, United-19)
prep_over(float-14, States-20)
conj_and(put-8, peddle-22)
conj_and(float-14, peddle-22)
dobj(peddle-22, them-23)
prt(peddle-22, out-24)
num(cents-27, ten-26)
prep_at(peddle-22, cents-27)
dep(cents-27, apiece-28)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN got)
        (NP
          (NP (DT all))
          (PP (IN of)
            (NP
              (QP (CD ten) (CD thousand))
              (NNS dollars)))
          ('' ')
          (PP (JJ worth) (IN of)
            (NP
              (NP (NN sand))
              (PP (IN in)
                (NP (DT this) (NN boat))))))))
    (. .) ('' '')))

nsubj(got-3, We-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
dobj(got-3, all-4)
number(thousand-7, ten-6)
num(dollars-8, thousand-7)
prep_of(all-4, dollars-8)
dep(all-4, worth-10)
prep_of(all-4, sand-12)
det(boat-15, this-14)
prep_in(sand-12, boat-15)

(ROOT
  (S
    (S
      (NP (NNP Me)
        (CC and)
        (NNP Jim))
      (VP
        (VP (VBD went)
          (NP (DT all))
          (PP (TO to)
            (NP (NNS pieces)))
          (PP (IN with)
            (NP (NN joy))))
        (, ,)
        (CC and)
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB shout)
                (NP (NN whoopjamboreehoo))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (S (CC And)
            (NP (PRP we))
            (VP
              (VP (MD can)
                (VP
                  (VP (VB keep)
                    (PP (IN on)
                      (S
                        (VP
                          (VP (VBG coming)
                            (ADVP (RB back)))
                          (CC and)
                          (VP (VBG fetching)
                            (NP (NN sand)))
                          (, ,)
                          (CC and)
                          (VP
                            (VP (VBG coming)
                              (ADVP (RB back)))
                            (CC and)
                            (VP (VBG fetching)
                              (NP (JJR more) (NN sand))))))))
                  (, ,)
                  (CC and)
                  (ADVP (RB just))
                  (VP (VB keep)
                    (S
                      (NP (PRP it))
                      (VP (VBG a-going)
                        (SBAR (IN till)
                          (S
                            (NP (PRP we))
                            (VP (VBP 've)
                              (VP (VBD carted)
                                (NP (DT this) (JJ whole) (NN Desert))
                                (PP (IN over)
                                  (NP (RB there))))))))))))
              (CC and)
              (VP (VBD sold)
                (NP (PRP it))
                (PRT (RP out)))))
          (: ;)
          (CC and)
          (S
            (NP (EX there))
            (VP (VBP ai) (RB n't)
              (ADVP (RB ever))
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT any) (NN opposition))
                      (, ,)
                      (ADVP (RB either))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (PRP we))
                          (VP (MD 'll)
                            (VP (VB take)
                              (PRT (RP out))
                              (NP (DT a) (NN patent)))))))))))))))
    (. .) ('' '')))

nsubj(went-4, Me-1)
nsubj(begun-12, Me-1)
nsubj(shout-14, Me-1)
conj_and(Me-1, Jim-3)
nsubj(went-4, Jim-3)
root(ROOT-0, went-4)
dobj(went-4, all-5)
prep_to(went-4, pieces-7)
prep_with(went-4, joy-9)
conj_and(went-4, begun-12)
aux(shout-14, to-13)
xcomp(begun-12, shout-14)
dobj(shout-14, whoopjamboreehoo-15)
nsubj(says-19, Tom-18)
conj_and(went-4, says-19)
nsubj(keep-25, we-23)
nsubj(keep-43, we-23)
nsubj(sold-56, we-23)
nsubj(going-65, we-23)
nsubj(opposition-69, we-23)
aux(keep-25, can-24)
dep(says-19, keep-25)
prepc_on(keep-25, coming-27)
advmod(coming-27, back-28)
prepc_on(keep-25, fetching-30)
conj_and(coming-27, fetching-30)
dobj(fetching-30, sand-31)
prepc_on(keep-25, coming-34)
conj_and(coming-27, coming-34)
advmod(coming-34, back-35)
conj_and(coming-27, fetching-37)
conj_and(coming-34, fetching-37)
amod(sand-39, more-38)
dobj(fetching-37, sand-39)
advmod(keep-43, just-42)
dep(says-19, keep-43)
conj_and(keep-25, keep-43)
nsubj(a-going-45, it-44)
dep(keep-43, a-going-45)
mark(carted-49, till-46)
nsubj(carted-49, we-47)
aux(carted-49, 've-48)
advcl(a-going-45, carted-49)
det(Desert-52, this-50)
amod(Desert-52, whole-51)
dobj(carted-49, Desert-52)
prep(carted-49, over-53)
pobj(over-53, there-54)
dep(says-19, sold-56)
conj_and(keep-25, sold-56)
dobj(sold-56, it-57)
prt(sold-56, out-58)
expl(going-65, there-61)
aux(going-65, ai-62)
neg(going-65, n't-63)
advmod(going-65, ever-64)
dep(says-19, going-65)
conj_and(keep-25, going-65)
aux(opposition-69, to-66)
cop(opposition-69, be-67)
det(opposition-69, any-68)
xcomp(going-65, opposition-69)
advmod(opposition-69, either-71)
mark(take-76, because-73)
nsubj(take-76, we-74)
aux(take-76, 'll-75)
advcl(opposition-69, take-76)
prt(take-76, out-77)
det(patent-79, a-78)
dobj(take-76, patent-79)

(ROOT
  (S (`` ``)
    (NP (PRP$ My) (NN goodness))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP I))
        (VP (VBZ says)))
      (, ,))
    (`` ``)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB be)
        (ADJP (RB as) (JJ rich))
        (PP (IN as)
          (NP (NNP Creosote)))
        (, ,)
        (PRN
          (SINV
            (VP (MD wo) (RB n't))
            (NP (PRP we))))
        (, ,)
        (NP (NNP Tom))))
    (. ?) ('' '')))

poss(goodness-3, My-2)
nsubj(rich-14, goodness-3)
nsubj(says-7, I-6)
parataxis(rich-14, says-7)
nsubj(rich-14, we-10)
aux(rich-14, 'll-11)
cop(rich-14, be-12)
advmod(rich-14, as-13)
root(ROOT-0, rich-14)
prep_as(rich-14, Creosote-16)
parataxis(rich-14, wo-18)
neg(wo-18, n't-19)
nsubj(wo-18, we-20)
dep(rich-14, Tom-22)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: --)
    (S
      (NP (NNP Creesus))
      (, ,)
      (NP (PRP you))
      (VP (VBP mean)))
    (. .)))

advmod(mean-7, Yes-2)
nsubj(mean-7, Creesus-4)
nsubj(mean-7, you-6)
root(ROOT-0, mean-7)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (DT that) (NN dervish))
    (VP
      (VP (VBD was)
        (VP (VBG hunting)
          (PP (IN in)
            (NP
              (NP (DT that) (JJ little) (NN hill))
              (PP (IN for)
                (NP
                  (NP (DT the) (NNS treasures))
                  (PP (IN of)
                    (NP (DT the) (NN earth)))))))))
      (, ,)
      (CC and)
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBG walking)
                  (PP (IN over)
                    (NP
                      (NP (DT the) (JJ real) (NNS ones))
                      (PP (IN for)
                        (NP (DT a) (CD thousand) (NNS miles))))))))))))
    (. .)))

discourse(hunting-6, Why-1)
det(dervish-4, that-3)
nsubj(hunting-6, dervish-4)
nsubj(know-21, dervish-4)
aux(hunting-6, was-5)
root(ROOT-0, hunting-6)
det(hill-10, that-8)
amod(hill-10, little-9)
prep_in(hunting-6, hill-10)
det(treasures-13, the-12)
prep_for(hill-10, treasures-13)
det(earth-16, the-15)
prep_of(treasures-13, earth-16)
aux(know-21, did-19)
neg(know-21, n't-20)
conj_and(hunting-6, know-21)
nsubj(walking-24, he-22)
aux(walking-24, was-23)
ccomp(know-21, walking-24)
det(ones-28, the-26)
amod(ones-28, real-27)
prep_over(walking-24, ones-28)
det(miles-32, a-30)
num(miles-32, thousand-31)
prep_for(ones-28, miles-32)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ blinder))
      (SBAR (IN than)
        (S
          (NP (PRP he))
          (VP (VBD made)
            (NP (DT the) (NN driver))))))
    (. .) ('' '')))

nsubj(blinder-3, He-1)
cop(blinder-3, was-2)
root(ROOT-0, blinder-3)
mark(made-6, than-4)
nsubj(made-6, he-5)
advcl(blinder-3, made-6)
det(driver-8, the-7)
dobj(made-6, driver-8)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Mars) (NNP Tom))
      (, ,)
      (SBAR
        (WHNP (WRB how) (JJ much))
        (S
          (VP (VBZ is)
            (S
              (NP (PRP we))
              (ADJP (JJ gwyne)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ worth)))))))))))
    (. ?) ('' '')))

nn(Tom-3, Mars-2)
root(ROOT-0, Tom-3)
advmod(much-6, how-5)
advmod(is-7, much-6)
nsubj(is-7, much-6)
rcmod(Tom-3, is-7)
nsubj(gwyne-9, we-8)
nsubj(worth-12, we-8)
xcomp(is-7, gwyne-9)
aux(worth-12, to-10)
cop(worth-12, be-11)
xcomp(gwyne-9, worth-12)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADVP (RB yet))))
    (. .)))

discourse(know-7, Well-2)
nsubj(know-7, I-4)
aux(know-7, do-5)
neg(know-7, n't-6)
root(ROOT-0, know-7)
advmod(know-7, yet-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN ciphered))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBP ai) (RB n't)
        (NP (DT the) (JJS easiest) (NN job))
        (S
          (VP (TO to)
            (VP (VB do) (, ,)
              (ADVP (RB either))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (PP (IN over)
                      (NP
                        (NP
                          (QP (CD four) (CD million))
                          (JJ square) (NNS miles))
                        (PP (IN of)
                          (NP (NN sand)))))
                    (PP (IN at)
                      (NP
                        (NP (CD ten) (NNS cents))
                        (NP (DT a) (NN vial))))))))))))
    (. .) ('' '')))

nsubjpass(got-3, It-1)
nsubjpass(ciphered-6, It-1)
auxpass(got-3, 's-2)
root(ROOT-0, got-3)
aux(ciphered-6, to-4)
auxpass(ciphered-6, be-5)
xcomp(got-3, ciphered-6)
nsubj(job-14, it-9)
cop(job-14, ai-10)
neg(job-14, n't-11)
det(job-14, the-12)
amod(job-14, easiest-13)
conj_and(got-3, job-14)
aux(do-16, to-15)
vmod(job-14, do-16)
advmod(do-16, either-18)
mark('s-22, because-20)
nsubj('s-22, it-21)
advcl(do-16, 's-22)
number(million-25, four-24)
num(miles-27, million-25)
amod(miles-27, square-26)
prep_over('s-22, miles-27)
prep_of(miles-27, sand-29)
num(cents-32, ten-31)
prep_at('s-22, cents-32)
det(vial-34, a-33)
dep(cents-32, vial-34)

(ROOT
  (S
    (S
      (S
        (NP (NNP Jim))
        (VP (VBD was)
          (ADJP (JJ awful) (JJ excited))))
      (, ,)
      (CC but)
      (S
        (S
          (NP (DT this))
          (VP (VBD faded)
            (NP (PRP it))
            (PP (IN out)
              (ADJP (JJ considerable)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD shook)
              (NP (PRP$ his) (NN head)))
            (CC and)
            (VP (VBZ says) (: :)
              (S (`` ``)
                (NP (NNP Mars) (NNP Tom))
                (, ,)
                (NP (PRP we))
                (VP (MD ca) (RB n't)
                  (VP (`` `) (VB ford)
                    (ADVP (DT all))
                    (NP (DT dem) (NNS vials))))))))))
    (: --)
    (S
      (NP (DT a) (NN king))
      (VP (MD could) (RB n't)))
    (. .)))

nsubj(excited-4, Jim-1)
cop(excited-4, was-2)
amod(excited-4, awful-3)
root(ROOT-0, excited-4)
nsubj(faded-8, this-7)
conj_but(excited-4, faded-8)
dobj(faded-8, it-9)
prep_out(faded-8, considerable-11)
nsubj(shook-15, he-14)
nsubj(says-19, he-14)
conj_but(excited-4, shook-15)
conj_and(faded-8, shook-15)
poss(head-17, his-16)
dobj(shook-15, head-17)
conj_and(faded-8, says-19)
conj_and(shook-15, says-19)
nn(Tom-23, Mars-22)
nsubj(ford-29, Tom-23)
nsubj(ford-29, we-25)
aux(ford-29, ca-26)
neg(ford-29, n't-27)
ccomp(says-19, ford-29)
parataxis(says-19, ford-29)
advmod(ford-29, all-30)
det(vials-32, dem-31)
dobj(ford-29, vials-32)
det(king-35, a-34)
nsubj(could-36, king-35)
parataxis(excited-4, could-36)
neg(could-36, n't-37)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RBR better) (RB not))
      (VP (VBP try)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (IN de) (JJ whole) (NN Desert))
                (, ,)
                (NP (NNP Mars) (NNP Tom))))))))
    (, ,)
    (S
      (NP
        (NP (IN de) (JJ vials) (NN gwyne))
        (PP (TO to)
          (NP (NN bust))))
      (NP (PRP us)))
    (, ,)
    (S
      (NP (NNP sho) (POS ')))
    (. .) ('' '')))

nsubj(try-4, We-1)
nsubj(take-6, We-1)
advmod(not-3, better-2)
neg(try-4, not-3)
root(ROOT-0, try-4)
aux(take-6, to-5)
xcomp(try-4, take-6)
amod(Desert-9, de-7)
amod(Desert-9, whole-8)
dobj(take-6, Desert-9)
nn(Tom-12, Mars-11)
appos(Desert-9, Tom-12)
amod(gwyne-16, de-14)
amod(gwyne-16, vials-15)
dep(us-19, gwyne-16)
prep_to(gwyne-16, bust-18)
parataxis(try-4, us-19)
parataxis(try-4, sho-21)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Tom) (POS 's))
          (NN excitement))
        (VP (VBD died)
          (PP (IN out) (, ,)
            (ADVP (RB too))
            (, ,)
            (ADVP (RB now)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBD reckoned)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (PP (IN on)
                  (NP
                    (NP (NN account))
                    (PP (IN of)
                      (NP (DT the) (NNS vials)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB n't)))
    (. .)))

poss(excitement-3, Tom-1)
nsubj(died-4, excitement-3)
root(ROOT-0, died-4)
prep(died-4, out-5)
dep(out-5, too-7)
dep(out-5, now-9)
nsubj(reckoned-13, I-12)
conj_and(died-4, reckoned-13)
nsubj(was-15, it-14)
ccomp(reckoned-13, was-15)
det(vials-20, the-19)
prep_on_account_of(was-15, vials-20)
nsubj(was-24, it-23)
conj_but(died-4, was-24)
neg(was-24, n't-25)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP
          (VP (VBD set)
            (S
              (NP (EX there))
              (VP (VBG thinking))))
          (, ,)
          (CC and)
          (VP (VBD got)
            (NP (NN bluer)
              (CC and)
              (NN bluer)))))
      (, ,)
      (CC and)
      (S
        (PP (IN at)
          (NP (JJ last)))
        (NP (PRP he))
        (VP (VBZ says) (: :) (`` ``)
          (S
            (INTJ (UH Boys))
            (, ,)
            (NP (PRP it))
            (VP (MD wo) (RB n't)
              (VP (VB work)))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBD got)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (PRP it))
              (PRT (RP up)))))))
    (. .) ('' '')))

nsubj(set-2, He-1)
nsubj(got-7, He-1)
root(ROOT-0, set-2)
expl(thinking-4, there-3)
dep(set-2, thinking-4)
conj_and(set-2, got-7)
dobj(got-7, bluer-8)
dobj(got-7, bluer-10)
conj_and(bluer-8, bluer-10)
prep_at(says-16, last-14)
nsubj(says-16, he-15)
conj_and(set-2, says-16)
discourse(work-24, Boys-19)
nsubj(work-24, it-21)
aux(work-24, wo-22)
neg(work-24, n't-23)
ccomp(says-16, work-24)
nsubj(got-27, we-26)
nsubj(give-29, we-26)
parataxis(set-2, got-27)
aux(give-29, to-28)
xcomp(got-27, give-29)
dobj(give-29, it-30)
prt(give-29, up-31)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Why))
    (, ,)
    (NP (NNP Tom))
    (. ?) ('' '')))

root(ROOT-0, Why-2)
dep(Why-2, Tom-4)

(ROOT
  (S (`` ``)
    (NP (NNP On))
    (VP (VBP account)
      (PP (IN of)
        (NP (DT the) (NNS duties))))
    (. .) ('' '')))

nsubj(account-3, On-2)
root(ROOT-0, account-3)
det(duties-6, the-5)
prep_of(account-3, duties-6)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (MD could) (RB n't)
        (VP (VB make)
          (NP (NN nothing))
          (PRT (RP out))
          (PP (IN of)
            (NP (DT that)))))
      (, ,)
      (CC neither)
      (VP (MD could)
        (VP (VB Jim))))
    (. .)))

nsubj(make-4, I-1)
aux(make-4, could-2)
neg(make-4, n't-3)
root(ROOT-0, make-4)
dobj(make-4, nothing-5)
prep_out_of(make-4, that-8)
dep(make-4, neither-10)
aux(Jim-12, could-11)
conj(make-4, Jim-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP (WP What))
        (VP (VBZ IS)
          (NP
            (NP (PRP$ our) (NN duty))
            (, ,)
            (NP (NNP Tom))))))
    (. ?)))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nsubj(duty-8, What-5)
cop(duty-8, IS-6)
poss(duty-8, our-7)
ccomp(says-2, duty-8)
appos(duty-8, Tom-10)

(ROOT
  (SBARQ
    (SBAR (IN Because) (IN if)
      (S
        (NP (PRP we))
        (VP (MD ca) (RB n't)
          (VP (VB git)
            (PRT (RP around))
            (NP (PRP it))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (MD ca) (RB n't)
      (NP (PRP we))
      (VP
        (ADVP (RB just))
        (VB DO)
        (NP (PRP it))))
    (. ?)))

mark(git-6, Because-1)
mark(git-6, if-2)
nsubj(git-6, we-3)
aux(git-6, ca-4)
neg(git-6, n't-5)
advcl(DO-15, git-6)
prt(git-6, around-7)
dobj(git-6, it-8)
advmod(DO-15, why-10)
aux(DO-15, ca-11)
neg(DO-15, n't-12)
nsubj(DO-15, we-13)
advmod(DO-15, just-14)
root(ROOT-0, DO-15)
dobj(DO-15, it-16)

(ROOT
  (S
    (NP (NNS People))
    (ADVP (RB often))
    (VP (VBZ has)
      (VP
        (PP (TO to))))
    (. .) ('' '')))

nsubj(to-4, People-1)
advmod(to-4, often-2)
aux(to-4, has-3)
root(ROOT-0, to-4)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (INTJ (UH Oh))
        (, ,)
        (NP (PRP it))
        (VP (VBP ai) (RB n't)
          (NP
            (NP (DT that) (NN kind))
            (PP (IN of)
              (NP (NN duty)))))))
    (. .)))

cc(says-3, But-1)
nsubj(says-3, he-2)
root(ROOT-0, says-3)
discourse(kind-12, Oh-6)
nsubj(kind-12, it-8)
cop(kind-12, ai-9)
neg(kind-12, n't-10)
det(kind-12, that-11)
ccomp(says-3, kind-12)
prep_of(kind-12, duty-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN kind))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP mean)))))
    (VP (VBZ is)
      (NP (DT a) (NN tax)))
    (. .)))

det(kind-2, The-1)
nsubj(tax-7, kind-2)
nsubj(mean-4, I-3)
rcmod(kind-2, mean-4)
cop(tax-7, is-5)
det(tax-7, a-6)
root(ROOT-0, tax-7)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB Whenever))
        (S
          (NP (PRP you))
          (VP (VBP strike)
            (NP (DT a) (NN frontier) (: --)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (NP
                      (NP (DT the) (NN border))
                      (PP (IN of)
                        (NP (DT a) (NN country)))))))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (: --)
    (S
      (S
        (NP (PRP you))
        (VP (VBP find)
          (NP (DT a) (NN custom-house))
          (ADVP (RB there))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN gov))
        (`` `)
        (VP (VBP ment)
          (SBAR
            (S
              (NP (NNS officers))
              (VP
                (VP (VBZ comes))
                (CC and)
                (VP (VBZ rummages)
                  (PP (IN among)
                    (NP (PRP$ your) (NNS things)
                      (CC and)
                      (NNS charges)))
                  (NP
                    (NP (DT a) (JJ big) (NN tax))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP they))
                        (VP (VBP call)
                          (NP (DT a) (NN duty))
                          (SBAR (IN because)
                            (S
                              (NP (PRP it))
                              (VP (VBZ 's)
                                (NP (PRP$ their) (NN duty)
                                  (S
                                    (VP (TO to)
                                      (VP (VB bust)
                                        (NP (PRP you))
                                        (SBAR
                                          (SBAR (IN if)
                                            (S
                                              (NP (PRP they))
                                              (VP (MD can))))
                                          (, ,)
                                          (CC and)
                                          (SBAR (IN if)
                                            (S
                                              (NP (PRP you))
                                              (VP (VBP do) (RB n't)
                                                (VP (VB pay)
                                                  (NP
                                                    (NP (DT the) (NN duty))
                                                    (SBAR
                                                      (S
                                                        (NP (PRP they))
                                                        (VP (MD 'll)
                                                          (VP (VB hog)
                                                            (NP (PRP$ your) (NN sand))))))))))))))))))))))))))))))
    (. .)))

advmod(strike-3, Whenever-1)
nsubj(strike-3, you-2)
advcl(know-16, strike-3)
det(frontier-5, a-4)
dobj(strike-3, frontier-5)
nsubj(border-10, that-7)
cop(border-10, 's-8)
det(border-10, the-9)
ccomp(frontier-5, border-10)
det(country-13, a-12)
prep_of(border-10, country-13)
nsubj(know-16, you-15)
root(ROOT-0, know-16)
nsubj(find-19, you-18)
parataxis(know-16, find-19)
det(custom-house-21, a-20)
dobj(find-19, custom-house-21)
advmod(find-19, there-22)
det(gov-26, the-25)
nsubj(ment-28, gov-26)
parataxis(know-16, ment-28)
conj_and(find-19, ment-28)
nsubj(comes-30, officers-29)
nsubj(rummages-32, officers-29)
ccomp(ment-28, comes-30)
ccomp(ment-28, rummages-32)
conj_and(comes-30, rummages-32)
poss(things-35, your-34)
prep_among(rummages-32, things-35)
prep_among(rummages-32, charges-37)
conj_and(things-35, charges-37)
det(tax-40, a-38)
amod(tax-40, big-39)
dobj(rummages-32, tax-40)
dobj(call-44, tax-40)
nsubj(call-44, they-43)
rcmod(tax-40, call-44)
det(duty-46, a-45)
dobj(call-44, duty-46)
mark(duty-51, because-47)
nsubj(duty-51, it-48)
cop(duty-51, 's-49)
poss(duty-51, their-50)
advcl(call-44, duty-51)
aux(bust-53, to-52)
vmod(duty-51, bust-53)
dobj(bust-53, you-54)
mark(can-57, if-55)
nsubj(can-57, they-56)
advcl(bust-53, can-57)
mark(pay-64, if-60)
nsubj(pay-64, you-61)
aux(pay-64, do-62)
neg(pay-64, n't-63)
advcl(bust-53, pay-64)
conj_and(can-57, pay-64)
det(duty-66, the-65)
dobj(pay-64, duty-66)
nsubj(hog-69, they-67)
aux(hog-69, 'll-68)
rcmod(duty-66, hog-69)
poss(sand-71, your-70)
dobj(hog-69, sand-71)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP call)
        (S
          (NP (PRP it))
          (VP (VBG confiscating)))))
    (, ,)
    (CC but)
    (S
      (S
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP do) (RB n't)
              (VP (VB deceive)
                (NP (NN nobody))))))
        (, ,)
        (NP (PRP it))
        (VP (VBZ 's)
          (ADVP (RB just))
          (VP (VBG hogging))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBZ 's)
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ is))))))))
    (. .)))

nsubj(call-2, They-1)
root(ROOT-0, call-2)
nsubj(confiscating-4, it-3)
dep(call-2, confiscating-4)
nsubj(deceive-10, that-7)
aux(deceive-10, do-8)
neg(deceive-10, n't-9)
advcl(hogging-16, deceive-10)
dobj(deceive-10, nobody-11)
nsubj(hogging-16, it-13)
aux(hogging-16, 's-14)
advmod(hogging-16, just-15)
conj_but(call-2, hogging-16)
nsubj(all-21, that-19)
cop(all-21, 's-20)
conj_but(call-2, all-21)
conj_and(hogging-16, all-21)
nsubj(is-23, it-22)
rcmod(all-21, is-23)

(ROOT
  (S
    (SBAR (RB Now) (IN if)
      (S
        (NP (PRP we))
        (VP (VBP try)
          (S
            (VP (TO to)
              (VP (VB carry)
                (NP
                  (NP
                    (NP (DT this) (NN sand) (NN home))
                    (NP (DT the) (NN way)))
                  (SBAR
                    (S
                      (S
                        (NP (PRP we))
                        (VP (VBP 're)
                          (VP (VBN pointed)
                            (ADVP (RB now)))))
                      (, ,)
                      (S
                        (NP (PRP we))
                        (VP (VBD got)
                          (S
                            (VP (TO to)
                              (VP (VB climb)
                                (NP (NNS fences))
                                (SBAR (IN till)
                                  (S
                                    (NP (PRP we))
                                    (VP (VBP git)
                                      (ADJP (JJ tired))
                                      (: --)
                                      (PP (RB just)
                                        (NP (NN frontier)))
                                      (PP (IN after)
                                        (NP (NN frontier)))
                                      (: --)
                                      (UCP
                                        (NP (NNP Egypt))
                                        (, ,)
                                        (NP (NNP Arabia))
                                        (, ,)
                                        (NP (NNP Hindostan))
                                        (, ,)
                                        (CC and)
                                        (ADVP (RB so))
                                        (PP (IN on)))))))))))
                      (, ,)
                      (CC and)
                      (S
                        (NP (PRP they))
                        (VP (MD 'll) (RB all)
                          (VP (VB whack)
                            (PP (IN on)
                              (NP (DT a) (NN duty))))))
                      (, ,)
                      (CC and)
                      (RB so)
                      (S
                        (NP (PRP you))
                        (VP (VBP see) (, ,)
                          (ADVP (RB easy))
                          (ADVP (RB enough)))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBZ CA) (RB N'T)
      (VP (VB go)
        (NP (JJ THAT) (NN road))))
    (. .) ('' '')))

advmod(try-4, Now-1)
mark(try-4, if-2)
nsubj(try-4, we-3)
nsubj(carry-6, we-3)
advcl(go-62, try-4)
aux(carry-6, to-5)
xcomp(try-4, carry-6)
det(home-9, this-7)
nn(home-9, sand-8)
dobj(carry-6, home-9)
det(way-11, the-10)
dep(home-9, way-11)
nsubjpass(pointed-14, we-12)
auxpass(pointed-14, 're-13)
rcmod(home-9, pointed-14)
advmod(pointed-14, now-15)
nsubj(got-18, we-17)
nsubj(climb-20, we-17)
rcmod(home-9, got-18)
ccomp(pointed-14, got-18)
conj_and(pointed-14, got-18)
aux(climb-20, to-19)
xcomp(got-18, climb-20)
dobj(climb-20, fences-21)
mark(git-24, till-22)
nsubj(git-24, we-23)
advcl(climb-20, git-24)
acomp(git-24, tired-25)
prep(git-24, just-27)
pobj(just-27, frontier-28)
prep_after(git-24, frontier-30)
dobj(git-24, Egypt-32)
parataxis(git-24, Egypt-32)
appos(Egypt-32, Arabia-34)
appos(Egypt-32, Hindostan-36)
dobj(git-24, so-39)
parataxis(git-24, so-39)
conj_and(Egypt-32, so-39)
prep(so-39, on-40)
nsubj(whack-46, they-43)
aux(whack-46, 'll-44)
advmod(whack-46, all-45)
rcmod(home-9, whack-46)
conj_and(pointed-14, whack-46)
det(duty-49, a-48)
prep_on(whack-46, duty-49)
nsubj(see-54, you-53)
rcmod(home-9, see-54)
conj_and(pointed-14, see-54)
advmod(see-54, easy-56)
advmod(see-54, enough-57)
nsubj(go-62, we-59)
aux(go-62, CA-60)
neg(go-62, N'T-61)
root(ROOT-0, go-62)
amod(road-64, THAT-63)
dobj(go-62, road-64)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (WRB Why))
      (, ,)
      (NP (NNP Tom)))
    (, ,) ('' '')
    (NP (PRP I))
    (VP (VBZ says) (, ,) (`` ``)
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB sail)
            (NP
              (NP (NN right))
              (PP (IN over)
                (NP (PRP$ their) (JJ old) (NNS frontiers)))
              (: ;)
              (SBARQ
                (WHADVP (WRB how))
                (SQ (VBP are)
                  (NP (NNP THEY))
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB stop)
                          (NP (PRP us)))))))
                (. ?)))))))
    ('' '')))

discourse(Tom-4, Why-2)
dep(says-8, Tom-4)
nsubj(says-8, I-7)
root(ROOT-0, says-8)
nsubj(sail-13, we-11)
aux(sail-13, can-12)
ccomp(says-8, sail-13)
dobj(sail-13, right-14)
poss(frontiers-18, their-16)
amod(frontiers-18, old-17)
prep_over(right-14, frontiers-18)
advmod(going-23, how-20)
aux(going-23, are-21)
nsubj(going-23, THEY-22)
nsubj(stop-25, THEY-22)
dep(right-14, going-23)
aux(stop-25, to-24)
xcomp(going-23, stop-25)
dobj(stop-25, us-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD looked)
      (SBAR
        (S
          (NP
            (NP
              (ADJP
                (ADJP (JJ sorrowful)
                  (PP (IN at)
                    (NP (PRP me))))
                (PRN (, ,)
                  (CC and)
                  (VP (VBZ says))
                  (, ,)))
              (JJ very) (NN grave))
            (: :) (`` ``)
            (NP (NNP Huck) (NNP Finn))
            (, ,))
          (VP (VBP do)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP think)
                  (SBAR (IN that)
                    (S
                      (VP (MD would)
                        (VP (VB be)
                          (ADJP (JJ honest)))))))))))))
    (. ?) ('' '')))

nsubj(looked-2, He-1)
root(ROOT-0, looked-2)
amod(grave-11, sorrowful-3)
prep_at(sorrowful-3, me-5)
cc(says-8, and-7)
dep(sorrowful-3, says-8)
amod(grave-11, very-10)
nsubj(do-17, grave-11)
nn(Finn-15, Huck-14)
dep(grave-11, Finn-15)
ccomp(looked-2, do-17)
nsubj(think-19, you-18)
ccomp(do-17, think-19)
mark(honest-23, that-20)
aux(honest-23, would-21)
cop(honest-23, be-22)
ccomp(think-19, honest-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (S
        (NP (PRP them))
        (NP
          (NP (NN kind))
          (PP (IN of)
            (NP (NNS interruptions))))))
    (. .)))

nsubj(hate-2, I-1)
root(ROOT-0, hate-2)
nsubj(kind-4, them-3)
xcomp(hate-2, kind-4)
prep_of(kind-4, interruptions-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD said)
        (NP (NN nothing))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD went)
        (PP (IN on))
        (: :) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (NP (PRP we))
          (VP (VBP 're)
            (VP (VBN shut)
              (PP (IN off)
                (NP (DT the) (JJ other) (NN way)))
              (, ,)
              (ADVP (RB too)))))))
    (. .)))

nsubj(said-3, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
dobj(said-3, nothing-4)
nsubj(went-8, he-7)
conj_and(said-3, went-8)
prep(went-8, on-9)
discourse(shut-16, Well-12)
nsubjpass(shut-16, we-14)
auxpass(shut-16, 're-15)
ccomp(went-8, shut-16)
det(way-20, the-18)
amod(way-20, other-19)
prep_off(shut-16, way-20)
advmod(shut-16, too-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP go)
          (PRT (RP back))
          (NP
            (NP (DT the) (NN way))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP 've)
                  (VP (VBN come)))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NNP New) (NNP York) (NN custom-house))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJR worse))
              (SBAR (IN than)
                (S
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP (PRP them) (NNS others))))
                  (VP (VBD put)
                    (ADVP (RB together))))))))
        (, ,)
        (PP (IN on)
          (NP
            (NP (NN account))
            (PP (IN of)
              (NP
                (NP (DT the) (NN kind))
                (PP (IN of)
                  (NP
                    (NP (NN cargo))
                    (SBAR
                      (S
                        (NP (PRP we))
                        (VP (VBP 've)
                          (VP (VBN got)))))))))))))
    (. .) ('' '')))

mark(go-3, If-1)
nsubj(go-3, we-2)
advcl('s-12, go-3)
prt(go-3, back-4)
det(way-6, the-5)
dobj(go-3, way-6)
nsubj(come-9, we-7)
aux(come-9, 've-8)
rcmod(way-6, come-9)
expl('s-12, there-11)
root(ROOT-0, 's-12)
det(custom-house-16, the-13)
nn(custom-house-16, New-14)
nn(custom-house-16, York-15)
nsubj('s-12, custom-house-16)
nsubj(worse-21, that-19)
cop(worse-21, is-20)
nsubj('s-12, worse-21)
conj_and(custom-house-16, worse-21)
mark(put-27, than-22)
nsubj(put-27, all-23)
dep(others-26, them-25)
prep_of(all-23, others-26)
advcl(worse-21, put-27)
advmod(put-27, together-28)
det(kind-34, the-33)
prep_on_account_of(worse-21, kind-34)
prep_of(kind-34, cargo-36)
nsubj(got-39, we-37)
aux(got-39, 've-38)
rcmod(cargo-36, got-39)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP they))
      (VP (MD ca) (RB n't)
        (VP (VB raise)
          (NP
            (NP (NNP Sahara) (NN sand))
            (PP (IN in)
              (NP (NNP America)))
            (, ,)
            (PP (IN of)
              (NP (NN course)))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (MD ca) (RB n't)
            (VP (VB raise)
              (NP (DT a) (NN thing))
              (ADVP (RB there))))))
      (, ,)
      (NP (DT the) (NN duty))
      (VP (VBZ is)
        (VP (VBG fourteen)
          (NP
            (NP
              (QP (CD hundred) (CD thousand)))
            (PP (IN per)
              (NP (NN cent)))))))
    (. .)))

discourse(raise-7, Well-2)
nsubj(raise-7, they-4)
aux(raise-7, ca-5)
neg(raise-7, n't-6)
root(ROOT-0, raise-7)
nn(sand-9, Sahara-8)
dobj(raise-7, sand-9)
prep_in(sand-9, America-11)
prep_of(sand-9, course-14)
advmod(raise-21, when-17)
nsubj(raise-21, they-18)
aux(raise-21, ca-19)
neg(raise-21, n't-20)
advcl(fourteen-29, raise-21)
det(thing-23, a-22)
dobj(raise-21, thing-23)
advmod(raise-21, there-24)
det(duty-27, the-26)
nsubj(fourteen-29, duty-27)
aux(fourteen-29, is-28)
conj_and(raise-7, fourteen-29)
number(thousand-31, hundred-30)
dobj(fourteen-29, thousand-31)
prep_per(thousand-31, cent-33)

(ROOT
  (S
    (PP (IN on)
      (NP (PRP it)))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP try)
          (S
            (VP (TO to)
              (VP (VB fetch)
                (NP (PRP it))
                (PP (IN in)
                  (PP (IN from)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (PRP they))
                        (VP (VBP do))))))))))))
    (VP (VBP raise)
      (NP (PRP it)))
    (. .) ('' '')))

prep_on(raise-14, it-2)
mark(try-5, if-3)
nsubj(try-5, you-4)
nsubj(fetch-7, you-4)
csubj(raise-14, try-5)
aux(fetch-7, to-6)
xcomp(try-5, fetch-7)
dobj(fetch-7, it-8)
prep(fetch-7, in-9)
pcomp(in-9, from-10)
advmod(do-13, where-11)
nsubj(do-13, they-12)
pcomp(from-10, do-13)
root(ROOT-0, raise-14)
dobj(raise-14, it-15)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBP ai) (RB n't)
      (NP
        (NP (DT no) (NN sense))
        (PP (IN in)
          (NP
            (NP (DT that))
            (, ,)
            (NP (NNP Tom) (NNP Sawyer))))))
    (. .) ('' '')))

expl(ai-3, There-2)
root(ROOT-0, ai-3)
neg(ai-3, n't-4)
neg(sense-6, no-5)
nsubj(ai-3, sense-6)
prep_in(sense-6, that-8)
nn(Sawyer-11, Tom-10)
appos(that-8, Sawyer-11)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBD said)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD WAS))))))
    (. ?)))

nsubj(said-3, Who-2)
root(ROOT-0, said-3)
expl(WAS-5, there-4)
ccomp(said-3, WAS-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB talk)
        (PP (TO to)
          (NP (PRP me)))
        (PP (IN like)
          (NP
            (NP
              (NP (DT that))
              (PP (IN for)))
            (, ,)
            (NP (NNP Huck) (NNP Finn))))))
    (. ?)))

dobj(talk-4, What-1)
aux(talk-4, do-2)
nsubj(talk-4, you-3)
root(ROOT-0, talk-4)
prep_to(talk-4, me-6)
prep_like(talk-4, that-8)
prep(that-8, for-9)
nn(Finn-12, Huck-11)
appos(that-8, Finn-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP wait)
      (SBAR (IN till)
        (S
          (NP (PRP I))
          (VP (VBP say)
            (SBAR
              (S
                (NP (DT a) (NN thing))
                (VP (VBZ 's)
                  (VP (VBN got)
                    (NP
                      (NP (NN sense))
                      (PP (IN in)
                        (NP (PRP it))))
                    (SBAR (IN before)
                      (S
                        (NP (PRP you))
                        (VP (VBP go)
                          (PP (TO to)
                            (S
                              (VP (VBG accusing)
                                (NP (PRP me))
                                (PP (IN of)
                                  (S
                                    (VP (VBG saying)
                                      (NP (PRP it)))))))))))))))))))
    (. .) ('' '')))

nsubj(wait-2, You-1)
root(ROOT-0, wait-2)
mark(say-5, till-3)
nsubj(say-5, I-4)
advcl(wait-2, say-5)
det(thing-7, a-6)
nsubjpass(got-9, thing-7)
auxpass(got-9, 's-8)
ccomp(say-5, got-9)
dobj(got-9, sense-10)
prep_in(sense-10, it-12)
mark(go-15, before-13)
nsubj(go-15, you-14)
advcl(got-9, go-15)
prepc_to(go-15, accusing-17)
dobj(accusing-17, me-18)
prepc_of(accusing-17, saying-20)
dobj(saying-20, it-21)

(ROOT
  (S (`` ``)
    (ADVP (DT All) (NN right))
    (, ,)
    (VP (VBP consider)
      (S
        (NP (PRP me))
        (UCP
          (VP (VBG crying)
            (PP (IN about)
              (NP (PRP it))))
          (, ,)
          (CC and)
          (ADJP (JJ sorry)))))
    (. .)))

det(right-3, All-2)
advmod(consider-5, right-3)
root(ROOT-0, consider-5)
dep(crying-7, me-6)
dep(consider-5, crying-7)
prep_about(crying-7, it-9)
dep(consider-5, sorry-12)
conj_and(crying-7, sorry-12)

(ROOT
  (S
    (VP (VB Go)
      (PRT (RP on)))
    (. .) ('' '')))

root(ROOT-0, Go-1)
prt(Go-1, on-2)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (NNP Mars) (NNP Tom))
          (, ,)
          (VP (VB do)
            (NP (NN dey) (NN jam) (NN dat) (NN duty))
            (PP (IN onto)
              (NP
                (NP (NN everything))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (MD ca) (RB n't)
                      (VP (VB raise)
                        (PP (IN in)
                          (NP (NNP America)))))))))))))
    (, ,)
    (NP (FW en))
    (VP (VBP do) (RB n't)
      (VP (VB make)
        (NP (DT no) (`` `) (NN stinction) (`` `) (NN twix) ('' ') (NN anything))))
    (. ?) ('' '')))

nsubj(says-2, Jim-1)
ccomp(make-25, says-2)
nn(Tom-6, Mars-5)
nsubj(do-8, Tom-6)
ccomp(says-2, do-8)
nn(duty-12, dey-9)
nn(duty-12, jam-10)
nn(duty-12, dat-11)
dobj(do-8, duty-12)
prep_onto(do-8, everything-14)
nsubj(raise-18, we-15)
aux(raise-18, ca-16)
neg(raise-18, n't-17)
rcmod(everything-14, raise-18)
prep_in(raise-18, America-20)
nsubj(make-25, en-22)
aux(make-25, do-23)
neg(make-25, n't-24)
root(ROOT-0, make-25)
neg(anything-32, no-26)
nn(anything-32, stinction-28)
nn(anything-32, twix-30)
dobj(make-25, anything-32)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP they))
          (VP (VBP do)))))
    (. .) ('' '')))

discourse('s-5, Yes-2)
nsubj('s-5, that-4)
root(ROOT-0, 's-5)
dobj(do-8, what-6)
nsubj(do-8, they-7)
ccomp('s-5, do-8)

(ROOT
  (S (`` ``)
    (NP (NNP Mars) (NNP Tom))
    (PRN (, ,)
      (SINV
        (VP (VBP ai) (RB n't))
        (NP
          (NP
            (NP
              (NP (NNP de) (NNP blessin) (POS '))
              (NN o) (POS '))
            (NNP de) (NNP Lord))
          (PP (IN de)
            (NP
              (NP (NNP mos) (POS '))
              (JJ valuable) (NN thing) (NN dey))))))
    (VP (VBZ is))
    (. ?) ('' '')))

nn(Tom-3, Mars-2)
nsubj(is-20, Tom-3)
parataxis(is-20, ai-5)
neg(ai-5, n't-6)
nn(blessin-8, de-7)
poss(o-10, blessin-8)
poss(Lord-13, o-10)
nn(Lord-13, de-12)
nsubj(ai-5, Lord-13)
poss(dey-19, mos-15)
amod(dey-19, valuable-17)
nn(dey-19, thing-18)
prep_de(Lord-13, dey-19)
root(ROOT-0, is-20)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is))
    (. .) ('' '')))

discourse(is-5, Yes-2)
nsubj(is-5, it-4)
root(ROOT-0, is-5)

(ROOT
  (S (`` ``)
    (VP (VB Do) (RB n't)
      (ADVP (FW de) (FW preacher)
        (NP (CD stan)))
      (VP (`` ')
        (ADVP (RB up)
          (PP (IN in)
            (ADVP
              (NP (IN de) (NN pulpit))
              (IN en))))
        (VB call)
        (NP (PRP it))
        (PRT (RP down))
        (PP (IN on)
          (NP (FW de) (NNS people)))))
    (. ?) ('' '')))

aux(call-13, Do-2)
neg(call-13, n't-3)
nn(stan-6, de-4)
dep(stan-6, preacher-5)
advmod(call-13, stan-6)
advmod(call-13, up-8)
prep(up-8, in-9)
amod(pulpit-11, de-10)
npadvmod(en-12, pulpit-11)
pcomp(in-9, en-12)
root(ROOT-0, call-13)
dobj(call-13, it-14)
prt(call-13, down-15)
nn(people-18, de-17)
prep_on(call-13, people-18)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (NP (NNP Whah))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBP come)
            (PP (IN from))))))
    (. ?) ('' '')))

nsubj(do-3, Whah-2)
root(ROOT-0, do-3)
nsubj(come-5, it-4)
ccomp(do-3, come-5)
prep(come-5, from-6)

(ROOT
  (S (`` ``)
    (NP (NNP From))
    (VP (VBZ heaven))
    (. .) ('' '')))

nsubj(heaven-3, From-2)
root(ROOT-0, heaven-3)

(ROOT
  (S (`` ``)
    (VP (VB Yassir))
    (. !)))

root(ROOT-0, Yassir-2)

(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (VBZ 's)
        (NP
          (NP (NNP jes) (POS '))
          (NN right))
        (, ,) (`` `)
        (S
          (ADJP (JJ deed))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBZ is) (, ,)
                (NP (NN honey))))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBD come)
        (PP (IN from)
          (NP (NN heaven)))
        (, ,)
        (PP (IN en)
          (NP
            (NP (NNP dat) (POS 's))
            (NP (DT a) (JJ foreign) (NN country))))))
    (. .)))

nsubj(right-5, you-1)
cop(right-5, 's-2)
poss(right-5, jes-3)
root(ROOT-0, right-5)
dep(honey-12, deed-8)
nsubj(honey-12, you-9)
cop(honey-12, is-10)
dep(right-5, honey-12)
nsubj(come-15, it-14)
parataxis(right-5, come-15)
prep_from(come-15, heaven-17)
prep_en(come-15, dat-20)
possessive(dat-20, 's-21)
det(country-24, a-22)
amod(country-24, foreign-23)
dep(dat-20, country-24)

(ROOT
  (FRAG
    (ADVP (RB NOW))
    (, ,)
    (NP (NN den))
    (. !)))

dep(den-3, NOW-1)
root(ROOT-0, den-3)

(ROOT
  (S
    (VP (VB do)
      (S
        (NP (NN dey))
        (VP (VB put)
          (NP (DT a) (NN tax))
          (PP (IN on)
            (NP (NN dat) (NN blessin) ('' '))))))
    (. ?) ('' '')))

root(ROOT-0, do-1)
nsubj(put-3, dey-2)
ccomp(do-1, put-3)
det(tax-5, a-4)
dobj(put-3, tax-5)
nn(blessin-8, dat-7)
prep_on(put-3, blessin-8)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP they))
    (VP (VBP do) (RB n't))
    (. .) ('' '')))

discourse(do-5, No-2)
nsubj(do-5, they-4)
root(ROOT-0, do-5)
neg(do-5, n't-6)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Course) (NNP dey))
      (VP (VBP do) (RB n't)))
    (: ;)
    (S
      (ADVP
        (ADVP (IN en))
        (SBAR (IN so)
          (S
            (NP (PRP it))
            (ADJP (JJ stan) ('' ')
              (S
                (VP (TO to)
                  (VP (VB reason)
                    (NP (NN dat)))))))))
      (NP (PRP you))
      (VP (VBZ 's)
        (VP (VBN mistaken) (, ,)
          (NP (NNP Mars) (NNP Tom)))))
    (. .)))

nn(dey-3, Course-2)
nsubj(do-4, dey-3)
root(ROOT-0, do-4)
neg(do-4, n't-5)
advmod(mistaken-17, en-7)
mark(stan-10, so-8)
dep(stan-10, it-9)
advcl(en-7, stan-10)
aux(reason-13, to-12)
xcomp(stan-10, reason-13)
dobj(reason-13, dat-14)
nsubjpass(mistaken-17, you-15)
auxpass(mistaken-17, 's-16)
parataxis(do-4, mistaken-17)
nn(Tom-20, Mars-19)
dobj(mistaken-17, Tom-20)

(ROOT
  (S
    (S
      (NP (NNP Dey))
      (VP (MD would) (RB n't)
        (VP (VB put)
          (NP
            (NP (JJ de) (NN tax))
            (PP (IN on)
              (NP
                (NP (NNP po) (POS '))
                (NN truck))))
          (PP (IN like)
            (NP (NNP san) (POS '))))))
    (, ,)
    (NP (NN dat) (NN everybody))
    (VP (VBP ai) (RB n't)
      (ADJP (`` `) (JJ bleeged)
        (S
          (VP (TO to)
            (VP
              (VP (VB have))
              (, ,)
              (ADVP (IN en))
              (VP (VB leave)
                (NP (PRP it))
                (PRT (RP off))))))
        (SBAR
          (S
            (NP
              (NP (NNP 'n) (IN de) (NNP bes) (POS '))
              (NN thing) (NN dey))
            (VP (VBZ is) (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (NN nobody))
                  (VP (MD ca) (RB n't)
                    (VP (VB git)
                      (PRT (RP along))
                      (NP (NN widout)))))))))))
    (. .) ('' '')))

nsubj(put-4, Dey-1)
aux(put-4, would-2)
neg(put-4, n't-3)
ccomp(bleeged-20, put-4)
amod(tax-6, de-5)
dobj(put-4, tax-6)
poss(truck-10, po-8)
prep_on(tax-6, truck-10)
prep_like(put-4, san-12)
nn(everybody-16, dat-15)
nsubj(bleeged-20, everybody-16)
nsubj(have-22, everybody-16)
cop(bleeged-20, ai-17)
neg(bleeged-20, n't-18)
root(ROOT-0, bleeged-20)
aux(have-22, to-21)
xcomp(bleeged-20, have-22)
advmod(have-22, en-24)
dep(have-22, leave-25)
dobj(leave-25, it-26)
prt(leave-25, off-27)
nn(bes-30, 'n-28)
amod(bes-30, de-29)
poss(dey-33, bes-30)
nn(dey-33, thing-32)
nsubj(is-34, dey-33)
ccomp(bleeged-20, is-34)
dobj(git-40, which-36)
nsubj(git-40, nobody-37)
aux(git-40, ca-38)
neg(git-40, n't-39)
ccomp(is-34, git-40)
prt(git-40, along-41)
dobj(git-40, widout-42)

(ROOT
  (S
    (S
      (NP (NNP Tom) (NNP Sawyer))
      (VP (VBD was)
        (VP (VBN stumped))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBP see)
        (SBAR
          (S
            (NP (NNP Jim))
            (VP (VBD had)
              (VP (VBN got)
                (NP (PRP him))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP he))
                    (VP (MD could) (RB n't)
                      (VP (VB budge)))))))))))
    (. .)))

nn(Sawyer-2, Tom-1)
nsubjpass(stumped-4, Sawyer-2)
auxpass(stumped-4, was-3)
root(ROOT-0, stumped-4)
nsubj(see-7, he-6)
parataxis(stumped-4, see-7)
nsubj(got-10, Jim-8)
aux(got-10, had-9)
ccomp(see-7, got-10)
dobj(got-10, him-11)
advmod(budge-16, where-12)
nsubj(budge-16, he-13)
aux(budge-16, could-14)
neg(budge-16, n't-15)
advcl(got-10, budge-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB wiggle)
              (PRT (RP out))
              (PP (IN by)
                (S
                  (VP (VBG saying)
                    (SBAR
                      (SBAR
                        (S
                          (S
                            (NP (PRP they))
                            (VP (VBD had)
                              (VP (VBN FORGOT)
                                (S
                                  (VP (TO to)
                                    (VP (VB put)
                                      (PP (IN on)
                                        (NP (DT that) (NN tax)))))))))
                          (, ,)
                          (CC but)
                          (S
                            (S
                              (NP (PRP they))
                              (VP (MD 'd)
                                (VP (VB be)
                                  (ADJP (JJ sure)
                                    (S
                                      (VP (TO to)
                                        (VP (VB remember)
                                          (PP (IN about)
                                            (NP
                                              (NP (PRP it))
                                              (, ,)
                                              (NP
                                                (NP (JJ next) (NN session))
                                                (PP (IN of)
                                                  (NP (NNP Congress)))))))))))))
                            (, ,)
                            (CC and)
                            (RB then)
                            (S
                              (NP (PRP they))
                              (VP (MD 'd)
                                (VP (VB put)
                                  (NP (PRP it))
                                  (PRT (RP on))))))))
                      (, ,)
                      (CC but)
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD was)
                            (NP (DT a) (JJ poor) (JJ lame) (NN come-off))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD knowed)
        (NP (PRP it))))
    (. .)))

nsubj(tried-2, He-1)
nsubj(wiggle-4, He-1)
root(ROOT-0, tried-2)
aux(wiggle-4, to-3)
xcomp(tried-2, wiggle-4)
prt(wiggle-4, out-5)
prepc_by(wiggle-4, saying-7)
nsubj(FORGOT-10, they-8)
nsubj(put-12, they-8)
aux(FORGOT-10, had-9)
dep(saying-7, FORGOT-10)
aux(put-12, to-11)
xcomp(FORGOT-10, put-12)
det(tax-15, that-14)
prep_on(put-12, tax-15)
nsubj(sure-21, they-18)
nsubj(remember-23, they-18)
aux(sure-21, 'd-19)
cop(sure-21, be-20)
dep(saying-7, sure-21)
conj_but(FORGOT-10, sure-21)
aux(remember-23, to-22)
xcomp(sure-21, remember-23)
prep_about(remember-23, it-25)
amod(session-28, next-27)
appos(it-25, session-28)
prep_of(session-28, Congress-30)
advmod(put-36, then-33)
nsubj(put-36, they-34)
aux(put-36, 'd-35)
conj_but(FORGOT-10, put-36)
conj_and(sure-21, put-36)
dobj(put-36, it-37)
prt(put-36, on-38)
nsubj(come-off-46, that-41)
cop(come-off-46, was-42)
det(come-off-46, a-43)
amod(come-off-46, poor-44)
amod(come-off-46, lame-45)
dep(saying-7, come-off-46)
conj_but(FORGOT-10, come-off-46)
nsubj(knowed-50, he-49)
conj_and(tried-2, knowed-50)
dobj(knowed-50, it-51)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD war) (RB n't)
              (ADJP (NN nothing) (JJ foreign))
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (NN war))
                    (VP (RB n't) (VBN taxed)
                      (PP (CC but)
                        (NP (RB just) (DT that) (NN one))))))
                (, ,)
                (CC and)
                (SBAR (IN so)
                  (S
                    (NP (PRP they))
                    (VP (MD could) (RB n't)
                      (VP (VB be)
                        (ADJP (JJ consistent)
                          (PP (IN without)
                            (S
                              (VP (VBG taxing)
                                (NP (PRP it))))))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ consistent)))))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ first) (NN law))
          (PP (IN of)
            (NP (NNS politics))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
expl(war-4, there-3)
ccomp(said-2, war-4)
neg(war-4, n't-5)
npadvmod(foreign-7, nothing-6)
acomp(war-4, foreign-7)
mark(taxed-11, that-8)
nsubj(taxed-11, war-9)
neg(taxed-11, n't-10)
advcl(war-4, taxed-11)
ccomp(war-4, taxed-11)
prep(taxed-11, but-12)
advmod(one-15, just-13)
det(one-15, that-14)
pobj(but-12, one-15)
mark(consistent-23, so-18)
nsubj(consistent-23, they-19)
aux(consistent-23, could-20)
neg(consistent-23, n't-21)
cop(consistent-23, be-22)
advcl(war-4, consistent-23)
ccomp(war-4, consistent-23)
conj_and(taxed-11, consistent-23)
prepc_without(consistent-23, taxing-25)
dobj(taxing-25, it-26)
aux(consistent-31, to-29)
cop(consistent-31, be-30)
csubj(law-35, consistent-31)
cop(law-35, was-32)
det(law-35, the-33)
amod(law-35, first-34)
conj_and(said-2, law-35)
prep_of(law-35, politics-37)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD stuck)
      (PP (TO to)
        (NP (PRP it)))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP
            (VP (VBD 'd)
              (VP (VBN left)
                (NP (PRP it))
                (PP (IN out)
                  (NP (NN unintentional)))))
            (CC and)
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ certain)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (NP (PRP$ their) (JJS best))
                        (S
                          (VP (TO to)
                            (VP (VB fix)
                              (NP (PRP it))
                              (SBAR (IN before)
                                (S
                                  (NP (PRP they))
                                  (VP (VBD got)
                                    (VP (VBN caught)
                                      (CC and)
                                      (VBN laughed)
                                      (PP (IN at)))))))))))))))))))
    (. .)))

dep(stuck-3, So-1)
nsubj(stuck-3, he-2)
root(ROOT-0, stuck-3)
prep_to(stuck-3, it-5)
mark(left-9, that-6)
nsubj(left-9, they-7)
nsubj(certain-16, they-7)
nsubj(do-18, they-7)
aux(left-9, 'd-8)
ccomp(stuck-3, left-9)
dobj(left-9, it-10)
prep_out(left-9, unintentional-12)
aux(certain-16, would-14)
cop(certain-16, be-15)
ccomp(stuck-3, certain-16)
conj_and(left-9, certain-16)
aux(do-18, to-17)
xcomp(certain-16, do-18)
poss(best-20, their-19)
dobj(do-18, best-20)
aux(fix-22, to-21)
vmod(do-18, fix-22)
dobj(fix-22, it-23)
mark(caught-27, before-24)
nsubjpass(caught-27, they-25)
nsubjpass(laughed-29, they-25)
auxpass(caught-27, got-26)
advcl(fix-22, caught-27)
advcl(fix-22, laughed-29)
conj_and(caught-27, laughed-29)
prep(caught-27, at-30)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB feel)
        (NP (DT no) (JJR more) (NN interest))
        (PP (IN in)
          (NP (JJ such) (NNS things)))
        (, ,)
        (ADVP
          (ADVP (RB as) (RB long))
          (SBAR (IN as)
            (S
              (S
                (S
                  (NP (PRP we))
                  (VP (MD could) (RB n't)
                    (VP (VB git)
                      (NP (PRP$ our) (NN sand))
                      (PRT (RP through)))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP it))
                  (VP (VBD made)
                    (S
                      (NP (PRP me))
                      (ADJP (JJ low-spirited))))))
              (, ,)
              (CC and)
              (S
                (NP (NNP Jim))
                (NP (DT the) (JJ same))))))))
    (. .)))

cc(feel-5, But-1)
nsubj(feel-5, I-2)
aux(feel-5, did-3)
neg(feel-5, n't-4)
root(ROOT-0, feel-5)
neg(interest-8, no-6)
amod(interest-8, more-7)
dobj(feel-5, interest-8)
amod(things-11, such-10)
prep_in(feel-5, things-11)
advmod(long-14, as-13)
advmod(feel-5, long-14)
mark(git-19, as-15)
nsubj(git-19, we-16)
nsubj(same-33, we-16)
aux(git-19, could-17)
neg(git-19, n't-18)
advcl(long-14, git-19)
poss(sand-21, our-20)
dobj(git-19, sand-21)
prt(git-19, through-22)
nsubj(made-26, it-25)
advcl(long-14, made-26)
conj_and(git-19, made-26)
nsubj(low-spirited-28, me-27)
xcomp(made-26, low-spirited-28)
dep(same-33, Jim-31)
det(same-33, the-32)
advcl(long-14, same-33)
conj_and(git-19, same-33)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Tom))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD tried)
                (S
                  (VP (TO to)
                    (VP (VB cheer)
                      (NP (PRP us))
                      (PRT (RP up))
                      (PP (IN by)
                        (S
                          (VP (VBG saying)
                            (NP (PRP he))))))))))))
        (VP (MD would)
          (VP (VB think)
            (PRT (RP up))
            (NP
              (NP (DT another) (NN speculation))
              (PP (IN for)
                (NP (PRP us)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB be)
                      (ADJP
                        (ADJP (RB just) (RB as) (JJ good)
                          (PP (IN as)
                            (NP (DT this) (NN one))))
                        (CC and)
                        (ADJP (JJR better)))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD did) (RB n't)
          (VP (VB do)
            (NP (DT no) (JJ good))))))
    (, ,)
    (NP (PRP we))
    (VP (VBD did) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD was)
              (ADJP (DT any) (RB as) (JJ big))
              (PP (IN as)
                (NP (DT this))))))))
    (. .)))

nsubj(think-12, Tom-1)
nsubj(tried-3, he-2)
nsubj(cheer-5, he-2)
rcmod(Tom-1, tried-3)
aux(cheer-5, to-4)
xcomp(tried-3, cheer-5)
dobj(cheer-5, us-6)
prt(cheer-5, up-7)
prepc_by(cheer-5, saying-9)
dobj(saying-9, he-10)
aux(think-12, would-11)
ccomp(believe-41, think-12)
prt(think-12, up-13)
det(speculation-15, another-14)
dobj(think-12, speculation-15)
nsubj(good-23, speculation-15)
nsubj(better-28, speculation-15)
prep_for(speculation-15, us-17)
aux(good-23, would-19)
cop(good-23, be-20)
advmod(good-23, just-21)
advmod(good-23, as-22)
rcmod(speculation-15, good-23)
det(one-26, this-25)
prep_as(good-23, one-26)
rcmod(speculation-15, better-28)
conj_and(good-23, better-28)
nsubj(do-34, it-31)
aux(do-34, did-32)
neg(do-34, n't-33)
conj_but(think-12, do-34)
ccomp(believe-41, do-34)
neg(good-36, no-35)
dobj(do-34, good-36)
nsubj(believe-41, we-38)
aux(believe-41, did-39)
neg(believe-41, n't-40)
root(ROOT-0, believe-41)
expl(was-43, there-42)
ccomp(believe-41, was-43)
det(big-46, any-44)
advmod(big-46, as-45)
acomp(was-43, big-46)
prep_as(was-43, this-48)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (RB mighty) (JJ hard))))
    (: ;)
    (S
      (NP
        (NP (PDT such) (DT a) (JJ little) (NN while))
        (ADVP (IN ago)))
      (NP (PRP we))
      (VP
        (VP (VBD was)
          (ADJP (RB so) (JJ rich)))
        (, ,)
        (CC and)
        (VP (MD could)
          (S (`` `)
            (S
              (S
                (NP (NNP a) (POS '))
                (VP
                  (VP (VBN bought)
                    (NP (DT a) (NN country)))
                  (CC and)
                  (VP (VBN started)
                    (NP (DT a) (NN kingdom)))
                  (CC and)
                  (VP (VBN been)
                    (ADJP (JJ celebrated)
                      (CC and)
                      (JJ happy)))))
              (, ,)
              (CC and)
              (S
                (ADVP (RB now))
                (NP (PRP we))
                (VP (VBD was)
                  (ADJP (RB so) (JJ poor)
                    (CC and)
                    (JJ ornery))
                  (ADVP (RB again)))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP (PRP$ our) (NN sand))
          (VP (VBN left)
            (PP (IN on)
              (NP (PRP$ our) (NNS hands)))))))
    (. .)))

nsubj(hard-4, It-1)
cop(hard-4, was-2)
advmod(hard-4, mighty-3)
root(ROOT-0, hard-4)
predet(while-9, such-6)
det(while-9, a-7)
amod(while-9, little-8)
nsubj(rich-14, while-9)
nsubj(left-48, while-9)
advmod(while-9, ago-10)
nsubj(rich-14, we-11)
cop(rich-14, was-12)
advmod(rich-14, so-13)
parataxis(hard-4, rich-14)
parataxis(hard-4, could-17)
conj_and(rich-14, could-17)
nsubj(bought-21, a-19)
nsubj(started-25, a-19)
nsubj(celebrated-30, a-19)
dep(could-17, bought-21)
det(country-23, a-22)
dobj(bought-21, country-23)
dep(could-17, started-25)
conj_and(bought-21, started-25)
det(kingdom-27, a-26)
dobj(started-25, kingdom-27)
cop(celebrated-30, been-29)
dep(could-17, celebrated-30)
conj_and(bought-21, celebrated-30)
conj_and(bought-21, happy-32)
conj_and(celebrated-30, happy-32)
advmod(poor-39, now-35)
nsubj(poor-39, we-36)
nsubj(ornery-41, we-36)
cop(poor-39, was-37)
advmod(poor-39, so-38)
dep(could-17, poor-39)
conj_and(bought-21, poor-39)
conj_and(bought-21, ornery-41)
conj_and(poor-39, ornery-41)
advmod(poor-39, again-42)
aux(left-48, had-45)
poss(sand-47, our-46)
dobj(left-48, sand-47)
parataxis(hard-4, left-48)
conj_and(rich-14, left-48)
poss(hands-51, our-50)
prep_on(left-48, hands-51)

(ROOT
  (S
    (S
      (NP (DT The) (NN sand))
      (VP (VBD was)
        (VP (VBG looking)
          (ADJP (RB so) (JJ lovely))
          (ADVP (RB before))
          (, ,)
          (SBAR (RB just) (IN like)
            (S
              (NP
                (NP (NN gold))
                (CC and)
                (NP (FW di)))
              (`` `)
              (VP (VBZ monds)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN feel))
        (PP (IN of)
          (NP (PRP it))))
      (VP (VBD was)
        (ADJP
          (ADJP (RB so) (JJ soft))
          (CC and)
          (ADJP (RB so) (JJ silky)
            (CC and)
            (JJ nice)))))
    (, ,)
    (S (CC but)
      (ADVP (RB now))
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB bear)
          (NP
            (NP (DT the) (NN sight))
            (PP (IN of)
              (NP (PRP it)))))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBD made)
        (S
          (NP (PRP me))
          (ADJP (JJ sick)
            (S
              (VP (TO to)
                (VP (VB look)
                  (PP (IN at)
                    (NP (PRP it))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (VBD knowed)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD would) (RB n't)
                (ADVP (RB ever))
                (VP (VB feel)
                  (ADJP (JJ comfortable))
                  (ADVP (RB again))
                  (SBAR (IN till)
                    (S
                      (NP (PRP we))
                      (VP (VBD got)
                        (VP (VBN shut)
                          (PP (IN of)
                            (NP (PRP it)))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBD did) (RB n't)
          (VP (VB have)
            (NP (PRP it))
            (ADVP
              (ADVP (RB there))
              (RB no) (JJR more))
            (S
              (VP (TO to)
                (VP (VB remind)
                  (NP (PRP us))
                  (SBAR
                    (SBAR
                      (WHPP (IN of)
                        (WHNP (WP what)))
                      (S
                        (NP (PRP we))
                        (VP (VBD had)
                          (VP (VBN been)))))
                    (CC and)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP we))
                        (VP (VBD had)
                          (VP (VBN got)
                            (ADVP (RB degraded) (RB down))
                            (PP (TO to))))))))))))))
    (. .)))

det(sand-2, The-1)
nsubj(looking-4, sand-2)
aux(looking-4, was-3)
root(ROOT-0, looking-4)
advmod(lovely-6, so-5)
acomp(looking-4, lovely-6)
advmod(looking-4, before-7)
advmod(monds-15, just-9)
mark(monds-15, like-10)
nsubj(monds-15, gold-11)
conj_and(gold-11, di-13)
nsubj(monds-15, di-13)
advcl(looking-4, monds-15)
det(feel-19, the-18)
nsubj(soft-24, feel-19)
nsubj(silky-27, feel-19)
prep_of(feel-19, it-21)
cop(soft-24, was-22)
advmod(soft-24, so-23)
conj_and(looking-4, soft-24)
advmod(silky-27, so-26)
conj_and(looking-4, silky-27)
conj_and(soft-24, silky-27)
conj_and(soft-24, nice-29)
conj_and(silky-27, nice-29)
cc(bear-36, but-31)
advmod(bear-36, now-32)
nsubj(bear-36, I-33)
aux(bear-36, could-34)
neg(bear-36, n't-35)
ccomp(looking-4, bear-36)
conj_and(looking-4, bear-36)
det(sight-38, the-37)
dobj(bear-36, sight-38)
prep_of(sight-38, it-40)
nsubj(made-43, it-42)
ccomp(looking-4, made-43)
conj_and(looking-4, made-43)
nsubj(sick-45, me-44)
nsubj(look-47, me-44)
xcomp(made-43, sick-45)
aux(look-47, to-46)
xcomp(sick-45, look-47)
prep_at(look-47, it-49)
nsubj(knowed-53, I-52)
conj_and(looking-4, knowed-53)
nsubj(feel-58, I-54)
aux(feel-58, would-55)
neg(feel-58, n't-56)
advmod(feel-58, ever-57)
ccomp(knowed-53, feel-58)
acomp(feel-58, comfortable-59)
advmod(feel-58, again-60)
mark(shut-64, till-61)
nsubjpass(shut-64, we-62)
auxpass(shut-64, got-63)
advcl(feel-58, shut-64)
prep_of(shut-64, it-66)
nsubj(have-72, I-69)
aux(have-72, did-70)
neg(have-72, n't-71)
conj_and(looking-4, have-72)
conj_and(knowed-53, have-72)
dobj(have-72, it-73)
advmod(have-72, there-74)
neg(there-74, no-75)
dep(there-74, more-76)
aux(remind-78, to-77)
vmod(have-72, remind-78)
dobj(remind-78, us-79)
prep_of(been-84, what-81)
nsubj(been-84, we-82)
aux(been-84, had-83)
dep(remind-78, been-84)
prep_to(got-89, what-86)
nsubj(got-89, we-87)
aux(got-89, had-88)
dep(remind-78, got-89)
conj_and(been-84, got-89)
advmod(down-91, degraded-90)
advmod(got-89, down-91)

(ROOT
  (S
    (NP (DT The) (NNS others))
    (VP (VBD was)
      (VP (VBG feeling)
        (NP
          (NP (DT the) (JJ same) (NN way))
          (PP (IN about)
            (NP (PRP it))))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD was))))))
    (. .)))

det(others-2, The-1)
nsubj(feeling-4, others-2)
aux(feeling-4, was-3)
root(ROOT-0, feeling-4)
det(way-7, the-5)
amod(way-7, same-6)
dobj(feeling-4, way-7)
prep_about(way-7, it-9)
mark(was-12, that-10)
nsubj(was-12, I-11)
ccomp(feeling-4, was-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knowed)
      (NP (PRP it))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP
            (VP (VBD cheered)
              (ADVP (RB up) (RB so)))
            (, ,)
            (NP
              (NP (DT the) (NN minute))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBZ says)
                    (S
                      (NP (NNP le) (POS 's))
                      (VP (VB throw)
                        (NP (DT this) (NN truck))
                        (ADVP (RB overboard))))))))))))
    (. .)))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
dobj(knowed-2, it-3)
mark(cheered-7, because-5)
nsubj(cheered-7, they-6)
advcl(knowed-2, cheered-7)
advmod(so-9, up-8)
advmod(cheered-7, so-9)
det(minute-12, the-11)
dobj(cheered-7, minute-12)
nsubj(says-14, I-13)
rcmod(minute-12, says-14)
nsubj(throw-17, le-15)
possessive(le-15, 's-16)
ccomp(says-14, throw-17)
det(truck-19, this-18)
dobj(throw-17, truck-19)
advmod(throw-17, overboard-20)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (NN work))
                  (, ,)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP know))))
                  (, ,)
                  (CC and)
                  (NP
                    (ADJP (RB pretty) (JJ solid))
                    (NN work)))
                (, ,)
                (ADVP (RB too))))))))
    (: ;)
    (S (IN so)
      (NP (NNP Tom) (PRP he))
      (VP (VBD divided)
        (NP (PRP it))
        (ADVP (RB up))
        (PP (VBG according)
          (PP (TO to)
            (NP (NN fairness)
              (CC and)
              (NN strength))))))
    (. .)))

discourse(going-5, Well-1)
nsubj(going-5, it-3)
nsubj(work-8, it-3)
aux(going-5, was-4)
root(ROOT-0, going-5)
aux(work-8, to-6)
cop(work-8, be-7)
xcomp(going-5, work-8)
nsubj(know-11, you-10)
xcomp(going-5, know-11)
conj_and(work-8, know-11)
rcmod(work-8, know-11)
advmod(solid-15, pretty-14)
amod(work-16, solid-15)
xcomp(going-5, work-16)
conj_and(work-8, work-16)
advmod(work-8, too-18)
dep(divided-23, so-20)
nsubj(divided-23, Tom-21)
dep(Tom-21, he-22)
parataxis(going-5, divided-23)
dobj(divided-23, it-24)
advmod(divided-23, up-25)
prepc_according_to(divided-23, to-27)
pobj(divided-23, fairness-28)
pobj(divided-23, strength-30)
conj_and(fairness-28, strength-30)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP me)
              (CC and)
              (PRP him))
            (VP (MD would)
              (VP (VB clear)
                (PRT (RP out))
                (NP
                  (NP (DT a) (JJ fifth) (NN apiece))
                  (PP (IN of)
                    (NP (DT the) (NN sand))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Jim))
      (VP (VBZ three-fifths)))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(clear-7, me-3)
conj_and(me-3, him-5)
nsubj(clear-7, him-5)
aux(clear-7, would-6)
ccomp(said-2, clear-7)
prt(clear-7, out-8)
det(apiece-11, a-9)
amod(apiece-11, fifth-10)
dobj(clear-7, apiece-11)
det(sand-14, the-13)
prep_of(apiece-11, sand-14)
nsubj(three-fifths-18, Jim-17)
conj_and(said-2, three-fifths-18)

(ROOT
  (S
    (NP (NNP Jim) (PRP he))
    (VP (VBD did) (RB n't)
      (ADVP (RB quite))
      (VP (VB like)
        (NP (DT that) (NN arrangement))))
    (. .)))

nsubj(like-6, Jim-1)
dep(Jim-1, he-2)
aux(like-6, did-3)
neg(like-6, n't-4)
advmod(like-6, quite-5)
root(ROOT-0, like-6)
det(arrangement-8, that-7)
dobj(like-6, arrangement-8)

(ROOT
  (SINV
    (S
      (S
        (NP (PRP He))
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP
              (NP
                (NP (NNP Course) (NNP I) (POS 's))
                (NNP de) (NNP stronges) ('' '))
              (, ,) (`` en)
              (S
                (NP (PRP I))
                (VP (VBZ 's)
                  (ADJP (JJ willin))))
              ('' '))
            (VP (TO to)
              (VP (VB do)
                (NP (DT a) (NN share) (NN accordin)))))
          ('' ')))
      (, ,)
      (CC but)
      (S
        (PP (IN by)
          (NP (NNS jings)))
        (NP (PRP you))
        (VP (VBZ 's)
          (ADJP (JJR kinder))
          (S
            (VP (VBN pilin) ('' ')
              (NP (PRP it))
              (PP (IN onto)
                (NP
                  (NP (NNP ole) (NNP Jim))
                  (, ,)
                  (NP (NNP Mars) (NNP Tom)))))))))
    (, ,)
    (VP (VBP hai) (RB n't))
    (NP (PRP you))
    (. ?) ('' '')))

nsubj(says-2, He-1)
ccomp(hai-40, says-2)
nn(I-6, Course-5)
poss(stronges-9, I-6)
nn(stronges-9, de-8)
dobj(says-2, stronges-9)
nsubj(do-18, stronges-9)
punct(stronges-9, en-12)
nsubj(willin-15, I-13)
cop(willin-15, 's-14)
dep(stronges-9, willin-15)
aux(do-18, to-17)
xcomp(says-2, do-18)
det(accordin-21, a-19)
nn(accordin-21, share-20)
dobj(do-18, accordin-21)
prep_by(kinder-29, jings-26)
nsubj(kinder-29, you-27)
cop(kinder-29, 's-28)
conj_but(says-2, kinder-29)
ccomp(hai-40, kinder-29)
dep(kinder-29, pilin-30)
dobj(pilin-30, it-32)
nn(Jim-35, ole-34)
prep_onto(pilin-30, Jim-35)
nn(Tom-38, Mars-37)
appos(Jim-35, Tom-38)
root(ROOT-0, hai-40)
neg(hai-40, n't-41)
nsubj(hai-40, you-42)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB think)
          (ADVP (RB so)))))
    (, ,)
    (S
      (NP (NNP Jim))
      (, ,)
      (CC but)
      (NP (PRP you))
      (VP (VBP try)
        (NP (PRP$ your) (NN hand))
        (PP (IN at)
          (S
            (VP (VBG fixing)
              (NP (PRP it)))))))
    (, ,)
    (CC and)
    (S
      (NP (VB let) (POS 's))
      (VP (VBP see)))
    (. .) ('' '')))

discourse(think-7, Well-2)
nsubj(think-7, I-4)
aux(think-7, did-5)
neg(think-7, n't-6)
root(ROOT-0, think-7)
advmod(think-7, so-8)
nsubj(try-14, Jim-10)
ccomp(think-7, you-13)
conj_and(think-7, you-13)
conj_but(try-14, you-13)
nsubj(try-14, you-13)
ccomp(think-7, try-14)
conj_and(think-7, try-14)
poss(hand-16, your-15)
dobj(try-14, hand-16)
prepc_at(try-14, fixing-18)
dobj(fixing-18, it-19)
nsubj(see-24, let-22)
possessive(let-22, 's-23)
conj_and(think-7, see-24)

(ROOT
  (S (IN So)
    (NP (NNP Jim))
    (VP (VBD reckoned)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would) (RB n't)
            (VP (VB be)
              (ADJP
                (ADJP (RB no)
                  (ADVP (RBR more) (IN than))
                  (JJ fair))
                (SBAR (IN if)
                  (S
                    (NP (PRP me)
                      (CC and)
                      (NNP Tom))
                    (VP (VBN done)
                      (NP
                        (NP (DT a) (NNS TENTH))
                        (NP (RB apiece))))))))))))
    (. .)))

dep(reckoned-3, So-1)
nsubj(reckoned-3, Jim-2)
root(ROOT-0, reckoned-3)
nsubj(fair-11, it-4)
aux(fair-11, would-5)
neg(fair-11, n't-6)
cop(fair-11, be-7)
neg(fair-11, no-8)
advmod(than-10, more-9)
advmod(fair-11, than-10)
ccomp(reckoned-3, fair-11)
mark(done-16, if-12)
nsubj(done-16, me-13)
conj_and(me-13, Tom-15)
nsubj(done-16, Tom-15)
ccomp(fair-11, done-16)
det(TENTH-18, a-17)
dobj(done-16, TENTH-18)
iobj(done-16, TENTH-18)
dep(TENTH-18, apiece-19)

(ROOT
  (S
    (S
      (NP (NNP Tom) (PRP he))
      (VP (VBD turned)
        (NP (PRP$ his) (NN back)
          (S
            (VP (TO to)
              (VP
                (VP (VB git)
                  (NP (NN room)))
                (CC and)
                (VP (VB be)
                  (ADJP (JJ private)))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBP smole)
        (NP
          (NP (DT a) (NN smile))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP
                (VP (VBN spread)
                  (PRT (RP around)))
                (CC and)
                (VP (VBN covered)
                  (NP (DT the) (JJ whole) (NN Sahara))
                  (PP (TO to)
                    (NP (DT the) (NN westward)))
                  (, ,)
                  (ADVP (RB back)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (JJ Atlantic) (NN edge))
                        (PP (IN of)
                          (NP (PRP it)))
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (PRP we))
                            (VP (VBP come)
                              (PP (IN from)))))))))))))))
    (. .)))

nsubj(turned-3, Tom-1)
dep(Tom-1, he-2)
root(ROOT-0, turned-3)
poss(back-5, his-4)
dobj(turned-3, back-5)
aux(git-7, to-6)
vmod(back-5, git-7)
dobj(git-7, room-8)
cop(private-11, be-10)
vmod(back-5, private-11)
conj_and(git-7, private-11)
advmod(smole-16, then-14)
nsubj(smole-16, he-15)
conj_and(turned-3, smole-16)
det(smile-18, a-17)
dobj(smole-16, smile-18)
nsubj(spread-20, smile-18)
nsubj(covered-23, smile-18)
rcmod(smile-18, spread-20)
prt(spread-20, around-21)
rcmod(smile-18, covered-23)
conj_and(spread-20, covered-23)
det(Sahara-26, the-24)
amod(Sahara-26, whole-25)
dobj(covered-23, Sahara-26)
det(westward-29, the-28)
prep_to(covered-23, westward-29)
advmod(covered-23, back-31)
det(edge-35, the-33)
amod(edge-35, Atlantic-34)
prep_to(back-31, edge-35)
prep_from(come-40, edge-35)
prep_of(edge-35, it-37)
advmod(come-40, where-38)
nsubj(come-40, we-39)
rcmod(edge-35, come-40)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP
        (VP (VBD turned)
          (PRT (RP around))
          (ADVP (RB again)))
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (DT a) (JJ good) (JJ enough) (NN arrangement))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD was)
        (ADJP (VBN satisfied)
          (SBAR (IN if)
            (S
              (NP (NNP Jim))
              (VP (VBD was)))))))
    (. .)))

advmod(turned-3, Then-1)
nsubj(turned-3, he-2)
nsubj(said-7, he-2)
root(ROOT-0, turned-3)
prt(turned-3, around-4)
advmod(turned-3, again-5)
conj_and(turned-3, said-7)
nsubj(arrangement-13, it-8)
cop(arrangement-13, was-9)
det(arrangement-13, a-10)
amod(arrangement-13, good-11)
amod(arrangement-13, enough-12)
ccomp(said-7, arrangement-13)
nsubjpass(satisfied-18, we-16)
auxpass(satisfied-18, was-17)
conj_and(turned-3, satisfied-18)
mark(was-21, if-19)
nsubj(was-21, Jim-20)
ccomp(satisfied-18, was-21)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)))))
    (. .)))

nsubj(said-2, Jim-1)
root(ROOT-0, said-2)
nsubj(was-4, he-3)
ccomp(said-2, was-4)

(ROOT
  (S
    (S (CC So)
      (ADVP (RB then))
      (NP (NNP Tom))
      (VP
        (VP (VBD measured)
          (PRT (RP off))
          (NP (PRP$ our) (NNS two-tenths))
          (PP (IN in)
            (NP (DT the) (NN bow))))
        (CC and)
        (VP (VBD left)
          (NP (DT the) (NN rest))
          (PP (IN for)
            (NP (NNP Jim))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD surprised)
        (NP
          (NP (NNP Jim))
          (NP (DT a) (JJ good) (NN deal)))
        (S
          (VP (TO to)
            (VP (VB see)
              (SBAR
                (SBAR
                  (WHNP
                    (WHADJP (WRB how) (JJ much))
                    (NN difference))
                  (S
                    (NP (EX there))
                    (VP (VBD was))))
                (CC and)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP
                      (NP (DT a) (JJ raging) (NN lot))
                      (PP (IN of)
                        (NP (NN sand) (PRP$ his) (NN share))))
                    (VP
                      (VP (VBP come)
                        (PP (TO to)))
                      (, ,)
                      (CC and)
                      (VP (VBD said)
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP
                              (VP (VBD was)
                                (ADJP
                                  (ADJP (JJ powerful) (JJ glad))
                                  (SBAR
                                    (ADVP (RB now))
                                    (IN that)
                                    (S
                                      (NP (PRP he))
                                      (VP (VBD had)
                                        (VP (VBD spoke)
                                          (PRT (RP up))
                                          (PP (IN in)
                                            (NP (NN time)))))))))
                              (CC and)
                              (VP (VBD got)
                                (NP
                                  (NP (DT the) (JJ first) (NN arrangement))
                                  (VP (VBN altered)))))))))))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD said)
              (SBAR (IN that)
                (S
                  (SBAR (RB even)
                    (S
                      (NP
                        (NP (DT the) (NN way))
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (ADVP (RB now))
                              (, ,)
                              (ADVP (RB there))))))
                      (VP (VBD was)
                        (NP (JJR more) (NN sand))
                        (PP (IN than)
                          (NP
                            (NP (NN enjoyment))
                            (PP (IN in)
                              (NP
                                (NP (PRP$ his) (NN end))
                                (PP (IN of)
                                  (NP (DT the) (NN contract))))))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (VBD believed)))))))))
    (. .)))

advmod(measured-4, then-2)
nsubj(measured-4, Tom-3)
nsubj(left-12, Tom-3)
root(ROOT-0, measured-4)
prt(measured-4, off-5)
poss(two-tenths-7, our-6)
dobj(measured-4, two-tenths-7)
det(bow-10, the-9)
prep_in(measured-4, bow-10)
conj_and(measured-4, left-12)
det(rest-14, the-13)
dobj(left-12, rest-14)
prep_for(left-12, Jim-16)
nsubj(surprised-20, it-19)
conj_and(measured-4, surprised-20)
dobj(surprised-20, Jim-21)
iobj(surprised-20, Jim-21)
det(deal-24, a-22)
amod(deal-24, good-23)
dep(Jim-21, deal-24)
aux(see-26, to-25)
vmod(surprised-20, see-26)
advmod(much-28, how-27)
amod(difference-29, much-28)
dobj(was-31, difference-29)
expl(was-31, there-30)
dep(see-26, was-31)
prep_to(come-41, what-33)
det(lot-36, a-34)
amod(lot-36, raging-35)
nsubj(come-41, lot-36)
nsubj(said-45, lot-36)
nn(share-40, sand-38)
poss(share-40, his-39)
prep_of(lot-36, share-40)
dep(see-26, come-41)
conj_and(was-31, come-41)
conj_and(was-31, said-45)
conj_and(come-41, said-45)
nsubj(glad-49, he-46)
nsubj(got-59, he-46)
cop(glad-49, was-47)
amod(glad-49, powerful-48)
ccomp(said-45, glad-49)
advmod(spoke-54, now-50)
mark(spoke-54, that-51)
nsubj(spoke-54, he-52)
aux(spoke-54, had-53)
ccomp(glad-49, spoke-54)
prt(spoke-54, up-55)
prep_in(spoke-54, time-57)
ccomp(said-45, got-59)
conj_and(glad-49, got-59)
det(arrangement-62, the-60)
amod(arrangement-62, first-61)
dobj(got-59, arrangement-62)
vmod(arrangement-62, altered-63)
mark(said-67, for-65)
nsubj(said-67, he-66)
advcl(surprised-20, said-67)
mark(believed-90, that-68)
advmod(sand-79, even-69)
det(way-71, the-70)
nsubj(sand-79, way-71)
nsubj(was-73, it-72)
rcmod(way-71, was-73)
advmod(was-73, now-74)
advmod(was-73, there-76)
cop(sand-79, was-77)
amod(sand-79, more-78)
advcl(believed-90, sand-79)
prep_than(sand-79, enjoyment-81)
poss(end-84, his-83)
prep_in(enjoyment-81, end-84)
det(contract-87, the-86)
prep_of(end-84, contract-87)
nsubj(believed-90, he-89)
ccomp(said-67, believed-90)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP (VBD laid)
      (PP (IN into)
        (NP (PRP it))))
    (. .)))

advmod(laid-3, Then-1)
nsubj(laid-3, we-2)
root(ROOT-0, laid-3)
prep_into(laid-3, it-5)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP
          (NP
            (NP
              (ADJP (RB mighty) (JJ hot))
              (NN work))
            (, ,)
            (CC and)
            (NP (JJ tough))
            (: ;))
          (ADJP (RB so) (JJ hot)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBD had)
                  (S
                    (VP (TO to)
                      (VP (VB move)
                        (PRT (RP up))
                        (PP (IN into)
                          (NP (JJR cooler) (NN weather)))))))))))))
    (CC or)
    (S
      (NP (PRP we))
      (VP (MD could) (RB n't)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN stood)
              (NP (PRP it)))))))
    (. .)))

nsubj(hot-11, It-1)
aux(hot-11, was-2)
advmod(hot-4, mighty-3)
amod(work-5, hot-4)
dobj(hot-11, work-5)
conj_and(work-5, tough-8)
dobj(hot-11, tough-8)
advmod(hot-11, so-10)
root(ROOT-0, hot-11)
nsubj(had-13, we-12)
nsubj(move-15, we-12)
ccomp(hot-11, had-13)
aux(move-15, to-14)
xcomp(had-13, move-15)
prt(move-15, up-16)
amod(weather-19, cooler-18)
prep_into(move-15, weather-19)
nsubj(could-22, we-21)
conj_or(hot-11, could-22)
neg(could-22, n't-23)
dep(could-22, a-25)
vmod(a-25, stood-27)
dobj(stood-27, it-28)

(ROOT
  (S
    (S
      (S
        (NP (NNP Me)
          (CC and)
          (NNP Tom))
        (VP (VBD took)
          (NP (NN turn))
          (PP (IN about))))
      (, ,)
      (CC and)
      (S
        (NP (PRP one))
        (VP (VBD worked)
          (SBAR (IN while)
            (S
              (VP (VBP t) (`` `)
                (NP (JJ other) (NNS rested))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (EX there))
        (VP (VBZ war) (RB n't)
          (VP (VB nobody)
            (S
              (VP (TO to)
                (VP (VB spell)
                  (NP (JJ poor) (JJ old) (NNS Jim))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD made)
          (SBAR
            (S
              (NP
                (NP (PDT all) (DT that) (NN part))
                (PP (IN of)
                  (NP (NNP Africa))))
              (VP (VB damp) (, ,)
                (S
                  (NP (PRP he))
                  (VP (VBN sweated)
                    (ADVP (RB so))))))))))
    (. .)))

nsubj(took-4, Me-1)
nsubj(war-19, Me-1)
conj_and(Me-1, Tom-3)
nsubj(took-4, Tom-3)
root(ROOT-0, took-4)
dobj(took-4, turn-5)
prep(took-4, about-6)
nsubj(worked-10, one-9)
conj_and(took-4, worked-10)
mark(t-12, while-11)
advcl(worked-10, t-12)
amod(rested-15, other-14)
dobj(t-12, rested-15)
expl(war-19, there-18)
conj_but(took-4, war-19)
neg(war-19, n't-20)
dep(war-19, nobody-21)
aux(spell-23, to-22)
xcomp(nobody-21, spell-23)
amod(Jim-26, poor-24)
amod(Jim-26, old-25)
dobj(spell-23, Jim-26)
nsubj(made-30, he-29)
conj_but(took-4, made-30)
conj_and(war-19, made-30)
predet(part-33, all-31)
det(part-33, that-32)
nsubj(damp-36, part-33)
prep_of(part-33, Africa-35)
ccomp(made-30, damp-36)
nsubj(sweated-39, he-38)
dep(damp-36, sweated-39)
advmod(sweated-39, so-40)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could) (RB n't)
        (VP (VB work)
          (ADJP (JJ good)))))
    (PRN (, ,)
      (S
        (NP (PRP we))
        (VP (VBD was)
          (UCP
            (ADJP (RB so) (JJ full)
              (PP (IN of)
                (NP (NN laugh))))
            (, ,)
            (CC and)
            (NP
              (NP (NNP Jim))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD kept)
                    (S
                      (VP
                        (VP (VBG fretting))
                        (CC and)
                        (VP (VBG wanting)
                          (S
                            (VP (TO to)
                              (VP (VB know)
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (VP (VBD tickled)
                                      (NP (PRP us))
                                      (ADVP (RB so))))))))))))))))))
      (, ,))
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB keep)
                (S
                  (VP (VBG making)
                    (PRT (RP up))
                    (NP (NNS things))
                    (S
                      (VP (TO to)
                        (VP (VB account)
                          (PP (IN for)
                            (NP (PRP it)))))))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP they))
          (VP (VBD was)
            (NP
              (ADJP (RB pretty) (JJ poor))
              (NNS inventions))))
        (, ,)
        (CC but)
        (S
          (NP (PRP they))
          (VP (VBN done)
            (ADVP (RB well) (RB enough))))
        (, ,)
        (S
          (NP (NNP Jim))
          (VP (VBD did) (RB n't)
            (VP (VB see)
              (PP (IN through)
                (NP (PRP them))))))))
    (. .)))

nsubj(work-4, We-1)
aux(work-4, could-2)
neg(work-4, n't-3)
root(ROOT-0, work-4)
acomp(work-4, good-5)
nsubj(full-10, we-7)
cop(full-10, was-8)
advmod(full-10, so-9)
dep(work-4, full-10)
prep_of(full-10, laugh-12)
dep(work-4, Jim-15)
conj_and(full-10, Jim-15)
nsubj(kept-17, he-16)
rcmod(Jim-15, kept-17)
ccomp(kept-17, fretting-18)
ccomp(kept-17, wanting-20)
conj_and(fretting-18, wanting-20)
aux(know-22, to-21)
xcomp(wanting-20, know-22)
nsubj(tickled-24, what-23)
ccomp(know-22, tickled-24)
dobj(tickled-24, us-25)
advmod(tickled-24, so-26)
nsubj(had-30, we-29)
nsubj(keep-32, we-29)
conj_and(work-4, had-30)
aux(keep-32, to-31)
xcomp(had-30, keep-32)
xcomp(keep-32, making-33)
prt(making-33, up-34)
dobj(making-33, things-35)
aux(account-37, to-36)
vmod(making-33, account-37)
prep_for(account-37, it-39)
nsubj(inventions-46, they-42)
cop(inventions-46, was-43)
advmod(poor-45, pretty-44)
amod(inventions-46, poor-45)
conj_and(work-4, inventions-46)
conj_and(had-30, inventions-46)
nsubj(done-50, they-49)
conj_and(had-30, done-50)
conj_but(inventions-46, done-50)
advmod(enough-52, well-51)
advmod(done-50, enough-52)
nsubj(see-57, Jim-54)
aux(see-57, did-55)
neg(see-57, n't-56)
conj_and(had-30, see-57)
conj_but(inventions-46, see-57)
parataxis(inventions-46, see-57)
prep_through(see-57, them-59)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (JJ last))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VBD got)
              (VP (VBN done)))))))
    (NP (PRP we))
    (VP (VBD was) (`` `)
      (ADJP (RBS most) (JJ dead))
      (, ,)
      (PP
        (CONJP (CC but)
          (RB not))
        (PP (IN with)
          (NP (NN work)))
        (CC but)
        (PP (IN with)
          (S
            (VP (VBG laughing))))))
    (. .)))

tmod(done-6, last-2)
prep_at(dead-11, last-2)
advmod(done-6, when-3)
nsubjpass(done-6, we-4)
auxpass(done-6, got-5)
rcmod(last-2, done-6)
nsubj(dead-11, we-7)
cop(dead-11, was-8)
advmod(dead-11, most-10)
root(ROOT-0, dead-11)
cc(dead-11, not-14)
prep_with(dead-11, work-16)
prep_with(dead-11, laughing-19)
conj_but(work-16, laughing-19)

(ROOT
  (S
    (S
      (PP (IN By)
        (PRN (CC and)
          (PP (IN by))))
      (NP (NNP Jim))
      (VP (VBD was) (`` `)
        (ADJP (RBS most) (JJ dead))
        (, ,)
        (ADVP (RB too))
        (, ,)
        (ADVP (CC but))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (PP (IN with)
          (NP (NN work)))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (VBD took)
        (SBAR
          (S
            (VP
              (VP (VBZ turns))
              (CC and)
              (VP (VBN spelled)
                (NP (PRP him))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP
          (VP (VBD was)
            (ADJP (RB as) (JJ thankfull)
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB be)))))))
          (, ,)
          (CC and)
          (VP (MD would)
            (VP
              (VP (VB set)
                (PP (IN on)
                  (NP (DT the) (NN gunnel))))
              (CC and)
              (VP (VB swab)
                (NP
                  (NP (DT the) (NN sweat))
                  (, ,)
                  (CC and)
                  (ADJP (JJ heave)
                    (CC and)
                    (JJ pant))))))
          (, ,)
          (CC and)
          (VP (VBP say)
            (SBAR
              (WHADJP (WRB how) (JJ good))
              (S
                (NP (PRP we))
                (VP (VBD was)
                  (PP (TO to)
                    (NP (DT a) (JJ poor) (JJ old) (NN nigger)))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (MD would) (RB n't)
          (ADVP (RB ever))
          (VP (VB forgit)
            (NP (PRP us))))))
    (. .)))

prep(dead-8, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
nsubj(dead-8, Jim-4)
cop(dead-8, was-5)
advmod(dead-8, most-7)
root(ROOT-0, dead-8)
advmod(dead-8, too-10)
advmod(dead-8, but-12)
nsubj(was-15, it-14)
conj_and(dead-8, was-15)
prep_with(was-15, work-17)
advmod(took-21, then-19)
nsubj(took-21, we-20)
conj_and(dead-8, took-21)
ccomp(took-21, turns-22)
ccomp(took-21, spelled-24)
conj_and(turns-22, spelled-24)
dobj(spelled-24, him-25)
nsubj(thankfull-31, he-28)
nsubj(set-39, he-28)
nsubj(say-54, he-28)
cop(thankfull-31, was-29)
advmod(thankfull-31, as-30)
conj_and(dead-8, thankfull-31)
mark(be-35, as-32)
nsubj(be-35, he-33)
aux(be-35, could-34)
dep(thankfull-31, be-35)
aux(set-39, would-38)
conj_and(dead-8, set-39)
conj_and(thankfull-31, set-39)
det(gunnel-42, the-41)
prep_on(set-39, gunnel-42)
conj_and(thankfull-31, swab-44)
conj_and(set-39, swab-44)
det(sweat-46, the-45)
dobj(swab-44, sweat-46)
dobj(swab-44, heave-49)
conj_and(sweat-46, heave-49)
conj_and(sweat-46, pant-51)
conj_and(heave-49, pant-51)
conj_and(dead-8, say-54)
conj_and(thankfull-31, say-54)
advmod(good-56, how-55)
dep(was-58, good-56)
nsubj(was-58, we-57)
ccomp(say-54, was-58)
det(nigger-63, a-60)
amod(nigger-63, poor-61)
amod(nigger-63, old-62)
prep_to(was-58, nigger-63)
nsubj(forgit-70, he-66)
aux(forgit-70, would-67)
neg(forgit-70, n't-68)
advmod(forgit-70, ever-69)
conj_and(dead-8, forgit-70)
conj_and(thankfull-31, forgit-70)
dobj(forgit-70, us-71)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (RB always))
      (NP
        (NP (DT the) (JJ gratefulest) (NN nigger))
        (SBAR
          (S
            (NP (PRP I))
            (ADVP (RB ever))
            (VP (VBP see)))))
      (, ,)
      (PP (IN for)
        (NP
          (NP (DT any) (JJ little) (NN thing))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBN done)
                (PP (IN for)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(nigger-6, He-1)
cop(nigger-6, was-2)
advmod(nigger-6, always-3)
det(nigger-6, the-4)
amod(nigger-6, gratefulest-5)
root(ROOT-0, nigger-6)
nsubj(see-9, I-7)
advmod(see-9, ever-8)
rcmod(nigger-6, see-9)
det(thing-14, any-12)
amod(thing-14, little-13)
prep_for(nigger-6, thing-14)
nsubj(done-16, you-15)
rcmod(thing-14, done-16)
prep_for(done-16, him-18)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (NP (JJ only) (NN nigger) (NN outside))))
    (: ;)
    (S
      (ADVP (RB inside))
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RB as) (JJ white))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VB be))))))
    (. .)))

nsubj(outside-5, He-1)
cop(outside-5, was-2)
amod(outside-5, only-3)
nn(outside-5, nigger-4)
root(ROOT-0, outside-5)
advmod(white-11, inside-7)
nsubj(white-11, he-8)
cop(white-11, was-9)
advmod(white-11, as-10)
parataxis(outside-5, white-11)
mark(be-14, as-12)
nsubj(be-14, you-13)
advcl(white-11, be-14)

(ROOT
  (NP (NNP CHAPTER) (NNP XII) (. .)))

nn(XII-2, CHAPTER-1)
root(ROOT-0, XII-2)

(ROOT
  (S
    (S
      (NP (NNP JIM) (NNP STANDING))
      (VP (VBP SIEGE)
        (SBAR
          (S
            (NP (DT THE) (JJ next) (JJ few) (NNS meals))
            (VP (VBD was)
              (ADJP (RB pretty) (JJ sandy)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBP do) (RB n't)
        (VP (VB make)
          (NP (DT no) (NN difference))
          (SBAR
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (ADJP (JJ hungry)))))
            (: ;)
            (CC and)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBZ ai) (RB n't)
                  (SBAR
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBP ai) (RB n't)
                          (NP (DT no) (NN satisfaction)
                            (S
                              (VP (TO to)
                                (VP (VB eat)))))
                          (, ,)
                          (ADVP (RB anyway)))))
                    (, ,)
                    (CC and)
                    (SBAR (IN so)
                      (S
                        (NP
                          (NP (DT a) (JJ little) (NN grit))
                          (PP (IN in)
                            (NP (DT the) (NN meat))))
                        (VP (VBP ai) (RB n't)
                          (NP (DT no) (JJ particular) (NN drawback))))))
                  (, ,)
                  (SBAR
                    (ADVP (RB as) (RB far))
                    (IN as)
                    (S
                      (NP (PRP I))
                      (VP (MD can)
                        (VP (VB see))))))))))))
    (. .)))

nn(STANDING-2, JIM-1)
nsubj(SIEGE-3, STANDING-2)
root(ROOT-0, SIEGE-3)
det(meals-7, THE-4)
amod(meals-7, next-5)
amod(meals-7, few-6)
nsubj(sandy-10, meals-7)
cop(sandy-10, was-8)
advmod(sandy-10, pretty-9)
ccomp(SIEGE-3, sandy-10)
nsubj(make-16, that-13)
aux(make-16, do-14)
neg(make-16, n't-15)
conj_but(SIEGE-3, make-16)
neg(difference-18, no-17)
dobj(make-16, difference-18)
advmod(hungry-22, when-19)
nsubj(hungry-22, you-20)
cop(hungry-22, are-21)
advcl(make-16, hungry-22)
advmod(ai-27, when-25)
nsubj(ai-27, you-26)
advcl(make-16, ai-27)
conj_and(hungry-22, ai-27)
neg(ai-27, n't-28)
nsubj(satisfaction-33, it-29)
cop(satisfaction-33, ai-30)
neg(satisfaction-33, n't-31)
neg(satisfaction-33, no-32)
advcl(ai-27, satisfaction-33)
aux(eat-35, to-34)
vmod(satisfaction-33, eat-35)
advmod(satisfaction-33, anyway-37)
mark(drawback-51, so-40)
det(grit-43, a-41)
amod(grit-43, little-42)
nsubj(drawback-51, grit-43)
det(meat-46, the-45)
prep_in(grit-43, meat-46)
cop(drawback-51, ai-47)
neg(drawback-51, n't-48)
neg(drawback-51, no-49)
amod(drawback-51, particular-50)
advcl(ai-27, drawback-51)
conj_and(satisfaction-33, drawback-51)
advmod(far-54, as-53)
advmod(see-58, far-54)
mark(see-58, as-55)
nsubj(see-58, I-56)
aux(see-58, can-57)
advcl(ai-27, see-58)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP (VBD struck)
      (NP
        (NP (DT the) (JJ east) (NN end))
        (PP (IN of)
          (NP (DT the) (NNP Desert))))
      (PP (IN at)
        (NP (JJ last)))
      (, ,)
      (S
        (VP (VBG sailing)
          (PP (IN on)
            (NP (DT a) (NN northeast) (NN course))))))
    (. .)))

advmod(struck-3, Then-1)
nsubj(struck-3, we-2)
root(ROOT-0, struck-3)
det(end-6, the-4)
amod(end-6, east-5)
dobj(struck-3, end-6)
det(Desert-9, the-8)
prep_of(end-6, Desert-9)
prep_at(struck-3, last-11)
vmod(struck-3, sailing-13)
det(course-17, a-15)
nn(course-17, northeast-16)
prep_on(sailing-13, course-17)

(ROOT
  (S
    (ADVP (RB Away) (RB off))
    (PP (IN on)
      (NP
        (NP (DT the) (NN edge))
        (PP (IN of)
          (NP (DT the) (NN sand)))))
    (, ,)
    (S
      (PP (IN in)
        (NP (DT a) (JJ soft) (NN pinky) (NN light)))
      (, ,)
      (NP (PRP we))
      (VP (VBP see)
        (NP
          (NP (CD three) (JJ little) (JJ sharp) (NNS roofs))
          (PP (IN like)
            (NP (NNS tents))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (PRP It))
          (VP (VBZ 's)
            (NP
              (NP (DT the) (NNS pyramids))
              (PP (IN of)
                (NP (NNP Egypt))))))))
    (. .) ('' '')))

advmod(off-2, Away-1)
advmod(see-17, off-2)
det(edge-5, the-4)
prep_on(see-17, edge-5)
det(sand-8, the-7)
prep_of(edge-5, sand-8)
det(light-14, a-11)
amod(light-14, soft-12)
nn(light-14, pinky-13)
prep_in(see-17, light-14)
nsubj(see-17, we-16)
root(ROOT-0, see-17)
num(roofs-21, three-18)
amod(roofs-21, little-19)
amod(roofs-21, sharp-20)
dobj(see-17, roofs-21)
prep_like(roofs-21, tents-23)
nsubj(says-27, Tom-26)
conj_and(see-17, says-27)
nsubj(pyramids-33, It-30)
cop(pyramids-33, 's-31)
det(pyramids-33, the-32)
ccomp(says-27, pyramids-33)
prep_of(pyramids-33, Egypt-35)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP$ my) (NN heart))
          (ADVP (RB fairly))
          (VP (VBP jump)))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
poss(heart-4, my-3)
nsubj(jump-6, heart-4)
advmod(jump-6, fairly-5)
ccomp(made-2, jump-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP
              (VP (VBN seen)
                (NP
                  (NP (DT a)
                    (ADJP (JJ many)
                      (CC and)
                      (DT a))
                    (JJ many) (DT a) (NN picture))
                  (PP (IN of)
                    (NP (PRP them)))))
              (, ,)
              (CC and)
              (VP (VBN heard)
                (S
                  (VP
                    (VP
                      (VP (VB tell)
                        (PP (IN about)
                          (NP (PRP them)))
                        (NP (DT a) (CD hundred) (NNS times)))
                      (, ,)
                      (CC and)
                      (VP
                        (ADVP (RB yet))
                        (TO to)
                        (VP (VB come)
                          (PP (IN on)
                            (NP (PRP them)))
                          (NP
                            (NP (DT all))
                            (PP (IN of)
                              (NP
                                (NP (DT a) (JJ sudden))
                                (, ,)
                                (NP (DT that) (NN way))
                                (, ,)))))))
                    (CC and)
                    (VP (VB find)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBD was)
                            (ADJP (JJ REAL))
                            (, ,) (`` `)
                            (ADJP (JJ stead)
                              (PP (IN of)
                                (NP (NNS imaginations))))))))))))))
        (, ,))
      (`` `)
      (SBAR
        (S
          (NP (JJS most))
          (VP (VBD knocked)
            (NP
              (NP (DT the) (NN breath))
              (PP (RB out) (IN of)
                (NP (PRP me))))
            (PP (IN with)
              (NP (NN surprise)))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
nsubj(seen-6, I-4)
nsubj(heard-18, I-4)
aux(seen-6, had-5)
parataxis(see-2, seen-6)
det(picture-13, a-7)
amod(picture-13, many-8)
conj_and(many-8, a-10)
amod(picture-13, a-10)
amod(picture-13, many-11)
det(picture-13, a-12)
dobj(seen-6, picture-13)
prep_of(picture-13, them-15)
parataxis(see-2, heard-18)
conj_and(seen-6, heard-18)
ccomp(heard-18, tell-19)
prep_about(tell-19, them-21)
det(times-24, a-22)
num(times-24, hundred-23)
dobj(tell-19, times-24)
advmod(come-29, yet-27)
aux(come-29, to-28)
ccomp(heard-18, come-29)
conj_and(tell-19, come-29)
prep_on(come-29, them-31)
dobj(come-29, all-32)
det(sudden-35, a-34)
prep_of(all-32, sudden-35)
det(way-38, that-37)
appos(sudden-35, way-38)
ccomp(heard-18, find-41)
conj_and(tell-19, find-41)
nsubj(REAL-44, they-42)
cop(REAL-44, was-43)
ccomp(find-41, REAL-44)
acomp(REAL-44, stead-47)
prep_of(stead-47, imaginations-49)
nsubj(knocked-53, most-52)
ccomp(see-2, knocked-53)
det(breath-55, the-54)
dobj(knocked-53, breath-55)
prep_out_of(breath-55, me-58)
prep_with(knocked-53, surprise-60)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT a) (JJ curious) (NN thing))
      (, ,)
      (SBAR (IN that)
        (S
          (SBAR
            (X (DT the) (JJR more))
            (S
              (NP (PRP you))
              (VP (VBP hear)
                (PP (IN about)
                  (NP
                    (NP (DT a) (JJ grand))
                    (CC and)
                    (NP (JJ big)
                      (CC and)
                      (NNPS bully) (NN thing)
                      (CC or)
                      (NN person)))))))
          (, ,)
          (X (DT the) (JJR more))
          (NP (PRP it))
          (VP
            (ADVP (NN kind) (IN of))
            (VBZ dreamies)
            (PRT (RP out))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP
                  (VP (MD may)
                    (VP (VB say)))
                  (, ,)
                  (CC and)
                  (VP (VBZ gets)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (NP
                            (NP (DT a) (JJ big) (NN dim) (NN wavery) (NN figger))
                            (VP (VBN made)
                              (PRT (RP out))
                              (PP (IN of)
                                (NP (NN moonshine)
                                  (CC and)
                                  (NN nothing)))
                              (ADVP (RB solid))
                              (PP (TO to)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(thing-5, It-1)
cop(thing-5, 's-2)
det(thing-5, a-3)
amod(thing-5, curious-4)
root(ROOT-0, thing-5)
mark(dreamies-28, that-7)
det(more-9, the-8)
dep(hear-11, more-9)
nsubj(hear-11, you-10)
advcl(dreamies-28, hear-11)
det(grand-14, a-13)
prep_about(hear-11, grand-14)
amod(thing-19, big-16)
conj_and(big-16, bully-18)
amod(thing-19, bully-18)
prep_about(hear-11, thing-19)
conj_and(grand-14, thing-19)
conj_and(grand-14, person-21)
conj_or(thing-19, person-21)
det(more-24, the-23)
dep(dreamies-28, more-24)
nsubj(dreamies-28, it-25)
dep(of-27, kind-26)
advmod(dreamies-28, of-27)
ccomp(thing-5, dreamies-28)
prt(dreamies-28, out-29)
mark(say-34, as-31)
nsubj(say-34, you-32)
nsubj(gets-37, you-32)
nsubj(figger-44, you-32)
aux(say-34, may-33)
advcl(dreamies-28, say-34)
advcl(dreamies-28, gets-37)
conj_and(say-34, gets-37)
aux(figger-44, to-38)
cop(figger-44, be-39)
det(figger-44, a-40)
amod(figger-44, big-41)
nn(figger-44, dim-42)
nn(figger-44, wavery-43)
xcomp(gets-37, figger-44)
vmod(figger-44, made-45)
prep_out_of(made-45, moonshine-48)
prep_out_of(made-45, nothing-50)
conj_and(moonshine-48, nothing-50)
advmod(made-45, solid-51)
prep_to(made-45, it-53)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB just) (RB so))
      (PP (IN with)
        (NP
          (NP (NNP George) (NNP Washington))
          (, ,)
          (CC and)
          (NP (DT the)
            (ADJP (JJ same)
              (PP (IN with)
                (NP (PRP them))))
            (NNS pyramids)))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod(so-4, just-3)
advmod('s-2, so-4)
nn(Washington-7, George-6)
prep_with('s-2, Washington-7)
det(pyramids-14, the-10)
amod(pyramids-14, same-11)
prep_with(same-11, them-13)
prep_with('s-2, pyramids-14)
conj_and(Washington-7, pyramids-14)

(ROOT
  (S (CC And)
    (ADVP (RB moreover))
    (, ,)
    (VP
      (VP (VBZ besides))
      (, ,)
      (NP
        (NP (DT the) (NN thing))
        (SBAR
          (S
            (NP (PRP they))
            (ADVP (RB always))
            (VP (VBD said)
              (SBAR (IN about)
                (S
                  (NP (PRP them))
                  (VP (VBD seemed)
                    (PP (TO to)
                      (NP (PRP me)))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ stretchers)))))))))))))
    (. .)))

cc(besides-4, And-1)
advmod(besides-4, moreover-2)
root(ROOT-0, besides-4)
det(thing-7, the-6)
dobj(besides-4, thing-7)
nsubj(said-10, they-8)
advmod(said-10, always-9)
rcmod(thing-7, said-10)
mark(seemed-13, about-11)
nsubj(seemed-13, them-12)
nsubj(stretchers-18, them-12)
advcl(said-10, seemed-13)
prep_to(seemed-13, me-15)
aux(stretchers-18, to-16)
cop(stretchers-18, be-17)
xcomp(seemed-13, stretchers-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (NN feller))
          (SBAR
            (S
              (VP
                (VP (VBP come)
                  (PP (TO to)
                    (NP (DT the) (NN Sunday-school)))
                  (ADVP (RB once)))
                (, ,)
                (CC and)
                (VP (VBD had)
                  (NP
                    (NP (DT a) (NN picture))
                    (PP (IN of)
                      (NP (PRP them)))))
                (, ,)
                (CC and)
                (VP (VBD made)
                  (NP (DT a) (NN speech)))
                (, ,)
                (CC and)
                (VP (VBD said)
                  (NP
                    (NP (DT the) (JJS biggest) (NN pyramid))
                    (VP (VBN covered)
                      (NP (NN thirteen) (NNS acres)))))
                (, ,)
                (CC and)
                (VP (VBD was)
                  (ADVP (RBS most))
                  (ADJP
                    (NP
                      (QP (CD five) (CD hundred))
                      (NN foot))
                    (JJ high)))))))
        (, ,) (RB just)
        (NP
          (NP (DT a) (JJ steep) (NN mountain))
          (, ,)
          (NP
            (NP (DT all))
            (VP
              (VP (VBN built)
                (PRT (RP out))
                (PP (IN of)
                  (NP
                    (NP (NNS hunks))
                    (PP (IN of)
                      (NP (NN stone)))))
                (PP (IN as)
                  (NP
                    (NP (JJ big))
                    (PP (IN as)
                      (NP (DT a) (NN bureau))))))
              (, ,)
              (CC and)
              (VP (VBN laid)
                (PRT (RP up))
                (PP (IN in)
                  (NP
                    (ADJP (RB perfectly) (JJ regular))
                    (NNS layers)))
                (, ,)
                (PP (IN like)
                  (NP (NNS stair-steps)))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(feller-4, a-3)
nsubj(was-2, feller-4)
rcmod(feller-4, come-5)
det(Sunday-school-8, the-7)
prep_to(come-5, Sunday-school-8)
advmod(come-5, once-9)
rcmod(feller-4, had-12)
conj_and(come-5, had-12)
det(picture-14, a-13)
dobj(had-12, picture-14)
prep_of(picture-14, them-16)
rcmod(feller-4, made-19)
conj_and(come-5, made-19)
det(speech-21, a-20)
dobj(made-19, speech-21)
rcmod(feller-4, said-24)
conj_and(come-5, said-24)
det(pyramid-27, the-25)
amod(pyramid-27, biggest-26)
dobj(said-24, pyramid-27)
vmod(pyramid-27, covered-28)
nn(acres-30, thirteen-29)
dobj(covered-28, acres-30)
cop(high-38, was-33)
advmod(high-38, most-34)
number(hundred-36, five-35)
num(foot-37, hundred-36)
npadvmod(high-38, foot-37)
rcmod(feller-4, high-38)
conj_and(come-5, high-38)
advmod(feller-4, just-40)
det(mountain-43, a-41)
amod(mountain-43, steep-42)
dep(feller-4, mountain-43)
appos(mountain-43, all-45)
dep(all-45, built-46)
prep_out_of(built-46, hunks-49)
prep_of(hunks-49, stone-51)
prep_as(built-46, big-53)
det(bureau-56, a-55)
prep_as(big-53, bureau-56)
dep(all-45, laid-59)
conj_and(built-46, laid-59)
prt(laid-59, up-60)
advmod(regular-63, perfectly-62)
amod(layers-64, regular-63)
prep_in(laid-59, layers-64)
prep_like(laid-59, stair-steps-67)

(ROOT
  (S
    (S
      (NP (NN Thirteen) (NNS acres))
      (, ,)
      (NP (PRP you))
      (VP (VBP see) (, ,)
        (PP (IN for)
          (NP (RB just) (CD one) (NN building)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a) (NN farm))))
    (. .)))

nn(acres-2, Thirteen-1)
nsubj(see-5, acres-2)
nsubj(see-5, you-4)
root(ROOT-0, see-5)
advmod(building-10, just-8)
num(building-10, one-9)
prep_for(see-5, building-10)
nsubj(farm-15, it-12)
cop(farm-15, 's-13)
det(farm-15, a-14)
parataxis(see-5, farm-15)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP it))
          (VP (VBD had) (RB n't)
            (VP (VBN been)
              (PP (IN in)
                (NP (NNP Sunday-school)))))))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (S
          (NP (`` `)
            (NP (SYM a))
            ('' ')
            (VP (VBN judged)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP (DT a) (NN lie))))))))))
    (: ;)
    (CC and)
    (ADVP (RB outside))
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADJP (JJ certain)
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

mark(been-5, If-1)
nsubj(been-5, it-2)
aux(been-5, had-3)
neg(been-5, n't-4)
advcl(would-10, been-5)
prep_in(been-5, Sunday-school-7)
nsubj(would-10, I-9)
root(ROOT-0, would-10)
dep(would-10, a-12)
vmod(a-12, judged-14)
nsubj(lie-18, it-15)
cop(lie-18, was-16)
det(lie-18, a-17)
ccomp(judged-14, lie-18)
advmod(certain-24, outside-21)
nsubj(certain-24, I-22)
cop(certain-24, was-23)
conj_and(would-10, certain-24)
prep_of(certain-24, it-26)

(ROOT
  (S (CC And)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN hole))
                (PP (IN in)
                  (NP (DT the) (NN pyramid)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP you))
        (VP (MD could)
          (VP
            (VP (VB go)
              (PP (IN in)
                (NP (RB there)))
              (PP (IN with)
                (NP (NNS candles))))
            (, ,)
            (CC and)
            (VP (VB go)
              (ADVP (RB ever) (RB so) (RB far) (RB up))
              (NP (DT a)
                (ADJP (RB long) (JJ slanting))
                (NN tunnel)))
            (, ,)
            (CC and)
            (VP (VB come)
              (PP (TO to)
                (NP
                  (NP (DT a) (JJ large) (NN room))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN stomach))
                      (PP (IN of)
                        (NP (DT that) (NN stone) (NN mountain)))))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB there))
        (NP (PRP you))
        (VP (MD would)
          (VP (VB find)
            (NP (DT a) (JJ big) (NN stone) (NN chest))
            (PP (IN with)
              (NP
                (NP (DT a) (NN king))
                (PP (IN in)
                  (NP (PRP it)))))
            (, ,)
            (ADJP
              (NP
                (QP (CD four) (CD thousand))
                (NNS years))
              (JJ old))))))
    (. .)))

nsubj(said-3, he-2)
root(ROOT-0, said-3)
expl(was-5, there-4)
ccomp(said-3, was-5)
det(hole-7, a-6)
nsubj(was-5, hole-7)
det(pyramid-10, the-9)
prep_in(hole-7, pyramid-10)
nsubj(go-15, you-13)
nsubj(go-22, you-13)
nsubj(come-33, you-13)
aux(go-15, could-14)
conj_and(said-3, go-15)
prep(go-15, in-16)
pobj(in-16, there-17)
prep_with(go-15, candles-19)
conj_and(said-3, go-22)
conj_and(go-15, go-22)
advmod(up-26, ever-23)
advmod(up-26, so-24)
advmod(up-26, far-25)
advmod(go-22, up-26)
det(tunnel-30, a-27)
advmod(slanting-29, long-28)
amod(tunnel-30, slanting-29)
dobj(go-22, tunnel-30)
conj_and(said-3, come-33)
conj_and(go-15, come-33)
det(room-37, a-35)
amod(room-37, large-36)
prep_to(come-33, room-37)
det(stomach-40, the-39)
prep_in(room-37, stomach-40)
det(mountain-44, that-42)
nn(mountain-44, stone-43)
prep_of(stomach-40, mountain-44)
advmod(find-50, there-47)
nsubj(find-50, you-48)
aux(find-50, would-49)
conj_and(said-3, find-50)
conj_and(go-15, find-50)
det(chest-54, a-51)
amod(chest-54, big-52)
nn(chest-54, stone-53)
dobj(find-50, chest-54)
det(king-57, a-56)
prep_with(find-50, king-57)
prep_in(king-57, it-59)
number(thousand-62, four-61)
num(years-63, thousand-62)
npadvmod(old-64, years-63)
acomp(find-50, old-64)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD said)
        (PP (TO to)
          (NP (PRP myself)))
        (, ,)
        (ADVP (RB then))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (DT that))
            (VP (VBP ai) (RB n't)
              (NP
                (NP (DT a) (NN lie))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD will)
                      (VP (VB eat)
                        (NP (DT that) (NN king))
                        (SBAR (IN if)
                          (S
                            (NP (PRP they))
                            (VP (MD will)
                              (VP (VB fetch)
                                (NP (PRP him)))))))))))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (RB even) (JJ Methusalem) (NN war))
                  (VP (RB n't)
                    (NP (DT that) (JJ old))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN nobody))
      (VP (VBZ claims)
        (NP (PRP it))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
prep_to(said-2, myself-4)
advmod(said-2, then-6)
mark(lie-13, if-8)
nsubj(lie-13, that-9)
cop(lie-13, ai-10)
neg(lie-13, n't-11)
det(lie-13, a-12)
advcl(said-2, lie-13)
det(king-18, lie-13)
nsubj(eat-16, I-14)
aux(eat-16, will-15)
rcmod(lie-13, eat-16)
dobj(eat-16, king-18)
mark(fetch-22, if-19)
nsubj(fetch-22, they-20)
aux(fetch-22, will-21)
advcl(eat-16, fetch-22)
dobj(fetch-22, him-23)
mark(old-31, for-25)
advmod(war-28, even-26)
amod(war-28, Methusalem-27)
nsubj(old-31, war-28)
neg(old-31, n't-29)
det(old-31, that-30)
advcl(lie-13, old-31)
nsubj(claims-35, nobody-34)
conj_and(said-2, claims-35)
dobj(claims-35, it-36)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP we))
          (VP (VBP come)
            (NP
              (NP (DT a) (JJ little) (NN nearer))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP see)
                    (SBAR
                      (S
                        (NP
                          (NP (DT the) (NN yaller) (NN sand))
                          (VP (VBN come)
                            (PP
                              (PP (TO to)
                                (NP
                                  (NP (DT an) (NN end))
                                  (PP (IN in)
                                    (NP
                                      (NP (DT a) (JJ long) (JJ straight) (NN edge))
                                      (PP (IN like)
                                        (NP (DT a) (NN blanket)))))))
                              (, ,)
                              (CC and)
                              (PP (IN on)
                                (PP (TO to)
                                  (NP (PRP it)))))))
                        (VP (VBD was)
                          (VP (VBN joined))))))))))))
      (, ,)
      (VP (VB edge)
        (S
          (VP (TO to)
            (VP (VB edge) (, ,)
              (NP
                (NP (DT a) (JJ wide) (NN country))
                (PP (IN of)
                  (NP (JJ bright) (NN green))))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (DT a) (JJ snaky) (NN stripe))
                  (VP (VBG crooking)
                    (PP (IN through)
                      (NP (PRP it)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (DT the) (NNP Nile)))))))
    (. .)))

mark(come-3, As-1)
nsubj(come-3, we-2)
advcl(edge-32, come-3)
det(nearer-6, a-4)
amod(nearer-6, little-5)
dobj(come-3, nearer-6)
nsubj(see-8, we-7)
rcmod(nearer-6, see-8)
det(sand-11, the-9)
nn(sand-11, yaller-10)
nsubjpass(joined-30, sand-11)
vmod(sand-11, come-12)
vmod(sand-11, come-12')
conj_and(come-12, come-12')
det(end-15, an-14)
prep_on(come-12', end-15)
prep_to(come-12, end-15)
det(edge-20, a-17)
amod(edge-20, long-18)
amod(edge-20, straight-19)
prep_in(end-15, edge-20)
det(blanket-23, a-22)
prep_like(edge-20, blanket-23)
pcomp(come-12, to-27)
pobj(to-27, it-28)
auxpass(joined-30, was-29)
ccomp(see-8, joined-30)
root(ROOT-0, edge-32)
aux(edge-34, to-33)
xcomp(edge-32, edge-34)
det(country-38, a-36)
amod(country-38, wide-37)
dobj(edge-34, country-38)
amod(green-41, bright-40)
prep_of(country-38, green-41)
det(stripe-46, a-44)
amod(stripe-46, snaky-45)
prep_with(edge-34, stripe-46)
vmod(stripe-46, crooking-47)
prep_through(crooking-47, it-49)
nsubj(said-53, Tom-52)
conj_and(edge-32, said-53)
nsubj(Nile-57, it-54)
cop(Nile-57, was-55)
det(Nile-57, the-56)
ccomp(said-53, Nile-57)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD made)
      (NP (PRP$ my) (NN heart) (NN jump))
      (ADVP (RB again))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NNP Nile))
          (VP (VBD was)
            (NP
              (NP (DT another) (NN thing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD was) (RB n't)
                    (ADJP (JJ real)
                      (PP (TO to)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
poss(jump-5, my-3)
nn(jump-5, heart-4)
dobj(made-2, jump-5)
advmod(made-2, again-6)
mark(thing-13, for-8)
det(Nile-10, the-9)
nsubj(thing-13, Nile-10)
cop(thing-13, was-11)
det(thing-13, another-12)
advcl(made-2, thing-13)
nsubj(real-17, thing-13)
cop(real-17, was-15)
neg(real-17, n't-16)
rcmod(thing-13, real-17)
prep_to(real-17, me-19)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP I))
      (VP (MD can)
        (VP (VB tell)
          (NP (PRP you))
          (NP
            (NP (CD one) (NN thing))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (ADJP (RB dead) (JJ certain)))))))))
    (: :)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB fool)
              (PRT (RP along))
              (PP (IN over)
                (NP
                  (NP
                    (QP (CD three) (CD thousand))
                    (NNS miles))
                  (PP (IN of)
                    (NP
                      (NP (NN yaller) (NN sand))
                      (, ,)
                      (NP
                        (NP (DT all) (NN glimmering))
                        (PP (IN with)
                          (NP (NN heat))))))))
              (SBAR (RB so) (IN that)
                (S
                  (S
                    (NP (PRP it))
                    (VP (VBZ makes)
                      (NP (PRP$ your) (NNS eyes) (NN water))
                      (S
                        (VP (TO to)
                          (VP (VB look)
                            (PP (IN at)
                              (NP (PRP it))))))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP you))
                    (VP (VBP 've)
                      (VP (VBN been)
                        (NP
                          (NP (DT a) (JJ considerable) (NN part))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (NN week))
                              (VP (VBG doing)
                                (NP (PRP it)))))))))))))))
      (, ,)
      (NP (DT the) (JJ green) (NN country))
      (VP (MD will)
        (VP (VB look)
          (ADVP (RB so)
            (PP (IN like)
              (NP (NN home)
                (CC and)
                (NN heaven))))
          (PP (TO to)
            (NP (PRP you)))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP (VB make)
                  (NP (PRP$ your) (JJ eyes) (NN water) (NN AGAIN)))))))))
    (. .)))

advmod(tell-4, Now-1)
nsubj(tell-4, I-2)
aux(tell-4, can-3)
root(ROOT-0, tell-4)
iobj(tell-4, you-5)
num(thing-7, one-6)
dobj(tell-4, thing-7)
nsubj(certain-11, thing-7)
cop(certain-11, is-9)
advmod(certain-11, dead-10)
rcmod(thing-7, certain-11)
mark(fool-16, if-13)
nsubj(fool-16, you-14)
aux(fool-16, will-15)
advcl(look-59, fool-16)
prt(fool-16, along-17)
number(thousand-20, three-19)
num(miles-21, thousand-20)
prep_over(fool-16, miles-21)
nn(sand-24, yaller-23)
prep_of(miles-21, sand-24)
det(glimmering-27, all-26)
appos(sand-24, glimmering-27)
prep_with(glimmering-27, heat-29)
advmod(makes-33, so-30)
mark(makes-33, that-31)
nsubj(makes-33, it-32)
advcl(fool-16, makes-33)
poss(water-36, your-34)
nn(water-36, eyes-35)
dobj(makes-33, water-36)
aux(look-38, to-37)
vmod(makes-33, look-38)
prep_at(look-38, it-40)
nsubj(part-48, you-43)
aux(part-48, 've-44)
cop(part-48, been-45)
det(part-48, a-46)
amod(part-48, considerable-47)
advcl(fool-16, part-48)
conj_and(makes-33, part-48)
det(week-51, a-50)
prep_of(part-48, week-51)
vmod(week-51, doing-52)
dobj(doing-52, it-53)
det(country-57, the-55)
amod(country-57, green-56)
nsubj(look-59, country-57)
aux(look-59, will-58)
parataxis(tell-4, look-59)
advmod(look-59, so-60)
prep_like(so-60, home-62)
prep_like(so-60, heaven-64)
conj_and(home-62, heaven-64)
prep_to(look-59, you-66)
mark(make-70, that-67)
nsubj(make-70, it-68)
aux(make-70, will-69)
ccomp(look-59, make-70)
poss(AGAIN-74, your-71)
amod(AGAIN-74, eyes-72)
nn(AGAIN-74, water-73)
dobj(make-70, AGAIN-74)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD was)
        (ADVP (RB just) (RB so))
        (PP (IN with)
          (NP (PRP me))))
      (, ,)
      (CC and)
      (VP
        (NP (DT the) (JJ same))
        (PP (IN with)
          (NP (NNP Jim)))))
    (. .)))

nsubj(was-2, It-1)
nsubj(same-10, It-1)
root(ROOT-0, was-2)
advmod(so-4, just-3)
advmod(was-2, so-4)
prep_with(was-2, me-6)
det(same-10, the-9)
conj_and(was-2, same-10)
prep_with(same-10, Jim-12)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNP Jim))
        (VP (VBD got)
          (SBAR (IN so)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB believe)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBD WAS)
                        (NP
                          (NP (DT the) (NN land))
                          (PP (IN of)
                            (NP (NNP Egypt)))
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (VP (VBG looking)
                                  (PP (IN at)))))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (MD would) (RB n't)
        (VP (VB enter)
          (S
            (NP (PRP it))
            (VP (VBG standing)
              (PRT (RP up))))))
      (, ,)
      (CC but)
      (VP (VBD got)
        (PRT (RP down))
        (PP (IN on)
          (NP (PRP$ his) (NNS knees))))
      (CC and)
      (VP (VBD took)
        (PRT (RP off))
        (NP (PRP$ his) (NN hat)))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP (VBD said)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was) (RB n't)
                  (ADJP (JJ fitten) ('' ')
                    (PP (IN for)
                      (NP (DT a) (JJ humble) (JJ poor) (NN nigger))))
                  (S
                    (VP (TO to)
                      (VP (VB come)
                        (NP (DT any) (JJ other) (NN way)))))
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (JJ such) (NNS men))
                      (VP (VBD had)
                        (VP (VBN been)
                          (PP (IN as)
                            (NP
                              (NP (NNP Moses))
                              (CC and)
                              (NP
                                (NP (NNP Joseph)
                                  (CC and)
                                  (NNP Pharaoh))
                                (CC and)
                                (NP (DT the) (JJ other) (NNS prophets))))))))))))))))
    (. .)))

advmod(got-4, when-2)
nsubj(got-4, Jim-3)
advcl(enter-23, got-4)
mark(believe-8, so-5)
nsubj(believe-8, he-6)
aux(believe-8, could-7)
advcl(got-4, believe-8)
nsubj(land-12, it-9)
cop(land-12, WAS-10)
det(land-12, the-11)
ccomp(believe-8, land-12)
prep_at(looking-17, land-12)
prep_of(land-12, Egypt-14)
nsubj(looking-17, he-15)
aux(looking-17, was-16)
rcmod(land-12, looking-17)
nsubj(enter-23, he-20)
nsubj(got-29, he-20)
nsubj(took-35, he-20)
aux(enter-23, would-21)
neg(enter-23, n't-22)
root(ROOT-0, enter-23)
nsubj(standing-25, it-24)
dep(enter-23, standing-25)
prt(standing-25, up-26)
conj_but(enter-23, got-29)
prt(got-29, down-30)
poss(knees-33, his-32)
prep_on(got-29, knees-33)
conj_and(enter-23, took-35)
prt(took-35, off-36)
poss(hat-38, his-37)
dobj(took-35, hat-38)
mark(said-42, because-40)
nsubj(said-42, he-41)
advcl(enter-23, said-42)
conj_and(enter-23, said-42)
nsubj(fitten-46, it-43)
nsubj(come-54, it-43)
cop(fitten-46, was-44)
neg(fitten-46, n't-45)
ccomp(said-42, fitten-46)
det(nigger-52, a-49)
amod(nigger-52, humble-50)
amod(nigger-52, poor-51)
prep_for(fitten-46, nigger-52)
aux(come-54, to-53)
xcomp(fitten-46, come-54)
det(way-57, any-55)
amod(way-57, other-56)
dobj(come-54, way-57)
advmod(been-62, where-58)
amod(men-60, such-59)
nsubj(been-62, men-60)
aux(been-62, had-61)
advcl(fitten-46, been-62)
prep_as(been-62, Moses-64)
prep_as(been-62, Joseph-66)
conj_and(Moses-64, Joseph-66)
conj_and(Moses-64, Pharaoh-68)
conj_and(Joseph-66, Pharaoh-68)
det(prophets-72, the-70)
amod(prophets-72, other-71)
conj_and(Moses-64, prophets-72)
conj_and(Joseph-66, prophets-72)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD was)
          (NP (DT a) (NNP Presbyterian)))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (DT a)
              (ADJP (RBS most) (JJ deep))
              (NN respect))
            (PP (IN for)
              (NP (NNP Moses)))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (NP (DT a) (NNP Presbyterian))
                  (, ,)
                  (ADVP (RB too)))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(Presbyterian-4, He-1)
nsubj(had-7, He-1)
cop(Presbyterian-4, was-2)
det(Presbyterian-4, a-3)
ccomp(said-22, Presbyterian-4)
conj_and(Presbyterian-4, had-7)
ccomp(said-22, had-7)
det(respect-11, a-8)
advmod(deep-10, most-9)
amod(respect-11, deep-10)
dobj(had-7, respect-11)
nsubj(Presbyterian-17, respect-11)
prep_for(respect-11, Moses-13)
cop(Presbyterian-17, was-15)
det(Presbyterian-17, a-16)
rcmod(respect-11, Presbyterian-17)
advmod(Presbyterian-17, too-19)
nsubj(said-22, he-21)
root(ROOT-0, said-22)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was) (RB all)
        (VP (VBD stirred)
          (PRT (RP up))))
      (, ,)
      (CC and)
      (VP (VBZ says)
        (NP
          (NP (: :)
            (NP (`` ``)
              (NP
                (NP (NNP Hit) (POS 's))
                (NNP de) (NN lan))
              ('' ')
              (PP (IN of)
                (NP (NNP Egypt))))
            (, ,) (FW de)
            (NP
              (NP (NNP lan) (POS '))
              (PP (IN of)
                (NP (NNP Egypt)))))
          (, ,)
          (PP (IN en)
            (NP
              (NP (PRP I) (POS 's))
              (`` `) (NN lowed)
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PP (IN at)
                      (S
                        (NP (PRP it))
                        (VP (VBG wid)
                          (NP (PRP$ my) (JJ own) (NNS eyes)))))))))))))
    (. !)))

nsubjpass(stirred-4, He-1)
nsubj(says-8, He-1)
auxpass(stirred-4, was-2)
advmod(stirred-4, all-3)
root(ROOT-0, stirred-4)
prt(stirred-4, up-5)
conj_and(stirred-4, says-8)
poss(lan-14, Hit-11)
nn(lan-14, de-13)
dobj(says-8, lan-14)
prep_of(lan-14, Egypt-17)
dep(lan-14, de-19)
dep(lan-14, lan-20)
prep_of(lan-20, Egypt-23)
poss(lowed-29, I-26)
prep_en(lan-14, lowed-29)
aux(look-31, to-30)
vmod(lowed-29, look-31)
nsubj(wid-34, it-33)
prepc_at(look-31, wid-34)
poss(eyes-37, my-35)
amod(eyes-37, own-36)
dobj(wid-34, eyes-37)

(ROOT
  (S
    (NP
      (NP (NNP En) (NNP dah) (POS 's))
      (NNP de) (NN river) (NN dat))
    (VP (VBD was)
      (NP (NN turn))
      ('' ')
      (PP (TO to)
        (NP (NN blood)))
      (, ,)
      (PP (IN en)
        (S
          (NP (PRP I) (POS 's))
          (VP (VBG looking)
            (PP (IN at)
              (NP
                (NP
                  (NP (IN de) (RB very))
                  (SBAR
                    (S
                      (NP
                        (NP (JJ same) (NN groun) (POS '))
                        (JJ whah) (NNP de) (NNS plagues))
                      (VP
                        (VP (VBD was))
                        (, ,)
                        (NP
                          (NP (FW en) (FW de) (NN lice))
                          (, ,)
                          (NP
                            (NP
                              (NP (FW en) (FW de) (FW frogs) (, ,) (FW en) (FW de))
                              (NP (NNS locus) (POS ')))
                            (, ,)
                            (NP (FW en) (FW de) (NN hail))
                            (, ,)
                            (PP (IN en)
                              (NP
                                (NP (JJ whah) (NN dey))
                                (JJ marked) (IN de)
                                (NP (NNS door-pos)))))
                          ('' '))))))
                (, ,)
                (NP (FW en) (FW de) (JJ angel) (NN o))
                ('' ')
                (NP
                  (NP (NNP de) (NNP Lord))
                  (VP (VBN come)
                    (PP (IN by)
                      (PP (IN in)
                        (NP (NNP de) (NNS darkness) (NNP o) ('' ') (NNP de))))
                    (NP (NN night))
                    (PP (IN en)
                      (NP
                        (NP (FW slew) (FW de) (NN fust-born))
                        (PP (IN in)
                          (NP
                            (NP (DT all) (NNP de) (NN lan) (POS '))
                            (NP (NNP o) (POS '))
                            (NNP Egypt)))))))))))))
    (. .)))

nn(dah-2, En-1)
poss(dat-6, dah-2)
nn(dat-6, de-4)
nn(dat-6, river-5)
nsubj(turn-8, dat-6)
cop(turn-8, was-7)
root(ROOT-0, turn-8)
prep_to(turn-8, blood-11)
nsubj(looking-16, I-14)
possessive(I-14, 's-15)
prepc_en(turn-8, looking-16)
prep(looking-16, at-17)
amod(very-19, de-18)
pobj(at-17, very-19)
amod(groun-21, same-20)
poss(plagues-25, groun-21)
amod(plagues-25, whah-23)
nn(plagues-25, de-24)
nsubj(was-26, plagues-25)
rcmod(very-19, was-26)
nn(lice-30, en-28)
nn(lice-30, de-29)
dobj(was-26, lice-30)
nn(de-37, en-32)
nn(de-37, de-33)
nn(de-37, frogs-34)
dep(de-37, en-36)
appos(lice-30, de-37)
poss(de-37, locus-38)
nn(hail-43, en-41)
nn(hail-43, de-42)
appos(de-37, hail-43)
amod(dey-47, whah-46)
prep_en(de-37, dey-47)
amod(dey-47, marked-48)
amod(dey-47, de-49)
dep(dey-47, door-pos-50)
nn(o-56, en-53)
nn(o-56, de-54)
amod(o-56, angel-55)
appos(very-19, o-56)
nn(Lord-59, de-58)
dep(very-19, Lord-59)
vmod(Lord-59, come-60)
prep(come-60, by-61)
pcomp(by-61, in-62)
nn(de-67, de-63)
nn(de-67, darkness-64)
nn(de-67, o-65)
pobj(in-62, de-67)
tmod(come-60, night-68)
nn(fust-born-72, slew-70)
nn(fust-born-72, de-71)
prep_en(come-60, fust-born-72)
det(lan-76, all-74)
nn(lan-76, de-75)
poss(Egypt-80, lan-76)
poss(Egypt-80, o-78)
prep_in(fust-born-72, Egypt-80)

(ROOT
  (S
    (NP (NNP Ole) (NNP Jim))
    (VP (VBP ai) (RB n't)
      (ADJP (JJ worthy)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (NN dis) (NN day)))))))
    (. !) ('' '')))

nn(Jim-2, Ole-1)
nsubj(worthy-5, Jim-2)
nsubj(see-7, Jim-2)
cop(worthy-5, ai-3)
neg(worthy-5, n't-4)
root(ROOT-0, worthy-5)
aux(see-7, to-6)
xcomp(worthy-5, see-7)
nn(day-9, dis-8)
tmod(see-7, day-9)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB then))
      (NP (PRP he))
      (VP
        (VP
          (ADVP (RB just))
          (VBD broke)
          (PRT (RP down)))
        (CC and)
        (VP (VBD cried))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB so) (JJ thankful)))
    (. .)))

advmod(broke-5, then-2)
nsubj(broke-5, he-3)
nsubj(cried-8, he-3)
advmod(broke-5, just-4)
ccomp(thankful-13, broke-5)
prt(broke-5, down-6)
conj_and(broke-5, cried-8)
ccomp(thankful-13, cried-8)
nsubj(thankful-13, he-10)
cop(thankful-13, was-11)
advmod(thankful-13, so-12)
root(ROOT-0, thankful-13)

(ROOT
  (S
    (S
      (ADVP (IN So)
        (PP (IN between)
          (NP
            (NP (PRP him))
            (CC and)
            (NP (NNP Tom)))))
      (NP (EX there))
      (VP (VBD was)
        (UCP
          (S
            (VP (VB talk)
              (NP
                (NP
                  (NP (RB enough))
                  (, ,)
                  (NP
                    (NP (NNP Jim))
                    (VP (VBG being)
                      (VP (VBN excited)
                        (SBAR (IN because)
                          (S
                            (NP (DT the) (NN land))
                            (VP (VBD was)
                              (ADJP (RB so) (JJ full)))))))
                    (PP (IN of)
                      (NP (NN history)))))
                (: --)
                (NP
                  (NP
                    (NP (NNP Joseph))
                    (CC and)
                    (NP (PRP$ his) (NNS brethren)))
                  (, ,)
                  (NP
                    (NP (NNP Moses))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NNS bulrushers))
                        (, ,)
                        (NP
                          (NP (NNP Jacob))
                          (VP (VBG coming)
                            (PRT (RP down))
                            (PP (IN into)
                              (NP (NNP Egypt)))
                            (S
                              (VP (TO to)
                                (VP (VB buy)
                                  (NP
                                    (NP (NN corn))
                                    (, ,)
                                    (NP
                                      (NP (DT the) (JJ silver) (NN cup))
                                      (PP (IN in)
                                        (NP (DT the) (NN sack))))
                                    (, ,)
                                    (CC and)
                                    (NP (DT all)
                                      (ADJP
                                        (NP (PRP them))
                                        (JJ interesting))
                                      (NNS things))))))))))))
                (: ;)
                (CC and)
                (NP
                  (NP (NNP Tom))
                  (VP
                    (ADVP (RB just) (RB as))
                    (VBN excited)
                    (ADVP (RB too))
                    (, ,)
                    (SBAR (IN because)
                      (S
                        (NP (DT the) (NN land))
                        (VP (VBD was)
                          (ADJP (RB so) (JJ full)
                            (PP (IN of)
                              (NP
                                (NP (NN history))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD was)
                                      (PP (IN in)
                                        (NP (PRP$ HIS) (NN line)))
                                      (, ,)
                                      (ADVP (IN about)
                                        (NP
                                          (NP (NNP Noureddin))
                                          (, ,)
                                          (CC and)
                                          (NP (NNP Bedreddin))
                                          (, ,)))))))))))))))))
          (CC and)
          (PP (JJ such) (IN like)
            (NP
              (NP (JJ monstrous) (NNS giants))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD made)
                    (NP
                      (NP
                        (NP (NNP Jim) (POS 's))
                        (NN wool) (NN rise))
                      (, ,)
                      (CC and)
                      (NP
                        (NP (DT a) (NN raft))
                        (PP (IN of)
                          (NP (JJ other) (NNP Arabian) (NNPS Nights) (NNS folks)))))))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP
              (NP (DT the) (NN half))
              (PP (IN of)
                (NP (PRP them))))
            (ADVP (RB never))
            (VP (VBN done)
              (NP
                (NP (DT the) (NNS things))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD let)
                      (PP (IN on)
                        (NP
                          (NP (PRP they))
                          (VP (VBN done)))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)))
    (. .)))

advmod(was-7, So-1)
prep_between(So-1, him-3)
prep_between(So-1, Tom-5)
conj_and(him-3, Tom-5)
expl(was-7, there-6)
ccomp(believe-122, was-7)
dep(was-7, talk-8)
dobj(talk-8, enough-9)
appos(enough-9, Jim-11)
auxpass(excited-13, being-12)
vmod(Jim-11, excited-13)
mark(full-19, because-14)
det(land-16, the-15)
nsubj(full-19, land-16)
cop(full-19, was-17)
advmod(full-19, so-18)
advcl(excited-13, full-19)
prep_of(Jim-11, history-21)
dobj(talk-8, Joseph-23)
conj_and(enough-9, Joseph-23)
poss(brethren-26, his-25)
conj_and(enough-9, brethren-26)
conj_and(Joseph-23, brethren-26)
appos(Joseph-23, Moses-28)
det(bulrushers-31, the-30)
prep_in(Moses-28, bulrushers-31)
appos(bulrushers-31, Jacob-33)
vmod(Jacob-33, coming-34)
prt(coming-34, down-35)
prep_into(coming-34, Egypt-37)
aux(buy-39, to-38)
xcomp(coming-34, buy-39)
dobj(buy-39, corn-40)
det(cup-44, the-42)
amod(cup-44, silver-43)
dobj(buy-39, cup-44)
conj_and(corn-40, cup-44)
det(sack-47, the-46)
prep_in(cup-44, sack-47)
det(things-53, all-50)
npadvmod(interesting-52, them-51)
amod(things-53, interesting-52)
dobj(buy-39, things-53)
conj_and(corn-40, things-53)
dobj(talk-8, Tom-56)
conj_and(enough-9, Tom-56)
advmod(as-58, just-57)
advmod(excited-59, as-58)
vmod(Tom-56, excited-59)
advmod(excited-59, too-60)
mark(full-67, because-62)
det(land-64, the-63)
nsubj(full-67, land-64)
cop(full-67, was-65)
advmod(full-67, so-66)
advcl(excited-59, full-67)
prep_of(full-67, history-69)
nsubj(was-71, history-69)
rcmod(history-69, was-71)
poss(line-74, HIS-73)
prep_in(was-71, line-74)
advmod(was-71, about-76)
pobj(about-76, Noureddin-77)
pobj(about-76, Bedreddin-80)
conj_and(Noureddin-77, Bedreddin-80)
dep(like-84, such-83)
dep(was-7, like-84)
conj_and(talk-8, like-84)
amod(giants-86, monstrous-85)
pobj(like-84, giants-86)
nsubj(made-89, giants-86)
rcmod(giants-86, made-89)
poss(rise-93, Jim-90)
nn(rise-93, wool-92)
dobj(made-89, rise-93)
det(raft-97, a-96)
dobj(made-89, raft-97)
conj_and(rise-93, raft-97)
amod(folks-102, other-99)
nn(folks-102, Arabian-100)
nn(folks-102, Nights-101)
prep_of(raft-97, folks-102)
dobj(done-110, which-104)
det(half-106, the-105)
nsubj(done-110, half-106)
prep_of(half-106, them-108)
neg(done-110, never-109)
ccomp(was-7, done-110)
det(things-112, the-111)
dobj(done-110, things-112)
nsubj(let-114, they-113)
rcmod(things-112, let-114)
prep_on(let-114, they-116)
vmod(they-116, done-117)
nsubj(believe-122, I-119)
aux(believe-122, do-120)
neg(believe-122, n't-121)
root(ROOT-0, believe-122)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP (VBD struck)
        (NP (DT a) (NN disappointment))
        (, ,)
        (PP (IN for)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (PRP them)))))
        (NP (JJ early) (NN morning))
        (SBAR
          (S
            (NP (NNS fogs))
            (VP (VBD started)
              (PRT (RP up)))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBP war) (RB n't)
          (NP (DT no) (NN use)
            (S
              (VP (TO to)
                (VP (VB sail)
                  (PRT (RP over))
                  (NP
                    (NP (DT the) (NN top))
                    (PP (IN of)
                      (NP (PRP it))))))))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP we))
              (VP (MD would)
                (VP (VB go)
                  (PP (IN by)
                    (NP (NNP Egypt)))
                  (, ,)
                  (ADVP (RB sure))
                  (, ,)
                  (SBAR (IN so)
                    (S
                      (NP (PRP we))
                      (VP
                        (VP (VBN judged)
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBD was)
                                (ADJP
                                  (ADJP (JJS best))
                                  (S
                                    (VP (TO to)
                                      (VP (VB set)
                                        (NP (PRP her))
                                        (PP (IN by)
                                          (NP
                                            (NP (NNS compass))
                                            (PP (RB straight) (IN for)
                                              (NP (DT the) (NN place))))))))
                                  (SBAR
                                    (WHADVP (WRB where))
                                    (S
                                      (NP (DT the) (NNS pyramids))
                                      (VP (VBD was)
                                        (VP (VBG gitting)
                                          (NP (NNS blurred)))))))))))
                        (CC and)
                        (VP (VBN blotted)
                          (PRT (RP out))))))))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (NN drop))
        (ADJP (JJ low)))
      (CC and)
      (S
        (NP (NN skin))
        (ADVP (IN along) (RB pretty))
        (VP
          (VP (VB close)
            (PP (TO to)
              (NP (DT the) (NN ground))))
          (CC and)
          (VP (VB keep)
            (NP (DT a) (JJ sharp) (NN lookout))))))
    (. .)))

advmod(struck-3, Then-1)
nsubj(struck-3, we-2)
root(ROOT-0, struck-3)
det(disappointment-5, a-4)
dobj(struck-3, disappointment-5)
prep_for(struck-3, one-8)
prep_of(one-8, them-10)
amod(morning-12, early-11)
tmod(struck-3, morning-12)
nsubj(started-14, fogs-13)
dep(struck-3, started-14)
prt(started-14, up-15)
nsubj(war-19, it-18)
nsubj(low-68, it-18)
conj_and(struck-3, war-19)
neg(war-19, n't-20)
neg(use-22, no-21)
dobj(war-19, use-22)
aux(sail-24, to-23)
vmod(use-22, sail-24)
prt(sail-24, over-25)
det(top-27, the-26)
dobj(sail-24, top-27)
prep_of(top-27, it-29)
mark(go-34, because-31)
nsubj(go-34, we-32)
aux(go-34, would-33)
advcl(war-19, go-34)
prep_by(go-34, Egypt-36)
advmod(go-34, sure-38)
mark(judged-42, so-40)
nsubj(judged-42, we-41)
nsubj(blotted-62, we-41)
advcl(go-34, judged-42)
nsubj(best-45, it-43)
nsubj(set-47, it-43)
cop(best-45, was-44)
ccomp(judged-42, best-45)
aux(set-47, to-46)
xcomp(best-45, set-47)
dobj(set-47, her-48)
prep_by(set-47, compass-50)
advmod(compass-50, straight-51)
det(place-54, the-53)
prep_for(compass-50, place-54)
advmod(gitting-59, where-55)
det(pyramids-57, the-56)
nsubj(gitting-59, pyramids-57)
aux(gitting-59, was-58)
ccomp(best-45, gitting-59)
dobj(gitting-59, blurred-60)
advcl(go-34, blotted-62)
conj_and(judged-42, blotted-62)
prt(blotted-62, out-63)
advmod(low-68, then-66)
dep(low-68, drop-67)
conj_and(struck-3, low-68)
conj_and(war-19, low-68)
nsubj(close-73, skin-70)
nsubj(keep-78, skin-70)
advmod(close-73, along-71)
advmod(along-71, pretty-72)
conj_and(struck-3, close-73)
conj_and(war-19, close-73)
det(ground-76, the-75)
prep_to(close-73, ground-76)
conj_and(war-19, keep-78)
conj_and(close-73, keep-78)
det(lookout-81, a-79)
amod(lookout-81, sharp-80)
dobj(keep-78, lookout-81)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD took)
        (NP (DT the) (NN hellum))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBD stood)
          (PRT (RP by))
          (S
            (VP (TO to)
              (VP (VB let)
                (VP (VB go)
                  (NP (DT the) (NN anchor))))))))
      (, ,))
    (CC and)
    (S
      (NP (NNP Jim) (PRP he))
      (VP (VBD straddled)
        (NP (DT the) (NN bow)
          (S
            (VP (TO to)
              (VP
                (VP (VB dig)
                  (PP (IN through)
                    (NP
                      (NP (DT the) (NN fog))
                      (PP (IN with)
                        (NP (PRP$ his) (NNS eyes))))))
                (CC and)
                (VP (VB watch)
                  (PRT (RP out))
                  (PP (IN for)
                    (NP (NN danger)))
                  (ADVP (RB ahead)))))))))
    (. .)))

nsubj(took-2, Tom-1)
root(ROOT-0, took-2)
det(hellum-4, the-3)
dobj(took-2, hellum-4)
nsubj(stood-7, I-6)
nsubj(let-10, I-6)
dep(took-2, stood-7)
prt(stood-7, by-8)
aux(let-10, to-9)
xcomp(stood-7, let-10)
xcomp(let-10, go-11)
det(anchor-13, the-12)
dobj(go-11, anchor-13)
nsubj(straddled-18, Jim-16)
dep(Jim-16, he-17)
conj_and(took-2, straddled-18)
det(bow-20, the-19)
dobj(straddled-18, bow-20)
aux(dig-22, to-21)
vmod(bow-20, dig-22)
det(fog-25, the-24)
prep_through(dig-22, fog-25)
poss(eyes-28, his-27)
prep_with(fog-25, eyes-28)
vmod(bow-20, watch-30)
conj_and(dig-22, watch-30)
prt(watch-30, out-31)
prep_for(watch-30, danger-33)
advmod(watch-30, ahead-34)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD went)
          (PRT (RP along))
          (NP (DT a) (JJ steady) (NN gait)))
        (, ,)
        (CC but)
        (VP
          (ADVP (RB not) (RB very) (RB fast)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN fog))
      (VP (VBD got)
        (NP
          (NP (NN solider)
            (CC and)
            (NN solider))
          (, ,)
          (ADJP (RB so) (JJ solid)))
        (SBAR (IN that)
          (S
            (NP (NNP Jim))
            (VP (VBD looked)
              (ADJP
                (ADJP (JJ dim)
                  (CC and)
                  (JJ ragged)
                  (CC and)
                  (JJ smoky))
                (PP (IN through)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
prt(went-2, along-3)
det(gait-6, a-4)
amod(gait-6, steady-5)
dobj(went-2, gait-6)
dep(fast-11, not-9)
advmod(fast-11, very-10)
conj_but(went-2, fast-11)
det(fog-15, the-14)
nsubj(got-16, fog-15)
conj_and(went-2, got-16)
dobj(got-16, solider-17)
dobj(got-16, solider-19)
conj_and(solider-17, solider-19)
advmod(solid-22, so-21)
amod(solider-17, solid-22)
mark(looked-25, that-23)
nsubj(looked-25, Jim-24)
ccomp(got-16, looked-25)
dep(ragged-28, dim-26)
acomp(looked-25, ragged-28)
acomp(looked-25, smoky-30)
conj_and(ragged-28, smoky-30)
prep_through(ragged-28, it-32)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (JJ awful))
        (ADVP (RB still))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP
        (VP (VBD talked)
          (S
            (ADJP (JJ low))))
        (CC and)
        (VP (VBD was)
          (ADJP (JJ anxious)))))
    (. .)))

nsubj(awful-3, It-1)
cop(awful-3, was-2)
root(ROOT-0, awful-3)
advmod(awful-3, still-4)
nsubj(talked-8, we-7)
nsubj(anxious-12, we-7)
conj_and(awful-3, talked-8)
acomp(talked-8, low-9)
cop(anxious-12, was-11)
conj_and(awful-3, anxious-12)
conj_and(talked-8, anxious-12)

(ROOT
  (S
    (ADVP (RB Now)
      (CC and)
      (RB then))
    (PRN
      (NP (NNP Jim))
      (VP (MD would)
        (VP (VB say) (: :) (`` ``) (VB Highst)
          (NP (PRP her)))))
    (NP (DT a) (NN p))
    (`` `)
    (NP
      (NP (NN int))
      (, ,)
      (NP (NNP Mars) (NNP Tom))
      (, ,))
    (VP (VBP highst)
      (NP (PRP her)))
    (. !) ('' '')))

advmod(highst-19, Now-1)
conj_and(Now-1, then-3)
advmod(highst-19, then-3)
nsubj(say-6, Jim-4)
aux(say-6, would-5)
parataxis(highst-19, say-6)
dep(say-6, Highst-9)
dobj(say-6, her-10)
det(p-12, a-11)
nsubj(highst-19, p-12)
nsubj(highst-19, int-14)
nn(Tom-17, Mars-16)
appos(int-14, Tom-17)
root(ROOT-0, highst-19)
dobj(highst-19, her-20)

(ROOT
  (S
    (S (CC and)
      (ADVP (RB up))
      (NP (PRP she))
      (VP (MD would)
        (VP (VB skip))))
    (, ,)
    (S
      (NP
        (NP (DT a) (NN foot))
        (CC or)
        (NP (CD two))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD would)
        (VP (VB slide)
          (NP (NN right))
          (PP (IN over)
            (NP (DT a) (JJ flat-roofed) (NN mud) (NN cabin)))
          (, ,)
          (PP (IN with)
            (NP
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (VP (VBN been)
                        (ADJP (RB asleep))
                        (PP (IN on)
                          (S
                            (NP (PRP it))
                            (ADVP (RB just))
                            (VP (VBG beginning)
                              (S
                                (VP (TO to)
                                  (VP (VB turn)
                                    (PRT (RP out)))))))))))))
              (CC and)
              (NP (NN gap)
                (CC and)
                (NN stretch)))))))
    (: ;)
    (CC and)
    (S
      (SBAR (RB once)
        (WHADVP (WRB when))
        (S
          (NP (DT a) (NN feller))
          (VP (VBD was)
            (ADVP (RB clear) (RB up))
            (PP (IN on)
              (NP (PRP$ his) (JJ hind) (NNS legs)))
            (SBAR (IN so)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB gap)
                    (CC and)
                    (VB stretch)
                    (NP (JJR better)))))))))
      (, ,)
      (NP (PRP we))
      (VP
        (VP (VBD took)
          (S
            (NP (PRP him))
            (NP
              (NP (DT a) (NN blip))
              (PP (IN in)
                (NP (DT the) (NN back))))))
        (CC and)
        (VP (VBD knocked)
          (NP (PRP him))
          (PRT (RP off)))))
    (. .)))

advmod(skip-5, up-2)
nsubj(skip-5, she-3)
aux(skip-5, would-4)
root(ROOT-0, skip-5)
det(foot-8, a-7)
ccomp(skip-5, foot-8)
conj_and(skip-5, foot-8)
ccomp(skip-5, two-10)
conj_and(skip-5, two-10)
conj_or(foot-8, two-10)
nsubj(slide-15, we-13)
aux(slide-15, would-14)
conj_and(skip-5, slide-15)
dobj(slide-15, right-16)
det(cabin-21, a-18)
amod(cabin-21, flat-roofed-19)
nn(cabin-21, mud-20)
prep_over(slide-15, cabin-21)
prep_with(slide-15, people-24)
nsubj(asleep-28, people-24)
aux(asleep-28, had-26)
cop(asleep-28, been-27)
rcmod(people-24, asleep-28)
nsubj(beginning-32, it-30)
nsubj(turn-34, it-30)
advmod(beginning-32, just-31)
prepc_on(asleep-28, beginning-32)
aux(turn-34, to-33)
xcomp(beginning-32, turn-34)
prt(turn-34, out-35)
prep_with(slide-15, gap-37)
conj_and(people-24, gap-37)
nsubj(asleep-28, gap-37)
conj_and(people-24, stretch-39)
conj_and(gap-37, stretch-39)
advmod(was-46, once-42)
advmod(was-46, when-43)
det(feller-45, a-44)
nsubj(was-46, feller-45)
advcl(took-62, was-46)
advmod(up-48, clear-47)
advmod(was-46, up-48)
poss(legs-52, his-50)
amod(legs-52, hind-51)
prep_on(was-46, legs-52)
mark(gap-56, so-53)
nsubj(gap-56, he-54)
nsubj(stretch-58, he-54)
aux(gap-56, could-55)
advcl(was-46, gap-56)
advcl(was-46, stretch-58)
conj_and(gap-56, stretch-58)
dobj(gap-56, better-59)
nsubj(took-62, we-61)
nsubj(knocked-70, we-61)
conj_and(skip-5, took-62)
nsubj(blip-65, him-63)
det(blip-65, a-64)
xcomp(took-62, blip-65)
det(back-68, the-67)
prep_in(blip-65, back-68)
conj_and(skip-5, knocked-70)
conj_and(took-62, knocked-70)
dobj(knocked-70, him-71)
prt(knocked-70, off-72)

(ROOT
  (S
    (PP (IN By)
      (PRN (CC and)
        (PP (IN by))))
    (, ,)
    (PP (IN after)
      (NP
        (NP
          (NP
            (QP (RB about) (DT an) (NN hour)))
          (, ,)
          (CC and)
          (NP
            (NP (NN everything))
            (RRC
              (ADJP (JJ dead))
              (ADVP (RB still)))))
        (CC and)
        (NP
          (NP (PRP we))
          (VP
            (VP (VBG a-straining)
              (NP (PRP$ our) (NNS ears))
              (PP (IN for)
                (NP (NNS sounds))))
            (CC and)
            (VP (VBG holding)
              (NP (PRP$ our) (NN breath)))))))
    (, ,)
    (NP (DT the) (NN fog))
    (VP (VBZ thinned)
      (NP
        (NP (DT a) (JJ little))
        (, ,)
        (ADJP (RB very) (JJ sudden))
        (, ,)
        (CC and)
        (NP
          (NP (NNP Jim))
          (VP (VBN sung)
            (PRT (RP out))
            (PP (IN in)
              (NP (DT an) (JJ awful) (NN scare)))
            (: :)
            (S (`` ``)
              (INTJ (UH Oh))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (IN de) (NN lan))
                  (VP (VBZ 's)
                    (NP (NN sake)))))
              (, ,)
              (VP (VBD set)
                (SBAR
                  (S
                    (NP
                      (NP (PRP$ her) (NN back))
                      (, ,)
                      (NP (NNP Mars) (NNP Tom))
                      (, ,))
                    (ADVP (RB here))
                    (VP (VBZ 's)
                      (NP (IN de) (JJS biggest) (JJ giant) (NN outen))))))))
          (PP (IN de)
            (NP (`` `)
              (NP (NNP Rabian) (NNPS Nights) (NNP a-comin))
              ('' ')
              (PP (IN for)
                (NP (PRP us))))))))
    (. !) ('' '')))

prep(thinned-28, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
quantmod(hour-8, about-6)
quantmod(hour-8, an-7)
prep_after(thinned-28, hour-8)
conj_and(hour-8, everything-11)
prep_after(thinned-28, everything-11)
rcmod(everything-11, dead-12)
advmod(dead-12, still-13)
conj_and(hour-8, we-15)
prep_after(thinned-28, we-15)
dep(we-15, a-straining-16)
poss(ears-18, our-17)
dobj(a-straining-16, ears-18)
prep_for(a-straining-16, sounds-20)
dep(we-15, holding-22)
conj_and(a-straining-16, holding-22)
poss(breath-24, our-23)
dobj(holding-22, breath-24)
det(fog-27, the-26)
nsubj(thinned-28, fog-27)
root(ROOT-0, thinned-28)
det(little-30, a-29)
dobj(thinned-28, little-30)
advmod(sudden-33, very-32)
dobj(thinned-28, sudden-33)
amod(little-30, sudden-33)
conj_and(little-30, sudden-33)
dobj(thinned-28, Jim-36)
conj_and(little-30, Jim-36)
vmod(Jim-36, sung-37)
prt(sung-37, out-38)
det(scare-42, an-40)
amod(scare-42, awful-41)
prep_in(sung-37, scare-42)
discourse(set-53, Oh-45)
mark(sake-51, for-47)
amod(lan-49, de-48)
nsubj(sake-51, lan-49)
cop(sake-51, 's-50)
advcl(set-53, sake-51)
ccomp(sung-37, set-53)
parataxis(sung-37, set-53)
poss(back-55, her-54)
nsubj(outen-65, back-55)
nn(Tom-58, Mars-57)
appos(back-55, Tom-58)
advmod(outen-65, here-60)
cop(outen-65, 's-61)
amod(outen-65, de-62)
amod(outen-65, biggest-63)
amod(outen-65, giant-64)
ccomp(set-53, outen-65)
nn(a-comin-70, Rabian-68)
nn(a-comin-70, Nights-69)
prep_de(Jim-36, a-comin-70)
prep_for(a-comin-70, us-73)

(ROOT
  (S (CC and)
    (NP (PRP he))
    (VP (VBD went)
      (ADVP (RB over) (RB backwards))
      (PP (IN in)
        (NP (DT the) (NN boat))))
    (. .)))

cc(went-3, and-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
advmod(backwards-5, over-4)
advmod(went-3, backwards-5)
det(boat-8, the-7)
prep_in(went-3, boat-8)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBD slammed)
        (PP (IN on)
          (NP (DT the) (NN back-action)))))
    (, ,)
    (CC and)
    (S
      (S
        (SBAR (IN as)
          (S
            (NP (PRP we))
            (VP (VBD slowed)
              (PP (TO to)
                (NP
                  (NP (DT a) (JJ standstill)
                    (NP (DT a) (NN man) (POS 's))
                    (NN face))
                  (ADJP (RB as) (JJ big))))
              (SBAR (IN as)
                (S
                  (NP
                    (NP (PRP$ our) (NN house))
                    (PP (IN at)
                      (NP (NN home))))
                  (VP (VBD looked)
                    (PRT (RP in))
                    (PP (IN over)
                      (NP (DT the) (NN gunnel)))))))))
        (, ,)
        (NP
          (NP (JJ same))
          (PP (IN as)
            (NP (DT a) (NN house))))
        (VP (VBZ looks)
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ its) (NNS windows)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP
          (VP (VBD laid)
            (PRT (RP down)))
          (CC and)
          (VP (VBD died)))))
    (. .)))

nsubj(slammed-2, Tom-1)
root(ROOT-0, slammed-2)
det(back-action-5, the-4)
prep_on(slammed-2, back-action-5)
mark(slowed-10, as-8)
nsubj(slowed-10, we-9)
advcl(looks-35, slowed-10)
det(face-17, a-12)
amod(face-17, standstill-13)
det(man-15, a-14)
poss(face-17, man-15)
prep_to(slowed-10, face-17)
advmod(big-19, as-18)
amod(face-17, big-19)
mark(looked-25, as-20)
poss(house-22, our-21)
nsubj(looked-25, house-22)
prep_at(house-22, home-24)
advcl(slowed-10, looked-25)
prt(looked-25, in-26)
det(gunnel-29, the-28)
prep_over(looked-25, gunnel-29)
nsubj(looks-35, same-31)
det(house-34, a-33)
prep_as(same-31, house-34)
conj_and(slammed-2, looks-35)
poss(windows-39, its-38)
prep_out_of(looks-35, windows-39)
nsubj(laid-43, I-42)
nsubj(died-46, I-42)
conj_and(slammed-2, laid-43)
conj_and(looks-35, laid-43)
prt(laid-43, down-44)
conj_and(looks-35, died-46)
conj_and(laid-43, died-46)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (MD must)
          (S
            (NP (`` `)
              (NP (SYM a))
              ('' ')
              (VP (VBN been)
                (ADJP
                  (ADJP (JJ clear) (JJ dead))
                  (CC and)
                  (ADJP
                    (ADJP (VBN gone)
                      (PP (IN for)
                        (NP
                          (QP (RB as) (JJ much) (IN as) (DT a))
                          (NN minute))))
                    (CC or)
                    (ADJP (JJR more)))))))))
      (: ;) (RB then)
      (S
        (NP (PRP I))
        (VP (VBP come)
          (PP (TO to)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD had)
          (VP (VBN hitched)
            (NP (DT a) (NN boat-hook))
            (PP (IN on)
              (PP (TO to)
                (NP
                  (NP (DT the) (JJR lower) (NN lip))
                  (PP (IN of)
                    (NP (DT the) (NN giant))))))))
        (CC and)
        (VP (VBD was)
          (VP (VBG holding)
            (S
              (NP (DT the) (NN balloon))
              (ADJP (JJ steady)
                (PP (IN with)
                  (NP (PRP it))))
              (SBAR (IN whilst)
                (S
                  (NP (PRP he))
                  (VP
                    (VP (VBD canted)
                      (NP (PRP$ his) (NN head))
                      (ADVP (RB back)))
                    (CC and)
                    (VP (VBD got)
                      (NP (DT a) (JJ good) (JJ long) (NN look))
                      (PRT (RP up))
                      (PP (IN at)
                        (NP (DT that) (JJ awful) (NN face))))))))))))
    (. .)))

nsubj(must-2, I-1)
root(ROOT-0, must-2)
dep(must-2, a-4)
cop(dead-8, been-6)
amod(dead-8, clear-7)
vmod(a-4, dead-8)
vmod(a-4, gone-10)
conj_and(dead-8, gone-10)
advmod(as-14, as-12)
advmod(as-14, much-13)
quantmod(a-15, as-14)
num(minute-16, a-15)
prep_for(gone-10, minute-16)
conj_and(dead-8, more-18)
conj_or(gone-10, more-18)
advmod(must-2, then-20)
nsubj(come-22, I-21)
parataxis(must-2, come-22)
prep(come-22, to-23)
nsubj(hitched-28, Tom-26)
nsubj(holding-41, Tom-26)
aux(hitched-28, had-27)
conj_and(must-2, hitched-28)
det(boat-hook-30, a-29)
dobj(hitched-28, boat-hook-30)
prep(hitched-28, on-31)
pcomp(on-31, to-32)
det(lip-35, the-33)
amod(lip-35, lower-34)
pobj(to-32, lip-35)
det(giant-38, the-37)
prep_of(lip-35, giant-38)
aux(holding-41, was-40)
conj_and(must-2, holding-41)
conj_and(hitched-28, holding-41)
det(balloon-43, the-42)
nsubj(canted-49, balloon-43)
nsubj(got-54, balloon-43)
dep(canted-49, steady-44)
prep_with(steady-44, it-46)
mark(canted-49, whilst-47)
nsubj(canted-49, he-48)
xcomp(holding-41, canted-49)
poss(head-51, his-50)
dobj(canted-49, head-51)
advmod(canted-49, back-52)
xcomp(holding-41, got-54)
conj_and(canted-49, got-54)
det(look-58, a-55)
amod(look-58, good-56)
amod(look-58, long-57)
dobj(got-54, look-58)
prt(got-54, up-59)
det(face-63, that-61)
amod(face-63, awful-62)
prep_at(got-54, face-63)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBD was)
      (PP (IN on)
        (NP (PRP$ his) (NNS knees)))
      (SBAR (IN with)
        (S
          (NP (PRP$ his) (NNS hands))
          (VP (VBD clasped) (, ,)
            (S
              (VP
                (VP
                  (VP (VBG gazing)
                    (PRT (RP up))
                    (PP (IN at)
                      (NP
                        (NP (DT the) (NN thing))
                        (PP (IN in)
                          (NP (DT a) (JJ begging) (NN way))))))
                  (, ,)
                  (CC and)
                  (VP (VBG working)
                    (NP (PRP$ his) (NNS lips))))
                (, ,)
                (CONJP (CC but)
                  (RB not))
                (VP (VBG getting)
                  (NP (NN anything))
                  (PRT (RP out)))))))))
    (. .)))

nsubj(was-2, Jim-1)
root(ROOT-0, was-2)
poss(knees-5, his-4)
prep_on(was-2, knees-5)
mark(clasped-9, with-6)
poss(hands-8, his-7)
nsubj(clasped-9, hands-8)
advcl(was-2, clasped-9)
ccomp(clasped-9, gazing-11)
prt(gazing-11, up-12)
det(thing-15, the-14)
prep_at(gazing-11, thing-15)
det(way-19, a-17)
amod(way-19, begging-18)
prep_in(thing-15, way-19)
ccomp(clasped-9, working-22)
conj_and(gazing-11, working-22)
poss(lips-24, his-23)
dobj(working-22, lips-24)
ccomp(clasped-9, getting-28)
conj_negcc(gazing-11, getting-28)
dobj(getting-28, anything-29)
prt(getting-28, out-30)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBD took)
          (ADVP (RB only))
          (NP (RB just) (DT a) (NN glimpse)))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (VBG fading)
            (PRT (RP out))
            (ADVP (RB again))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (NNP Tom))
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP (PRP He))
            (VP (VBP ai) (RB n't)
              (ADJP (JJ alive))))))
      (, ,)
      (S
        (NP (PRP you))
        (NP (NNS fools)))
      (: ;)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP (DT the) (NN Sphinx)))))
    (. !) ('' '')))

nsubj(took-2, I-1)
nsubj(fading-10, I-1)
root(ROOT-0, took-2)
advmod(took-2, only-3)
advmod(glimpse-6, just-4)
det(glimpse-6, a-5)
dobj(took-2, glimpse-6)
aux(fading-10, was-9)
conj_and(took-2, fading-10)
prt(fading-10, out-11)
advmod(fading-10, again-12)
nsubj(says-16, Tom-15)
conj_but(took-2, says-16)
nsubj(alive-22, He-19)
cop(alive-22, ai-20)
neg(alive-22, n't-21)
ccomp(says-16, alive-22)
dep(fools-25, you-24)
parataxis(says-16, fools-25)
nsubj(Sphinx-30, it-27)
cop(Sphinx-30, 's-28)
det(Sphinx-30, the-29)
parataxis(says-16, Sphinx-30)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP see)
        (S
          (NP (NNP Tom))
          (VP
            (VP (VB look)
              (ADJP (RB so) (JJ little)))
            (CC and)
            (VP (VB like)
              (NP (DT a) (NN fly)))))))
    (: ;)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBD was)
        (SBAR (IN because)
          (S
            (NP
              (NP (DT the) (NN giant) (POS 's))
              (NN head))
            (VP (VBD was)
              (ADJP (RB so) (JJ big)
                (CC and)
                (JJ awful)))))))
    (. .)))

nsubj(see-3, I-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
nsubj(look-5, Tom-4)
nsubj(like-9, Tom-4)
ccomp(see-3, look-5)
advmod(little-7, so-6)
acomp(look-5, little-7)
ccomp(see-3, like-9)
conj_and(look-5, like-9)
det(fly-11, a-10)
dobj(like-9, fly-11)
nsubj(was-15, that-14)
conj_but(see-3, was-15)
mark(big-23, because-16)
det(giant-18, the-17)
poss(head-20, giant-18)
nsubj(big-23, head-20)
nsubj(awful-25, head-20)
cop(big-23, was-21)
advmod(big-23, so-22)
advcl(was-15, big-23)
advcl(was-15, awful-25)
conj_and(big-23, awful-25)

(ROOT
  (S
    (VP (VB Awful)
      (PRN (, ,)
        (INTJ (UH yes))
        (, ,))
      (SBAR (IN so)
        (S
          (NP (PRP it))
          (VP
            (VP (VBD was))
            (, ,)
            (CC but)
            (VP
              (VP (RB not)
                (S
                  (VP (VBG dreadful)
                    (ADVP (DT any) (RBR more))))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP you))
                    (VP (MD could)
                      (VP (VB see)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (NP
                                (NP (DT a)
                                  (ADJP (JJ noble))
                                  (NN face))
                                (, ,)
                                (CC and)
                                (NP
                                  (NP (NN kind))
                                  (PP (IN of)
                                    (ADJP (JJ sad)))))))))))))
              (, ,)
              (CC and)
              (VP (RB not)
                (S
                  (VP (VBG thinking)
                    (PP
                      (PP (IN about)
                        (NP (PRP you)))
                      (, ,)
                      (CC but)
                      (PP (IN about)
                        (NP
                          (NP (JJ other) (NNS things))
                          (CC and)
                          (NP (JJR larger)))))))))))))
    (. .)))

root(ROOT-0, Awful-1)
discourse(Awful-1, yes-3)
mark(was-7, so-5)
nsubj(was-7, it-6)
advcl(Awful-1, was-7)
advcl(Awful-1, not-10)
conj_but(was-7, not-10)
xcomp(not-10, dreadful-11)
dep(more-13, any-12)
advmod(dreadful-11, more-13)
mark(see-18, because-15)
nsubj(see-18, you-16)
aux(see-18, could-17)
advcl(not-10, see-18)
nsubj(face-23, it-19)
cop(face-23, was-20)
det(face-23, a-21)
amod(face-23, noble-22)
ccomp(see-18, face-23)
ccomp(see-18, kind-26)
conj_and(face-23, kind-26)
prep_of(kind-26, sad-28)
conj_but(was-7, not-31)
conj_and(not-10, not-31)
xcomp(not-31, thinking-32)
prep_about(thinking-32, you-34)
amod(things-39, other-38)
prep_about(thinking-32, things-39)
conj_but(you-34, things-39)
conj_but(you-34, larger-41)
conj_and(things-39, larger-41)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (NN stone))
          (, ,)
          (NP (JJ reddish) (NN stone))
          (, ,)
          (CC and)
          (NP
            (NP (PRP$ its) (NN nose)
              (CC and)
              (NNS ears))
            (VP (VBN battered))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT that))
        (VP (VBP give)
          (NP (PRP it))
          (NP (DT an) (JJ abused) (NN look))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (VBD felt)
          (NP (NN sorrier))
          (PP (IN for)
            (NP (PRP it)))
          (PP (IN for)
            (NP (DT that))))))
    (. .)))

nsubj(stone-3, It-1)
cop(stone-3, was-2)
root(ROOT-0, stone-3)
amod(stone-6, reddish-5)
conj_and(stone-3, stone-6)
poss(nose-10, its-9)
conj_and(stone-3, nose-10)
conj_and(stone-3, ears-12)
conj_and(nose-10, ears-12)
vmod(nose-10, battered-13)
nsubj(give-17, that-16)
conj_and(stone-3, give-17)
iobj(give-17, it-18)
det(look-21, an-19)
amod(look-21, abused-20)
dobj(give-17, look-21)
nsubj(felt-25, you-24)
conj_and(stone-3, felt-25)
conj_and(give-17, felt-25)
dobj(felt-25, sorrier-26)
prep_for(felt-25, it-28)
prep_for(felt-25, that-30)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD stood)
          (PRT (RP off))
          (NP (DT a) (NN piece)))
        (, ,)
        (CC and)
        (VP (VBD sailed)
          (PP
            (PP (IN around)
              (NP (PRP it)))
            (CC and)
            (PP (IN over)
              (NP (PRP it)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (RB just) (JJ grand))))
    (. .)))

nsubj(stood-2, We-1)
nsubj(sailed-8, We-1)
root(ROOT-0, stood-2)
prt(stood-2, off-3)
det(piece-5, a-4)
dobj(stood-2, piece-5)
conj_and(stood-2, sailed-8)
conj_and(stood-2, sailed-8')
conj_and(sailed-8, sailed-8')
prep_around(sailed-8, it-10)
prep_over(sailed-8', it-13)
nsubj(grand-19, it-16)
cop(grand-19, was-17)
advmod(grand-19, just-18)
conj_and(stood-2, grand-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN man) (POS 's))
          (NN head))))
    (, ,)
    (CC or)
    (S
      (S
        (ADVP (RB maybe))
        (NP (DT a) (NN woman))
        (VP (VBZ 's) (, ,)
          (PP (IN on)
            (NP
              (NP (DT a) (NN tiger) (POS 's))
              (NN body)
              (UCP
                (NP (DT a) (CD hundred))
                (CC and)
                (ADJP (JJ twenty-five)))
              (NN foot)))
          (ADVP (RB long))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT a)
              (ADJP (RB dear))
              (JJ little) (NN temple))
            (PP (IN between)
              (NP (PRP$ its) (JJ front) (NNS paws)))))))
    (. .)))

nsubj(head-6, It-1)
cop(head-6, was-2)
det(man-4, a-3)
poss(head-6, man-4)
root(ROOT-0, head-6)
advmod('s-12, maybe-9)
det(woman-11, a-10)
nsubj('s-12, woman-11)
conj_or(head-6, 's-12)
det(tiger-16, a-15)
poss(foot-23, tiger-16)
nn(foot-23, body-18)
det(hundred-20, a-19)
nn(foot-23, hundred-20)
conj_and(hundred-20, twenty-five-22)
nn(foot-23, twenty-five-22)
prep_on('s-12, foot-23)
advmod('s-12, long-24)
expl(was-28, there-27)
conj_or(head-6, was-28)
conj_and('s-12, was-28)
det(temple-32, a-29)
amod(temple-32, dear-30)
amod(temple-32, little-31)
nsubj(was-28, temple-32)
poss(paws-36, its-34)
amod(paws-36, front-35)
prep_between(temple-32, paws-36)

(ROOT
  (S
    (S
      (ADVP (DT All)
        (CC but))
      (NP (DT the) (NN head))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (IN under)
                (NP (DT the) (NN sand)))
              (, ,)
              (PP (IN for)
                (NP
                  (NP (NNS hundreds))
                  (PP (IN of)
                    (NP
                      (NP (NNS years))
                      (, ,) (RB maybe)
                      (NP (NNS thousands)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (VP
          (ADVP (RB just))
          (VP
            (ADVP (RB lately))
            (VBD dug)
            (NP (DT the) (NN sand))
            (PRT (RP away)))
          (CC and)
          (VP (VBD found)
            (NP (DT that) (JJ little) (NN temple))))))
    (. .)))

dep(but-2, All-1)
advmod(used-5, but-2)
det(head-4, the-3)
nsubj(used-5, head-4)
nsubj(be-7, head-4)
root(ROOT-0, used-5)
aux(be-7, to-6)
xcomp(used-5, be-7)
det(sand-10, the-9)
prep_under(be-7, sand-10)
prep_for(be-7, hundreds-13)
prep_of(hundreds-13, years-15)
advmod(years-15, maybe-17)
dep(years-15, thousands-18)
nsubj(dug-25, they-21)
nsubj(found-30, they-21)
aux(dug-25, had-22)
advmod(dug-25, just-23)
advmod(dug-25, lately-24)
conj_but(used-5, dug-25)
det(sand-27, the-26)
dobj(dug-25, sand-27)
prt(dug-25, away-28)
conj_but(used-5, found-30)
conj_and(dug-25, found-30)
det(temple-33, that-31)
amod(temple-33, little-32)
dobj(found-30, temple-33)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD took)
        (NP
          (NP (DT a) (NN power))
          (PP (IN of)
            (NP (NN sand))))
        (S
          (VP (TO to)
            (VP (VB bury)
              (NP
                (NP (DT that) (NN cretur))
                (: ;)
                (ADJP (RBS most) (RB as) (JJ much)))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (MD would)
                    (S
                      (VP (TO to)
                        (VP (VB bury)
                          (NP (DT a) (NN steamboat)))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP reckon))
    (. .)))

nsubj(took-2, It-1)
ccomp(reckon-24, took-2)
det(power-4, a-3)
dobj(took-2, power-4)
prep_of(power-4, sand-6)
aux(bury-8, to-7)
vmod(took-2, bury-8)
det(cretur-10, that-9)
dobj(bury-8, cretur-10)
advmod(much-14, most-12)
advmod(much-14, as-13)
amod(cretur-10, much-14)
mark(would-17, as-15)
nsubj(would-17, it-16)
nsubj(bury-19, it-16)
advcl(bury-8, would-17)
aux(bury-19, to-18)
xcomp(would-17, bury-19)
det(steamboat-21, a-20)
dobj(bury-19, steamboat-21)
nsubj(reckon-24, I-23)
root(ROOT-0, reckon-24)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD landed)
        (NP
          (NP (NNP Jim))
          (PP (IN on)
            (NP
              (NP (NN top))
              (PP (IN of)
                (NP (DT the) (NN head))))))
        (, ,)
        (PP (IN with)
          (NP (DT an) (JJ American) (NN flag)
            (S
              (VP (TO to)
                (VP (VB protect)
                  (NP (PRP him)))))))))
    (, ,)
    (S
      (S
        (NP (PRP it))
        (VP (VBG being)
          (NP (DT a) (JJ foreign) (NN land))))
      (: ;) (RB then)
      (S
        (NP (PRP we))
        (VP
          (VP (VBD sailed)
            (PRT (RP off))
            (PP (TO to)
              (NP
                (NP (DT this))
                (CC and)
                (NP (DT that)))))
          (CC and)
          (VP (VB t) (`` `)
            (NP (JJ other) (NN distance))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB git)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (NNP Tom))
                      (VP (VBD called)
                        (NP
                          (NP (NNS effects))
                          (CC and)
                          (NP (NNS perspectives)
                            (CC and)
                            (NNS proportions)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Jim))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBN done)
              (NP
                (NP (DT the) (JJS best))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD could)))))
              (, ,)
              (S
                (VP
                  (VP (VBG striking)
                    (NP
                      (NP (PDT all) (DT the) (JJ different) (NNS kinds))
                      (PP (IN of)
                        (NP (NNS attitudes)
                          (CC and)
                          (NNS positions)))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (MD could)
                            (VP (VB study)
                              (PRT (RP up))))))))
                  (, ,)
                  (CC but)
                  (VP
                    (VP (VBG standing)
                      (PP (IN on)
                        (NP (PRP$ his) (NN head))))
                    (CC and)
                    (VP (VBG working)
                      (NP (PRP$ his) (NNS legs))
                      (NP
                        (NP (DT the) (NN way))
                        (SBAR
                          (S
                            (NP (DT a) (NN frog))
                            (VP (VBZ does)))))))))))))
      (VP (VBD was)
        (NP (DT the) (JJS best))))
    (. .)))

nsubj(landed-2, We-1)
root(ROOT-0, landed-2)
dobj(landed-2, Jim-3)
det(head-8, the-7)
prep_on_top_of(Jim-3, head-8)
det(flag-13, an-11)
amod(flag-13, American-12)
prep_with(landed-2, flag-13)
aux(protect-15, to-14)
vmod(flag-13, protect-15)
dobj(protect-15, him-16)
nsubj(land-22, it-18)
cop(land-22, being-19)
det(land-22, a-20)
amod(land-22, foreign-21)
ccomp(landed-2, land-22)
conj_and(landed-2, land-22)
advmod(land-22, then-24)
nsubj(sailed-26, we-25)
nsubj(t-33, we-25)
parataxis(land-22, sailed-26)
prt(sailed-26, off-27)
prep_to(sailed-26, this-29)
prep_to(sailed-26, that-31)
conj_and(this-29, that-31)
parataxis(land-22, t-33)
conj_and(sailed-26, t-33)
amod(distance-36, other-35)
dobj(t-33, distance-36)
aux(git-39, to-38)
vmod(t-33, git-39)
dobj(called-42, what-40)
nsubj(called-42, Tom-41)
ccomp(git-39, called-42)
dobj(called-42, effects-43)
dobj(called-42, perspectives-45)
conj_and(effects-43, perspectives-45)
conj_and(effects-43, proportions-47)
conj_and(perspectives-45, proportions-47)
nsubj(best-88, Jim-50)
nsubj(done-52, he-51)
rcmod(Jim-50, done-52)
det(best-54, the-53)
dobj(done-52, best-54)
nsubj(could-56, he-55)
rcmod(best-54, could-56)
dep(done-52, striking-58)
predet(kinds-62, all-59)
det(kinds-62, the-60)
amod(kinds-62, different-61)
dobj(striking-58, kinds-62)
prep_of(kinds-62, attitudes-64)
prep_of(kinds-62, positions-66)
conj_and(attitudes-64, positions-66)
nsubj(study-69, he-67)
aux(study-69, could-68)
rcmod(kinds-62, study-69)
prt(study-69, up-70)
dep(done-52, standing-73)
conj_but(striking-58, standing-73)
poss(head-76, his-75)
prep_on(standing-73, head-76)
conj_but(striking-58, working-78)
conj_and(standing-73, working-78)
poss(legs-80, his-79)
dep(working-78, legs-80)
det(way-82, the-81)
dobj(working-78, way-82)
det(frog-84, a-83)
nsubj(does-85, frog-84)
rcmod(way-82, does-85)
cop(best-88, was-86)
det(best-88, the-87)
conj_and(landed-2, best-88)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ further))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD got)
            (PRT (RP away))))))
    (, ,)
    (S
      (NP (DT the) (NN littler) (NNP Jim))
      (VP (VBD got)))
    (, ,)
    (CC and)
    (S
      (X (DT the)
        (ADJP (JJR grander)))
      (NP (DT the) (NN Sphinx))
      (VP (VBD got) (, ,)
        (SBAR (IN till)
          (S
            (PP (IN at)
              (NP (JJ last)))
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (RB only))
              (NP
                (NP (DT a) (NN clothespin))
                (PP (IN on)
                  (NP (DT a) (NN dome))))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (MD might)
                    (VP (VB say))))))))))
    (. .)))

det(further-2, The-1)
dep(got-10, further-2)
nsubj(got-4, we-3)
rcmod(further-2, got-4)
prt(got-4, away-5)
det(Jim-9, the-7)
nn(Jim-9, littler-8)
nsubj(got-10, Jim-9)
root(ROOT-0, got-10)
det(grander-14, the-13)
dep(got-17, grander-14)
det(Sphinx-16, the-15)
nsubj(got-17, Sphinx-16)
conj_and(got-10, got-17)
mark(clothespin-26, till-19)
prep_at(clothespin-26, last-21)
nsubj(clothespin-26, it-22)
cop(clothespin-26, was-23)
advmod(clothespin-26, only-24)
det(clothespin-26, a-25)
advcl(got-17, clothespin-26)
det(dome-29, a-28)
prep_on(clothespin-26, dome-29)
mark(say-34, as-31)
nsubj(say-34, you-32)
aux(say-34, might-33)
advcl(clothespin-26, say-34)

(ROOT
  (S
    (S
      (S
        (NP (DT That))
        (VP (VBZ 's)
          (NP
            (NP (DT the) (NN way) (NN perspective))
            (SBAR
              (S
                (VP (VBZ brings)
                  (PRT (RP out))
                  (NP (DT the) (JJ correct) (NNS proportions))))))))
      (, ,)
      (NP (NNP Tom))
      (VP (VBD said)))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP
              (NP (NNP Julus) (NNP Cesar) (POS 's))
              (NNS niggers))
            (VP (VBD did) (RB n't)
              (VP (VB know)
                (SBAR
                  (WHADJP (WRB how) (JJ big))
                  (S
                    (NP (PRP he))
                    (VP (VBD was) (, ,)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBD was)
                            (ADJP (RB too) (JJ close)
                              (PP (TO to)
                                (NP (PRP him))))))))))))))))
    (. .)))

nsubj(perspective-5, That-1)
cop(perspective-5, 's-2)
det(perspective-5, the-3)
nn(perspective-5, way-4)
ccomp(said-13, perspective-5)
rcmod(perspective-5, brings-6)
prt(brings-6, out-7)
det(proportions-10, the-8)
amod(proportions-10, correct-9)
dobj(brings-6, proportions-10)
nsubj(said-13, Tom-12)
root(ROOT-0, said-13)
nsubj(said-16, he-15)
parataxis(said-13, said-16)
nn(Cesar-18, Julus-17)
poss(niggers-20, Cesar-18)
nsubj(know-23, niggers-20)
aux(know-23, did-21)
neg(know-23, n't-22)
ccomp(said-16, know-23)
advmod(big-25, how-24)
dep(was-27, big-25)
nsubj(was-27, he-26)
ccomp(know-23, was-27)
nsubj(close-32, they-29)
cop(close-32, was-30)
advmod(close-32, too-31)
ccomp(was-27, close-32)
prep_to(close-32, him-34)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP (VBD sailed)
      (PRT (RP off))
      (ADVP
        (ADVP (RBR further))
        (CC and)
        (ADVP (RBR further)))
      (, ,)
      (SBAR
        (SBAR (IN till)
          (S
            (NP (PRP we))
            (VP (MD could) (RB n't)
              (VP (VB see)
                (NP (NNP Jim))
                (ADVP (IN at) (DT all))
                (ADVP (DT any) (RBR more))))))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (SBAR (IN that)
          (S
            (NP (JJ great) (NN figger))
            (VP (VBD was)
              (PP (IN at)
                (NP
                  (NP (PRP$ its) (NN noblest))
                  (, ,)
                  (VP
                    (VP (VBG a-gazing)
                      (PRT (RP out))
                      (PP (IN over)
                        (NP
                          (NP (DT the) (NNP Nile) (NNP Valley))
                          (ADJP
                            (ADJP (RB so) (RB still))
                            (CC and)
                            (ADJP (JJ solemn)
                              (CC and)
                              (JJ lonesome)))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (PDT all) (DT the) (JJ little) (JJ shabby) (NNS huts))
                            (CC and)
                            (NP
                              (NP
                                (NP (NNS things))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD was)
                                      (VP (VBN scattered)
                                        (PP (IN about)
                                          (S
                                            (NP (PRP it))
                                            (VP (VB clean)
                                              (VP (VBN disappeared)
                                                (CC and)
                                                (VBN gone))))))))))
                              (, ,)
                              (CC and)
                              (NP
                                (NP (NN nothing))
                                (PP (IN around)
                                  (NP (PRP it))))))))
                      (ADVP (RB now)))
                    (CC but)
                    (VP
                      (NP
                        (NP (DT a) (JJ soft) (JJ wide) (NN spread))
                        (PP (IN of)
                          (NP
                            (NP (NN yaller) (NN velvet))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBD was)
                                  (NP (DT the) (NN sand)))))))))))))))))
    (. .)))

advmod(sailed-3, Then-1)
nsubj(sailed-3, we-2)
root(ROOT-0, sailed-3)
prt(sailed-3, off-4)
advmod(sailed-3, further-5)
advmod(sailed-3, further-7)
conj_and(further-5, further-7)
mark(see-13, till-9)
nsubj(see-13, we-10)
aux(see-13, could-11)
neg(see-13, n't-12)
advcl(sailed-3, see-13)
dobj(see-13, Jim-14)
advmod(see-13, at-15)
pobj(at-15, all-16)
dep(more-18, any-17)
advmod(see-13, more-18)
advmod(was-25, then-21)
mark(was-25, that-22)
amod(figger-24, great-23)
nsubj(was-25, figger-24)
advcl(sailed-3, was-25)
conj_and(see-13, was-25)
poss(noblest-28, its-27)
prep_at(was-25, noblest-28)
dep(noblest-28, a-gazing-30)
prt(a-gazing-30, out-31)
det(Valley-35, the-33)
nn(Valley-35, Nile-34)
prep_over(a-gazing-30, Valley-35)
advmod(still-37, so-36)
amod(Valley-35, still-37)
amod(Valley-35, solemn-39)
conj_and(still-37, solemn-39)
conj_and(still-37, lonesome-41)
conj_and(solemn-39, lonesome-41)
predet(huts-48, all-44)
det(huts-48, the-45)
amod(huts-48, little-46)
amod(huts-48, shabby-47)
prep_over(a-gazing-30, huts-48)
conj_and(Valley-35, huts-48)
conj_and(Valley-35, things-50)
conj_and(huts-48, things-50)
nsubjpass(scattered-53, things-50)
auxpass(scattered-53, was-52)
rcmod(things-50, scattered-53)
nsubj(clean-56, it-55)
prepc_about(scattered-53, clean-56)
dep(clean-56, disappeared-57)
dep(clean-56, gone-59)
conj_and(disappeared-57, gone-59)
conj_and(huts-48, nothing-62)
conj_and(things-50, nothing-62)
nsubjpass(scattered-53, nothing-62)
prep_around(nothing-62, it-64)
advmod(a-gazing-30, now-65)
det(spread-70, a-67)
amod(spread-70, soft-68)
amod(spread-70, wide-69)
dep(noblest-28, spread-70)
conj_but(a-gazing-30, spread-70)
nn(velvet-73, yaller-72)
prep_of(spread-70, velvet-73)
nsubj(sand-78, velvet-73)
cop(sand-78, was-76)
det(sand-78, the-77)
rcmod(velvet-73, sand-78)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD was)
        (NP (DT the) (JJ right) (NN place)
          (S
            (VP (TO to)
              (VP (VB stop)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBN done)
        (NP (PRP it))))
    (. .)))

nsubj(place-5, That-1)
cop(place-5, was-2)
det(place-5, the-3)
amod(place-5, right-4)
root(ROOT-0, place-5)
aux(stop-7, to-6)
vmod(place-5, stop-7)
nsubj(done-11, we-10)
conj_and(place-5, done-11)
dobj(done-11, it-12)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD set)
        (S
          (NP (EX there))
          (VP
            (VP (VBG a-looking)
              (CC and)
              (VBG a-thinking)
              (PP (IN for)
                (NP
                  (NP
                    (NP (DT a) (NN half))
                    (NP (DT an) (NN hour)))
                  (, ,)
                  (NP (NN nobody) (JJ a-saying) (NN anything))))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP it))
                  (VP (VBD made)
                    (SBAR
                      (S
                        (NP (PRP us))
                        (VP (VBP feel)
                          (S
                            (NP
                              (NP (NN quiet)
                                (CC and)
                                (NN kind))
                              (PP (IN of)
                                (NP (NN solemn))))
                            (VP (TO to)
                              (VP (VB remember)
                                (SBAR
                                  (S
                                    (NP (PRP it))
                                    (VP (VBD had)
                                      (VP (VBN been)
                                        (VP (VBG looking)
                                          (PP (IN over)
                                            (NP (DT that) (NN valley)))
                                          (PP (RB just)
                                            (NP (DT that) (JJ same) (NN way))))))))))))))))))
            (, ,)
            (CC and)
            (VP (VBG thinking)
              (NP (PRP$ its) (JJ awful) (NNS thoughts))
              (ADVP (RB all)
                (PP (TO to)
                  (NP (PRP itself))))
              (PP (IN for)
                (NP
                  (NP (NNS thousands))
                  (PP (IN of)
                    (NP (NNS years))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN nobody))
      (VP (MD ca) (RB n't)
        (VP (VB find)
          (PRT (RP out))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBP are)
                (PP (TO to)
                  (NP (DT this) (NN day)))))))))
    (. .)))

nsubj(set-2, We-1)
root(ROOT-0, set-2)
expl(a-looking-4, there-3)
ccomp(set-2, a-looking-4)
ccomp(set-2, a-thinking-6)
conj_and(a-looking-4, a-thinking-6)
det(half-9, a-8)
prep_for(a-looking-4, half-9)
det(hour-11, an-10)
dep(half-9, hour-11)
nn(anything-15, nobody-13)
amod(anything-15, a-saying-14)
appos(half-9, anything-15)
mark(made-19, for-17)
nsubj(made-19, it-18)
advcl(a-looking-4, made-19)
nsubj(feel-21, us-20)
ccomp(made-19, feel-21)
dobj(feel-21, quiet-22)
nsubj(remember-28, quiet-22)
dobj(feel-21, kind-24)
conj_and(quiet-22, kind-24)
nsubj(remember-28, kind-24)
prep_of(quiet-22, solemn-26)
aux(remember-28, to-27)
xcomp(feel-21, remember-28)
nsubj(looking-32, it-29)
aux(looking-32, had-30)
aux(looking-32, been-31)
ccomp(remember-28, looking-32)
det(valley-35, that-34)
prep_over(looking-32, valley-35)
prep(looking-32, just-36)
det(way-39, that-37)
amod(way-39, same-38)
pobj(just-36, way-39)
ccomp(set-2, thinking-42)
conj_and(a-looking-4, thinking-42)
poss(thoughts-45, its-43)
amod(thoughts-45, awful-44)
nsubj(a-looking-4, thoughts-45)
nsubj(a-thinking-6, thoughts-45)
dobj(thinking-42, thoughts-45)
nsubj(thinking-42, thoughts-45)
advmod(thinking-42, all-46)
prep_to(all-46, itself-48)
prep_for(thinking-42, thousands-50)
prep_of(thousands-50, years-52)
nsubj(find-58, nobody-55)
aux(find-58, ca-56)
neg(find-58, n't-57)
conj_and(set-2, find-58)
prt(find-58, out-59)
dobj(are-62, what-60)
nsubj(are-62, they-61)
ccomp(find-58, are-62)
det(day-65, this-64)
prep_to(are-62, day-65)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (JJ last)))
      (NP (PRP I))
      (VP
        (VP (VBD took)
          (PRT (RP up))
          (NP (DT the) (NN glass)))
        (CC and)
        (VP (VBP see)
          (NP (DT some) (JJ little) (JJ black) (NNS things) (NN a-capering))
          (ADVP (RB around))
          (PP (IN on)
            (NP (DT that) (NN velvet) (NN carpet))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT some))
        (VP
          (ADVP (RBR more))
          (VBP a-climbing)
          (PRT (RP up))
          (NP
            (NP (DT the) (NN cretur) (POS 's))
            (NN back))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP I))
        (VP
          (VP (VBP see)
            (NP
              (NP (CD two)
                (CC or)
                (CD three) (NN wee) (NNS puffs))
              (PP (IN of)
                (NP (JJ white) (NN smoke)))))
          (, ,)
          (CC and)
          (VP (VBD told)
            (S
              (NP (NNP Tom))
              (VP (TO to)
                (VP (VB look))))))))
    (. .)))

prep_at(took-4, last-2)
nsubj(took-4, I-3)
nsubj(see-9, I-3)
root(ROOT-0, took-4)
prt(took-4, up-5)
det(glass-7, the-6)
dobj(took-4, glass-7)
conj_and(took-4, see-9)
det(a-capering-14, some-10)
amod(a-capering-14, little-11)
amod(a-capering-14, black-12)
nn(a-capering-14, things-13)
dobj(see-9, a-capering-14)
advmod(see-9, around-15)
det(carpet-19, that-17)
nn(carpet-19, velvet-18)
prep_on(see-9, carpet-19)
nsubj(a-climbing-24, some-22)
advmod(a-climbing-24, more-23)
conj_and(took-4, a-climbing-24)
prt(a-climbing-24, up-25)
det(cretur-27, the-26)
poss(back-29, cretur-27)
dobj(a-climbing-24, back-29)
advmod(see-34, then-32)
nsubj(see-34, I-33)
nsubj(told-45, I-33)
conj_and(took-4, see-34)
conj_and(a-climbing-24, see-34)
nn(puffs-39, two-35)
conj_or(two-35, three-37)
nn(puffs-39, three-37)
nn(puffs-39, wee-38)
dobj(see-34, puffs-39)
amod(smoke-42, white-41)
prep_of(puffs-39, smoke-42)
conj_and(a-climbing-24, told-45)
conj_and(see-34, told-45)
dobj(told-45, Tom-46)
nsubj(look-48, Tom-46)
aux(look-48, to-47)
xcomp(told-45, look-48)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBN done)
        (NP (PRP it)))
      (, ,)
      (CC and)
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (PRP They))
          (VP (VBP 're)
            (NP (NNS bugs))))))
    (. .)))

nsubj(done-2, He-1)
nsubj(says-6, He-1)
root(ROOT-0, done-2)
dobj(done-2, it-3)
conj_and(done-2, says-6)
nsubj(bugs-11, They-9)
cop(bugs-11, 're-10)
ccomp(says-6, bugs-11)

(ROOT
  (NP
    (NP (NNP No))
    (: --)
    (NP
      (NP (NN hold))
      (PP (IN on) (: ;)
        (NP
          (NP (PRP they))
          (: --)
          (SBAR
            (WHADVP (WRB why))
            (, ,)
            (S
              (NP (PRP I))
              (VP (VBP believe)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP 're)
                      (NP (NNS men)))))))))))
    (. .)))

root(ROOT-0, No-1)
dep(No-1, hold-3)
prep_on(hold-3, they-6)
advmod(believe-11, why-8)
nsubj(believe-11, I-10)
rcmod(they-6, believe-11)
nsubj(men-14, they-12)
cop(men-14, 're-13)
ccomp(believe-11, men-14)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (NNS men))
        (: --)
        (NP
          (NP (NNS men)
            (CC and)
            (NNS horses))
          (NP (DT both)))))
    (. .)))

discourse(men-5, Yes-1)
nsubj(men-5, it-3)
cop(men-5, 's-4)
root(ROOT-0, men-5)
dep(men-5, men-7)
dep(men-5, horses-9)
conj_and(men-7, horses-9)
dep(men-7, both-10)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP 're)
        (VP (VBG hauling)
          (NP (DT a) (JJ long) (NN ladder))
          (ADVP (RB up)
            (PP (IN onto)
              (NP
                (NP (DT the) (NN Sphinx) (POS 's))
                (NN back)))))))
    (: --)
    (S
      (NP (RB now))
      (VP (VBP ai) (RB n't)
        (ADJP (RB that) (JJ odd))))
    (. ?)))

nsubj(hauling-3, They-1)
aux(hauling-3, 're-2)
root(ROOT-0, hauling-3)
det(ladder-6, a-4)
amod(ladder-6, long-5)
dobj(hauling-3, ladder-6)
advmod(hauling-3, up-7)
det(Sphinx-10, the-9)
poss(back-12, Sphinx-10)
prep_onto(up-7, back-12)
nsubj(odd-18, now-14)
cop(odd-18, ai-15)
neg(odd-18, n't-16)
advmod(odd-18, that-17)
parataxis(hauling-3, odd-18)

(ROOT
  (S (CC And)
    (SBAR (RB now)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB lean)
                  (NP (PRP it))
                  (ADVP (IN up) (DT a)))))))))
    (PRN (: --)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (DT some) (JJR more) (NNS puffs))
            (PP (IN of)
              (NP (NN smoke))))))
      (: --))
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (NNS guns)))
    (. !)))

cc('s-21, And-1)
advmod(trying-5, now-2)
nsubj(trying-5, they-3)
nsubj(lean-7, they-3)
aux(trying-5, 're-4)
advcl('s-21, trying-5)
aux(lean-7, to-6)
xcomp(trying-5, lean-7)
dobj(lean-7, it-8)
advmod(lean-7, up-9)
dep(up-9, a-10)
expl('s-13, there-12)
parataxis('s-21, 's-13)
det(puffs-16, some-14)
amod(puffs-16, more-15)
nsubj('s-13, puffs-16)
prep_of(puffs-16, smoke-18)
nsubj('s-21, it-20)
root(ROOT-0, 's-21)
dep('s-21, guns-22)

(ROOT
  (S
    (ADVP (RB Huck))
    (, ,)
    (NP (PRP they))
    (VP (VBP 're)
      (PP (IN after)
        (NP (NNP Jim))))
    (. .) ('' '')))

advmod('re-4, Huck-1)
nsubj('re-4, they-3)
root(ROOT-0, 're-4)
prep_after('re-4, Jim-6)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD clapped)
        (PP (IN on)
          (NP (DT the) (NN power))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (SBAR (IN for)
          (S
            (NP (PRP them))
            (VP (VBP a-biling))))))
    (. .)))

nsubj(clapped-2, We-1)
nsubj(went-8, We-1)
root(ROOT-0, clapped-2)
det(power-5, the-4)
prep_on(clapped-2, power-5)
conj_and(clapped-2, went-8)
mark(a-biling-11, for-9)
nsubj(a-biling-11, them-10)
advcl(went-8, a-biling-11)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD was)
          (ADVP (RB there))
          (PP (IN in)
            (NP (DT no) (NN time))))
        (, ,)
        (CC and)
        (VP (VBP come)
          (S
            (VP (VBG a-whizzing)
              (PRT (RP down))
              (PP (IN amongst)
                (NP (PRP them))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP they))
        (VP (VBD broke)))
      (CC and)
      (S
        (NP
          (NP (JJ scattered) (DT every))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP
                (NP (NN way))
                (, ,)
                (CC and)
                (NP (DT some))
                (DT that))
              (VP (VBD was)
                (VP (VBG climbing)
                  (NP (DT the) (NN ladder))
                  (PP (IN after)
                    (NP (NNP Jim))))))))
        (VP
          (VP (VBP let)
            (VP (VB go)
              (NP (DT all) (NNS holts))))
          (CC and)
          (VP (VBD fell)))))
    (. .)))

nsubj(was-2, We-1)
nsubj(come-9, We-1)
root(ROOT-0, was-2)
advmod(was-2, there-3)
neg(time-6, no-5)
prep_in(was-2, time-6)
conj_and(was-2, come-9)
xcomp(come-9, a-whizzing-10)
prt(a-whizzing-10, down-11)
prep_amongst(a-whizzing-10, them-13)
nsubj(broke-17, they-16)
conj_and(was-2, broke-17)
amod(every-20, scattered-19)
dobj(climbing-28, every-20)
nsubj(let-33, every-20)
nsubj(fell-38, every-20)
nsubj(climbing-28, way-22)
conj_and(way-22, some-25)
nsubj(climbing-28, some-25)
dep(way-22, that-26)
aux(climbing-28, was-27)
rcmod(every-20, climbing-28)
det(ladder-30, the-29)
dobj(climbing-28, ladder-30)
prep_after(climbing-28, Jim-32)
conj_and(was-2, let-33)
conj_and(broke-17, let-33)
xcomp(let-33, go-34)
det(holts-36, all-35)
dobj(go-34, holts-36)
conj_and(broke-17, fell-38)
conj_and(let-33, fell-38)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBD soared)
        (PRT (RP up)))
      (CC and)
      (VP (VBD found)
        (S
          (NP (PRP him))
          (VP (VBG laying)
            (PP
              (PP (IN on)
                (NP
                  (NP
                    (NP (NN top))
                    (PP (IN of)
                      (NP (DT the) (NN head) (NN panting))))
                  (CC and)
                  (NP
                    (NP (JJS most))
                    (VP (VBN tuckered)
                      (PRT (RP out))))))
              (, ,) (RB partly)
              (PP (IN from)
                (S
                  (VP (VBG howling)
                    (PP (IN for)
                      (NP (NN help))))))
              (CC and)
              (ADVP (RB partly))
              (PP (IN from)
                (NP (NN scare))))))))
    (. .)))

nsubj(soared-2, We-1)
nsubj(found-5, We-1)
root(ROOT-0, soared-2)
prt(soared-2, up-3)
conj_and(soared-2, found-5)
nsubj(laying-7, him-6)
nsubj(most-15, him-6)
dep(found-5, laying-7)
det(panting-13, the-11)
nn(panting-13, head-12)
prep_on_top_of(laying-7, panting-13)
dep(found-5, most-15)
conj_and(laying-7, most-15)
vmod(most-15, tuckered-16)
prt(tuckered-16, out-17)
dep(found-5, partly-19)
conj_and(laying-7, partly-19)
dep(laying-7, from-20)
pcomp(from-20, howling-21)
prep_for(howling-21, help-23)
advmod(from-26, partly-25)
dep(found-5, from-26)
conj_and(laying-7, from-26)
pobj(from-26, scare-27)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN been)
          (VP (VBG standing)
            (NP (DT a) (NN siege))
            (NP (DT a) (JJ long) (NN time))))))
    (: --)
    (S
      (NP (DT a) (NN week))
      (, ,)
      (S
        (NP (PRP HE))
        (VP (VBD said)))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD war) (RB n't)
          (VP
            (ADVP (RB so)))))
      (, ,)
      (S
        (NP (PRP it))
        (ADVP (RB only))
        (VP
          (ADVP (RB just))
          (VBD seemed)
          (ADVP (RB so)
            (PP (TO to)
              (NP (PRP him))))
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (VBD was)
                (VP (VBG crowding)
                  (NP (PRP him))
                  (ADVP (RB so)))))))))
    (. .)))

nsubj(standing-4, He-1)
aux(standing-4, had-2)
aux(standing-4, been-3)
root(ROOT-0, standing-4)
det(siege-6, a-5)
iobj(standing-4, siege-6)
det(time-9, a-7)
amod(time-9, long-8)
dobj(standing-4, time-9)
det(week-12, a-11)
dep(said-15, week-12)
nsubj(said-15, HE-14)
parataxis(standing-4, said-15)
nsubj(war-19, it-18)
parataxis(standing-4, war-19)
conj_but(said-15, war-19)
neg(war-19, n't-20)
dep(war-19, so-21)
nsubj(seemed-26, it-23)
advmod(seemed-26, only-24)
advmod(seemed-26, just-25)
parataxis(standing-4, seemed-26)
conj_but(said-15, seemed-26)
parataxis(said-15, seemed-26)
advmod(seemed-26, so-27)
prep_to(so-27, him-29)
mark(crowding-33, because-30)
nsubj(crowding-33, they-31)
aux(crowding-33, was-32)
advcl(seemed-26, crowding-33)
dobj(crowding-33, him-34)
advmod(crowding-33, so-35)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD had)
          (VP (VBN shot)
            (PP (IN at)
              (NP (PRP him)))))
        (, ,)
        (CC and)
        (VP (VBD rained)
          (NP (DT the) (NNS bullets))
          (PP (DT all) (IN around)
            (NP (PRP him))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP (VBZ war) (RB n't)
          (VP (VB hit))))
      (, ,)
      (CC and)
      (S
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBD found)
                (SBAR
                  (S
                    (S
                      (NP (PRP he))
                      (VP (MD would) (RB n't)
                        (VP (VB stand)
                          (PRT (RP up)))))
                    (CC and)
                    (S
                      (NP (DT the) (NNS bullets))
                      (VP (MD could) (RB n't)
                        (VP (VB git)
                          (PP (IN at)
                            (NP (PRP him)))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (VP (VBG laying)
                                  (PRT (RP down))))))))))))))
          (, ,)
          (NP (PRP they))
          (VP (VBD went)
            (PP (IN for)
              (NP (DT the) (NN ladder)))))
        (, ,)
        (CC and)
        (RB then)
        (S
          (NP (PRP he))
          (VP (VBD knowed)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADVP (DT all) (RB up))
                  (PP (IN with)
                    (NP (PRP him)))
                  (SBAR (IN if)
                    (S
                      (NP (PRP we))
                      (VP (VBD did) (RB n't)
                        (VP (VB come)
                          (ADJP (RB pretty) (JJ quick)))))))))))))
    (. .)))

nsubj(shot-3, They-1)
nsubj(rained-8, They-1)
aux(shot-3, had-2)
root(ROOT-0, shot-3)
prep_at(shot-3, him-5)
conj_and(shot-3, rained-8)
det(bullets-10, the-9)
dobj(rained-8, bullets-10)
dep(rained-8, all-11)
prep_around(rained-8, him-13)
nsubj(war-17, he-16)
conj_but(shot-3, war-17)
neg(war-17, n't-18)
dep(war-17, hit-19)
advmod(found-24, when-22)
nsubj(found-24, they-23)
advcl(went-45, found-24)
nsubj(stand-28, he-25)
aux(stand-28, would-26)
neg(stand-28, n't-27)
dep(found-24, stand-28)
prt(stand-28, up-29)
det(bullets-32, the-31)
nsubj(git-35, bullets-32)
aux(git-35, could-33)
neg(git-35, n't-34)
dep(found-24, git-35)
conj_and(stand-28, git-35)
prep_at(git-35, him-37)
advmod(laying-41, when-38)
nsubj(laying-41, he-39)
aux(laying-41, was-40)
advcl(git-35, laying-41)
prt(laying-41, down-42)
nsubj(went-45, they-44)
conj_but(shot-3, went-45)
conj_and(war-17, went-45)
det(ladder-48, the-47)
prep_for(went-45, ladder-48)
advmod(knowed-53, then-51)
nsubj(knowed-53, he-52)
conj_and(war-17, knowed-53)
conj_and(went-45, knowed-53)
nsubj(was-55, it-54)
ccomp(knowed-53, was-55)
dep(up-57, all-56)
advmod(was-55, up-57)
prep_with(was-55, him-59)
mark(come-64, if-60)
nsubj(come-64, we-61)
aux(come-64, did-62)
neg(come-64, n't-63)
advcl(was-55, come-64)
advmod(quick-66, pretty-65)
acomp(come-64, quick-66)

(ROOT
  (S
    (NP (NNP Tom))
    (VP
      (VP (VBD was)
        (ADJP (RB very) (JJ indignant)))
      (, ,)
      (CC and)
      (VP (VBD asked)
        (NP (PRP him))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP he))
            (VP (VBD did) (RB n't)
              (VP
                (VP (VB show)
                  (NP (DT the) (NN flag)))
                (CC and)
                (VP (VB command)
                  (NP (PRP them))
                  (PP (TO to)
                    (NP (NNP GIT)))
                  (, ,)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN name))
                      (PP (IN of)
                        (NP (DT the) (NNP United) (NNPS States))))))))))))
    (. .)))

nsubj(indignant-4, Tom-1)
nsubj(asked-7, Tom-1)
cop(indignant-4, was-2)
advmod(indignant-4, very-3)
root(ROOT-0, indignant-4)
conj_and(indignant-4, asked-7)
dobj(asked-7, him-8)
advmod(show-13, why-9)
nsubj(show-13, he-10)
nsubj(command-17, he-10)
aux(show-13, did-11)
neg(show-13, n't-12)
advcl(asked-7, show-13)
det(flag-15, the-14)
dobj(show-13, flag-15)
advcl(asked-7, command-17)
conj_and(show-13, command-17)
dobj(command-17, them-18)
prep_to(command-17, GIT-20)
det(name-24, the-23)
prep_in(command-17, name-24)
det(States-28, the-26)
nn(States-28, United-27)
prep_of(name-24, States-28)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBN done)
              (NP (PRP it)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (ADVP (RB never))
      (VP (VBD paid)
        (NP (DT no) (NN attention))))
    (. .)))

nsubj(said-2, Jim-1)
root(ROOT-0, said-2)
nsubj(done-4, he-3)
ccomp(said-2, done-4)
dobj(done-4, it-5)
nsubj(paid-10, they-8)
neg(paid-10, never-9)
conj_but(said-2, paid-10)
neg(attention-12, no-11)
dobj(paid-10, attention-12)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB have)
                  (NP
                    (NP (DT this) (NN thing))
                    (VP (VBN looked)
                      (PP (IN into)
                        (PP (IN at)
                          (NP (NNP Washington)))))))))))
        (, ,)
        (CC and)
        (VP (VBZ says))))
    (: :) (`` ``)
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB see)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD 'll)
                (VP (VB have)
                  (S
                    (VP (TO to)
                      (VP (VB apologize)
                        (PP (IN for)
                          (S
                            (VP (VBG insulting)
                              (NP (DT the) (NN flag)))))
                        (, ,)
                        (CC and)
                        (VB pay)
                        (NP (DT an) (NN indemnity))
                        (, ,)
                        (ADVP (RB too))
                        (, ,)
                        (PP (IN on)
                          (NP
                            (NP (NN top))
                            (PP (IN of)
                              (NP (PRP it))))))))
                  (SBAR (RB even) (IN if)
                    (S
                      (NP (PRP they))
                      (VP (VBP git)
                        (PP (IN off)
                          (NP (NNP THAT)))
                        (ADVP (RB easy))))))))))))
    (. .) ('' '')))

nsubj(said-2, Tom-1)
nsubj(says-14, Tom-1)
root(ROOT-0, said-2)
nsubj(have-5, he-3)
aux(have-5, would-4)
ccomp(said-2, have-5)
det(thing-7, this-6)
dobj(have-5, thing-7)
vmod(thing-7, looked-8)
prep(looked-8, into-9)
pcomp(into-9, at-10)
pobj(at-10, Washington-11)
conj_and(said-2, says-14)
nsubj(see-19, You-17)
aux(see-19, 'll-18)
parataxis(said-2, see-19)
mark(have-23, that-20)
nsubj(have-23, they-21)
nsubj(apologize-25, they-21)
nsubj(pay-32, they-21)
aux(have-23, 'll-22)
ccomp(see-19, have-23)
aux(apologize-25, to-24)
xcomp(have-23, apologize-25)
prepc_for(apologize-25, insulting-27)
det(flag-29, the-28)
dobj(insulting-27, flag-29)
xcomp(have-23, pay-32)
conj_and(apologize-25, pay-32)
det(indemnity-34, an-33)
dobj(apologize-25, indemnity-34)
xcomp(have-23, too-36)
advmod(apologize-25, too-36)
conj_and(apologize-25, too-36)
xcomp(have-23, on-38)
conj_and(apologize-25, on-38)
prep_on_top_of(apologize-25, it-41)
advmod(git-45, even-42)
mark(git-45, if-43)
nsubj(git-45, they-44)
advcl(have-23, git-45)
prep_off(git-45, THAT-47)
advmod(git-45, easy-48)

(ROOT
  (S
    (S
      (NP (NNP Jim))
      (VP (VBZ says)))
    (: :) (`` ``)
    (SBARQ
      (WHNP (WP What))
      (SQ (VBZ 's)
        (NP
          (NP (DT an) (NN indemnity))
          (, ,)
          (NP (NNP Mars) (NNP Tom)))))
    (. ?) ('' '')))

nsubj(says-2, Jim-1)
root(ROOT-0, says-2)
parataxis(says-2, What-5)
cop(What-5, 's-6)
det(indemnity-8, an-7)
nsubj(What-5, indemnity-8)
nn(Tom-11, Mars-10)
appos(indemnity-8, Tom-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (NN cash))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP it))
                  (VP (VBZ is)))))))))
    (. .) ('' '')))

nsubj(cash-4, It-2)
cop(cash-4, 's-3)
root(ROOT-0, cash-4)
nsubj('s-7, cash-4)
rcmod(cash-4, 's-7)
dobj(is-10, what-8)
nsubj(is-10, it-9)
ccomp('s-7, is-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBZ gits)
        (NP
          (NP (PRP it))
          (, ,)
          (NP (NNP Mars) (NNP Tom)))))
    (. ?) ('' '')))

nsubj(gits-3, Who-2)
root(ROOT-0, gits-3)
dobj(gits-3, it-4)
nn(Tom-7, Mars-6)
appos(it-4, Tom-7)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (NNP WE))
    (VP (VBP do))
    (. .) ('' '')))

discourse(do-5, Why-2)
nsubj(do-5, WE-4)
root(ROOT-0, do-5)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP En))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ gits)
            (NP (FW de) (FW apology))))))
    (. ?) ('' '')))

root(ROOT-0, En-2)
nsubj(gits-4, En-2)
rcmod(En-2, gits-4)
nn(apology-6, de-5)
dobj(gits-4, apology-6)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNP United))
    (VP (VBZ States))
    (. .)))

det(United-3, The-2)
nsubj(States-4, United-3)
root(ROOT-0, States-4)

(ROOT
  (S (CC Or)
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB take)
        (SBAR
          (WHNP (WDT whichever))
          (S
            (NP (PRP we))
            (VP (VBP please))))))
    (. .)))

cc(take-5, Or-1)
nsubj(take-5, we-3)
aux(take-5, can-4)
root(ROOT-0, take-5)
dobj(please-8, whichever-6)
nsubj(please-8, we-7)
ccomp(take-5, please-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP
        (VP (VB take)
          (NP (DT the) (NN apology))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBP want)
                (PP (TO to))))))
        (, ,)
        (CC and)
        (VP (VB let)
          (S
            (NP (DT the) (NN gov) (`` `) (NN ment))
            (VP (VB take)
              (NP (DT the) (NN money)))))))
    (. .) ('' '')))

nsubj(take-3, We-1)
nsubj(let-13, We-1)
aux(take-3, can-2)
root(ROOT-0, take-3)
det(apology-5, the-4)
dobj(take-3, apology-5)
mark(want-9, if-7)
nsubj(want-9, we-8)
advcl(take-3, want-9)
prep(want-9, to-10)
conj_and(take-3, let-13)
det(ment-17, the-14)
nn(ment-17, gov-15)
nsubj(take-18, ment-17)
ccomp(let-13, take-18)
det(money-20, the-19)
dobj(take-18, money-20)

(ROOT
  (SBARQ (`` ``)
    (WHNP
      (WHADJP (WRB How) (JJ much))
      (NN money))
    (SQ (MD will)
      (NP (PRP it))
      (VP (VB be) (, ,)
        (SBAR
          (S
            (NP (NNP Mars))
            (VP (VBZ Tom))))))
    (. ?) ('' '')))

advmod(much-3, How-2)
amod(money-4, much-3)
dobj(be-7, money-4)
aux(be-7, will-5)
nsubj(be-7, it-6)
root(ROOT-0, be-7)
nsubj(Tom-10, Mars-9)
ccomp(be-7, Tom-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Well))
    (, ,)
    (S
      (PP (IN in)
        (NP
          (NP (DT an) (JJ aggravated) (NN case))
          (PP (IN like)
            (NP (DT this) (NN one)))))
      (, ,)
      (NP (PRP it))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP
              (QP (IN at) (JJS least) (CD three))
              (NNS dollars))
            (NP (RB apiece))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (ADVP (CC but)
            (RBR more)))))
    (. .) ('' '')))

advmod(dollars-18, Well-2)
det(case-7, an-5)
amod(case-7, aggravated-6)
prep_in(dollars-18, case-7)
det(one-10, this-9)
prep_like(case-7, one-10)
nsubj(dollars-18, it-12)
aux(dollars-18, will-13)
cop(dollars-18, be-14)
quantmod(three-17, at-15)
mwe(at-15, least-16)
pobj(at-15, least-16)
num(dollars-18, three-17)
root(ROOT-0, dollars-18)
dep(dollars-18, apiece-19)
nsubj(know-25, I-22)
aux(know-25, do-23)
neg(know-25, n't-24)
conj_and(dollars-18, know-25)
cc(more-27, but-26)
advmod(know-25, more-27)

(ROOT
  (S (`` ``)
    (INTJ (UH Well) (, ,) (UH den))
    (, ,)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB take)
        (S
          (NP
            (NP (JJ de) (NN money))
            (, ,)
            (NP (NNP Mars) (NNP Tom))
            (, ,))
          (VP (VB blame)
            (S
              (NP (NNP de))
              (`` `)
              (ADJP (JJ pology)))))))
    (. .)))

discourse(take-8, Well-2)
dep(Well-2, den-4)
nsubj(take-8, we-6)
aux(take-8, 'll-7)
root(ROOT-0, take-8)
amod(money-10, de-9)
nsubj(blame-15, money-10)
nn(Tom-13, Mars-12)
appos(money-10, Tom-13)
ccomp(take-8, blame-15)
dep(pology-18, de-16)
dep(blame-15, pology-18)

(ROOT
  (S
    (VP (VB Hai) (RB n't)
      (VP (VB dat)
        (NP
          (NP
            (NP (NNP yo) (POS '))
            (NN notion))
          (, ,)
          (ADVP (RB too)))))
    (. ?)))

root(ROOT-0, Hai-1)
neg(Hai-1, n't-2)
dep(Hai-1, dat-3)
poss(notion-6, yo-4)
dobj(dat-3, notion-6)
advmod(notion-6, too-8)

(ROOT
  (S
    (NP (NNP En))
    (VP (VBP hai) (RB n't)
      (NP
        (NP (PRP it))
        (VP (VBN yourn) (, ,)
          (NP (NNP Huck)))))
    (. ?) ('' '')))

nsubj(hai-2, En-1)
root(ROOT-0, hai-2)
neg(hai-2, n't-3)
dobj(hai-2, it-4)
vmod(it-4, yourn-5)
dobj(yourn-5, Huck-7)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD talked)
          (NP (PRP it))
          (PP (IN over)
            (NP (DT a) (JJ little))))
        (CC and)
        (VP (VBD allowed)
          (SBAR (IN that)
            (S
              (NP (DT that))
              (VP (VBD was)
                (ADJP (RB as) (JJ good))))))
        (NP (DT a) (NN way))
        (ADVP (IN as) (DT any))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (VP (VBD agreed)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (DT the) (NN money)))))))
    (. .)))

nsubj(talked-2, We-1)
nsubj(allowed-8, We-1)
root(ROOT-0, talked-2)
dobj(talked-2, it-3)
det(little-6, a-5)
prep_over(talked-2, little-6)
conj_and(talked-2, allowed-8)
mark(good-13, that-9)
nsubj(good-13, that-10)
cop(good-13, was-11)
advmod(good-13, as-12)
ccomp(allowed-8, good-13)
det(way-15, a-14)
dobj(talked-2, way-15)
advmod(talked-2, as-16)
dep(as-16, any-17)
dep(talked-2, so-19)
nsubj(agreed-21, we-20)
nsubj(take-23, we-20)
parataxis(talked-2, agreed-21)
aux(take-23, to-22)
xcomp(agreed-21, take-23)
det(money-25, the-24)
dobj(take-23, money-25)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ new) (NN business))
          (PP (TO to)
            (NP (PRP me))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (VBD asked)
          (NP (NNP Tom))
          (SBAR (IN if)
            (S
              (NP (NNS countries))
              (ADVP (RB always))
              (VP (VBD apologized)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBD had)
                      (VP (VBN done)
                        (S
                          (ADJP (JJ wrong))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBZ says) (: :) (`` ``)
          (S
            (NP
              (NP (NNP Yes))
              (: ;)
              (NP (DT the) (JJ little) (NNS ones)))
            (VP (VBZ does))))))
    (. .) ('' '')))

nsubj(business-5, It-1)
cop(business-5, was-2)
det(business-5, a-3)
amod(business-5, new-4)
root(ROOT-0, business-5)
prep_to(business-5, me-7)
nsubj(asked-11, I-10)
conj_and(business-5, asked-11)
dobj(asked-11, Tom-12)
mark(apologized-16, if-13)
nsubj(apologized-16, countries-14)
advmod(apologized-16, always-15)
advcl(asked-11, apologized-16)
advmod(done-20, when-17)
nsubj(done-20, they-18)
aux(done-20, had-19)
advcl(apologized-16, done-20)
acomp(done-20, wrong-21)
nsubj(says-25, he-24)
conj_and(business-5, says-25)
conj_and(asked-11, says-25)
nsubj(does-33, Yes-28)
det(ones-32, the-30)
amod(ones-32, little-31)
dep(Yes-28, ones-32)
ccomp(says-25, does-33)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD was)
        (VP (VBG sailing)
          (PP (IN around)
            (S
              (VP (VBG examining)
                (NP (DT the) (NNS pyramids))))))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (, ,))
    (CC and)
    (ADVP (RB now))
    (S
      (NP (PRP we))
      (VP
        (VP (VBD soared)
          (PRT (RP up)))
        (CC and)
        (VP (VBD roosted)
          (PP (IN on)
            (NP
              (NP (DT the) (JJ flat) (NN top))
              (PP (IN of)
                (NP (DT the) (JJS biggest) (NN one))))))
        (, ,)
        (CC and)
        (VP (VBD found)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADVP (RB just))
                (PP (IN like)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (DT the) (NN man))
                      (VP (VBD said)
                        (PP (IN in)
                          (NP (DT the) (NN Sunday-school)))))))))))))
    (. .)))

nsubj(sailing-3, We-1)
aux(sailing-3, was-2)
root(ROOT-0, sailing-3)
prepc_around(sailing-3, examining-5)
det(pyramids-7, the-6)
dobj(examining-5, pyramids-7)
nsubj(know-10, you-9)
dep(sailing-3, know-10)
advmod(soared-15, now-13)
nsubj(soared-15, we-14)
nsubj(roosted-18, we-14)
nsubj(found-29, we-14)
conj_and(sailing-3, soared-15)
prt(soared-15, up-16)
conj_and(sailing-3, roosted-18)
conj_and(soared-15, roosted-18)
det(top-22, the-20)
amod(top-22, flat-21)
prep_on(roosted-18, top-22)
det(one-26, the-24)
amod(one-26, biggest-25)
prep_of(top-22, one-26)
conj_and(sailing-3, found-29)
conj_and(soared-15, found-29)
nsubj(was-31, it-30)
ccomp(found-29, was-31)
advmod(was-31, just-32)
dobj(said-37, what-34)
det(man-36, the-35)
nsubj(said-37, man-36)
prepc_like(was-31, said-37)
det(Sunday-school-40, the-39)
prep_in(said-37, Sunday-school-40)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN like)
          (NP
            (NP (CD four) (NNS pairs))
            (PP (IN of)
              (NP
                (NP (NNS stairs))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP
                      (VP (VBZ starts)
                        (ADJP (JJ broad))
                        (PP (IN at)
                          (NP (DT the) (NN bottom))))
                      (CC and)
                      (VP
                        (VP (VBZ slants)
                          (PRT (RP up)))
                        (CC and)
                        (VP (VBZ comes)
                          (ADVP (RB together))
                          (PP (IN in)
                            (NP
                              (NP (DT a) (NN point))
                              (PP (IN at)
                                (NP (DT the) (NN top)))))
                          (, ,)
                          (SBAR (RB only)
                            (S
                              (NP (DT these) (NNS stair-steps))
                              (VP (MD could) (RB n't)
                                (VP (VB be)
                                  (ADJP (JJ clumb)))))))
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (VB climb)
                                (NP (JJ other) (NNS stairs))))))))))))))))
    (: ;)
    (S
      (S
        (INTJ (UH no))
        (, ,)
        (X (IN for))
        (NP (DT each) (NN step))
        (VP (VBD was)
          (ADJP (RB as) (JJ high))
          (PP (IN as)
            (NP (PRP$ your) (NN chin)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN boosted)
                  (PRT (RP up))
                  (PP (IN from)
                    (ADVP (RB behind))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
num(pairs-5, four-4)
prep_like(was-2, pairs-5)
prep_of(pairs-5, stairs-7)
nsubj(starts-9, stairs-7)
nsubj(slants-15, stairs-7)
rcmod(stairs-7, starts-9)
acomp(starts-9, broad-10)
det(bottom-13, the-12)
prep_at(starts-9, bottom-13)
rcmod(stairs-7, slants-15)
conj_and(starts-9, slants-15)
prt(slants-15, up-16)
conj_and(starts-9, comes-18)
conj_and(slants-15, comes-18)
advmod(comes-18, together-19)
det(point-22, a-21)
prep_in(comes-18, point-22)
det(top-25, the-24)
prep_at(point-22, top-25)
advmod(clumb-33, only-27)
det(stair-steps-29, these-28)
nsubj(clumb-33, stair-steps-29)
aux(clumb-33, could-30)
neg(clumb-33, n't-31)
cop(clumb-33, be-32)
ccomp(comes-18, clumb-33)
det(way-35, the-34)
dobj(slants-15, way-35)
nsubj(climb-37, you-36)
rcmod(way-35, climb-37)
amod(stairs-39, other-38)
dobj(climb-37, stairs-39)
discourse(high-48, no-41)
dep(high-48, for-43)
det(step-45, each-44)
nsubj(high-48, step-45)
cop(high-48, was-46)
advmod(high-48, as-47)
parataxis(was-2, high-48)
poss(chin-51, your-50)
prep_as(high-48, chin-51)
nsubj(have-55, you-54)
nsubjpass(boosted-58, you-54)
parataxis(was-2, have-55)
conj_and(high-48, have-55)
aux(boosted-58, to-56)
auxpass(boosted-58, be-57)
xcomp(have-55, boosted-58)
prt(boosted-58, up-59)
prep(boosted-58, from-60)
pcomp(from-60, behind-61)

(ROOT
  (S
    (S
      (NP (DT The) (CD two) (JJ other) (NNS pyramids))
      (VP (VBD war) (RB n't)
        (VP
          (ADVP (RB far) (RB away)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNS people))
        (VP (VBG moving) (IN about)
          (PP (IN on)
            (NP (DT the) (NN sand) (IN between)))))
      (VP (VBD looked)
        (SBAR
          (S
            (PP (IN like)
              (NP
                (NP (NNS bugs))
                (VP (VBG crawling))))
            (, ,)
            (NP (PRP we))
            (VP (VBD was)
              (ADJP (RB so) (JJ high))
              (PP (IN above)
                (NP (PRP them))))))))
    (. .)))

det(pyramids-4, The-1)
num(pyramids-4, two-2)
amod(pyramids-4, other-3)
nsubj(war-5, pyramids-4)
root(ROOT-0, war-5)
neg(war-5, n't-6)
advmod(away-8, far-7)
dep(war-5, away-8)
det(people-12, the-11)
nsubj(looked-19, people-12)
vmod(people-12, moving-13)
dep(moving-13, about-14)
det(sand-17, the-16)
prep_on(moving-13, sand-17)
amod(sand-17, between-18)
conj_and(war-5, looked-19)
prep_like(high-27, bugs-21)
vmod(bugs-21, crawling-22)
nsubj(high-27, we-24)
cop(high-27, was-25)
advmod(high-27, so-26)
ccomp(looked-19, high-27)
prep_above(high-27, them-29)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Tom))
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could) (RB n't)
              (VP (VB hold)
                (S
                  (NP (PRP himself))
                  (NP (PRP he))))))))
      (VP (VBD was)
        (ADVP (RB so))
        (VP (VBN worked)
          (PRT (RP up))
          (PP (IN with)
            (NP (NNS gladness)
              (CC and)
              (NN astonishment)))
          (S
            (VP (TO to)
              (VP (VB be)
                (PP (IN in)
                  (NP (PDT such) (DT a) (JJ celebrated) (NN place)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (ADVP (RB just))
      (VP (VBD dripped)
        (NP (NN history))
        (PP (IN from)
          (NP
            (NP (DT every) (NN pore))
            (, ,)
            (VP (VBN seemed)
              (PP (TO to)
                (NP (PRP me))))))))
    (. .)))

nsubjpass(worked-10, Tom-1)
nsubj(be-17, Tom-1)
nsubj(hold-5, he-2)
aux(hold-5, could-3)
neg(hold-5, n't-4)
rcmod(Tom-1, hold-5)
nsubj(he-7, himself-6)
xcomp(hold-5, he-7)
auxpass(worked-10, was-8)
advmod(worked-10, so-9)
root(ROOT-0, worked-10)
prt(worked-10, up-11)
prep_with(worked-10, gladness-13)
prep_with(worked-10, astonishment-15)
conj_and(gladness-13, astonishment-15)
aux(be-17, to-16)
xcomp(worked-10, be-17)
predet(place-22, such-19)
det(place-22, a-20)
amod(place-22, celebrated-21)
prep_in(be-17, place-22)
nsubj(dripped-27, he-25)
advmod(dripped-27, just-26)
conj_and(worked-10, dripped-27)
dobj(dripped-27, history-28)
det(pore-31, every-30)
prep_from(dripped-27, pore-31)
vmod(pore-31, seemed-33)
prep_to(seemed-33, me-35)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD could) (RB n't)
            (ADVP (RB scarcely))
            (VP (VB believe)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG standing)
                      (PP (IN on)
                        (NP
                          (NP (DT the)
                            (ADJP (RB very) (JJ identical))
                            (NN spot))
                          (SBAR
                            (S
                              (NP (DT the) (NN prince))
                              (VP (VBD flew)
                                (PP (IN from)
                                  (PP (IN on)
                                    (NP (DT the) (NN Bronze) (NN Horse))))))))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(believe-7, he-3)
aux(believe-7, could-4)
neg(believe-7, n't-5)
advmod(believe-7, scarcely-6)
ccomp(said-2, believe-7)
nsubj(standing-10, he-8)
aux(standing-10, was-9)
ccomp(believe-7, standing-10)
det(spot-15, the-12)
advmod(identical-14, very-13)
amod(spot-15, identical-14)
prep_on(standing-10, spot-15)
det(prince-17, the-16)
nsubj(flew-18, prince-17)
rcmod(spot-15, flew-18)
prep(flew-18, from-19)
pcomp(from-19, on-20)
det(Horse-23, the-21)
nn(Horse-23, Bronze-22)
pobj(on-20, Horse-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN in)
          (NP (DT the) (NNP Arabian) (NNP Night) (NNS times)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(was-2, It-1)
ccomp(said-10, was-2)
det(times-7, the-4)
nn(times-7, Arabian-5)
nn(times-7, Night-6)
prep_in(was-2, times-7)
nsubj(said-10, he-9)
root(ROOT-0, said-10)

(ROOT
  (S
    (S
      (NP (NN Somebody))
      (VP (VBP give)
        (NP (DT the) (NN prince))
        (NP
          (NP (DT a) (NN bronze) (NN horse))
          (PP (IN with)
            (NP
              (NP (DT a) (NN peg))
              (PP (IN in)
                (NP (PRP$ its) (NN shoulder))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP
          (VP (VB git)
            (PP (IN on)
              (NP (PRP him))))
          (CC and)
          (VP (VB fly)
            (PP (IN through)
              (NP
                (NP (DT the) (NN air))
                (PP (IN like)
                  (NP (DT a) (NN bird))))))
          (, ,)
          (CC and)
          (VP
            (VP (VB go)
              (NP
                (NP (DT all))
                (PP (IN over)
                  (NP (DT the) (NN world)))))
            (, ,)
            (CC and)
            (VP (VB steer)
              (NP (PRP it))
              (PP (IN by)
                (S
                  (VP (VBG turning)
                    (NP (DT the) (NN peg))))))
            (, ,)
            (CC and)
            (VP
              (VP (VB fly)
                (ADVP (JJ high)
                  (CC or)
                  (JJ low)))
              (CC and)
              (VP (VB land)
                (SBAR
                  (WHADVP (WRB wherever))
                  (S
                    (NP (PRP he))
                    (VP (VBD wanted)
                      (PP (TO to)))))))))))
    (. .)))

nsubj(give-2, Somebody-1)
root(ROOT-0, give-2)
det(prince-4, the-3)
iobj(give-2, prince-4)
det(horse-7, a-5)
nn(horse-7, bronze-6)
dobj(give-2, horse-7)
det(peg-10, a-9)
prep_with(horse-7, peg-10)
poss(shoulder-13, its-12)
prep_in(peg-10, shoulder-13)
nsubj(git-18, he-16)
nsubj(fly-22, he-16)
nsubj(go-31, he-16)
aux(git-18, could-17)
conj_and(give-2, git-18)
prep_on(git-18, him-20)
conj_and(give-2, fly-22)
conj_and(git-18, fly-22)
det(air-25, the-24)
prep_through(fly-22, air-25)
det(bird-28, a-27)
prep_like(air-25, bird-28)
conj_and(give-2, go-31)
conj_and(git-18, go-31)
dobj(go-31, all-32)
det(world-35, the-34)
prep_over(all-32, world-35)
conj_and(git-18, steer-38)
conj_and(go-31, steer-38)
dobj(steer-38, it-39)
prepc_by(steer-38, turning-41)
det(peg-43, the-42)
dobj(turning-41, peg-43)
conj_and(git-18, fly-46)
conj_and(go-31, fly-46)
advmod(fly-46, high-47)
advmod(fly-46, low-49)
conj_or(high-47, low-49)
conj_and(go-31, land-51)
conj_and(fly-46, land-51)
advmod(wanted-54, wherever-52)
nsubj(wanted-54, he-53)
advcl(land-51, wanted-54)
prep(wanted-54, to-55)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD got)
            (VP (VBN done)
              (S
                (VP (VBG telling)
                  (NP (PRP it))))))))
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (ADJP
                (NP (PRP them))
                (JJ uncomfortable))
              (NNS silences)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ comes)
                (PRN (, ,)
                  (S
                    (NP (PRP you))
                    (VP (VBP know)))
                  (, ,))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (S
                      (NP (DT a) (NN person))
                      (VP (VBZ has)
                        (VP (VBN been)
                          (VP (VBG telling)
                            (NP (DT a) (NN whopper))))))
                    (CC and)
                    (S
                      (NP (PRP you))
                      (VP
                        (VP (VBP feel)
                          (ADJP (JJ sorry)
                            (PP (IN for)
                              (NP (PRP him)))))
                        (CC and)
                        (VP (VBP wish)
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (MD could)
                                (VP (VB think)
                                  (PP (IN of)
                                    (NP (DT some) (NN way)
                                      (S
                                        (VP (TO to)
                                          (VP
                                            (VP (VB change)
                                              (NP (DT the) (NN subject)))
                                            (CC and)
                                            (VP (VB let)
                                              (S
                                                (NP (PRP him))
                                                (ADJP (RB down) (JJ easy))))))))))))))))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (NN git))
        (VP
          (VP (VBD stuck))
          (CC and)
          (VP (VBP do) (RB n't)
            (VP (VB see)
              (NP (DT no) (NN way))))))
      (, ,)
      (CC and)
      (S
        (SBAR (IN before)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP
                (VP (VB pull)
                  (NP (PRP$ your) (NN mind))
                  (ADVP (RB together)))
                (CC and)
                (VP (VB DO)
                  (NP (NN something)))))))
        (, ,)
        (NP (DT that) (NN silence))
        (VP (VBZ has)
          (VP
            (VP (VBN got)
              (PP (IN in)))
            (CC and)
            (VP
              (VP (VBN spread)
                (NP (PRP itself)))
              (CC and)
              (VP (VBN done)
                (NP (DT the) (NN business))))))))
    (. .)))

advmod(done-4, When-1)
nsubjpass(done-4, he-2)
auxpass(done-4, got-3)
advcl(was-8, done-4)
xcomp(done-4, telling-5)
dobj(telling-5, it-6)
expl(was-8, there-7)
root(ROOT-0, was-8)
nsubj(was-8, one-9)
nsubj(comes-15, one-9)
nsubj(telling-25, one-9)
npadvmod(uncomfortable-12, them-11)
amod(silences-13, uncomfortable-12)
prep_of(one-9, silences-13)
rcmod(one-9, comes-15)
nsubj(know-18, you-17)
parataxis(comes-15, know-18)
advmod(telling-25, when-20)
det(person-22, a-21)
nsubj(telling-25, person-22)
aux(telling-25, has-23)
aux(telling-25, been-24)
advcl(comes-15, telling-25)
det(whopper-27, a-26)
dobj(telling-25, whopper-27)
nsubj(feel-30, you-29)
nsubj(wish-35, you-29)
advcl(comes-15, feel-30)
conj_and(telling-25, feel-30)
acomp(feel-30, sorry-31)
prep_for(sorry-31, him-33)
conj_and(telling-25, wish-35)
conj_and(feel-30, wish-35)
nsubj(think-38, you-36)
aux(think-38, could-37)
ccomp(wish-35, think-38)
det(way-41, some-40)
prep_of(think-38, way-41)
aux(change-43, to-42)
vmod(way-41, change-43)
det(subject-45, the-44)
dobj(change-43, subject-45)
vmod(way-41, let-47)
conj_and(change-43, let-47)
nsubj(easy-50, him-48)
advmod(easy-50, down-49)
xcomp(let-47, easy-50)
nsubj(stuck-54, git-53)
nsubj(see-58, git-53)
conj_but(was-8, stuck-54)
aux(see-58, do-56)
neg(see-58, n't-57)
conj_but(was-8, see-58)
conj_and(stuck-54, see-58)
neg(way-60, no-59)
dobj(see-58, way-60)
mark(pull-66, before-63)
nsubj(pull-66, you-64)
nsubj(DO-71, you-64)
aux(pull-66, can-65)
advcl(got-77, pull-66)
poss(mind-68, your-67)
dobj(pull-66, mind-68)
advmod(pull-66, together-69)
conj_and(pull-66, DO-71)
advcl(got-77, DO-71)
dobj(DO-71, something-72)
det(silence-75, that-74)
nsubj(got-77, silence-75)
nsubj(spread-80, silence-75)
aux(got-77, has-76)
conj_but(was-8, got-77)
conj_and(stuck-54, got-77)
prep(got-77, in-78)
conj_and(stuck-54, spread-80)
conj_and(got-77, spread-80)
dobj(spread-80, itself-81)
conj_and(got-77, done-83)
conj_and(spread-80, done-83)
det(business-85, the-84)
dobj(done-83, business-85)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADJP (JJ embarrassed))))
    (PRN (, ,)
      (S
        (NP (NNP Jim) (PRP he))
        (VP (VBD was)
          (ADJP (JJ embarrassed))))
      (, ,))
    (CC and)
    (S
      (NP
        (NP (DT neither))
        (PP (IN of)
          (NP (PRP us))))
      (VP (MD could) (RB n't)
        (VP (VB say)
          (NP (DT a) (NN word)))))
    (. .)))

nsubj(embarrassed-3, I-1)
cop(embarrassed-3, was-2)
root(ROOT-0, embarrassed-3)
nsubj(embarrassed-8, Jim-5)
dep(Jim-5, he-6)
cop(embarrassed-8, was-7)
dep(embarrassed-3, embarrassed-8)
nsubj(say-16, neither-11)
prep_of(neither-11, us-13)
aux(say-16, could-14)
neg(say-16, n't-15)
conj_and(embarrassed-3, say-16)
det(word-18, a-17)
dobj(say-16, word-18)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (NNP Tom) (PRP he))
    (VP
      (VP (VBD glowered)
        (PP (IN at)
          (NP
            (NP (PRP me))
            (NP (DT a) (NN minute)))))
      (, ,)
      (CC and)
      (VP (VBZ says) (: :) (`` ``)
        (S
          (VP (VB Come) (, ,)
            (PP (IN out))
            (PP (IN with)
              (NP (PRP it)))))))
    (. .)))

discourse(glowered-5, Well-1)
nsubj(glowered-5, Tom-3)
nsubj(says-12, Tom-3)
dep(Tom-3, he-4)
root(ROOT-0, glowered-5)
prep_at(glowered-5, me-7)
det(minute-9, a-8)
dep(me-7, minute-9)
conj_and(glowered-5, says-12)
ccomp(says-12, Come-15)
prep(Come-15, out-17)
prep_with(Come-15, it-19)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)))
    (. ?) ('' '')))

dobj(think-4, What-1)
aux(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (NP
          (NP (NNP Tom) (NNP Sawyer))
          (PRN (, ,)
            (S
              (NP (PRP YOU))
              (VP (VBP do) (RB n't)
                (VP (VB believe)
                  (NP (DT that)))))
            (, ,)))
        (NP (PRP yourself))))
    (. .) ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nn(Sawyer-6, Tom-5)
nsubj(yourself-14, Sawyer-6)
nsubj(believe-11, YOU-8)
aux(believe-11, do-9)
neg(believe-11, n't-10)
dep(Sawyer-6, believe-11)
dobj(believe-11, that-12)
xcomp(says-2, yourself-14)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN reason))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't))))))
    (. ?)))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(reason-5, the-4)
nsubj(What-2, reason-5)
nsubj(do-7, I-6)
rcmod(reason-5, do-7)
neg(do-7, n't-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ 's)
        (S
          (VP (TO to)
            (VP (VB hender)
              (NP (PRP me)))))))
    (. ?) ('' '')))

nsubj('s-2, What-1)
nsubj(hender-4, What-1)
root(ROOT-0, 's-2)
aux(hender-4, to-3)
xcomp('s-2, hender-4)
dobj(hender-4, me-5)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (CD one) (NN thing))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB hender)
                  (NP (PRP you)))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (MD could) (RB n't)
        (VP (VB happen) (, ,)
          (SBAR (IN that)
            (S
              (VP (VBZ 's)
                (NP (DT all))))))))
    (. .) ('' '')))

expl('s-3, There-2)
root(ROOT-0, 's-3)
num(thing-5, one-4)
nsubj('s-3, thing-5)
aux(hender-7, to-6)
vmod(thing-5, hender-7)
dobj(hender-7, you-8)
nsubj(happen-13, it-10)
aux(happen-13, could-11)
neg(happen-13, n't-12)
parataxis('s-3, happen-13)
mark(all-17, that-15)
cop(all-17, 's-16)
ccomp(happen-13, all-17)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN reason))
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD could) (RB n't)
              (VP (VB happen)))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(reason-5, the-4)
nsubj(What-2, reason-5)
nsubj(happen-9, it-6)
aux(happen-9, could-7)
neg(happen-9, n't-8)
rcmod(reason-5, happen-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VB tell)
      (NP (PRP me))
      (NP
        (NP (DT the) (NN reason))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD COULD)
              (VP (VB happen)))))))
    (. .) ('' '')))

nsubj(tell-3, You-2)
root(ROOT-0, tell-3)
iobj(tell-3, me-4)
det(reason-6, the-5)
dobj(tell-3, reason-6)
nsubj(happen-9, it-7)
aux(happen-9, COULD-8)
rcmod(reason-6, happen-9)

(ROOT
  (S (`` ``)
    (S
      (NP (DT This) (NN balloon))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ good) (JJ enough) (NN reason))
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD could)
                (VP (VB happen))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB reckon)))
    (. .) ('' '')))

det(balloon-3, This-2)
nsubj(reason-8, balloon-3)
cop(reason-8, is-4)
det(reason-8, a-5)
amod(reason-8, good-6)
amod(reason-8, enough-7)
ccomp(reckon-15, reason-8)
nsubj(happen-11, it-9)
aux(happen-11, could-10)
rcmod(reason-8, happen-11)
nsubj(reckon-15, I-13)
aux(reckon-15, should-14)
root(ROOT-0, reckon-15)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB WHY))
    (SQ (VBZ is)
      (NP (PRP it)))
    (. ?) ('' '')))

advmod(is-3, WHY-2)
root(ROOT-0, is-3)
nsubj(is-3, it-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB WHY))
    (SQ (VBZ is)
      (NP (PRP it)))
    (. ?)))

advmod(is-3, WHY-2)
root(ROOT-0, is-3)
nsubj(is-3, it-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD saw)
      (NP (PDT such) (DT an) (NN idiot)))
    (. .)))

nsubj(saw-3, I-1)
neg(saw-3, never-2)
root(ROOT-0, saw-3)
predet(idiot-6, such-4)
det(idiot-6, an-5)
dobj(saw-3, idiot-6)

(ROOT
  (FRAG
    (S
      (VP (VBD Ai) (RB n't)
        (VP
          (NP
            (NP (DT this) (NN balloon))
            (CC and)
            (NP
              (NP (DT the) (NN bronze) (NN horse))
              (NP (DT the) (JJ same) (NN thing))))
          (PP (IN under)
            (NP (JJ different) (NNS names))))))
    (. ?) ('' '')))

aux(balloon-4, Ai-1)
neg(balloon-4, n't-2)
det(balloon-4, this-3)
root(ROOT-0, balloon-4)
det(horse-8, the-6)
nn(horse-8, bronze-7)
conj_and(balloon-4, horse-8)
det(thing-11, the-9)
amod(thing-11, same-10)
dep(horse-8, thing-11)
amod(names-14, different-13)
prep_under(balloon-4, names-14)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP they))
    (VP (VBP 're) (RB not))
    (. .)))

discourse('re-5, No-2)
nsubj('re-5, they-4)
root(ROOT-0, 're-5)
neg('re-5, not-6)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (VBZ is)
        (NP (DT a) (NN balloon))))
    (CC and)
    (S
      (NP (DT the) (JJ other))
      (VP (VBZ 's)
        (NP (DT a) (NN horse))))
    (. .)))

nsubj(balloon-4, One-1)
cop(balloon-4, is-2)
det(balloon-4, a-3)
root(ROOT-0, balloon-4)
det(other-7, the-6)
nsubj(horse-10, other-7)
cop(horse-10, 's-8)
det(horse-10, a-9)
conj_and(balloon-4, horse-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB very) (JJ different)))
    (. .)))

nsubj(different-4, It-1)
cop(different-4, 's-2)
advmod(different-4, very-3)
root(ROOT-0, different-4)

(ROOT
  (S
    (S
      (ADVP (RB Next))
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB be)
          (VP (VBG saying)
            (NP (DT a) (NN house))))))
    (CC and)
    (S
      (NP (DT a) (NN cow))
      (VP (VBZ is)
        (NP (DT the) (JJ same) (NN thing))))
    (. .) ('' '')))

advmod(saying-5, Next-1)
nsubj(saying-5, you-2)
aux(saying-5, 'll-3)
aux(saying-5, be-4)
root(ROOT-0, saying-5)
det(house-7, a-6)
dobj(saying-5, house-7)
det(cow-10, a-9)
nsubj(thing-14, cow-10)
cop(thing-14, is-11)
det(thing-14, the-12)
amod(thing-14, same-13)
conj_and(saying-5, thing-14)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (NP (NNP Jackson)))
    (, ,)
    (NP (NNP Huck) (POS 's))
    (VP (VBD got)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBZ ag) (`` `)
            (PP (IN in))))))
    (. !)))

prep_by(got-7, Jackson-3)
nsubj(got-7, Huck-5)
possessive(Huck-5, 's-6)
root(ROOT-0, got-7)
nsubj(ag-9, him-8)
ccomp(got-7, ag-9)
prep(ag-9, in-11)

(ROOT
  (S
    (NP (NNP Dey))
    (VP (VBP ai) (RB n't)
      (NP
        (NP (DT no) (NN wigglin) (POS '))
        (JJ outer) (NN dat)))
    (. !) ('' '')))

nsubj(dat-8, Dey-1)
cop(dat-8, ai-2)
neg(dat-8, n't-3)
neg(wigglin-5, no-4)
poss(dat-8, wigglin-5)
amod(dat-8, outer-7)
root(ROOT-0, dat-8)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Shut)
        (NP
          (NP (PRP$ your) (NN head))
          (, ,)
          (NP (NNP Jim)))))
    (: ;)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBG talking) (IN about)))))))
    (. .)))

dep(know-11, Shut-2)
poss(head-4, your-3)
dobj(Shut-2, head-4)
appos(head-4, Jim-6)
nsubj(know-11, you-8)
aux(know-11, do-9)
neg(know-11, n't-10)
root(ROOT-0, know-11)
dobj(talking-15, what-12)
nsubj(talking-15, you-13)
aux(talking-15, 're-14)
ccomp(know-11, talking-15)
dep(talking-15, about-16)

(ROOT
  (S (CC And)
    (NP (NNP Huck))
    (VP (VBP do) (RB n't))
    (. .)))

cc(do-3, And-1)
nsubj(do-3, Huck-2)
root(ROOT-0, do-3)
neg(do-3, n't-4)

(ROOT
  (S
    (S
      (S
        (VP (VB Look)
          (ADVP (RB here))
          (, ,)
          (NP (NNP Huck))))
      (, ,)
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB make)
          (S
            (NP (PRP it))
            (ADJP (JJ plain)
              (PP (TO to)
                (NP (PRP you))))))))
    (, ,) (IN so)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB understand))))
    (. .)))

ccomp(make-8, Look-1)
advmod(Look-1, here-2)
dobj(Look-1, Huck-4)
nsubj(make-8, I-6)
aux(make-8, 'll-7)
root(ROOT-0, make-8)
nsubj(plain-10, it-9)
xcomp(make-8, plain-10)
prep_to(plain-10, you-12)
dep(make-8, so-14)
nsubj(understand-17, you-15)
aux(understand-17, can-16)
parataxis(make-8, understand-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT the) (JJ mere) (NN FORM))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (VP (VBN got)
                  (NP (NN anything))
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN with)
                          (S
                            (NP (PRP$ their))
                            (VP (VBG being)
                              (ADJP (JJ similar)
                                (CC or)
                                (JJ unsimilar)))))))))))))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN PRINCIPLE))
          (VP (VBN involved)))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN principle))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ same))
          (PP (IN in)
            (NP (DT both))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
nsubj(FORM-9, it-4)
cop(FORM-9, ai-5)
neg(FORM-9, n't-6)
det(FORM-9, the-7)
amod(FORM-9, mere-8)
ccomp(see-2, FORM-9)
conj_and(see-2, FORM-9)
nsubjpass(got-12, FORM-9)
auxpass(got-12, 's-11)
rcmod(FORM-9, got-12)
dobj(got-12, anything-13)
aux(do-15, to-14)
vmod(got-12, do-15)
nsubj(similar-19, their-17)
nsubj(unsimilar-21, their-17)
cop(similar-19, being-18)
prepc_with(do-15, similar-19)
prepc_with(do-15, unsimilar-21)
conj_or(similar-19, unsimilar-21)
nsubj(PRINCIPLE-26, it-23)
cop(PRINCIPLE-26, 's-24)
det(PRINCIPLE-26, the-25)
conj_and(see-2, PRINCIPLE-26)
vmod(PRINCIPLE-26, involved-27)
det(principle-31, the-30)
nsubj(same-34, principle-31)
cop(same-34, is-32)
det(same-34, the-33)
conj_and(see-2, same-34)
prep_in(same-34, both-36)

(ROOT
  (S
    (S
      (S
        (VP (VB Do) (RB n't)))
      (NP (PRP you))
      (VP (VBP see)))
    (, ,)
    (ADVP (RB now))
    (. ?) ('' '')))

dep(see-4, Do-1)
neg(Do-1, n't-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
advmod(see-4, now-6)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD turned)
        (NP (PRP it))
        (PRT (RP over))
        (PP (IN in)
          (NP (PRP$ my) (NN mind))))
      (, ,)
      (CC and)
      (VP (VBZ says) (: :)
        (S (`` ``)
          (NP (NNP Tom))
          (, ,)
          (NP (PRP it))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (NN use))))))
    (. .)))

nsubj(turned-2, I-1)
nsubj(says-10, I-1)
root(ROOT-0, turned-2)
dobj(turned-2, it-3)
prt(turned-2, over-4)
poss(mind-7, my-6)
prep_in(turned-2, mind-7)
conj_and(turned-2, says-10)
nsubj(use-19, Tom-13)
nsubj(use-19, it-15)
cop(use-19, ai-16)
neg(use-19, n't-17)
neg(use-19, no-18)
ccomp(says-10, use-19)
parataxis(says-10, use-19)

(ROOT
  (S
    (S
      (NP (NNS Principles))
      (VP (VBZ is) (RB all)
        (ADJP (RB very) (JJ well))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP do) (RB n't)
        (VP (VB git)
          (PP (IN around)
            (NP (DT that) (CD one) (JJ big) (NN fact)))
          (, ,)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN thing))
                (SBAR (IN that)
                  (S
                    (NP (DT a) (NN balloon))
                    (VP (MD can)
                      (VP (VB do))))))
              (VP (VBP ai) (RB n't)
                (NP
                  (NP (DT no) (NN sort))
                  (PP (IN of)
                    (NP
                      (NP (NN proof))
                      (PP (IN of)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (DT a) (NN horse))
                            (VP (MD can)
                              (VP (VB do)))))))))))))))
    (. .) ('' '')))

nsubj(well-5, Principles-1)
cop(well-5, is-2)
advmod(well-5, all-3)
advmod(well-5, very-4)
root(ROOT-0, well-5)
nsubj(git-11, they-8)
aux(git-11, do-9)
neg(git-11, n't-10)
conj_but(well-5, git-11)
det(fact-16, that-13)
num(fact-16, one-14)
amod(fact-16, big-15)
prep_around(git-11, fact-16)
mark(sort-29, that-18)
det(thing-20, the-19)
nsubj(sort-29, thing-20)
mark(do-25, that-21)
det(balloon-23, a-22)
nsubj(do-25, balloon-23)
aux(do-25, can-24)
dep(thing-20, do-25)
cop(sort-29, ai-26)
neg(sort-29, n't-27)
neg(sort-29, no-28)
ccomp(git-11, sort-29)
prep_of(sort-29, proof-31)
dobj(do-37, what-33)
det(horse-35, a-34)
nsubj(do-37, horse-35)
aux(do-37, can-36)
prepc_of(proof-31, do-37)

(ROOT
  (S
    (NP (`` ``) (NNP Shucks) (, ,) (NNP Huck))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (NP (DT the) (NN idea))
        (ADVP (IN at) (DT all))))
    (. .)))

nn(Huck-4, Shucks-2)
nsubj(get-9, Huck-4)
nsubj(get-9, you-6)
aux(get-9, do-7)
neg(get-9, n't-8)
root(ROOT-0, get-9)
det(idea-11, the-10)
dobj(get-9, idea-11)
advmod(get-9, at-12)
pobj(at-12, all-13)

(ROOT
  (S
    (INTJ (RB Now))
    (VP (VB look)
      (NP
        (NP
          (NP (RB here))
          (NP (DT a) (NN minute)))
        (: --)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (RB perfectly) (JJ plain))))))
    (. .)))

discourse(look-2, Now-1)
root(ROOT-0, look-2)
dobj(look-2, here-3)
det(minute-5, a-4)
dep(here-3, minute-5)
nsubj(plain-10, it-7)
cop(plain-10, 's-8)
advmod(plain-10, perfectly-9)
dep(here-3, plain-10)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP we))
    (VP (VBP fly)
      (PP (IN through)
        (NP (DT the) (NN air))))
    (. ?) ('' '')))

nsubj(fly-4, Do-1)
neg(fly-4, n't-2)
nsubj(fly-4, we-3)
root(ROOT-0, fly-4)
det(air-7, the-6)
prep_through(fly-4, air-7)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (ADVP (RB well)))
    (. .)))

root(ROOT-0, Very-2)
advmod(Very-2, well-3)

(ROOT
  (FRAG
    (S
      (VP (VBP Do) (RB n't)
        (VP
          (NP (PRP we))
          (S
            (VP
              (VP (VB fly)
                (ADJP (JJ high)))
              (CC or)
              (VP (VB fly)
                (ADJP (JJ low))
                (, ,)
                (SBAR (RB just) (IN as)
                  (S
                    (NP (PRP we))
                    (VP (VBP please))))))))))
    (. ?) ('' '')))

aux(we-3, Do-1)
neg(we-3, n't-2)
root(ROOT-0, we-3)
dep(we-3, fly-4)
acomp(fly-4, high-5)
dep(we-3, fly-7)
conj_or(fly-4, fly-7)
acomp(fly-7, low-8)
advmod(please-13, just-10)
mark(please-13, as-11)
nsubj(please-13, we-12)
advcl(fly-7, please-13)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR (RB n't)
        (S
          (NP (PRP we))
          (VP (VB steer)
            (SBAR
              (WHNP (WDT whichever) (NN way))
              (S
                (NP (PRP we))
                (VP (VBP want)
                  (PP (TO to)))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
dep(steer-5, n't-3)
nsubj(steer-5, we-4)
ccomp(Do-2, steer-5)
det(way-7, whichever-6)
prep_to(want-9, way-7)
nsubj(want-9, we-8)
ccomp(steer-5, want-9)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBP do) (RB n't)
      (NP
        (NP (VBP we) (NN land))
        (SBAR
          (WHADVP (WRB when)
            (CC and)
            (WRB where))
          (S
            (NP (PRP we))
            (VP (VBP please))))))
    (. ?) ('' '')))

cc(do-3, And-2)
root(ROOT-0, do-3)
neg(do-3, n't-4)
dep(land-6, we-5)
dobj(do-3, land-6)
tmod(please-11, land-6)
advmod(please-11, when-7)
cc(when-7, and-8)
dep(when-7, where-9)
nsubj(please-11, we-10)
rcmod(land-6, please-11)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP we))
      (VP
        (VP (VB move)
          (NP (DT the) (NN balloon)))
        (CC and)
        (VP (VB steer)
          (NP (PRP it)))))
    (. ?) ('' '')))

advmod(move-5, How-2)
aux(move-5, do-3)
nsubj(move-5, we-4)
nsubj(steer-9, we-4)
root(ROOT-0, move-5)
det(balloon-7, the-6)
dobj(move-5, balloon-7)
conj_and(move-5, steer-9)
dobj(steer-9, it-10)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (NP (NN touching)))
    (NP (DT the))
    (VP (VBZ buttons))
    (. .) ('' '')))

prep_by(buttons-5, touching-3)
nsubj(buttons-5, the-4)
root(ROOT-0, buttons-5)

(ROOT
  (S (`` ``)
    (ADVP (RB NOW))
    (NP (PRP I))
    (VP (VBP reckon)
      (SBAR
        (S
          (NP (DT the) (NN thing))
          (VP (VBZ is)
            (ADJP (JJ clear)
              (PP (TO to)
                (NP (PRP you))))
            (PP (IN at)
              (NP (JJ last)))))))
    (. .)))

advmod(reckon-4, NOW-2)
nsubj(reckon-4, I-3)
root(ROOT-0, reckon-4)
det(thing-6, the-5)
nsubj(clear-8, thing-6)
cop(clear-8, is-7)
ccomp(reckon-4, clear-8)
prep_to(clear-8, you-10)
prep_at(clear-8, last-12)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ other) (NN case)))
    (NP (DT the) (NN moving)
      (CC and)
      (NN steering))
    (VP (VBD was)
      (VP (VBN done)
        (PP (IN by)
          (S
            (VP (VBG turning)
              (NP (DT a) (NN peg)))))))
    (. .)))

det(case-4, the-2)
amod(case-4, other-3)
prep_in(done-10, case-4)
det(moving-6, the-5)
nsubjpass(done-10, moving-6)
conj_and(moving-6, steering-8)
nsubjpass(done-10, steering-8)
auxpass(done-10, was-9)
root(ROOT-0, done-10)
agent(done-10, turning-12)
det(peg-14, a-13)
dobj(turning-12, peg-14)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VB touch)
        (NP (DT a) (NN button))))
    (, ,)
    (NP (DT the) (NN prince))
    (VP (VBD turned)
      (NP (DT a) (NN peg)))
    (. .)))

nsubj(touch-2, We-1)
ccomp(turned-8, touch-2)
det(button-4, a-3)
dobj(touch-2, button-4)
det(prince-7, the-6)
nsubj(turned-8, prince-7)
root(ROOT-0, turned-8)
det(peg-10, a-9)
dobj(turned-8, peg-10)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT an) (NN atom))
          (PP (IN of)
            (NP (NN difference))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP see))
    (. .)))

expl(ai-2, There-1)
ccomp(see-10, ai-2)
neg(ai-2, n't-3)
det(atom-5, an-4)
nsubj(ai-2, atom-5)
prep_of(atom-5, difference-7)
nsubj(see-10, you-9)
root(ROOT-0, see-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knowed)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB git)
              (NP (PRP it))
              (PP (IN through)
                (NP (PRP$ your) (NN head)))
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBD stuck)
                    (PP (TO to)
                      (NP (PRP it)))
                    (ADVP (RB long) (RB enough))))))))))
    (. .) ('' '')))

nsubj(knowed-2, I-1)
root(ROOT-0, knowed-2)
nsubj(git-5, I-3)
aux(git-5, could-4)
ccomp(knowed-2, git-5)
dobj(git-5, it-6)
poss(head-9, your-8)
prep_through(git-5, head-9)
mark(stuck-12, if-10)
nsubj(stuck-12, I-11)
advcl(git-5, stuck-12)
prep_to(stuck-12, it-14)
advmod(enough-16, long-15)
advmod(stuck-12, enough-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD felt)
      (ADJP (RB so) (JJ happy))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP (VB whistle))))))))
    (. .)))

nsubj(felt-2, He-1)
root(ROOT-0, felt-2)
advmod(happy-4, so-3)
acomp(felt-2, happy-4)
nsubj(begun-6, he-5)
nsubj(whistle-8, he-5)
ccomp(felt-2, begun-6)
aux(whistle-8, to-7)
xcomp(begun-6, whistle-8)

(ROOT
  (S (CC But)
    (NP (PRP me)
      (CC and)
      (NNP Jim))
    (VP (VBD was)
      (ADJP (JJ silent))
      (, ,)
      (SBAR (IN so)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD broke)
              (PRT (RP off))
              (S
                (ADJP (VBN surprised))))
            (, ,)
            (CC and)
            (VP (VBZ says) (: :) (`` ``)
              (S
                (ADVP (RB Looky))
                (ADVP (RB here))
                (, ,)
                (NP (NNP Huck))
                (VP (VBD Finn) (, ,)
                  (SQ (VBP do) (RB n't)
                    (NP (PRP you))
                    (VP (VB see)
                      (NP (PRP it))
                      (ADVP (RB YET)))))))))))
    (. ?) ('' '')))

cc(silent-6, But-1)
nsubj(silent-6, me-2)
conj_and(me-2, Jim-4)
nsubj(silent-6, Jim-4)
cop(silent-6, was-5)
root(ROOT-0, silent-6)
mark(broke-10, so-8)
nsubj(broke-10, he-9)
nsubj(says-15, he-9)
advcl(silent-6, broke-10)
prt(broke-10, off-11)
dep(broke-10, surprised-12)
advcl(silent-6, says-15)
conj_and(broke-10, says-15)
advmod(Finn-22, Looky-18)
advmod(Finn-22, here-19)
nsubj(Finn-22, Huck-21)
ccomp(says-15, Finn-22)
aux(see-27, do-24)
neg(see-27, n't-25)
nsubj(see-27, you-26)
dep(Finn-22, see-27)
dobj(see-27, it-28)
advmod(see-27, YET-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ says) (: :)
      (S (`` ``)
        (NP (NNP Tom) (NNP Sawyer))
        (, ,)
        (NP (PRP I))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB ask)
                (S
                  (NP (PRP you))
                  (NP (DT some) (NNS questions)))))))))
    (. .) ('' '')))

nsubj(says-2, I-1)
root(ROOT-0, says-2)
nn(Sawyer-6, Tom-5)
nsubj(want-9, Sawyer-6)
nsubj(ask-11, Sawyer-6)
nsubj(want-9, I-8)
nsubj(ask-11, I-8)
ccomp(says-2, want-9)
parataxis(says-2, want-9)
aux(ask-11, to-10)
xcomp(want-9, ask-11)
nsubj(questions-14, you-12)
det(questions-14, some-13)
xcomp(ask-11, questions-14)

(ROOT
  (S
    (S
      (VP (`` ``) (VB Go)
        (ADVP (RB ahead))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBZ says)))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP see)
        (SBAR
          (S
            (NP (NNP Jim))
            (VP (VBP chirk)
              (PRT (RP up))
              (S
                (VP (TO to)
                  (VP (VB listen)))))))))
    (. .)))

root(ROOT-0, Go-2)
advmod(Go-2, ahead-3)
nsubj(says-7, he-6)
dep(Go-2, says-7)
nsubj(see-11, I-10)
conj_and(Go-2, see-11)
nsubj(chirk-13, Jim-12)
nsubj(listen-16, Jim-12)
ccomp(see-11, chirk-13)
prt(chirk-13, up-14)
aux(listen-16, to-15)
xcomp(chirk-13, listen-16)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN As)
        (S
          (NP (PRP I))
          (VP (VBP understand)
            (NP (PRP it)))))
      (, ,)
      (NP (DT the) (JJ whole) (NN thing))
      (VP (VBZ is)
        (PP (IN in)
          (NP
            (NP (DT the) (NNS buttons))
            (CC and)
            (NP (DT the) (NN peg))))))
    (: --)
    (S
      (NP (DT the) (NN rest))
      (VP (VBP ai) (RB n't)
        (PP (IN of)
          (NP (DT no) (NN consequence)))))
    (. .)))

mark(understand-4, As-2)
nsubj(understand-4, I-3)
advcl(is-10, understand-4)
dobj(understand-4, it-5)
det(thing-9, the-7)
amod(thing-9, whole-8)
nsubj(is-10, thing-9)
root(ROOT-0, is-10)
det(buttons-13, the-12)
prep_in(is-10, buttons-13)
det(peg-16, the-15)
prep_in(is-10, peg-16)
conj_and(buttons-13, peg-16)
det(rest-19, the-18)
nsubj(ai-20, rest-19)
parataxis(is-10, ai-20)
neg(ai-20, n't-21)
neg(consequence-24, no-23)
prep_of(ai-20, consequence-24)

(ROOT
  (S
    (NP (DT A) (NN button))
    (VP (VBZ is)
      (NP (CD one) (NN shape))
      (, ,)
      (SBAR
        (SBAR
          (S
            (NP (DT a) (NN peg))
            (VP (VBZ is)
              (NP (DT another) (NN shape)))))
        (, ,)
        (CC but)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP ai) (RB n't)
              (NP (DT any) (NN matter)))))))
    (. ?) ('' '')))

det(button-2, A-1)
nsubj(shape-5, button-2)
cop(shape-5, is-3)
num(shape-5, one-4)
root(ROOT-0, shape-5)
det(peg-8, a-7)
nsubj(shape-11, peg-8)
cop(shape-11, is-9)
det(shape-11, another-10)
dep(shape-5, shape-11)
nsubj(matter-18, that-14)
cop(matter-18, ai-15)
neg(matter-18, n't-16)
det(matter-18, any-17)
dep(shape-5, matter-18)
conj_but(shape-11, matter-18)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (DT that))
    (VP (VBP ai) (RB n't)
      (NP (DT any) (NN matter))
      (, ,)
      (SBAR
        (ADVP (RB as) (RB long))
        (IN as)
        (S
          (NP (PRP they))
          (VP (VBP 've)
            (ADVP (DT both))
            (VP (VBN got)
              (NP (DT the) (JJ same) (NN power)))))))
    (. .) ('' '')))

discourse(matter-8, No-2)
nsubj(matter-8, that-4)
cop(matter-8, ai-5)
neg(matter-8, n't-6)
det(matter-8, any-7)
root(ROOT-0, matter-8)
advmod(long-11, as-10)
advmod(got-16, long-11)
mark(got-16, as-12)
nsubj(got-16, they-13)
aux(got-16, 've-14)
advmod(got-16, both-15)
advcl(matter-8, got-16)
det(power-19, the-17)
amod(power-19, same-18)
dobj(got-16, power-19)

(ROOT
  (FRAG (`` ``)
    (NP (DT All) (NN right))
    (, ,)
    (NP (RB then))
    (. .)))

det(right-3, All-2)
root(ROOT-0, right-3)
dep(right-3, then-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN power))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (PP
                (PP (IN in)
                  (NP (DT a) (NN candle)))
                (CC and)
                (PP (IN in)
                  (NP (DT a) (NN match)))))))))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(power-4, the-3)
nsubj(What-1, power-4)
nsubj('s-6, power-4)
rcmod(power-4, 's-6)
det(candle-9, a-8)
prep_in('s-6, candle-9)
det(match-13, a-12)
prep_in('s-6, match-13)
conj_and(candle-9, match-13)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT the) (NN fire)))
    (. .) ('' '')))

nsubj(fire-5, It-2)
cop(fire-5, 's-3)
det(fire-5, the-4)
root(ROOT-0, fire-5)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ same))
        (PP (IN in)
          (NP (DT both))))
      (, ,)
      (ADVP (RB then)))
    (. ?) ('' '')))

nsubj(same-5, It-2)
cop(same-5, 's-3)
det(same-5, the-4)
root(ROOT-0, same-5)
prep_in(same-5, both-7)
advmod(same-5, then-9)

(ROOT
  (S (`` ``)
    (VP (VB Yes) (, ,)
      (PP (RB just)
        (NP (DT the) (JJ same)))
      (PP (IN in)
        (NP (DT both))))
    (. .) ('' '')))

root(ROOT-0, Yes-2)
prep(Yes-2, just-4)
det(same-6, the-5)
pobj(just-4, same-6)
prep_in(Yes-2, both-8)

(ROOT
  (NP (`` ``) (DT All) (NN right) (. .)))

det(right-3, All-2)
root(ROOT-0, right-3)

(ROOT
  (SQ (MD Suppose)
    (NP (PRP I))
    (VP (VBD set)
      (NP (NN fire))
      (PP (TO to)
        (NP (DT a) (NN carpenter) (NN shop)))
      (PP (IN with)
        (NP
          (NP (DT a) (NN match))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD will)
                (VP (VB happen)
                  (PP (TO to)
                    (NP (DT that) (NN carpenter) (NN shop))))))))))
    (. ?) ('' '')))

aux(set-3, Suppose-1)
nsubj(set-3, I-2)
root(ROOT-0, set-3)
dobj(set-3, fire-4)
det(shop-8, a-6)
nn(shop-8, carpenter-7)
prep_to(set-3, shop-8)
det(match-11, a-10)
prep_with(set-3, match-11)
nsubj(happen-15, match-11)
aux(happen-15, will-14)
rcmod(match-11, happen-15)
det(shop-19, that-17)
nn(shop-19, carpenter-18)
prep_to(happen-15, shop-19)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (MD 'll)
      (VP (VB burn)
        (PRT (RP up))))
    (. .) ('' '')))

nsubj(burn-4, She-2)
aux(burn-4, 'll-3)
root(ROOT-0, burn-4)
prt(burn-4, up-5)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD set)
            (NP (NN fire))
            (PP (TO to)
              (NP (DT this) (NN pyramid)))
            (PP (IN with)
              (NP
                (NP (DT a) (NN candle))
                (: --)
                (SQ (MD will)
                  (NP (PRP she))
                  (VP (VB burn)
                    (PRT (RP up))))))))))
    (. ?) ('' '')))

cc(suppose-3, And-2)
root(ROOT-0, suppose-3)
nsubj(set-5, I-4)
ccomp(suppose-3, set-5)
dobj(set-5, fire-6)
det(pyramid-9, this-8)
prep_to(set-5, pyramid-9)
det(candle-12, a-11)
prep_with(set-5, candle-12)
aux(burn-16, will-14)
nsubj(burn-16, she-15)
dep(candle-12, burn-16)
prt(burn-16, up-17)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP she))
    (VP (MD wo) (RB n't))
    (. .) ('' '')))

prep_of(wo-5, course-3)
nsubj(wo-5, she-4)
root(ROOT-0, wo-5)
neg(wo-5, n't-6)

(ROOT
  (NP (`` ``) (DT All) (NN right) (. .)))

det(right-3, All-2)
root(ROOT-0, right-3)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT the) (NN fire))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ same))
        (, ,)
        (CC both)
        (NP (NNS times))))
    (. .)))

advmod(same-6, Now-1)
det(fire-3, the-2)
nsubj(same-6, fire-3)
cop(same-6, 's-4)
det(same-6, the-5)
root(ROOT-0, same-6)
dep(same-6, both-8)
conj(same-6, times-9)

(ROOT
  (SBARQ
    (WHADVP (WRB WHY))
    (SQ (VBZ does)
      (NP (DT the) (NN shop))
      (VP (VB burn) (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN pyramid))
          (SBAR
            (S
              (VP (VBP do) (RB n't)))))))
    (. ?) ('' '')))

advmod(burn-5, WHY-1)
aux(burn-5, does-2)
det(shop-4, the-3)
nsubj(burn-5, shop-4)
root(ROOT-0, burn-5)
det(pyramid-9, the-8)
conj_and(burn-5, pyramid-9)
dobj(burn-5, pyramid-9)
rcmod(pyramid-9, do-10)
neg(do-10, n't-11)

(ROOT
  (S (`` ``)
    (PP (IN Because)
      (NP (DT the) (NN pyramid)))
    (NP (NNP CA) (NNP N'T))
    (VP (VBP burn))
    (. .) ('' '')))

det(pyramid-4, the-3)
prep_because(burn-7, pyramid-4)
nn(N'T-6, CA-5)
nsubj(burn-7, N'T-6)
root(ROOT-0, burn-7)

(ROOT
  (S (`` ``)
    (VP (VB Aha))
    (. !)))

root(ROOT-0, Aha-2)

(ROOT
  (S (CC and)
    (NP (DT A) (NNP HORSE) (NNP CA) (NNP N'T))
    (VP (VBP FLY))
    (. !) ('' '')))

cc(FLY-6, and-1)
det(N'T-5, A-2)
nn(N'T-5, HORSE-3)
nn(N'T-5, CA-4)
nsubj(FLY-6, N'T-5)
root(ROOT-0, FLY-6)

(ROOT
  (S
    (NP (`` ``)
      (NP (PRP$ My) (NN lan))
      ('' ')
      (PRN (, ,)
        (S
          (NP (NNP ef) (NNP Huck))
          (VP (VBP ai) (RB n't)))))
    (VP (VBD got)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBZ ag) (`` `)
            (PP (IN in))))))
    (. !)))

poss(lan-3, My-2)
nsubj(got-10, lan-3)
nn(Huck-7, ef-6)
nsubj(ai-8, Huck-7)
dep(lan-3, ai-8)
neg(ai-8, n't-9)
root(ROOT-0, got-10)
nsubj(ag-12, him-11)
ccomp(got-10, ag-12)
prep(ag-12, in-14)

(ROOT
  (S
    (S
      (NP (NNP Huck) (POS 's))
      (VP (VBD landed)
        (S
          (NP (PRP him))
          (ADJP (JJ high)
            (PP (IN en)
              (NP (JJ dry) (NN dis) (NN time)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you)))
    (. !)))

nsubj(landed-3, Huck-1)
possessive(Huck-1, 's-2)
ccomp(tell-12, landed-3)
nsubj(high-5, him-4)
xcomp(landed-3, high-5)
amod(time-9, dry-7)
nn(time-9, dis-8)
prep_en(high-5, time-9)
nsubj(tell-12, I-11)
root(ROOT-0, tell-12)
dobj(tell-12, you-13)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Hit) (POS 's))
          (NNP de) (NNS smartes) ('' ') (NN trap)))
      (NP (PRP I))
      (ADVP (RB ever))
      (VP (VBP see)
        (SBAR
          (S
            (NP (DT a) (NN body))
            (VP (VBP walk)
              (NP (NN inter))
              (: --)
              (S
                (NP (FW en))
                (VP (VB ef)
                  (NP (PRP I)))))))))
    (: --) ('' '')
    (S (CC But)
      (S
        (S
          (NP (NNP Jim))
          (VP (VBD was)
            (ADJP (RB so) (JJ full)
              (PP (IN of)
                (S
                  (VP (NN laugh)
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP
                          (VP (VBD got)
                            (S
                              (VP (TO to)
                                (VP (VB strangling)))))
                          (CC and)
                          (VP (MD could) (RB n't)
                            (VP (VB go)
                              (PRT (RP on)))))))))))))
        (, ,)
        (CC and)
        (S
          (NP (NNP Tom))
          (VP
            (VP (VBD was)
              (ADJP (RB that) (JJ mad)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (SBAR
                        (WHADVP (WRB how)
                          (ADJP (JJ neat)))
                        (S
                          (NP (PRP I))
                          (VP (VBD had)
                            (VP (VBN floored)
                              (NP (PRP him)))))))))))
            (, ,)
            (CC and)
            (VP (VBD turned)
              (NP
                (NP (PRP$ his) (JJ own) (NN argument) (NN ag))
                (`` `)
                (PP (IN in)
                  (NP (PRP him))))))))
      (CC and)
      (S
        (VP (VBN knocked)
          (NP (PRP him))
          (PP
            (ADVP (DT all))
            (TO to)
            (NP (NNS rags)
              (CC and)
              (NNS flinders)))
          (PP (IN with)
            (NP (PRP it)))
          (, ,)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD could)
                      (VP (VB manage)
                        (S
                          (VP (TO to)
                            (VP (VB say)))))))))
              (VP (VBD was)
                (SBAR (IN that)
                  (S
                    (SBAR
                      (WHADVP (WRB whenever))
                      (S
                        (NP (PRP he))
                        (VP (VBD heard)
                          (SBAR
                            (S
                              (NP (PRP me)
                                (CC and)
                                (NNP Jim))
                              (VP (VBP try)
                                (S
                                  (VP (TO to)
                                    (VP (VB argue))))))))))
                    (NP (PRP it))
                    (VP (VBD made)
                      (S
                        (NP (PRP him))
                        (ADJP (JJ ashamed)
                          (PP (IN of)
                            (NP (DT the) (JJ human) (NN race))))))))))))))
    (. .)))

poss(trap-6, Hit-1)
nn(trap-6, de-3)
nn(trap-6, smartes-4)
dep(see-9, trap-6)
nsubj(see-9, I-7)
advmod(see-9, ever-8)
root(ROOT-0, see-9)
det(body-11, a-10)
nsubj(walk-12, body-11)
ccomp(see-9, walk-12)
dobj(walk-12, inter-13)
nsubj(ef-16, en-15)
parataxis(walk-12, ef-16)
dobj(ef-16, I-17)
nsubj(full-24, Jim-21)
nsubj(knocked-61, Jim-21)
cop(full-24, was-22)
advmod(full-24, so-23)
parataxis(see-9, full-24)
prepc_of(full-24, laugh-26)
nsubj(got-28, he-27)
nsubj(strangling-30, he-27)
nsubj(go-34, he-27)
ccomp(laugh-26, got-28)
aux(strangling-30, to-29)
xcomp(got-28, strangling-30)
aux(go-34, could-32)
neg(go-34, n't-33)
ccomp(laugh-26, go-34)
conj_and(got-28, go-34)
prt(go-34, on-35)
nsubj(mad-41, Tom-38)
nsubj(see-43, Tom-38)
nsubj(turned-52, Tom-38)
cop(mad-41, was-39)
advmod(mad-41, that-40)
parataxis(see-9, mad-41)
conj_and(full-24, mad-41)
aux(see-43, to-42)
xcomp(mad-41, see-43)
advmod(floored-48, how-44)
dep(how-44, neat-45)
nsubj(floored-48, I-46)
aux(floored-48, had-47)
ccomp(see-43, floored-48)
dobj(floored-48, him-49)
conj_and(full-24, turned-52)
conj_and(mad-41, turned-52)
poss(ag-56, his-53)
amod(ag-56, own-54)
nn(ag-56, argument-55)
dobj(turned-52, ag-56)
prep_in(ag-56, him-59)
parataxis(see-9, knocked-61)
conj_and(full-24, knocked-61)
dobj(knocked-61, him-62)
advmod(knocked-61, all-63)
prep_to(knocked-61, rags-65)
prep_to(knocked-61, flinders-67)
conj_and(rags-65, flinders-67)
prep_with(knocked-61, it-69)
mark(was-78, that-71)
nsubj(was-78, all-72)
nsubj(manage-75, he-73)
nsubj(say-77, he-73)
aux(manage-75, could-74)
rcmod(all-72, manage-75)
aux(say-77, to-76)
xcomp(manage-75, say-77)
ccomp(knocked-61, was-78)
mark(made-90, that-79)
advmod(heard-82, whenever-80)
nsubj(heard-82, he-81)
advcl(made-90, heard-82)
nsubj(try-86, me-83)
nsubj(argue-88, me-83)
conj_and(me-83, Jim-85)
nsubj(try-86, Jim-85)
nsubj(argue-88, Jim-85)
ccomp(heard-82, try-86)
aux(argue-88, to-87)
xcomp(try-86, argue-88)
nsubj(made-90, it-89)
ccomp(was-78, made-90)
nsubj(ashamed-92, him-91)
xcomp(made-90, ashamed-92)
det(race-96, the-94)
amod(race-96, human-95)
prep_of(ashamed-92, race-96)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD said)
        (NP (NN nothing))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG feeling)
          (ADJP (RB pretty) (RB well) (JJ satisfied)))))
    (. .)))

nsubj(said-3, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
dobj(said-3, nothing-4)
nsubj(feeling-8, I-6)
aux(feeling-8, was-7)
parataxis(said-3, feeling-8)
advmod(satisfied-11, pretty-9)
advmod(satisfied-11, well-10)
acomp(feeling-8, satisfied-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN got)
            (NP
              (NP (DT the) (JJS best))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN person))
                  (NP (DT that) (NN way)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBP ai) (RB n't)
      (NP (PRP$ my) (NN way)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN around)
                (S
                  (VP (VBG crowing)
                    (PP (IN about)
                      (NP (PRP it)))
                    (NP
                      (NP (DT the) (NN way))
                      (SBAR
                        (S
                          (NP (DT some) (NNS people))
                          (VP (VBZ does))))))))))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP I))
          (VP (VBP consider)
            (SBAR (IN that)
              (S
                (SBAR (IN if)
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (PP (IN in)
                        (NP (PRP$ his) (NN place))))))
                (NP (PRP I))
                (VP (MD would) (RB n't)
                  (VP (VB wish)
                    (S
                      (NP (PRP him))
                      (VP (TO to)
                        (VP (VB crow)
                          (PRT (RP over))
                          (NP (PRP me)))))))))))))
    (. .)))

advmod(got-4, When-1)
nsubj(got-4, I-2)
aux(got-4, have-3)
advcl(way-17, got-4)
det(best-6, the-5)
dobj(got-4, best-6)
det(person-9, a-8)
prep_of(best-6, person-9)
det(way-11, that-10)
dep(person-9, way-11)
nsubj(way-17, it-13)
cop(way-17, ai-14)
neg(way-17, n't-15)
poss(way-17, my-16)
root(ROOT-0, way-17)
aux(go-19, to-18)
vmod(way-17, go-19)
prepc_around(go-19, crowing-21)
prep_about(crowing-21, it-23)
det(way-25, the-24)
dobj(crowing-21, way-25)
det(people-27, some-26)
nsubj(does-28, people-27)
rcmod(way-25, does-28)
mark(consider-32, for-30)
nsubj(consider-32, I-31)
advcl(way-17, consider-32)
mark(wish-43, that-33)
mark(was-36, if-34)
nsubj(was-36, I-35)
advcl(wish-43, was-36)
poss(place-39, his-38)
prep_in(was-36, place-39)
nsubj(wish-43, I-40)
aux(wish-43, would-41)
neg(wish-43, n't-42)
ccomp(consider-32, wish-43)
dobj(wish-43, him-44)
nsubj(crow-46, him-44)
aux(crow-46, to-45)
xcomp(wish-43, crow-46)
prt(crow-46, over-47)
dobj(crow-46, me-48)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJR better))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ generous)))))
      (, ,)
      (SBAR (IN that)
        (S
          (VP (VBZ 's)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBP think))))))))
    (. .)))

nsubj(better-3, It-1)
nsubj(generous-6, It-1)
cop(better-3, 's-2)
root(ROOT-0, better-3)
aux(generous-6, to-4)
cop(generous-6, be-5)
xcomp(better-3, generous-6)
mark('s-9, that-8)
ccomp(better-3, 's-9)
dobj(think-12, what-10)
nsubj(think-12, I-11)
ccomp('s-9, think-12)

(ROOT
  (NP (NNP CHAPTER) (NNP XIII) (. .)))

nn(XIII-2, CHAPTER-1)
root(ROOT-0, XIII-2)

(ROOT
  (S
    (S
      (VP (VBG GOING)
        (PP (IN FOR)
          (NP
            (NP
              (NP (NNP TOM) (POS 'S))
              (NN PIPE))
            (: :)
            (NP (NNP BY)
              (CC AND)
              (NNP BY))))))
    (S
      (NP (PRP we))
      (VP (VBD left)
        (S
          (NP (NNP Jim))
          (VP (TO to)
            (VP (VB float)
              (PRT (RP around))
              (ADVP (RB up) (RB there))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN neighborhood))
                  (PP (IN of)
                    (NP (DT the) (NNS pyramids))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD clumb)
        (PRT (RP down))
        (PP (TO to)
          (NP (DT the) (NN hole)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP you))
            (VP
              (VP (VBP go)
                (PP (IN into)
                  (NP (DT the) (NN tunnel))))
              (, ,)
              (CC and)
              (VP (VBD went)
                (PRT (RP in))
                (PP (IN with)
                  (NP (DT some) (NNS Arabs)
                    (CC and)
                    (NNS candles)))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB away)
        (PP (IN in)
          (NP
            (NP (RB there))
            (PP (IN in)
              (NP
                (NP (DT the) (NN middle))
                (PP (IN of)
                  (NP (DT the) (NN pyramid))))))))
      (NP (PRP we))
      (VP (VBD found)
        (NP
          (NP (DT a) (NN room))
          (CC and)
          (NP (DT a) (JJ big) (NN stone) (NN box)))
        (PP (IN in)
          (NP (PRP it)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (VBD used)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (NP (DT that) (NN king))))))))
        (, ,)
        (SBAR (RB just) (IN as)
          (S
            (NP
              (NP (DT the) (NN man))
              (PP (IN in)
                (NP (DT the) (NN Sunday-school))))
            (VP (VBD said))))))
    (: ;)
    (S (CC but)
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN gone) (, ,)
          (ADVP (RB now)))))
    (: ;)
    (S
      (NP (NN somebody))
      (VP (VBD had)
        (VP (VBN got)
          (NP (PRP him)))))
    (. .)))

root(ROOT-0, GOING-1)
poss(PIPE-5, TOM-3)
prep_for(GOING-1, PIPE-5)
dep(PIPE-5, BY-7)
dep(PIPE-5, BY-9)
conj_and(BY-7, BY-9)
nsubj(left-11, we-10)
ccomp(GOING-1, left-11)
dobj(left-11, Jim-12)
nsubj(float-14, Jim-12)
aux(float-14, to-13)
xcomp(left-11, float-14)
prt(float-14, around-15)
advmod(there-17, up-16)
advmod(float-14, there-17)
det(neighborhood-20, the-19)
prep_in(float-14, neighborhood-20)
det(pyramids-23, the-22)
prep_of(neighborhood-20, pyramids-23)
nsubj(clumb-27, we-26)
conj_and(GOING-1, clumb-27)
prt(clumb-27, down-28)
det(hole-31, the-30)
prep_to(clumb-27, hole-31)
advmod(go-34, where-32)
nsubj(go-34, you-33)
nsubj(went-40, you-33)
advcl(clumb-27, go-34)
det(tunnel-37, the-36)
prep_into(go-34, tunnel-37)
advcl(clumb-27, went-40)
conj_and(go-34, went-40)
prt(went-40, in-41)
det(Arabs-44, some-43)
prep_with(went-40, Arabs-44)
prep_with(went-40, candles-46)
conj_and(Arabs-44, candles-46)
advmod(found-59, away-49)
prep(away-49, in-50)
pobj(in-50, there-51)
det(middle-54, the-53)
prep_in(there-51, middle-54)
det(pyramid-57, the-56)
prep_of(middle-54, pyramid-57)
nsubj(found-59, we-58)
conj_and(GOING-1, found-59)
det(room-61, a-60)
dobj(found-59, room-61)
det(box-66, a-63)
amod(box-66, big-64)
nn(box-66, stone-65)
dobj(found-59, box-66)
conj_and(room-61, box-66)
prep_in(found-59, it-68)
advmod(used-71, where-69)
nsubj(used-71, they-70)
nsubj(keep-73, they-70)
advcl(found-59, used-71)
aux(keep-73, to-72)
xcomp(used-71, keep-73)
det(king-75, that-74)
dobj(keep-73, king-75)
advmod(said-84, just-77)
mark(said-84, as-78)
det(man-80, the-79)
nsubj(said-84, man-80)
det(Sunday-school-83, the-82)
prep_in(man-80, Sunday-school-83)
advcl(found-59, said-84)
cc(gone-89, but-86)
nsubjpass(gone-89, he-87)
auxpass(gone-89, was-88)
conj_and(GOING-1, gone-89)
parataxis(GOING-1, gone-89)
advmod(gone-89, now-91)
nsubj(got-95, somebody-93)
aux(got-95, had-94)
conj_and(GOING-1, got-95)
parataxis(GOING-1, got-95)
dobj(got-95, him-96)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB take)
          (NP
            (NP (DT no) (NN interest))
            (PP (IN in)
              (NP
                (NP (DT the) (NN place))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (EX there))
                    (VP (MD could)
                      (VP (VB be)
                        (NP (NNS ghosts))
                        (ADVP (RB there))))))
                (, ,)))
            (PP (IN of)
              (NP (NN course)))
            (: ;)
            (NP (RB not) (JJ fresh) (NNS ones))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (DT no) (NN kind)))))
    (. .)))

nsubj(take-5, I-2)
aux(take-5, did-3)
neg(take-5, n't-4)
root(ROOT-0, take-5)
neg(interest-7, no-6)
dobj(take-5, interest-7)
det(place-10, the-9)
prep_in(interest-7, place-10)
mark(ghosts-16, because-12)
expl(ghosts-16, there-13)
aux(ghosts-16, could-14)
cop(ghosts-16, be-15)
dep(place-10, ghosts-16)
advmod(ghosts-16, there-17)
prep_of(interest-7, course-20)
neg(ones-24, not-22)
amod(ones-24, fresh-23)
dep(interest-7, ones-24)
nsubj(like-30, I-27)
aux(like-30, do-28)
neg(like-30, n't-29)
conj_but(take-5, like-30)
neg(kind-32, no-31)
dobj(like-30, kind-32)

(ROOT
  (S
    (S (CC So)
      (ADVP (RB then))
      (NP (PRP we))
      (VP
        (VP (VBP come)
          (PRT (RP out)))
        (CC and)
        (VP
          (VP (VBD got)
            (NP (DT some) (JJ little) (NNS donkeys)))
          (CC and)
          (VP (VBD rode)
            (NP (DT a) (NN piece)))
          (, ,)
          (CC and)
          (VP
            (ADVP (RB then))
            (VBD went)
            (PP (IN in)
              (NP
                (NP (DT a) (NN boat))
                (NP (DT another) (NN piece)))))
          (, ,)
          (CC and)
          (ADVP (RB then) (RBR more))
          (VP (VBZ donkeys)))
        (, ,)
        (CC and)
        (VP (VBD got)
          (PP (TO to)
            (NP (NNP Cairo))))))
    (: ;)
    (CC and)
    (S
      (S
        (NP
          (NP (PDT all) (DT the) (NN way))
          (NP (DT the) (NN road)))
        (VP (VBD was)
          (ADJP (RB as) (JJ smooth)
            (CC and)
            (JJ beautiful)
            (SBAR
              (NP (DT a) (NN road))
              (IN as)
              (S
                (S
                  (ADVP (RB ever))
                  (NP (PRP I))
                  (VP
                    (VP (VBP see))
                    (, ,)
                    (CC and)
                    (VP (VBD had)
                      (NP (JJ tall) (JJ date-pa) (`` `) (NN ms))
                      (PP (IN on)
                        (NP (DT both) (NNS sides))))))
                (, ,)
                (CC and)
                (S
                  (NP (JJ naked) (NNS children))
                  (VP
                    (ADVP (RB everywhere)))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NNS men))
        (VP (VBD was)
          (ADJP
            (ADJP (RB as) (JJ red)
              (PP (IN as)
                (NP (NN copper))))
            (, ,)
            (CC and)
            (ADJP (JJ fine)
              (CC and)
              (JJ strong)
              (CC and)
              (JJ handsome))))))
    (. .)))

advmod(come-4, then-2)
nsubj(come-4, we-3)
nsubj(got-7, we-3)
nsubj(got-31, we-3)
root(ROOT-0, come-4)
prt(come-4, out-5)
conj_and(come-4, got-7)
det(donkeys-10, some-8)
amod(donkeys-10, little-9)
dobj(got-7, donkeys-10)
conj_and(come-4, rode-12)
conj_and(got-7, rode-12)
det(piece-14, a-13)
dobj(rode-12, piece-14)
advmod(went-18, then-17)
conj_and(come-4, went-18)
conj_and(got-7, went-18)
det(boat-21, a-20)
prep_in(went-18, boat-21)
det(piece-23, another-22)
dep(boat-21, piece-23)
advmod(more-27, then-26)
conj_and(come-4, more-27)
advmod(got-7, more-27)
conj_and(got-7, more-27)
conj_and(come-4, donkeys-28)
conj_and(got-7, donkeys-28)
conj_and(come-4, got-31)
prep_to(got-31, Cairo-33)
predet(way-38, all-36)
det(way-38, the-37)
nsubj(smooth-43, way-38)
nsubj(beautiful-45, way-38)
det(road-40, the-39)
dep(way-38, road-40)
cop(smooth-43, was-41)
advmod(smooth-43, as-42)
conj_and(come-4, smooth-43)
conj_and(come-4, beautiful-45)
conj_and(smooth-43, beautiful-45)
det(road-47, a-46)
dep(see-51, road-47)
mark(see-51, as-48)
advmod(see-51, ever-49)
nsubj(see-51, I-50)
nsubj(had-54, I-50)
dep(smooth-43, see-51)
dep(smooth-43, had-54)
conj_and(see-51, had-54)
amod(ms-58, tall-55)
amod(ms-58, date-pa-56)
dobj(had-54, ms-58)
det(sides-61, both-60)
prep_on(had-54, sides-61)
amod(children-65, naked-64)
nsubj(everywhere-66, children-65)
dep(smooth-43, everywhere-66)
conj_and(see-51, everywhere-66)
det(men-70, the-69)
nsubj(red-73, men-70)
nsubj(strong-80, men-70)
cop(red-73, was-71)
advmod(red-73, as-72)
conj_and(come-4, red-73)
conj_and(smooth-43, red-73)
prep_as(red-73, copper-75)
dep(strong-80, fine-78)
conj_and(smooth-43, strong-80)
conj_and(red-73, strong-80)
conj_and(red-73, handsome-82)
conj_and(strong-80, handsome-82)

(ROOT
  (S (CC And)
    (NP (DT the) (NN city))
    (VP (VBD was)
      (NP (DT a) (NN curiosity)))
    (. .)))

cc(curiosity-6, And-1)
det(city-3, the-2)
nsubj(curiosity-6, city-3)
cop(curiosity-6, was-4)
det(curiosity-6, a-5)
root(ROOT-0, curiosity-6)

(ROOT
  (NP
    (NP
      (NP (JJ Such) (JJ narrow) (NNS streets))
      (PRN (: --)
        (SBAR
          (WHADVP (WRB why))
          (, ,)
          (S
            (S
              (S
                (NP (PRP they))
                (VP (VBD were)
                  (ADJP
                    (ADJP (RB just) (VBN lanes))
                    (, ,)
                    (CC and)
                    (ADJP (VBN crowded)
                      (PP (IN with)
                        (NP
                          (NP
                            (NP (NNS people))
                            (PP (IN with)
                              (NP
                                (NP (NNS turbans))
                                (, ,)
                                (CC and)
                                (NP
                                  (NP (NNS women))
                                  (PP (IN with)
                                    (NP (NNS veils))))
                                (, ,))))
                          (CC and)
                          (NP
                            (NP (NN everybody))
                            (VP (VBN rigged)
                              (PRT (RP out))
                              (PP (IN in)
                                (S
                                  (VP (VBG blazing)
                                    (NP
                                      (NP (JJ bright) (NNS clothes))
                                      (CC and)
                                      (NP
                                        (NP (DT all) (NNS sorts))
                                        (PP (IN of)
                                          (NP (NNS colors))))))))))))))))
              (, ,)
              (CC and)
              (S
                (NP (PRP you))
                (VP (VBD wondered)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP
                        (NP (DT the) (NNS camels))
                        (CC and)
                        (NP (DT the) (NNS people)))
                      (VP (VBD got)
                        (PP (IN by)
                          (NP (DT each) (JJ other)))
                        (PP (IN in)
                          (NP (JJ such) (JJ narrow) (JJ little) (NNS cracks)))))))))
            (, ,)
            (CC but)
            (S
              (NP (PRP they))
              (VP (VBN done)
                (NP (PRP it))))))
        (: --)))
    (NP
      (NP
        (NP (DT a) (JJ perfect) (NN jam))
        (PRN (, ,)
          (S
            (NP (PRP you))
            (VP (VBP see)))
          (, ,)))
      (CC and)
      (NP (NN everybody) (NN noisy)))
    (. .)))

amod(streets-3, Such-1)
amod(streets-3, narrow-2)
root(ROOT-0, streets-3)
advmod(lanes-10, why-5)
nsubjpass(lanes-10, they-7)
nsubjpass(crowded-13, they-7)
auxpass(lanes-10, were-8)
cop(lanes-10, were-8)
advmod(lanes-10, just-9)
dep(streets-3, lanes-10)
dep(streets-3, crowded-13)
conj_and(lanes-10, crowded-13)
prep_with(crowded-13, people-15)
prep_with(people-15, turbans-17)
prep_with(people-15, women-20)
conj_and(turbans-17, women-20)
prep_with(women-20, veils-22)
prep_with(crowded-13, everybody-25)
conj_and(people-15, everybody-25)
vmod(everybody-25, rigged-26)
prt(rigged-26, out-27)
prepc_in(rigged-26, blazing-29)
amod(clothes-31, bright-30)
dobj(blazing-29, clothes-31)
det(sorts-34, all-33)
dobj(blazing-29, sorts-34)
conj_and(clothes-31, sorts-34)
prep_of(sorts-34, colors-36)
nsubj(wondered-40, you-39)
dep(streets-3, wondered-40)
conj_and(lanes-10, wondered-40)
advmod(got-47, how-41)
det(camels-43, the-42)
nsubj(got-47, camels-43)
det(people-46, the-45)
conj_and(camels-43, people-46)
nsubj(got-47, people-46)
ccomp(wondered-40, got-47)
det(other-50, each-49)
prep_by(got-47, other-50)
amod(cracks-55, such-52)
amod(cracks-55, narrow-53)
amod(cracks-55, little-54)
prep_in(got-47, cracks-55)
nsubj(done-59, they-58)
dep(streets-3, done-59)
conj_but(lanes-10, done-59)
dobj(done-59, it-60)
det(jam-64, a-62)
amod(jam-64, perfect-63)
dep(streets-3, jam-64)
nsubj(see-67, you-66)
dep(jam-64, see-67)
nn(noisy-71, everybody-70)
dep(streets-3, noisy-71)
conj_and(jam-64, noisy-71)

(ROOT
  (S
    (S
      (NP (DT The) (NNS stores))
      (VP (VBP war) (RB n't)
        (ADJP (JJ big) (RB enough)
          (S
            (VP (TO to)
              (VP (VB turn)
                (PRT (RP around))
                (PP (IN in))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBD did) (RB n't)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB go)
                (PRT (RP in))))))))
    (: ;)
    (S
      (NP (DT the) (NN storekeeper))
      (VP
        (VP (VBD sat)
          (NP (NN tailor) (NN fashion))
          (PP (IN on)
            (NP (PRP$ his) (NN counter)))
          (, ,)
          (VP (VBG smoking)
            (NP (PRP$ his) (JJ snaky) (JJ long) (NN pipe))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (PRP$ his) (NNS things))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB reach)
                    (S
                      (NP (PRP them))
                      (VP (TO to)
                        (VP (VB sell))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADVP (RB just))
        (ADJP (RB as) (JJ good)
          (PP (IN as)
            (PP (IN in)
              (NP (DT the) (NN street)))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NNS camel-loads))
            (VP (VBD brushed)
              (NP (PRP him))
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBD went)
                    (PP (IN by))))))))))
    (. .)))

det(stores-2, The-1)
nsubj(war-3, stores-2)
root(ROOT-0, war-3)
neg(war-3, n't-4)
acomp(war-3, big-5)
advmod(big-5, enough-6)
aux(turn-8, to-7)
xcomp(big-5, turn-8)
prt(turn-8, around-9)
prep(turn-8, in-10)
nsubj(have-16, you-13)
nsubj(go-18, you-13)
aux(have-16, did-14)
neg(have-16, n't-15)
conj_but(war-3, have-16)
aux(go-18, to-17)
xcomp(have-16, go-18)
prt(go-18, in-19)
det(storekeeper-22, the-21)
nsubj(sat-23, storekeeper-22)
nsubj(had-37, storekeeper-22)
conj_but(war-3, sat-23)
nn(fashion-25, tailor-24)
dobj(sat-23, fashion-25)
poss(counter-28, his-27)
prep_on(sat-23, counter-28)
dep(sat-23, smoking-30)
poss(pipe-34, his-31)
amod(pipe-34, snaky-32)
amod(pipe-34, long-33)
dobj(smoking-30, pipe-34)
conj_but(war-3, had-37)
conj_and(sat-23, had-37)
poss(things-39, his-38)
dobj(had-37, things-39)
advmod(reach-43, where-40)
nsubj(reach-43, he-41)
aux(reach-43, could-42)
rcmod(things-39, reach-43)
dobj(reach-43, them-44)
nsubj(sell-46, them-44)
aux(sell-46, to-45)
xcomp(reach-43, sell-46)
nsubj(good-53, he-49)
cop(good-53, was-50)
advmod(good-53, just-51)
advmod(good-53, as-52)
conj_and(war-3, good-53)
prep(good-53, as-54)
pcomp(as-54, in-55)
det(street-57, the-56)
pobj(in-55, street-57)
mark(brushed-62, for-59)
det(camel-loads-61, the-60)
nsubj(brushed-62, camel-loads-61)
advcl(good-53, brushed-62)
dobj(brushed-62, him-63)
mark(went-66, as-64)
nsubj(went-66, they-65)
advcl(brushed-62, went-66)
prep(went-66, by-67)

(ROOT
  (S
    (ADVP (RB Now)
      (CC and)
      (RB then))
    (NP (DT a) (JJ grand) (NN person))
    (VP (VBD flew)
      (PP (IN by) (IN in)
        (NP
          (NP (DT a) (NN carriage))
          (PP (IN with)
            (NP (JJ fancy) (JJ dressed) (NNS men)))))
      (S
        (VP
          (VP (VBG running)
            (CC and)
            (VBG yelling)
            (PP (IN in)
              (NP
                (NP (NN front))
                (PP (IN of)
                  (NP (PRP it))))))
          (CC and)
          (VP (VBG whacking)
            (NP (NN anybody))
            (PP (IN with)
              (NP
                (NP (DT a) (JJ long) (NN rod))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD did) (RB n't)
                      (VP (VB get)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (DT the) (NN way)))))))))))))
    (. .)))

advmod(flew-7, Now-1)
conj_and(Now-1, then-3)
advmod(flew-7, then-3)
det(person-6, a-4)
amod(person-6, grand-5)
nsubj(flew-7, person-6)
root(ROOT-0, flew-7)
dep(flew-7, by-8)
det(carriage-11, a-10)
prep_in(flew-7, carriage-11)
amod(men-15, fancy-13)
amod(men-15, dressed-14)
prep_with(carriage-11, men-15)
ccomp(flew-7, running-16)
ccomp(flew-7, yelling-18)
conj_and(running-16, yelling-18)
prep_in_front_of(running-16, it-22)
ccomp(flew-7, whacking-24)
conj_and(running-16, whacking-24)
dobj(whacking-24, anybody-25)
det(rod-29, a-27)
amod(rod-29, long-28)
prep_with(whacking-24, rod-29)
nsubj(get-33, rod-29)
aux(get-33, did-31)
neg(get-33, n't-32)
rcmod(rod-29, get-33)
det(way-37, the-36)
prep_out_of(get-33, way-37)

(ROOT
  (S (CC And)
    (SBAR
      (PP
        (PP (IN by)
          (CC and)
          (IN by))
        (ADVP (RB along)))
      (S
        (VP
          (VP (VBZ comes)
            (NP (DT the) (NNP Sultan) (NN riding) (NN horseback))
            (PP (IN at)
              (NP
                (NP (DT the) (NN head))
                (PP (IN of)
                  (NP (DT a) (NN procession))))))
          (, ,)
          (CC and)
          (VP
            (ADVP (RB fairly))
            (VBD took)
            (NP (PRP$ your) (NN breath))
            (PRT (RP away))))))
    (S
      (NP (PRP$ his) (NNS clothes))
      (VP (VBD was)
        (ADJP (RB so) (JJ splendid))))
    (: ;)
    (CC and)
    (S
      (NP (NN everybody))
      (VP (VBD fell)
        (UCP
          (ADJP (JJ flat))
          (CC and)
          (VP (VBN laid)
            (PP (IN on)
              (NP (PRP$ his) (NN stomach)))
            (SBAR (IN while)
              (S
                (NP (PRP he))
                (VP (VBD went)
                  (PP (IN by)))))))))
    (. .)))

prep(comes-6, by-2)
conj_and(by-2, by-4)
prep(comes-6, by-4)
dep(by-2, along-5)
dep(splendid-28, comes-6)
det(horseback-10, the-7)
nn(horseback-10, Sultan-8)
nn(horseback-10, riding-9)
dobj(comes-6, horseback-10)
det(head-13, the-12)
prep_at(comes-6, head-13)
det(procession-16, a-15)
prep_of(head-13, procession-16)
advmod(took-20, fairly-19)
conj_and(comes-6, took-20)
dep(splendid-28, took-20)
poss(breath-22, your-21)
dobj(took-20, breath-22)
prt(took-20, away-23)
poss(clothes-25, his-24)
nsubj(splendid-28, clothes-25)
cop(splendid-28, was-26)
advmod(splendid-28, so-27)
root(ROOT-0, splendid-28)
nsubj(fell-32, everybody-31)
conj_and(splendid-28, fell-32)
acomp(fell-32, flat-33)
acomp(fell-32, laid-35)
conj_and(flat-33, laid-35)
poss(stomach-38, his-37)
prep_on(laid-35, stomach-38)
mark(went-41, while-39)
nsubj(went-41, he-40)
advcl(laid-35, went-41)
prep(went-41, by-42)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD forgot)))
    (, ,)
    (CC but)
    (S
      (NP (DT a) (NN feller))
      (VP (VBD helped)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB remember))))))
    (. .)))

nsubj(forgot-2, I-1)
root(ROOT-0, forgot-2)
det(feller-6, a-5)
nsubj(helped-7, feller-6)
conj_but(forgot-2, helped-7)
dobj(helped-7, me-8)
nsubj(remember-10, me-8)
aux(remember-10, to-9)
xcomp(helped-7, remember-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP
        (NP (CD one))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD had)
              (NP
                (NP (DT a) (NN rod)
                  (CC and)
                  (NN run))
                (PP (IN in)
                  (NP (NN front)))))))))
    (. .)))

nsubj(one-3, He-1)
cop(one-3, was-2)
root(ROOT-0, one-3)
nsubj(had-5, one-3)
rcmod(one-3, had-5)
det(rod-7, a-6)
dobj(had-5, rod-7)
dobj(had-5, run-9)
conj_and(rod-7, run-9)
prep_in(rod-7, front-11)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD was)
          (NP (NNS churches))))
      (, ,)
      (CC but)
      (S
        (NP (PRP they))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (ADJP (JJ enough)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (NP (NNP Sunday))))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP
        (VP (VB keep)
          (NP (NNP Friday)))
        (CC and)
        (VP (VB break)
          (NP (DT the) (NNP Sabbath)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, churches-3)
nsubj(know-9, they-6)
aux(know-9, do-7)
neg(know-9, n't-8)
conj_but(was-2, know-9)
acomp(know-9, enough-10)
aux(keep-12, to-11)
xcomp(enough-10, keep-12)
tmod(keep-12, Sunday-13)
nsubj(keep-16, they-15)
nsubj(break-19, they-15)
parataxis(was-2, keep-16)
tmod(keep-16, Friday-17)
parataxis(was-2, break-19)
conj_and(keep-16, break-19)
det(Sabbath-21, the-20)
dobj(break-19, Sabbath-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB take)
            (PRT (RP off))
            (NP (PRP$ your) (NNS shoes))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP go)
                  (PRT (RP in)))))))))
    (. .)))

nsubj(have-2, You-1)
nsubj(take-4, You-1)
root(ROOT-0, have-2)
aux(take-4, to-3)
xcomp(have-2, take-4)
prt(take-4, off-5)
poss(shoes-7, your-6)
dobj(take-4, shoes-7)
advmod(go-10, when-8)
nsubj(go-10, you-9)
advcl(take-4, go-10)
prt(go-10, in-11)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (NNS crowds))
          (PP (IN of)
            (NP (NNS men)
              (CC and)
              (NNS boys))))
        (PP (IN in)
          (NP (DT the) (NN church)))
        (, ,)
        (S
          (VP
            (VP (VBG setting)
              (PP (IN in)
                (NP
                  (NP (NNS groups))
                  (PP (IN on)
                    (NP (DT the) (NN stone) (NN floor))))))
            (CC and)
            (VP (VBG making)
              (NP
                (NP (DT no) (NN end))
                (PP (IN of)
                  (NP (NN noise)))))))))
    (: --)
    (S
      (S
        (S
          (VP (VBG getting)
            (NP (PRP$ their) (NNS lessons))
            (PP (IN by)
              (NP (NN heart)))))
        (, ,)
        (NP (NNP Tom))
        (VP (VBD said) (, ,)
          (ADVP (IN out)
            (PP (IN of)
              (NP (DT the) (NNP Koran))))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP they))
              (VP (VBP think)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (NP (DT a) (NNP Bible))))))))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ knows)
                (ADJP (JJR better))))))
        (VP (VBZ knows)
          (ADJP (JJ enough)
            (S
              (VP (TO to)
                (VP (RB not) (VB let)
                  (PRT (RP on)))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, crowds-3)
prep_of(crowds-3, men-5)
prep_of(crowds-3, boys-7)
conj_and(men-5, boys-7)
det(church-10, the-9)
prep_in(was-2, church-10)
dep(was-2, setting-12)
prep_in(setting-12, groups-14)
det(floor-18, the-16)
nn(floor-18, stone-17)
prep_on(groups-14, floor-18)
dep(was-2, making-20)
conj_and(setting-12, making-20)
neg(end-22, no-21)
dobj(making-20, end-22)
prep_of(end-22, noise-24)
vmod(said-33, getting-26)
poss(lessons-28, their-27)
dobj(getting-26, lessons-28)
agent(getting-26, heart-30)
nsubj(said-33, Tom-32)
parataxis(was-2, said-33)
det(Koran-38, the-37)
prep_out_of(said-33, Koran-38)
dobj(think-42, which-40)
nsubj(Bible-45, which-40)
nsubj(think-42, they-41)
ccomp(said-33, think-42)
cop(Bible-45, is-43)
det(Bible-45, a-44)
ccomp(think-42, Bible-45)
nsubj(knows-50, people-48)
nsubj(knows-52, people-48)
rcmod(people-48, knows-50)
acomp(knows-50, better-51)
parataxis(was-2, knows-52)
conj_and(said-33, knows-52)
acomp(knows-52, enough-53)
aux(let-56, to-54)
neg(let-56, not-55)
xcomp(enough-53, let-56)
prt(let-56, on-57)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP see)
        (NP (PDT such) (DT a) (JJ big) (NN church))
        (PP (IN in)
          (NP (PRP$ my) (NN life)))
        (ADVP (RB before))))
    (, ,)
    (CC and)
    (S
      (S
        (ADJP
          (ADJP (RBS most) (JJ awful))
          (JJ high)))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBZ dizzy)
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PRT (RP up))))))))))
    (: ;)
    (S
      (NP
        (NP (PRP$ our) (NN village) (NN church))
        (PP (IN at)
          (NP (NN home))))
      (VP (VBP ai) (RB n't)
        (NP (DT a) (NN circumstance))
        (PP (TO to)
          (NP (PRP it)))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD was)
            (S
              (VP (TO to)
                (VP (VB put)
                  (NP (PRP it))
                  (PP (IN in)
                    (NP (RB there)))))))))
      (, ,)
      (NP (NNS people))
      (VP (MD would)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (DT a) (JJ drygoods) (NN box))))))))
    (. .)))

nsubj(see-3, I-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
predet(church-7, such-4)
det(church-7, a-5)
amod(church-7, big-6)
dobj(see-3, church-7)
poss(life-10, my-9)
prep_in(see-3, life-10)
advmod(see-3, before-11)
advmod(awful-15, most-14)
dep(high-16, awful-15)
ccomp(was-19, high-16)
nsubj(was-19, it-18)
conj_and(see-3, was-19)
nsubj(made-22, it-21)
conj_and(see-3, made-22)
parataxis(see-3, made-22)
nsubj(dizzy-24, you-23)
nsubj(look-26, you-23)
ccomp(made-22, dizzy-24)
aux(look-26, to-25)
xcomp(dizzy-24, look-26)
prt(look-26, up-27)
poss(church-31, our-29)
nn(church-31, village-30)
nsubj(circumstance-37, church-31)
prep_at(church-31, home-33)
cop(circumstance-37, ai-34)
neg(circumstance-37, n't-35)
det(circumstance-37, a-36)
conj_and(see-3, circumstance-37)
parataxis(see-3, circumstance-37)
prep_to(circumstance-37, it-39)
mark(was-43, if-41)
nsubj(was-43, you-42)
nsubj(put-45, you-42)
advcl(think-52, was-43)
aux(put-45, to-44)
xcomp(was-43, put-45)
dobj(put-45, it-46)
prep(put-45, in-47)
pobj(in-47, there-48)
nsubj(think-52, people-50)
aux(think-52, would-51)
conj_and(see-3, think-52)
parataxis(see-3, think-52)
nsubj(box-57, it-53)
cop(box-57, was-54)
det(box-57, a-55)
amod(box-57, drygoods-56)
ccomp(think-52, box-57)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBD wanted)
          (S
            (VP (TO to)
              (VP (VB see)))))))
    (VP (VBD was)
      (NP (DT a) (NN dervish))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (ADJP (JJ interested)
              (PP (IN in)
                (NP
                  (NP (NNS dervishes))
                  (PP (IN on)
                    (NP
                      (NP (NNS accounts))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN one))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD played)
                                (NP (DT the) (NN trick))
                                (PP (IN on)
                                  (NP (DT the) (NN camel-driver)))))))))))))))))
    (. .)))

dobj(wanted-3, What-1)
nsubj(see-5, What-1)
nsubj(wanted-3, I-2)
csubj(dervish-8, wanted-3)
aux(see-5, to-4)
xcomp(wanted-3, see-5)
cop(dervish-8, was-6)
det(dervish-8, a-7)
root(ROOT-0, dervish-8)
mark(interested-13, because-10)
nsubj(interested-13, I-11)
cop(interested-13, was-12)
advcl(dervish-8, interested-13)
prep_in(interested-13, dervishes-15)
prep_on(dervishes-15, accounts-17)
det(one-20, the-19)
prep_of(accounts-17, one-20)
nsubj(played-22, one-20)
rcmod(one-20, played-22)
det(trick-24, the-23)
dobj(played-22, trick-24)
det(camel-driver-27, the-26)
prep_on(played-22, camel-driver-27)

(ROOT
  (S (CC So)
    (S
      (NP (PRP we))
      (VP (VBD found)
        (NP (DT a) (NN lot))
        (PP (IN in)
          (NP
            (NP (DT a) (NN kind))
            (PP (IN of)
              (NP (DT a) (NN church)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD called)
        (S
          (NP (PRP themselves))
          (NP (NNP Whirling) (NNP Dervishes)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD did)
        (NP (NN whirl))
        (, ,)
        (ADVP (RB too))))
    (. .)))

nsubj(found-3, we-2)
root(ROOT-0, found-3)
det(lot-5, a-4)
dobj(found-3, lot-5)
det(kind-8, a-7)
prep_in(found-3, kind-8)
det(church-11, a-10)
prep_of(kind-8, church-11)
nsubj(called-15, they-14)
conj_and(found-3, called-15)
nsubj(Dervishes-18, themselves-16)
nn(Dervishes-18, Whirling-17)
xcomp(called-15, Dervishes-18)
nsubj(did-22, they-21)
conj_and(found-3, did-22)
dobj(did-22, whirl-23)
advmod(did-22, too-25)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBP see)
      (NP
        (NP (NN anything))
        (PP (IN like)
          (NP (PRP it)))))
    (. .)))

nsubj(see-3, I-1)
neg(see-3, never-2)
root(ROOT-0, see-3)
dobj(see-3, anything-4)
prep_like(anything-4, it-6)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD had)
        (NP
          (ADJP (JJ tall) (JJ sugar-loaf))
          (NNS hats))
        (PP (IN on))))
    (, ,)
    (CC and)
    (S
      (NP (NN linen))
      (VP (VBZ petticoats)))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP
        (VP (VBN spun)
          (CC and)
          (VBN spun))
        (CC and)
        (VP (VBN spun) (, ,)
          (ADVP (RB round)
            (CC and)
            (RB round)))))
    (PP (IN like)
      (NP (NNS tops)))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (NNS petticoats))
        (VP (VBD stood)
          (PRT (RP out))
          (PP (IN on)
            (NP (DT a) (NN slant)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (DT the) (JJ prettiest) (NN thing))
            (SBAR
              (S
                (NP (PRP I))
                (VP
                  (VP
                    (ADVP (RB ever))
                    (VBP see))
                  (, ,)
                  (CC and)
                  (VP (VBD made)
                    (S
                      (NP (PRP me))
                      (ADJP (JJ drunk)
                        (S
                          (VP (TO to)
                            (VP (VB look)
                              (PP (IN at)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(had-2, They-1)
root(ROOT-0, had-2)
amod(sugar-loaf-4, tall-3)
amod(hats-5, sugar-loaf-4)
dobj(had-2, hats-5)
prep(had-2, on-6)
nsubj(petticoats-10, linen-9)
conj_and(had-2, petticoats-10)
nsubj(spun-14, they-13)
nsubj(spun-16, they-13)
nsubj(spun-18, they-13)
conj_and(had-2, spun-14)
conj_and(had-2, spun-16)
conj_and(spun-14, spun-16)
conj_and(had-2, spun-18)
conj_and(spun-14, spun-18)
advmod(spun-18, round-20)
advmod(spun-18, round-22)
conj_and(round-20, round-22)
prep_like(had-2, tops-24)
det(petticoats-28, the-27)
nsubj(stood-29, petticoats-28)
conj_and(had-2, stood-29)
prt(stood-29, out-30)
det(slant-33, a-32)
prep_on(stood-29, slant-33)
nsubj(thing-40, it-36)
cop(thing-40, was-37)
det(thing-40, the-38)
amod(thing-40, prettiest-39)
conj_and(had-2, thing-40)
conj_and(stood-29, thing-40)
nsubj(see-43, I-41)
nsubj(made-46, I-41)
advmod(see-43, ever-42)
rcmod(thing-40, see-43)
rcmod(thing-40, made-46)
conj_and(see-43, made-46)
nsubj(drunk-48, me-47)
nsubj(look-50, me-47)
xcomp(made-46, drunk-48)
aux(look-50, to-49)
xcomp(drunk-48, look-50)
prep_at(look-50, it-52)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD was)
        (NP (DT all) (NNPS Moslems))))
    (PRN (, ,)
      (NP (NNP Tom))
      (VP (VBD said))
      (, ,))
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD asked)
            (NP (PRP him))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT a) (NNP Moslem))
                (VP (VBD was)))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN person))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD was) (RB n't)
                      (NP (DT a) (NNP Presbyterian)))))))))))
    (. .)))

nsubj(Moslems-4, They-1)
cop(Moslems-4, was-2)
det(Moslems-4, all-3)
root(ROOT-0, Moslems-4)
nsubj(said-7, Tom-6)
dep(Moslems-4, said-7)
advmod(asked-12, when-10)
nsubj(asked-12, I-11)
advcl(said-20, asked-12)
dobj(asked-12, him-13)
dobj(was-17, what-14)
det(Moslem-16, a-15)
nsubj(was-17, Moslem-16)
dep(asked-12, was-17)
nsubj(said-20, he-19)
conj_and(Moslems-4, said-20)
nsubj(person-24, it-21)
cop(person-24, was-22)
det(person-24, a-23)
ccomp(said-20, person-24)
nsubj(Presbyterian-29, person-24)
cop(Presbyterian-29, was-26)
neg(Presbyterian-29, n't-27)
det(Presbyterian-29, a-28)
rcmod(person-24, Presbyterian-29)

(ROOT
  (S (IN So)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP (PRP them)))
        (PP (IN in)
          (NP (NNP Missouri))))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (PRP I))
          (VP (VBD did) (RB n't)
            (VP (VB know)
              (NP (PRP it))
              (ADVP (RB before)))))))
    (. .)))

dep(is-3, So-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
nsubj(is-3, plenty-4)
prep_of(plenty-4, them-6)
prep_in(plenty-4, Missouri-8)
mark(know-14, though-10)
nsubj(know-14, I-11)
aux(know-14, did-12)
neg(know-14, n't-13)
advcl(is-3, know-14)
dobj(know-14, it-15)
advmod(know-14, before-16)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD did) (RB n't)
      (VP (VB see)
        (NP
          (NP (NN half))
          (SBAR
            (S
              (NP (EX there))
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (PP (IN in)
                        (NP (NNP Cairo)))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (NNP Tom))
                          (VP (VBD was)
                            (PP (IN in)
                              (NP
                                (NP (PDT such) (DT a) (NN sweat))
                                (PP (TO to)
                                  (NP (NN hunt)))))
                            (PP (IN out)
                              (NP
                                (NP (NNS places))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD was)
                                      (VP (VBN celebrated)
                                        (PP (IN in)
                                          (NP (NN history)))))))))))))))))))))
    (. .)))

nsubj(see-4, We-1)
aux(see-4, did-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
dobj(see-4, half-5)
expl(was-7, there-6)
rcmod(half-5, was-7)
aux(see-9, to-8)
xcomp(was-7, see-9)
prep_in(see-9, Cairo-11)
mark(was-15, because-13)
nsubj(was-15, Tom-14)
advcl(see-9, was-15)
predet(sweat-19, such-17)
det(sweat-19, a-18)
prep_in(was-15, sweat-19)
prep_to(sweat-19, hunt-21)
prep_out(was-15, places-23)
nsubjpass(celebrated-26, places-23)
auxpass(celebrated-26, was-25)
rcmod(places-23, celebrated-26)
prep_in(celebrated-26, history-28)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD had)
        (S
          (NP (DT a) (RBS most) (JJ tiresome) (NN time))
          (VP (TO to)
            (VP (VB find)
              (NP (DT the) (NN granary)))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNP Joseph))
            (VP (VBD stored)
              (PRT (RP up))
              (NP (DT the) (NN grain))
              (PP (IN before)
                (NP (DT the) (NN famine))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBD found)
            (NP (PRP it)))))
      (S
        (NP (PRP it))
        (VP (VBP war) (RB n't)
          (ADJP (JJ worth) (RB much)
            (S
              (VP (TO to)
                (VP (VB look)
                  (PP (IN at))
                  (, ,)
                  (S
                    (VP (VBG being)
                      (NP (PDT such) (DT an) (JJ old) (JJ tumble-down) (NN wreck))))))))))
      (: ;)
      (CC but)
      (S
        (NP (NNP Tom))
        (VP
          (VP (VBD was)
            (ADJP (JJ satisfied)))
          (, ,)
          (CC and)
          (VP (VBD made)
            (NP (JJR more) (NNS fuss))
            (PP (IN over)
              (NP (PRP it)))
            (SBAR (IN than)
              (S
                (NP (PRP I))
                (VP (MD would)
                  (VP (VB make)
                    (SBAR (IN if)
                      (S
                        (NP (PRP I))
                        (VP (VBD stuck)
                          (NP (DT a) (NN nail))
                          (PP (IN in)
                            (NP (PRP$ my) (NN foot))))))))))))))
    (. .)))

nsubj(had-2, We-1)
root(ROOT-0, had-2)
det(time-6, a-3)
advmod(time-6, most-4)
amod(time-6, tiresome-5)
dobj(had-2, time-6)
nsubj(find-8, time-6)
aux(find-8, to-7)
ccomp(had-2, find-8)
xcomp(had-2, find-8)
det(granary-10, the-9)
dobj(find-8, granary-10)
advmod(stored-13, where-11)
nsubj(stored-13, Joseph-12)
advcl(had-2, stored-13)
prt(stored-13, up-14)
det(grain-16, the-15)
dobj(stored-13, grain-16)
det(famine-19, the-18)
prep_before(stored-13, famine-19)
advmod(found-24, when-22)
nsubj(found-24, we-23)
advcl(war-27, found-24)
dobj(found-24, it-25)
nsubj(war-27, it-26)
conj_and(had-2, war-27)
neg(war-27, n't-28)
acomp(war-27, worth-29)
advmod(worth-29, much-30)
aux(look-32, to-31)
xcomp(worth-29, look-32)
prep(look-32, at-33)
cop(wreck-40, being-35)
predet(wreck-40, such-36)
det(wreck-40, an-37)
amod(wreck-40, old-38)
amod(wreck-40, tumble-down-39)
xcomp(look-32, wreck-40)
nsubj(satisfied-45, Tom-43)
nsubj(made-48, Tom-43)
cop(satisfied-45, was-44)
conj_and(had-2, satisfied-45)
conj_but(war-27, satisfied-45)
conj_but(war-27, made-48)
conj_and(satisfied-45, made-48)
amod(fuss-50, more-49)
dobj(made-48, fuss-50)
prep_over(made-48, it-52)
mark(make-56, than-53)
nsubj(make-56, I-54)
aux(make-56, would-55)
advcl(made-48, make-56)
mark(stuck-59, if-57)
nsubj(stuck-59, I-58)
advcl(make-56, stuck-59)
det(nail-61, a-60)
dobj(stuck-59, nail-61)
poss(foot-64, my-63)
prep_in(stuck-59, foot-64)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP (PRP he))
        (ADVP (RB ever))
        (VP (VBD found))))
    (NP (DT that) (NN place))
    (VP (VBD was)
      (ADJP (RB too) (JJ many))
      (PP (IN for)
        (NP (PRP me))))
    (. .)))

advmod(found-4, How-1)
nsubj(found-4, he-2)
advmod(found-4, ever-3)
advcl(many-9, found-4)
det(place-6, that-5)
nsubj(many-9, place-6)
cop(many-9, was-7)
advmod(many-9, too-8)
root(ROOT-0, many-9)
prep_for(many-9, me-11)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBD passed)
          (ADVP
            (ADVP (RB as) (RB much))
            (PP (IN as)
              (ADVP (RB forty))))
          (ADVP (RB just))
          (PP (IN like)
            (NP (PRP it)))
          (SBAR (IN before)
            (S
              (NP (PRP we))
              (VP (VBP come)
                (PP (TO to)
                  (NP (PRP it))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP
            (NP (DT any))
            (PP (IN of)
              (NP (PRP them))))
          (VP (MD would)
            (S
              (NP (`` `)
                (NP (SYM a))
                ('' ')
                (VP (VBN done)
                  (PP (IN for)
                    (NP (PRP me))))))))
        (, ,)
        (CC but)
        (S
          (NP
            (NP (NN none))
            (CONJP (CC but)
              (RB just))
            (NP
              (NP (DT the) (NN right))
              (NP (CD one))))
          (VP (MD would)
            (VP (VB suit)
              (NP (PRP him)))))))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP see)
        (S
          (NP (NN anybody))
          (ADJP (RB so) (JJ particular)
            (PP (IN as)
              (NP (NNP Tom) (NNP Sawyer)))))))
    (. .)))

nsubj(passed-2, We-1)
root(ROOT-0, passed-2)
advmod(much-4, as-3)
advmod(passed-2, much-4)
prep(much-4, as-5)
pcomp(as-5, forty-6)
advmod(passed-2, just-7)
prep_like(passed-2, it-9)
mark(come-12, before-10)
nsubj(come-12, we-11)
advcl(passed-2, come-12)
prep_to(come-12, it-14)
nsubj(would-20, any-17)
prep_of(any-17, them-19)
conj_and(passed-2, would-20)
dep(would-20, a-22)
vmod(a-22, done-24)
prep_for(done-24, me-26)
nsubj(suit-36, none-29)
det(right-33, the-32)
conj_but(none-29, right-33)
nsubj(suit-36, right-33)
dep(right-33, one-34)
aux(suit-36, would-35)
conj_and(passed-2, suit-36)
conj_but(would-20, suit-36)
dobj(suit-36, him-37)
nsubj(see-41, I-39)
neg(see-41, never-40)
parataxis(passed-2, see-41)
nsubj(particular-44, anybody-42)
advmod(particular-44, so-43)
xcomp(see-41, particular-44)
nn(Sawyer-47, Tom-46)
prep_as(particular-44, Sawyer-47)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN minute))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD struck)
              (NP (DT the) (JJ right) (NN one))
              (SBAR
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD reconnized)
                      (S
                        (NP (PRP it))
                        (ADJP (RB as) (JJ easy))
                        (SBAR (IN as)
                          (S
                            (NP (PRP I))
                            (VP (MD would)
                              (VP (VB reconnize)
                                (NP (PRP$ my) (JJ other) (NN shirt))
                                (SBAR (IN if)
                                  (S
                                    (NP (PRP I))
                                    (VP (VBD had)
                                      (NP (CD one)))))))))))))
                (, ,)
                (CC but)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP he))
                    (VP (VBN done)
                      (S
                        (NP (PRP it))
                        (NP (PRP he)))))))))))
      (VP (MD could) (RB n't)
        (ADVP (DT any) (RBR more))
        (VP (VB tell)
          (SBAR (IN than)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB fly))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (ADVP (RB so))
        (NP (PRP himself))))
    (. .)))

det(minute-2, The-1)
nsubj(tell-35, minute-2)
nsubj(struck-4, he-3)
rcmod(minute-2, struck-4)
det(one-7, the-5)
amod(one-7, right-6)
dobj(struck-4, one-7)
nsubj(reconnized-9, he-8)
dep(struck-4, reconnized-9)
nsubj(reconnize-16, it-10)
advmod(easy-12, as-11)
dep(reconnize-16, easy-12)
mark(reconnize-16, as-13)
nsubj(reconnize-16, I-14)
aux(reconnize-16, would-15)
xcomp(reconnized-9, reconnize-16)
poss(shirt-19, my-17)
amod(shirt-19, other-18)
dobj(reconnize-16, shirt-19)
mark(had-22, if-20)
nsubj(had-22, I-21)
advcl(reconnize-16, had-22)
dobj(had-22, one-23)
advmod(done-28, how-26)
nsubj(done-28, he-27)
dep(struck-4, done-28)
conj_but(reconnized-9, done-28)
nsubj(he-30, it-29)
xcomp(done-28, he-30)
aux(tell-35, could-31)
neg(tell-35, n't-32)
dep(more-34, any-33)
advmod(tell-35, more-34)
root(ROOT-0, tell-35)
mark(fly-39, than-36)
nsubj(fly-39, he-37)
aux(fly-39, could-38)
advcl(tell-35, fly-39)
nsubj(said-42, he-41)
parataxis(tell-35, said-42)
advmod(said-42, so-43)
dobj(said-42, himself-44)

(ROOT
  (S (RB Then)
    (S
      (NP (PRP we))
      (VP (VBN hunted)
        (NP (DT a) (JJ long) (NN time))
        (PP (IN for)
          (NP (DT the) (NN house)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN boy))
            (VP (VBD lived)
              (SBAR (IN that)
                (S
                  (VP
                    (VP (VBD learned)
                      (NP (DT the) (NN cadi))
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (VP (TO to)
                            (VP (VB try)
                              (NP
                                (NP (DT the) (NN case))
                                (PP (IN of)
                                  (NP
                                    (NP (DT the) (JJ old) (NNS olives))
                                    (CC and)
                                    (NP (DT the) (JJ new) (NNS ones))))))))))
                    (, ,)
                    (CC and)
                    (VP (VBD said)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (ADVP (RB out))
                            (PP (IN of)
                              (NP (DT the) (NNP Arabian) (NNPS Nights)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB tell)
          (NP
            (NP (PRP me))
            (CC and)
            (NP (NNP Jim)))
          (PP (IN about)
            (NP (PRP it)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD got)
                (NP (NN time))))))))
    (. .)))

advmod(hunted-3, Then-1)
nsubj(hunted-3, we-2)
root(ROOT-0, hunted-3)
det(time-6, a-4)
amod(time-6, long-5)
dobj(hunted-3, time-6)
det(house-9, the-8)
prep_for(hunted-3, house-9)
advmod(lived-13, where-10)
det(boy-12, the-11)
nsubj(lived-13, boy-12)
advcl(hunted-3, lived-13)
mark(learned-15, that-14)
ccomp(lived-13, learned-15)
det(cadi-17, the-16)
dobj(learned-15, cadi-17)
nsubj(try-20, cadi-17)
advmod(try-20, how-18)
aux(try-20, to-19)
xcomp(learned-15, try-20)
det(case-22, the-21)
dobj(try-20, case-22)
det(olives-26, the-24)
amod(olives-26, old-25)
prep_of(case-22, olives-26)
det(ones-30, the-28)
amod(ones-30, new-29)
prep_of(case-22, ones-30)
conj_and(olives-26, ones-30)
ccomp(lived-13, said-33)
conj_and(learned-15, said-33)
nsubj(was-35, it-34)
ccomp(said-33, was-35)
det(Nights-40, the-38)
nn(Nights-40, Arabian-39)
prep_out_of(was-35, Nights-40)
nsubj(tell-45, he-43)
aux(tell-45, would-44)
conj_and(hunted-3, tell-45)
dobj(tell-45, me-46)
dobj(tell-45, Jim-48)
conj_and(me-46, Jim-48)
prep_about(tell-45, it-50)
advmod(got-53, when-51)
nsubj(got-53, he-52)
ccomp(tell-45, got-53)
dobj(got-53, time-54)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (S
          (NP (PRP we))
          (VP
            (VP (VBN hunted))
            (CC and)
            (VP (VBN hunted)
              (SBAR (IN till)
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (ADJP (JJ ready)
                      (S
                        (VP (TO to)
                          (VP (VB drop)))))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP
            (VP (VBD wanted)
              (S
                (NP (NNP Tom))
                (VP (TO to)
                  (VP
                    (VP (VB give)
                      (NP (PRP it))
                      (PRT (RP up)))
                    (CC and)
                    (VP (VB come)
                      (NP
                        (NP (JJ next) (NN day)
                          (CC and)
                          (NN git) (NN somebody))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP
                              (VP (VBD knowed)
                                (NP (DT the) (NN town)))
                              (CC and)
                              (VP (MD could)
                                (VP (VB talk)
                                  (NP (NNP Missourian)))))))))))))
            (CC and)
            (VP (MD could)
              (VP (VB go)
                (ADVP (RB straight))
                (PP (TO to)
                  (NP (DT the) (NN place))))))))
      (: ;)
      (CC but)
      (S
        (INTJ (UH no))
        (, ,)
        (NP (PRP he))
        (VP (VBD wanted)
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (PRP it))
                (NP (PRP himself))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN nothing) (RB else))
      (VP (MD would)
        (VP (VB answer))))
    (. .)))

discourse(hunted-4, Well-1)
nsubj(hunted-4, we-3)
nsubj(hunted-6, we-3)
root(ROOT-0, hunted-4)
conj_and(hunted-4, hunted-6)
mark(ready-10, till-7)
nsubj(ready-10, I-8)
nsubj(drop-12, I-8)
cop(ready-10, was-9)
advcl(hunted-6, ready-10)
aux(drop-12, to-11)
xcomp(ready-10, drop-12)
nsubj(wanted-16, I-15)
nsubj(go-39, I-15)
conj_and(hunted-4, wanted-16)
dobj(wanted-16, Tom-17)
nsubj(give-19, Tom-17)
nsubj(come-23, Tom-17)
aux(give-19, to-18)
xcomp(wanted-16, give-19)
dobj(give-19, it-20)
prt(give-19, up-21)
xcomp(wanted-16, come-23)
conj_and(give-19, come-23)
amod(day-25, next-24)
dobj(come-23, day-25)
nsubj(knowed-30, day-25)
nsubj(talk-35, day-25)
nn(somebody-28, git-27)
dobj(come-23, somebody-28)
conj_and(day-25, somebody-28)
nsubj(knowed-30, somebody-28)
rcmod(day-25, knowed-30)
det(town-32, the-31)
dobj(knowed-30, town-32)
aux(talk-35, could-34)
rcmod(day-25, talk-35)
conj_and(knowed-30, talk-35)
dobj(talk-35, Missourian-36)
aux(go-39, could-38)
conj_and(hunted-4, go-39)
conj_and(wanted-16, go-39)
advmod(go-39, straight-40)
det(place-43, the-42)
prep_to(go-39, place-43)
discourse(wanted-49, no-46)
nsubj(wanted-49, he-48)
nsubj(find-51, he-48)
conj_but(hunted-4, wanted-49)
aux(find-51, to-50)
xcomp(wanted-49, find-51)
iobj(find-51, it-52)
dobj(find-51, himself-53)
nsubj(answer-59, nothing-56)
advmod(nothing-56, else-57)
aux(answer-59, would-58)
conj_and(hunted-4, answer-59)

(ROOT
  (S
    (ADVP (IN So) (RB on))
    (NP (PRP we))
    (VP (VBD went))
    (. .)))

advmod(went-4, So-1)
advmod(So-1, on-2)
nsubj(went-4, we-3)
root(ROOT-0, went-4)

(ROOT
  (S (RB Then)
    (PP (IN at)
      (NP (JJ last)))
    (NP (DT the) (NN remarkablest) (NN thing))
    (VP (VBD happened)
      (SBAR
        (S
          (NP (PRP I))
          (ADVP (RB ever))
          (VP (VBP see)))))
    (. .)))

advmod(happened-7, Then-1)
prep_at(happened-7, last-3)
det(thing-6, the-4)
nn(thing-6, remarkablest-5)
nsubj(happened-7, thing-6)
root(ROOT-0, happened-7)
nsubj(see-10, I-8)
advmod(see-10, ever-9)
ccomp(happened-7, see-10)

(ROOT
  (S
    (NP (DT The) (NN house))
    (VP (VBD was)
      (VP
        (VP (VBN gone))
        (: --)
        (VP (VBN gone)
          (NP
            (NP
              (NP (NNS hundreds))
              (PP (IN of)
                (NP
                  (NP (NNS years))
                  (ADVP (IN ago)))))
            (: --)
            (NP
              (NP (DT every) (JJ last) (NN rag))
              (PP (IN of)
                (NP (PRP it)))
              (UCP
                (ADJP (VBN gone))
                (CC but)
                (NP
                  (QP (RB just) (CD one))
                  (NN mud))))))
        (NP (NN brick))))
    (. .)))

det(house-2, The-1)
nsubj(gone-4, house-2)
aux(gone-4, was-3)
root(ROOT-0, gone-4)
dep(gone-4, gone-6)
dobj(gone-6, hundreds-7)
prep_of(hundreds-7, years-9)
advmod(years-9, ago-10)
det(rag-14, every-12)
amod(rag-14, last-13)
dep(hundreds-7, rag-14)
prep_of(rag-14, it-16)
amod(rag-14, gone-17)
quantmod(one-20, just-19)
num(mud-21, one-20)
amod(rag-14, mud-21)
conj_but(gone-17, mud-21)
dobj(gone-4, brick-22)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT a) (NN person))
      (VP (MD would) (RB n't)
        (ADVP (RB ever))
        (VP (VB believe)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (JJ backwoods) (NNP Missouri) (NN boy))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had) (RB n't)
                      (ADVP (RB ever))
                      (VP (VBN been)
                        (PP (IN in)
                          (NP (DT that) (NN town)))
                        (ADVP (RB before)))))))
              (VP (MD could)
                (VP
                  (VP (VB go)
                    (CC and)
                    (VB hunt)
                    (NP (DT that) (NN place))
                    (ADVP (RB over)))
                  (CC and)
                  (VP (VB find)
                    (NP (DT that) (NN brick))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Tom) (NNP Sawyer))
      (VP (VBN done)
        (NP (PRP it))))
    (. .)))

advmod(believe-7, Now-1)
det(person-3, a-2)
nsubj(believe-7, person-3)
aux(believe-7, would-4)
neg(believe-7, n't-5)
advmod(believe-7, ever-6)
root(ROOT-0, believe-7)
mark(go-23, that-8)
det(boy-12, a-9)
amod(boy-12, backwoods-10)
nn(boy-12, Missouri-11)
nsubj(been-17, boy-12)
nsubj(go-23, boy-12)
nsubj(hunt-25, boy-12)
nsubj(find-30, boy-12)
aux(been-17, had-14)
neg(been-17, n't-15)
advmod(been-17, ever-16)
rcmod(boy-12, been-17)
det(town-20, that-19)
prep_in(been-17, town-20)
advmod(been-17, before-21)
aux(go-23, could-22)
ccomp(believe-7, go-23)
ccomp(believe-7, hunt-25)
conj_and(go-23, hunt-25)
det(place-27, that-26)
dobj(go-23, place-27)
advmod(go-23, over-28)
ccomp(believe-7, find-30)
conj_and(go-23, find-30)
det(brick-32, that-31)
dobj(find-30, brick-32)
nn(Sawyer-36, Tom-35)
nsubj(done-37, Sawyer-36)
conj_but(believe-7, done-37)
dobj(done-37, it-38)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (S
        (NP (PRP he))
        (VP (VBN done)
          (NP (PRP it))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP see)
            (SBAR
              (S
                (NP (PRP him))
                (VP (VBP do)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(done-4, he-3)
dep(know-2, done-4)
dobj(done-4, it-5)
mark(see-9, because-7)
nsubj(see-9, I-8)
advcl(know-2, see-9)
nsubj(do-11, him-10)
ccomp(see-9, do-11)
dobj(do-11, it-12)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD was)
        (ADJP (JJ right)
          (PP (IN by)
            (NP (PRP$ his) (JJ very) (NN side))))
        (PP (IN at)
          (NP (DT the) (NN time))))
      (, ,)
      (CC and)
      (VP (VBP see)
        (S
          (NP (PRP him))
          (VP
            (VP (VB see)
              (NP (DT the) (NN brick)))
            (CC and)
            (VP (VB see)
              (S
                (NP (PRP him))
                (VP (VB reconnize)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(right-3, I-1)
nsubj(see-13, I-1)
cop(right-3, was-2)
root(ROOT-0, right-3)
poss(side-7, his-5)
amod(side-7, very-6)
prep_by(right-3, side-7)
det(time-10, the-9)
prep_at(right-3, time-10)
conj_and(right-3, see-13)
nsubj(see-15, him-14)
nsubj(see-19, him-14)
ccomp(see-13, see-15)
det(brick-17, the-16)
dobj(see-15, brick-17)
ccomp(see-13, see-19)
conj_and(see-15, see-19)
nsubj(reconnize-21, him-20)
ccomp(see-19, reconnize-21)
dobj(reconnize-21, it-22)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBZ says)
      (PP (TO to)
        (NP (PRP myself)))
      (, ,)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBZ DOES)
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBP do)
                  (NP (PRP it)))))))))
    (. ?)))

discourse(says-4, Well-1)
nsubj(says-4, I-3)
root(ROOT-0, says-4)
prep_to(says-4, myself-6)
advmod(DOES-9, how-8)
ccomp(says-4, DOES-9)
nsubj(do-11, he-10)
ccomp(DOES-9, do-11)
dobj(do-11, it-12)

(ROOT
  (SQ
    (SQ (VBZ Is)
      (NP (PRP it))
      (ADJP (JJ knowledge)))
    (, ,)
    (CC or)
    (SQ (VBZ is)
      (NP (PRP it))
      (VP (VBN instink)))
    (. ?)))

cop(knowledge-3, Is-1)
nsubj(knowledge-3, it-2)
root(ROOT-0, knowledge-3)
auxpass(instink-8, is-6)
nsubjpass(instink-8, it-7)
conj_or(knowledge-3, instink-8)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (EX there))
      (VP (VBZ 's)
        (NP (DT the) (NNS facts))
        (, ,)
        (SBAR (RB just) (IN as)
          (S
            (NP (PRP they))
            (VP (VBD happened))))))
    (: :)
    (S
      (VP (VB let)
        (S
          (NP (NN everybody))
          (VP (VB explain)
            (S
              (NP (PRP it))
              (NP (PRP$ their) (JJ own) (NN way)))))))
    (. .)))

advmod('s-3, Now-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
det(facts-5, the-4)
nsubj('s-3, facts-5)
advmod(happened-10, just-7)
mark(happened-10, as-8)
nsubj(happened-10, they-9)
advcl('s-3, happened-10)
parataxis('s-3, let-12)
nsubj(explain-14, everybody-13)
ccomp(let-12, explain-14)
nsubj(way-18, it-15)
poss(way-18, their-16)
amod(way-18, own-17)
xcomp(explain-14, way-18)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBN ciphered)
            (PP (IN over)
              (NP
                (NP (PRP it))
                (NP (DT a) (JJ good) (NN deal)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP (PRP$ my) (NN opinion))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT some))
                (PP (IN of)
                  (NP (PRP it))))
              (VP (VBZ is)
                (NP (NN knowledge))))))))
    (CC but)
    (S
      (NP
        (NP (DT the) (JJ main) (NN bulk))
        (PP (IN of)
          (NP (PRP it))))
      (VP (VBZ is)
        (NP (NN instink))))
    (. .)))

nsubj(ciphered-3, I-1)
aux(ciphered-3, 've-2)
root(ROOT-0, ciphered-3)
prep_over(ciphered-3, it-5)
det(deal-8, a-6)
amod(deal-8, good-7)
dep(it-5, deal-8)
nsubj(opinion-14, it-11)
cop(opinion-14, 's-12)
poss(opinion-14, my-13)
conj_and(ciphered-3, opinion-14)
mark(knowledge-20, that-15)
nsubj(knowledge-20, some-16)
prep_of(some-16, it-18)
cop(knowledge-20, is-19)
ccomp(opinion-14, knowledge-20)
det(bulk-24, the-22)
amod(bulk-24, main-23)
nsubj(instink-28, bulk-24)
prep_of(bulk-24, it-26)
cop(instink-28, is-27)
conj_but(ciphered-3, instink-28)

(ROOT
  (S
    (S
      (NP (DT The) (NN reason))
      (VP (VBZ is)
        (NP
          (NP (DT this))
          (: :)
          (S
            (S
              (NP (NNP Tom))
              (VP (VBD put)
                (NP (DT the) (NN brick))
                (PP (IN in)
                  (NP (PRP$ his) (NN pocket)
                    (S
                      (VP (TO to)
                        (VP (VB give)
                          (PP (TO to)
                            (NP (DT a) (NN museum)))
                          (PP (IN with)
                            (NP
                              (NP
                                (NP (PRP$ his) (NN name))
                                (PP (IN on)
                                  (NP (PRP it))))
                              (CC and)
                              (NP
                                (NP (DT the) (NNS facts))
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD went)
                                      (NP (NN home)))))))))))))))
            (, ,)
            (CC and)
            (S
              (NP (PRP I))
              (VP
                (VP (VBD slipped)
                  (NP (PRP it))
                  (PRT (RP out)))
                (CC and)
                (VP (VBD put)
                  (S
                    (NP (DT another) (NN brick))
                    (ADJP (JJ considerable)
                      (PP (IN like)
                        (NP
                          (NP (PRP it))
                          (PP (IN in)
                            (NP (PRP$ its) (NN place))))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP (VBD did) (RB n't)
          (VP (VB know)
            (NP (DT the) (NN difference)))))
      (: --)
      (CC but)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a) (NN difference))))
      (, ,)
      (S
        (NP (PRP you))
        (VP (VBP see))))
    (. .)))

det(reason-2, The-1)
nsubj(this-4, reason-2)
cop(this-4, is-3)
root(ROOT-0, this-4)
nsubj(put-7, Tom-6)
dep(this-4, put-7)
det(brick-9, the-8)
dobj(put-7, brick-9)
poss(pocket-12, his-11)
prep_in(put-7, pocket-12)
aux(give-14, to-13)
vmod(pocket-12, give-14)
det(museum-17, a-16)
prep_to(give-14, museum-17)
poss(name-20, his-19)
prep_with(give-14, name-20)
prep_on(name-20, it-22)
det(facts-25, the-24)
prep_with(give-14, facts-25)
conj_and(name-20, facts-25)
tmod(went-28, facts-25)
advmod(went-28, when-26)
nsubj(went-28, he-27)
rcmod(facts-25, went-28)
dobj(went-28, home-29)
nsubj(slipped-33, I-32)
nsubj(put-37, I-32)
dep(this-4, slipped-33)
conj_and(put-7, slipped-33)
dobj(slipped-33, it-34)
prt(slipped-33, out-35)
conj_and(put-7, put-37)
conj_and(slipped-33, put-37)
det(brick-39, another-38)
nsubj(considerable-40, brick-39)
xcomp(put-37, considerable-40)
prep_like(considerable-40, it-42)
poss(place-45, its-44)
prep_in(it-42, place-45)
nsubj(know-51, he-48)
aux(know-51, did-49)
neg(know-51, n't-50)
conj_and(this-4, know-51)
det(difference-53, the-52)
dobj(know-51, difference-53)
expl(was-57, there-56)
conj_and(this-4, was-57)
conj_but(know-51, was-57)
det(difference-59, a-58)
nsubj(was-57, difference-59)
nsubj(see-62, you-61)
conj_and(this-4, see-62)
conj_but(know-51, see-62)
parataxis(know-51, see-62)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR (IN that)
          (S
            (VP (VBZ settles)
              (NP (PRP it)))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB mostly))
        (NP (NN instink) (, ,) (RB not) (NN knowledge))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
mark(settles-4, that-3)
ccomp(think-2, settles-4)
dobj(settles-4, it-5)
nsubj(knowledge-13, it-7)
cop(knowledge-13, 's-8)
advmod(knowledge-13, mostly-9)
nn(knowledge-13, instink-10)
neg(knowledge-13, not-12)
parataxis(think-2, knowledge-13)

(ROOT
  (S
    (NP (NNP Instink))
    (VP (VBZ tells)
      (NP (PRP him))
      (SBAR
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (JJ exact) (NN PLACE))
            (VP (VBZ is)
              (PP (IN for)
                (NP (DT the) (NN brick)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (PP (IN in))))))))))
        (, ,)
        (CC and)
        (SBAR (IN so)
          (S
            (NP (PRP he))
            (VP (VBZ reconnizes)
              (NP (PRP it))
              (PP (IN by)
                (NP
                  (NP (DT the) (NN place))
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (PP
                          (PP (IN in))
                          (, ,) (RB not)
                          (PP (IN by)
                            (NP
                              (NP (DT the) (NN look))
                              (PP (IN of)
                                (NP (DT the) (NN brick))))))))))))))))
    (. .)))

nsubj(tells-2, Instink-1)
root(ROOT-0, tells-2)
dobj(tells-2, him-3)
advmod(is-8, where-4)
det(PLACE-7, the-5)
amod(PLACE-7, exact-6)
nsubj(is-8, PLACE-7)
advcl(tells-2, is-8)
ccomp(tells-2, is-8)
det(brick-11, the-10)
prep_for(is-8, brick-11)
aux(be-13, to-12)
vmod(brick-11, be-13)
prep(be-13, in-14)
mark(reconnizes-19, so-17)
nsubj(reconnizes-19, he-18)
advcl(tells-2, reconnizes-19)
ccomp(tells-2, reconnizes-19)
conj_and(is-8, reconnizes-19)
dobj(reconnizes-19, it-20)
det(place-23, the-22)
prep_by(reconnizes-19, place-23)
prep_in('s-25, place-23)
nsubj('s-25, it-24)
rcmod(place-23, 's-25)
neg('s-25, not-28)
det(look-31, the-30)
prep_by('s-25, look-31)
det(brick-34, the-33)
prep_of(look-31, brick-34)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (NN knowledge) (, ,) (RB not) (NN instink)))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB know)
        (PP
          (ADVP
            (NP (DT the) (NN brick))
            (RB again))
          (IN by)
          (NP
            (NP (DT the) (NN look))
            (PP (IN of)
              (NP (PRP it)))))
        (NP
          (NP (DT the) (JJ next) (NN time))
          (PRN
            (S
              (NP (PRP he))
              (VP (VBN seen)
                (NP (PRP it)))))
          (: --)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP he))
              (VP (VBD did) (RB n't)))))))
    (. .)))

mark(instink-7, If-1)
nsubj(instink-7, it-2)
cop(instink-7, was-3)
nn(instink-7, knowledge-4)
neg(instink-7, not-6)
advcl(know-11, instink-7)
nsubj(know-11, he-9)
aux(know-11, would-10)
root(ROOT-0, know-11)
det(brick-13, the-12)
npadvmod(again-14, brick-13)
advmod(know-11, again-14)
det(look-17, the-16)
prep_by(know-11, look-17)
prep_of(look-17, it-19)
det(time-22, the-20)
amod(time-22, next-21)
dobj(know-11, time-22)
dobj(did-29, time-22)
nsubj(seen-24, he-23)
dep(time-22, seen-24)
dobj(seen-24, it-25)
nsubj(did-29, he-28)
rcmod(time-22, did-29)
neg(did-29, n't-30)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ shows)
      (SBAR (IN that)
        (S
          (SBAR (IN for)
            (S
              (NP (PDT all) (DT the))
              (VP (VB brag)
                (S
                  (NP (PRP you))
                  (VP (VB hear)
                    (PP (IN about)
                      (NP (NN knowledge)))
                    (S
                      (VP (VBG being)
                        (NP (PDT such) (DT a) (JJ wonderful) (NN thing)))))))))
          (, ,)
          (NP (NN instink))
          (VP (VBZ is)
            (ADJP (IN worth) (RB forty)
              (PP (IN of)
                (NP (PRP it))))
            (PP (IN for)
              (NP (JJ real) (NNS unerringness)))))))
    (. .)))

dep(shows-3, So-1)
nsubj(shows-3, it-2)
root(ROOT-0, shows-3)
mark(forty-22, that-4)
mark(brag-8, for-5)
predet(the-7, all-6)
nsubj(brag-8, the-7)
advcl(forty-22, brag-8)
nsubj(hear-10, you-9)
ccomp(brag-8, hear-10)
prep_about(hear-10, knowledge-12)
cop(thing-17, being-13)
predet(thing-17, such-14)
det(thing-17, a-15)
amod(thing-17, wonderful-16)
xcomp(hear-10, thing-17)
nsubj(forty-22, instink-19)
cop(forty-22, is-20)
dep(forty-22, worth-21)
ccomp(shows-3, forty-22)
prep_of(forty-22, it-24)
amod(unerringness-27, real-26)
prep_for(forty-22, unerringness-27)

(ROOT
  (S
    (NP (NNP Jim))
    (VP (VBZ says)
      (NP (DT the) (JJ same)))
    (. .)))

nsubj(says-2, Jim-1)
root(ROOT-0, says-2)
det(same-4, the-3)
dobj(says-2, same-4)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP we))
        (VP (VBD got)
          (SBAR
            (S
              (S
                (S
                  (ADVP (RB back))
                  (NP (NNP Jim))
                  (VP
                    (VP (VBD dropped)
                      (PRT (RP down)))
                    (CC and)
                    (VP (VBD took)
                      (NP (PRP us))
                      (PP (IN in)))))
                (, ,)
                (CC and)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP
                      (NP (DT a) (JJ young) (NN man))
                      (PP
                        (ADVP (RB there))
                        (PP (IN with)
                          (NP
                            (NP (DT a) (JJ red) (NN skullcap)
                              (CC and)
                              (NN tassel))
                            (PP (IN on))))
                        (CC and)
                        (PP
                          (NP
                            (NP (DT a) (JJ beautiful) (NN silk) (NN jacket))
                            (CC and)
                            (NP
                              (NP (JJ baggy) (NNS trousers))
                              (PP (IN with)
                                (NP
                                  (NP
                                    (NP (DT a) (NN shawl))
                                    (PP (IN around)
                                      (NP
                                        (NP (PRP$ his) (NN waist)
                                          (CC and)
                                          (NNS pistols))
                                        (PP (IN in)
                                          (NP (PRP it)))))
                                    (SBAR
                                      (WHNP (WDT that))
                                      (S
                                        (VP
                                          (VP (MD could)
                                            (VP (VB talk)
                                              (NP (NNP English))))
                                          (CC and)
                                          (VP (VBD wanted)
                                            (S
                                              (VP (TO to)
                                                (VP
                                                  (VP (VB hire)
                                                    (PP (TO to)
                                                      (NP (PRP us)))
                                                    (PP (IN as)
                                                      (NP (NN guide))))
                                                  (CC and)
                                                  (VP (VB take)
                                                    (NP (PRP us))
                                                    (PP (TO to)
                                                      (NP (NNP Mecca)
                                                        (CC and)
                                                        (NNP Medina))))))))))))
                                  (CC and)
                                  (NP
                                    (NP (NNP Central) (NNP Africa))
                                    (CC and)
                                    (NP (NNS everywheres)))))))
                          (IN for)
                          (NP (DT a) (NN half)))
                        (NP
                          (NP (DT a) (NN dollar))
                          (NP (DT a) (NN day))))))))
              (CC and)
              (S
                (S
                  (NP (PRP$ his))
                  (VP (VBP keep)))
                (, ,)
                (CC and)
                (S
                  (S
                    (NP (PRP we))
                    (VP
                      (VP (VBD hired)
                        (NP (PRP him)))
                      (CC and)
                      (VP (VBD left))
                      (, ,)
                      (CC and)
                      (VP (VBD piled)
                        (PP (IN on)
                          (NP (DT the) (NN power))))))
                  (, ,)
                  (CC and)
                  (S
                    (PP (IN by)
                      (NP (DT the) (NN time)))
                    (NP (PRP we))
                    (VP (VBD was)
                      (PP (IN through)
                        (NP (NN dinner))))))))))))
    (NP (PRP we))
    (VP (VBD was)
      (PP (IN over)
        (NP (DT the) (NN place)))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NNPS Israelites))
          (VP (VBD crossed)
            (NP (DT the) (NNP Red) (NNP Sea))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Pharaoh))
                (VP
                  (VP (VBD tried)
                    (S
                      (VP (TO to)
                        (VP (VB overtake)
                          (NP (PRP them))))))
                  (CC and)
                  (VP (VBD was)
                    (VP (VBN caught)
                      (PP (IN by)
                        (NP (DT the) (NNS waters))))))))))))
    (. .)))

advmod(got-3, When-1)
nsubj(got-3, we-2)
advcl(was-102, got-3)
advmod(dropped-6, back-4)
nsubj(dropped-6, Jim-5)
nsubj(took-9, Jim-5)
dep(got-3, dropped-6)
prt(dropped-6, down-7)
dep(got-3, took-9)
conj_and(dropped-6, took-9)
dobj(took-9, us-10)
prep(took-9, in-11)
expl(was-15, there-14)
dep(got-3, was-15)
conj_and(dropped-6, was-15)
det(man-18, a-16)
amod(man-18, young-17)
nsubj(was-15, man-18)
nsubj(was-15, man-18')
conj_and(man-18, man-18')
advmod(man-18, there-19)
det(skullcap-23, a-21)
amod(skullcap-23, red-22)
prep_with(man-18, skullcap-23)
prep_with(man-18, tassel-25)
conj_and(skullcap-23, tassel-25)
prep(skullcap-23, on-26)
det(jacket-31, a-28)
amod(jacket-31, beautiful-29)
nn(jacket-31, silk-30)
npadvmod(man-18, jacket-31)
amod(trousers-34, baggy-33)
npadvmod(man-18, trousers-34)
conj_and(jacket-31, trousers-34)
det(shawl-37, a-36)
prep_with(trousers-34, shawl-37)
nsubj(talk-47, shawl-37)
nsubj(wanted-50, shawl-37)
nsubj(hire-52, shawl-37)
poss(waist-40, his-39)
prep_around(shawl-37, waist-40)
prep_around(shawl-37, pistols-42)
conj_and(waist-40, pistols-42)
prep_in(waist-40, it-44)
aux(talk-47, could-46)
rcmod(shawl-37, talk-47)
dobj(talk-47, English-48)
rcmod(shawl-37, wanted-50)
conj_and(talk-47, wanted-50)
aux(hire-52, to-51)
xcomp(wanted-50, hire-52)
prep_to(hire-52, us-54)
prep_as(hire-52, guide-56)
xcomp(wanted-50, take-58)
conj_and(hire-52, take-58)
dobj(take-58, us-59)
prep_to(take-58, Mecca-61)
prep_to(take-58, Medina-63)
conj_and(Mecca-61, Medina-63)
nn(Africa-66, Central-65)
prep_with(trousers-34, Africa-66)
conj_and(shawl-37, Africa-66)
nsubj(talk-47, Africa-66)
conj_and(shawl-37, everywheres-68)
conj_and(Africa-66, everywheres-68)
det(half-71, a-70)
prep_for(man-18', half-71)
det(dollar-73, a-72)
pobj(man-18, dollar-73)
det(day-75, a-74)
dep(dollar-73, day-75)
nsubj(keep-78, his-77)
dep(got-3, keep-78)
conj_and(dropped-6, keep-78)
nsubj(hired-82, we-81)
nsubj(left-85, we-81)
nsubj(piled-88, we-81)
conj_and(dropped-6, hired-82)
conj_and(keep-78, hired-82)
dobj(hired-82, him-83)
conj_and(keep-78, left-85)
conj_and(hired-82, left-85)
conj_and(keep-78, piled-88)
conj_and(hired-82, piled-88)
det(power-91, the-90)
prep_on(piled-88, power-91)
det(time-96, the-95)
prep_by(was-98, time-96)
nsubj(was-98, we-97)
conj_and(keep-78, was-98)
conj_and(hired-82, was-98)
prep_through(was-98, dinner-100)
nsubj(was-102, we-101)
root(ROOT-0, was-102)
det(place-105, the-104)
prep_over(was-102, place-105)
advmod(crossed-109, where-106)
det(Israelites-108, the-107)
nsubj(crossed-109, Israelites-108)
advcl(was-102, crossed-109)
det(Sea-112, the-110)
nn(Sea-112, Red-111)
dobj(crossed-109, Sea-112)
advmod(tried-115, when-113)
nsubj(tried-115, Pharaoh-114)
nsubj(overtake-117, Pharaoh-114)
nsubjpass(caught-121, Pharaoh-114)
advcl(crossed-109, tried-115)
aux(overtake-117, to-116)
xcomp(tried-115, overtake-117)
dobj(overtake-117, them-118)
auxpass(caught-121, was-120)
advcl(crossed-109, caught-121)
conj_and(tried-115, caught-121)
det(waters-124, the-123)
agent(caught-121, waters-124)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD stopped))
        (, ,) (RB then) (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (DT a) (JJ good) (NN look))
            (PP (IN at)
              (NP (DT the) (NN place)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBN done)
        (S
          (NP (NNP Jim))
          (ADJP (JJ good)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(stopped-2, We-1)
nsubj(had-7, We-1)
root(ROOT-0, stopped-2)
advmod(stopped-2, then-4)
conj_and(stopped-2, then-4)
conj_and(stopped-2, had-7)
det(look-10, a-8)
amod(look-10, good-9)
dobj(had-7, look-10)
det(place-13, the-12)
prep_at(look-10, place-13)
nsubj(done-17, it-16)
conj_and(stopped-2, done-17)
nsubj(good-19, Jim-18)
nsubj(see-21, Jim-18)
xcomp(done-17, good-19)
aux(see-21, to-20)
xcomp(good-19, see-21)
dobj(see-21, it-22)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB see)
                (NP
                  (NP
                    (NP (PRP it))
                    (NP (DT all))
                    (, ,)
                    (ADVP (RB now)))
                  (, ,)
                  (NP
                    (NP (RB just) (DT the) (NN way))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD happened))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP
          (VP (VB see)
            (NP
              (NP
                (NP (DT the) (NNPS Israelites))
                (VP (VBG walking)
                  (PRT (RP along))
                  (PP (IN between)
                    (NP
                      (NP (DT the) (NNS walls))
                      (PP (IN of)
                        (NP (NN water)))))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NNP Egyptians))
                (VP (VBG coming) (, ,)
                  (PP (IN from)
                    (ADVP (RB away)))
                  (PP (IN off)
                    (NP (NN yonder)))
                  (, ,)
                  (S
                    (VP (VBG hurrying)
                      (NP
                        (NP (DT all))
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (MD could)))))))))))
          (, ,)
          (CC and)
          (VP (VB see)
            (S
              (NP (PRP them))
              (VP (VB start)
                (PRT (RP in))
                (SBAR
                  (SBAR (IN as)
                    (S
                      (NP (DT the) (NNPS Israelites))
                      (VP (VBD went)
                        (PRT (RP out)))))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP they))
                      (VP (VBD was)
                        (ADVP (DT all) (IN in)))))))))
          (, ,)
          (VP (VB see)
            (NP (DT the) (NNS walls) (NN tumble))
            (ADVP (RB together)))
          (CC and)
          (VP (VB drown)
            (NP
              (NP (DT the) (JJ last) (NN man))
              (PP (IN of)
                (NP (PRP them))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(see-5, he-3)
aux(see-5, could-4)
ccomp(said-2, see-5)
dobj(see-5, it-6)
dep(it-6, all-7)
advmod(it-6, now-9)
advmod(way-13, just-11)
det(way-13, the-12)
appos(it-6, way-13)
nsubj(happened-15, it-14)
rcmod(way-13, happened-15)
nsubj(see-19, he-17)
nsubj(see-46, he-17)
nsubj(see-64, he-17)
nsubj(drown-70, he-17)
aux(see-19, could-18)
parataxis(said-2, see-19)
det(Israelites-21, the-20)
dobj(see-19, Israelites-21)
vmod(Israelites-21, walking-22)
prt(walking-22, along-23)
det(walls-26, the-25)
prep_between(walking-22, walls-26)
prep_of(walls-26, water-28)
det(Egyptians-32, the-31)
dobj(see-19, Egyptians-32)
conj_and(Israelites-21, Egyptians-32)
vmod(Egyptians-32, coming-33)
prepc_away_from(coming-33, away-36)
prep_off(coming-33, yonder-38)
vmod(coming-33, hurrying-40)
dobj(hurrying-40, all-41)
nsubj(could-43, they-42)
rcmod(all-41, could-43)
parataxis(said-2, see-46)
conj_and(see-19, see-46)
nsubj(start-48, them-47)
ccomp(see-46, start-48)
prt(start-48, in-49)
mark(went-53, as-50)
det(Israelites-52, the-51)
nsubj(went-53, Israelites-52)
advcl(start-48, went-53)
prt(went-53, out-54)
advmod(was-60, then-57)
advmod(was-60, when-58)
nsubj(was-60, they-59)
advcl(start-48, was-60)
conj_and(went-53, was-60)
dep(in-62, all-61)
advmod(was-60, in-62)
parataxis(said-2, see-64)
conj_and(see-19, see-64)
det(tumble-67, the-65)
nn(tumble-67, walls-66)
dobj(see-64, tumble-67)
advmod(see-64, together-68)
parataxis(said-2, drown-70)
conj_and(see-19, drown-70)
det(man-73, the-71)
amod(man-73, last-72)
dobj(drown-70, man-73)
prep_of(man-73, them-75)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP
        (VP (VBD piled)
          (PP (IN on)
            (NP (DT the) (NN power)))
          (ADVP (RB again)))
        (CC and)
        (VP
          (VP (VBD rushed)
            (PRT (RP away)))
          (CC and)
          (VP (VBD huvvered)
            (PP (IN over)
              (NP (NNP Mount) (NNP Sinai))))
          (, ,)
          (CC and)
          (VP (VBD saw)
            (NP (DT the) (NN place))
            (SBAR
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (NNP Moses))
                  (VP (VBD broke)
                    (NP
                      (NP (DT the) (NNS tables))
                      (PP (IN of)
                        (NP (NN stone)))))))
              (, ,)
              (CC and)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP
                    (NP (DT the) (NNS children))
                    (PP (IN of)
                      (NP (NNP Israel))))
                  (VP
                    (VP (VBD camped)
                      (PP (IN in)
                        (NP (DT the) (NN plain))))
                    (CC and)
                    (VP (VBD worshiped)
                      (NP (DT the) (JJ golden) (NN calf)))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was) (RB all)
          (ADJP
            (ADJP (RB just) (RB as) (JJ interesting))
            (SBAR (IN as)
              (S
                (VP (MD could)
                  (VP (VB be))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN guide))
        (VP (VBD knowed)
          (NP (DT every) (NN place))
          (ADVP
            (ADVP (RB as) (RB well))
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBD knowed)
                  (NP (DT the) (NN village))
                  (PP (IN at)
                    (NP (NN home))))))))))
    (. .)))

advmod(piled-3, Then-1)
nsubj(piled-3, we-2)
nsubj(rushed-9, we-2)
root(ROOT-0, piled-3)
det(power-6, the-5)
prep_on(piled-3, power-6)
advmod(piled-3, again-7)
conj_and(piled-3, rushed-9)
prt(rushed-9, away-10)
conj_and(piled-3, huvvered-12)
conj_and(rushed-9, huvvered-12)
nn(Sinai-15, Mount-14)
prep_over(huvvered-12, Sinai-15)
conj_and(piled-3, saw-18)
conj_and(rushed-9, saw-18)
det(place-20, the-19)
dobj(saw-18, place-20)
advmod(broke-23, where-21)
nsubj(broke-23, Moses-22)
advcl(saw-18, broke-23)
det(tables-25, the-24)
dobj(broke-23, tables-25)
prep_of(tables-25, stone-27)
advmod(camped-35, where-30)
det(children-32, the-31)
nsubj(camped-35, children-32)
nsubj(worshiped-40, children-32)
prep_of(children-32, Israel-34)
advcl(saw-18, camped-35)
conj_and(broke-23, camped-35)
det(plain-38, the-37)
prep_in(camped-35, plain-38)
conj_and(broke-23, worshiped-40)
conj_and(camped-35, worshiped-40)
det(calf-43, the-41)
amod(calf-43, golden-42)
dobj(worshiped-40, calf-43)
nsubj(interesting-51, it-46)
cop(interesting-51, was-47)
advmod(interesting-51, all-48)
advmod(interesting-51, just-49)
advmod(interesting-51, as-50)
conj_and(piled-3, interesting-51)
mark(be-54, as-52)
aux(be-54, could-53)
dep(interesting-51, be-54)
det(guide-58, the-57)
nsubj(knowed-59, guide-58)
conj_and(piled-3, knowed-59)
conj_and(interesting-51, knowed-59)
det(place-61, every-60)
dobj(knowed-59, place-61)
advmod(well-63, as-62)
mwe(well-63, as-62)
advmod(knowed-59, well-63)
mark(knowed-66, as-64)
nsubj(knowed-66, I-65)
advcl(well-63, knowed-66)
ccomp(well-63, knowed-66)
det(village-68, the-67)
dobj(knowed-66, village-68)
prep_at(knowed-66, home-70)

(ROOT
  (S (CC But)
    (S
      (NP (PRP we))
      (VP (VBD had)
        (NP (DT an) (NN accident))
        (, ,)
        (ADVP (RB now))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD fetched)
        (NP (PDT all) (DT the) (NNS plans))
        (PP (TO to)
          (NP (DT a) (NN standstill)))))
    (. .)))

nsubj(had-3, we-2)
root(ROOT-0, had-3)
det(accident-5, an-4)
dobj(had-3, accident-5)
advmod(had-3, now-7)
nsubj(fetched-11, it-10)
conj_and(had-3, fetched-11)
predet(plans-14, all-12)
det(plans-14, the-13)
dobj(fetched-11, plans-14)
det(standstill-17, a-16)
prep_to(fetched-11, standstill-17)

(ROOT
  (S
    (NP
      (NP (NNP Tom) (POS 's))
      (ADJP (JJ old) (JJ ornery))
      (JJ corn-cob) (NN pipe))
    (VP
      (VP (VBD had)
        (VP
          (VP (VBN got)
            (S
              (ADJP (RB so) (JJ old))))
          (CC and)
          (VP (VBN swelled)
            (CC and)
            (VBN warped)
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP
                  (VP (MD could) (RB n't)
                    (VP (VB hold)
                      (ADVP (RB together))
                      (ADVP (DT any) (RBR longer))
                      (, ,)
                      (PP (IN notwithstanding)
                        (NP (DT the) (NNS strings)
                          (CC and)
                          (NNS bandages)))))
                  (, ,)
                  (CC but)
                  (VP (VBD caved)
                    (PRT (RP in)))))))))
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP (NNS pieces)))))
    (. .)))

poss(pipe-6, Tom-1)
amod(ornery-4, old-3)
amod(pipe-6, ornery-4)
amod(pipe-6, corn-cob-5)
nsubj(got-8, pipe-6)
nsubj(swelled-12, pipe-6)
nsubj(went-34, pipe-6)
aux(got-8, had-7)
root(ROOT-0, got-8)
advmod(old-10, so-9)
acomp(got-8, old-10)
conj_and(got-8, swelled-12)
conj_and(got-8, warped-14)
conj_and(swelled-12, warped-14)
mark(hold-19, that-15)
nsubj(hold-19, she-16)
nsubj(caved-31, she-16)
aux(hold-19, could-17)
neg(hold-19, n't-18)
ccomp(swelled-12, hold-19)
advmod(hold-19, together-20)
dep(longer-22, any-21)
advmod(hold-19, longer-22)
det(strings-26, the-25)
prep_notwithstanding(hold-19, strings-26)
prep_notwithstanding(hold-19, bandages-28)
conj_and(strings-26, bandages-28)
ccomp(swelled-12, caved-31)
conj_but(hold-19, caved-31)
prt(caved-31, in-32)
conj_and(got-8, went-34)
prep_to(went-34, pieces-36)

(ROOT
  (S
    (NP (NNP Tom) (PRP he))
    (VP (VBD did) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WDT WHAT))
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (. .)))

nsubj(know-5, Tom-1)
dep(Tom-1, he-2)
aux(know-5, did-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
nsubj(do-8, WHAT-6)
aux(do-8, to-7)
ccomp(know-5, do-8)
xcomp(know-5, do-8)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN professor) (POS 's))
        (NN pipe))
      (VP (MD would) (RB n't)
        (VP (VB answer))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBD war) (RB n't)
          (VP
            (NP (NN anything))
            (PP (CC but)
              (NP (DT a) (NN mershum))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP
            (NP (DT a) (NN person))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's)
                  (VP (VBN got)
                    (S
                      (VP (VBN used)
                        (PP (TO to)
                          (NP (DT a) (NN cob) (NN pipe))))))))))
          (VP (VBZ knows)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ lays)
                  (NP
                    (NP (DT a) (JJ long) (NNS ways))
                    (PP (IN over)
                      (NP
                        (NP (PDT all) (DT the) (JJ other) (NNS pipes))
                        (PP (IN in)
                          (NP (DT this) (NN world)))))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (MD ca) (RB n't)
            (VP (VB git)
              (S
                (NP (PRP him))
                (VP (TO to)
                  (VP (VB smoke)
                    (NP (DT any) (JJ other))))))))))
    (. .)))

det(professor-2, The-1)
poss(pipe-4, professor-2)
nsubj(answer-7, pipe-4)
aux(answer-7, would-5)
neg(answer-7, n't-6)
root(ROOT-0, answer-7)
nsubj(war-10, it-9)
parataxis(answer-7, war-10)
neg(war-10, n't-11)
dep(war-10, anything-12)
prep(anything-12, but-13)
det(mershum-15, a-14)
pobj(but-13, mershum-15)
det(person-19, a-18)
nsubjpass(got-22, person-19)
nsubj(knows-28, person-19)
auxpass(got-22, 's-21)
rcmod(person-19, got-22)
dep(got-22, used-23)
det(pipe-27, a-25)
nn(pipe-27, cob-26)
prep_to(used-23, pipe-27)
parataxis(answer-7, knows-28)
conj_and(war-10, knows-28)
nsubj(lays-30, it-29)
ccomp(knows-28, lays-30)
det(ways-33, a-31)
amod(ways-33, long-32)
dobj(lays-30, ways-33)
predet(pipes-38, all-35)
det(pipes-38, the-36)
amod(pipes-38, other-37)
prep_over(ways-33, pipes-38)
det(world-41, this-40)
prep_in(pipes-38, world-41)
nsubj(git-47, you-44)
aux(git-47, ca-45)
neg(git-47, n't-46)
conj_and(war-10, git-47)
conj_and(knows-28, git-47)
dobj(git-47, him-48)
nsubj(smoke-50, him-48)
aux(smoke-50, to-49)
xcomp(git-47, smoke-50)
det(other-52, any-51)
dobj(smoke-50, other-52)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would) (RB n't)
        (VP (VB take)
          (NP (NN mine)))))
    (, ,)
    (NP (PRP I))
    (VP (MD could) (RB n't)
      (VP (VB persuade)
        (NP (PRP him))))
    (. .)))

nsubj(take-4, He-1)
aux(take-4, would-2)
neg(take-4, n't-3)
ccomp(persuade-10, take-4)
dobj(take-4, mine-5)
nsubj(persuade-10, I-7)
aux(persuade-10, could-8)
neg(persuade-10, n't-9)
root(ROOT-0, persuade-10)
dobj(persuade-10, him-11)

(ROOT
  (S (IN So)
    (ADVP (RB there))
    (NP (PRP he))
    (VP (VBD was))
    (. .)))

dep(was-4, So-1)
advmod(was-4, there-2)
nsubj(was-4, he-3)
root(ROOT-0, was-4)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP
          (VP (VBD thought)
            (NP (PRP it))
            (PRT (RP over)))
          (, ,)
          (CC and)
          (VP (VBD said)
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD must)
                  (VP
                    (VP (VB scour)
                      (PRT (RP around)))
                    (CC and)
                    (VP (VB see)
                      (SBAR (IN if)
                        (S
                          (NP (PRP we))
                          (VP (MD could)
                            (VP (VB roust)
                              (PRT (RP out))
                              (NP (CD one))
                              (PP
                                (PP (IN in)
                                  (NP (NNP Egypt)
                                    (CC or)
                                    (NNP Arabia)))
                                (CC or)
                                (RB around)
                                (PP (IN in)
                                  (NP
                                    (NP (DT some))
                                    (PP (IN of)
                                      (NP (DT these) (NNS countries))))))))))))))))))
      (, ,)
      (CC but)
      (S
        (NP (DT the) (NN guide))
        (VP (VBD said)
          (SBAR
            (S
              (INTJ (UH no))
              (, ,)
              (NP (PRP it))
              (VP (VBD war) (RB n't)
                (NP (DT no) (NN use))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD did) (RB n't)
      (VP (VB have)
        (NP (PRP them))))
    (. .)))

nsubj(thought-2, He-1)
nsubj(said-7, He-1)
ccomp(have-47, thought-2)
dobj(thought-2, it-3)
prt(thought-2, over-4)
conj_and(thought-2, said-7)
ccomp(have-47, said-7)
nsubj(scour-10, we-8)
nsubj(see-13, we-8)
aux(scour-10, must-9)
ccomp(said-7, scour-10)
prt(scour-10, around-11)
ccomp(said-7, see-13)
conj_and(scour-10, see-13)
mark(roust-17, if-14)
nsubj(roust-17, we-15)
aux(roust-17, could-16)
advcl(see-13, roust-17)
prt(roust-17, out-18)
dobj(roust-17, one-19)
prep(roust-17, in-20)
pobj(in-20, Egypt-21)
pobj(in-20, Arabia-23)
conj_or(Egypt-21, Arabia-23)
prep(roust-17, around-25)
conj_or(in-20, around-25)
dep(in-20, in-26)
pobj(in-26, some-27)
det(countries-30, these-29)
prep_of(some-27, countries-30)
det(guide-34, the-33)
nsubj(said-35, guide-34)
conj_but(thought-2, said-35)
ccomp(have-47, said-35)
discourse(war-39, no-36)
nsubj(war-39, it-38)
ccomp(said-35, war-39)
neg(war-39, n't-40)
neg(use-42, no-41)
dobj(war-39, use-42)
nsubj(have-47, they-44)
aux(have-47, did-45)
neg(have-47, n't-46)
root(ROOT-0, have-47)
dobj(have-47, them-48)

(ROOT
  (S (CC So)
    (S
      (NP (NNP Tom))
      (VP (VBD was)
        (ADJP (RB pretty) (JJ glum))
        (PP (IN for)
          (NP (DT a) (JJ little) (NN while)))))
    (, ,) (RB then)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD chirked)
          (PRT (RP up)))
        (CC and)
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD 'd)
                (VP (VBN got)
                  (NP
                    (NP (DT the) (NN idea)
                      (CC and)
                      (NN knowed))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (TO to)
                          (VP (VB do)))))))))))))
    (. .)))

cc(glum-5, So-1)
nsubj(glum-5, Tom-2)
cop(glum-5, was-3)
advmod(glum-5, pretty-4)
root(ROOT-0, glum-5)
det(while-9, a-7)
amod(while-9, little-8)
prep_for(glum-5, while-9)
advmod(chirked-13, then-11)
nsubj(chirked-13, he-12)
nsubj(said-16, he-12)
parataxis(glum-5, chirked-13)
prt(chirked-13, up-14)
parataxis(glum-5, said-16)
conj_and(chirked-13, said-16)
nsubj(got-19, he-17)
aux(got-19, 'd-18)
ccomp(said-16, got-19)
det(idea-21, the-20)
dobj(got-19, idea-21)
nsubj(do-26, idea-21)
dobj(got-19, knowed-23)
conj_and(idea-21, knowed-23)
nsubj(do-26, knowed-23)
aux(do-26, to-25)
rcmod(idea-21, do-26)
vmod(idea-21, do-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ says) (: :) (`` ``)
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN got)
              (NP (DT another) (JJ corn-cob) (NN pipe)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (UCP
          (NP (DT a) (JJ prime) (CD one))
          (, ,)
          (ADVP (RB too))
          (, ,)
          (CC and)
          (ADJP (RB nearly) (JJ new)))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
nsubj(got-7, I-5)
aux(got-7, 've-6)
ccomp(says-2, got-7)
det(pipe-10, another-8)
amod(pipe-10, corn-cob-9)
dobj(got-7, pipe-10)
nsubj(one-17, it-13)
nsubj(new-23, it-13)
cop(one-17, 's-14)
det(one-17, a-15)
amod(one-17, prime-16)
conj_and(says-2, one-17)
conj_and(says-2, too-19)
advmod(one-17, too-19)
conj_and(one-17, too-19)
advmod(new-23, nearly-22)
conj_and(says-2, new-23)
conj_and(one-17, new-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (VP (VBG laying)
        (PP (IN on)
          (NP
            (NP (DT the) (NN rafter))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's)
                  (ADJP (JJ right)
                    (PP (IN over)
                      (NP
                        (NP (DT the) (NN kitchen) (NN stove))
                        (PP (IN at)
                          (NP
                            (NP (NN home))
                            (PP (IN in)
                              (NP (DT the) (NN village)))))))))))))))
    (. .)))

nsubj(laying-3, It-1)
aux(laying-3, 's-2)
root(ROOT-0, laying-3)
det(rafter-6, the-5)
prep_on(laying-3, rafter-6)
nsubj(right-9, rafter-6)
cop(right-9, 's-8)
rcmod(rafter-6, right-9)
det(stove-13, the-11)
nn(stove-13, kitchen-12)
prep_over(right-9, stove-13)
prep_at(stove-13, home-15)
det(village-18, the-17)
prep_in(home-15, village-18)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Jim))
        (, ,)
        (NP (PRP you))
        (CC and)
        (NP (DT the) (NN guide)))
      (VP (MD will)
        (VP (VB go)
          (CC and)
          (VB get)
          (NP (PRP it)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP me)
        (CC and)
        (NNP Huck))
      (VP (MD will)
        (VP (VB camp)
          (ADVP (RB here))
          (PP (IN on)
            (NP (NNP Mount) (NNP Sinai)))
          (SBAR (IN till)
            (S
              (NP (PRP you))
              (VP (VBP come)
                (ADVP (RB back))))))))
    (. .) ('' '')))

nsubj(go-8, Jim-1)
nsubj(get-10, Jim-1)
conj_and(Jim-1, you-3)
nsubj(go-8, you-3)
det(guide-6, the-5)
conj_and(Jim-1, guide-6)
nsubj(go-8, guide-6)
aux(go-8, will-7)
root(ROOT-0, go-8)
conj_and(go-8, get-10)
dobj(go-8, it-11)
nsubj(camp-18, me-14)
conj_and(me-14, Huck-16)
nsubj(camp-18, Huck-16)
aux(camp-18, will-17)
conj_and(go-8, camp-18)
advmod(camp-18, here-19)
nn(Sinai-22, Mount-21)
prep_on(camp-18, Sinai-22)
mark(come-25, till-23)
nsubj(come-25, you-24)
advcl(camp-18, come-25)
advmod(come-25, back-26)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,)
    (PP (IN Mars)
      (NP (NNP Tom)))
    (, ,)
    (NP (PRP we))
    (VP (MD could) (RB n't)
      (ADVP (RB ever))
      (VP (VB find)
        (NP (NNP de) (NN village))))
    (. .)))

cc(find-11, But-2)
prep_mars(find-11, Tom-5)
nsubj(find-11, we-7)
aux(find-11, could-8)
neg(find-11, n't-9)
advmod(find-11, ever-10)
root(ROOT-0, find-11)
nn(village-13, de-12)
dobj(find-11, village-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB find)
          (NP
            (NP (JJ de) (NN pipe))
            (, ,) (`` `)
            (NP
              (NP (NN case))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBZ knows)
                    (NP
                      (NP (JJ de) (NN kitchen))
                      (, ,)
                      (CC but)
                      (NP (PRP$ my) (NN lan)))))))
            ('' ')))))
    (, ,)
    (NP (PRP we))
    (VP (MD ca) (RB n't)
      (ADVP (RB ever))
      (VP (VB find)
        (NP
          (NP (JJ de) (NN village))
          (, ,)
          (NP (NNP nur) (NNP Sent) (NNP Louis))
          (, ,)
          (NP (NN nur) (NN none) (NN o))
          ('' '))
        (NP (DT dem) (NNS places))))
    (. .)))

nsubj(find-3, I-1)
aux(find-3, could-2)
ccomp(find-23, find-3)
amod(pipe-5, de-4)
dobj(find-3, pipe-5)
dep(pipe-5, case-8)
nsubj(knows-10, I-9)
rcmod(case-8, knows-10)
amod(kitchen-12, de-11)
dobj(knows-10, kitchen-12)
poss(lan-16, my-15)
dobj(knows-10, lan-16)
conj_but(kitchen-12, lan-16)
nsubj(find-23, we-19)
aux(find-23, ca-20)
neg(find-23, n't-21)
advmod(find-23, ever-22)
root(ROOT-0, find-23)
amod(village-25, de-24)
iobj(find-23, village-25)
nn(Louis-29, nur-27)
nn(Louis-29, Sent-28)
appos(village-25, Louis-29)
nn(o-33, nur-31)
nn(o-33, none-32)
appos(village-25, o-33)
det(places-36, dem-35)
dobj(find-23, places-36)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP
          (NP (JJ de) (NN way))
          (, ,)
          (NP (NNP Mars) (NNP Tom)))))
    (. .) ('' '')))

nsubj(know-4, We-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
amod(way-6, de-5)
dobj(know-4, way-6)
nn(Tom-9, Mars-8)
appos(way-6, Tom-9)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD was)
        (NP (DT a) (NN fact))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD stumped)
        (NP
          (NP (NNP Tom))
          (PP (IN for)
            (NP (DT a) (NN minute))))))
    (. .)))

nsubj(fact-4, That-1)
cop(fact-4, was-2)
det(fact-4, a-3)
root(ROOT-0, fact-4)
nsubj(stumped-8, it-7)
conj_and(fact-4, stumped-8)
dobj(stumped-8, Tom-9)
det(minute-12, a-11)
prep_for(Tom-9, minute-12)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD said) (: :) (`` ``)
      (S
        (S
          (NP (NNP Looky))
          (ADVP (RB here))
          (, ,)
          (NP (PRP it))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN done) (, ,)
                (ADVP (RB sure))))))
        (: ;)
        (CC and)
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB tell)
              (NP (PRP you))
              (NP (WRB how)))))))
    (. .)))

advmod(said-3, Then-1)
nsubj(said-3, he-2)
root(ROOT-0, said-3)
nsubjpass(done-12, Looky-6)
advmod(done-12, here-7)
nsubjpass(done-12, it-9)
aux(done-12, can-10)
auxpass(done-12, be-11)
dep(said-3, done-12)
advmod(done-12, sure-14)
nsubj(tell-19, I-17)
aux(tell-19, 'll-18)
dep(said-3, tell-19)
conj_and(done-12, tell-19)
iobj(tell-19, you-20)
dobj(tell-19, how-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD set)
      (NP
        (NP (PRP$ your)
          (ADJP (JJ compass)
            (CC and)
            (JJ sail))
          (NN west))
        (ADJP (RB as) (JJ straight)))
      (PP (IN as)
        (NP (DT a) (NN dart)))
      (, ,)
      (SBAR (IN till)
        (S
          (NP (PRP you))
          (VP (VBP find)
            (NP (DT the) (NNP United) (NNPS States))))))
    (. .)))

nsubj(set-2, You-1)
root(ROOT-0, set-2)
poss(west-7, your-3)
amod(west-7, compass-4)
conj_and(compass-4, sail-6)
amod(west-7, sail-6)
dobj(set-2, west-7)
advmod(straight-9, as-8)
amod(west-7, straight-9)
det(dart-12, a-11)
prep_as(set-2, dart-12)
mark(find-16, till-14)
nsubj(find-16, you-15)
advcl(set-2, find-16)
det(States-19, the-17)
nn(States-19, United-18)
dobj(find-16, States-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBP ai) (RB n't)
      (NP (DT any) (NN trouble))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP
              (NP (DT the) (JJ first) (NN land))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD 'll)
                    (VP (VB strike)
                      (NP
                        (NP (DT the) (JJ other) (NN side))
                        (PP (IN of)
                          (NP (DT the) (NNP Atlantic)))))))))))))
    (. .)))

nsubj(trouble-5, It-1)
cop(trouble-5, ai-2)
neg(trouble-5, n't-3)
det(trouble-5, any-4)
root(ROOT-0, trouble-5)
mark(land-12, because-7)
nsubj(land-12, it-8)
cop(land-12, 's-9)
det(land-12, the-10)
amod(land-12, first-11)
advcl(trouble-5, land-12)
nsubj(strike-15, you-13)
aux(strike-15, 'll-14)
rcmod(land-12, strike-15)
det(side-18, the-16)
amod(side-18, other-17)
dobj(strike-15, side-18)
det(Atlantic-21, the-20)
prep_of(side-18, Atlantic-21)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ daytime))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP strike)
                  (NP (PRP it))))))))
      (, ,)
      (VP (VB bulge)
        (ADVP (RB right) (RB on))
        (, ,)
        (ADVP (RB straight))
        (PP
          (ADVP (NN west))
          (IN from)
          (NP
            (NP (DT the) (JJ upper) (NN part))
            (PP (IN of)
              (NP (DT the) (NNP Florida) (NN coast)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP
          (NP (DT an) (NN hour))
          (CC and)
          (NP (CD three) (NNS quarters))))
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB hit)
          (NP
            (NP (DT the) (NN mouth))
            (PP (IN of)
              (NP (DT the) (NNP Mississippi))))
          (: --)
          (PP (IN at)
            (NP (DT the) (NN speed)))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG going)
                  (S
                    (VP (TO to)
                      (VP (VB send)
                        (NP (PRP you))))))))))))
    (. .)))

mark(daytime-4, If-1)
nsubj(daytime-4, it-2)
cop(daytime-4, 's-3)
advcl(bulge-10, daytime-4)
advmod(strike-7, when-5)
nsubj(strike-7, you-6)
advcl(daytime-4, strike-7)
dobj(strike-7, it-8)
root(ROOT-0, bulge-10)
advmod(on-12, right-11)
advmod(bulge-10, on-12)
advmod(bulge-10, straight-14)
advmod(bulge-10, west-15)
det(part-19, the-17)
amod(part-19, upper-18)
prep_from(bulge-10, part-19)
det(coast-23, the-21)
nn(coast-23, Florida-22)
prep_of(part-19, coast-23)
det(hour-28, an-27)
prep_in(hit-34, hour-28)
num(quarters-31, three-30)
conj_and(hour-28, quarters-31)
prep_in(hit-34, quarters-31)
nsubj(hit-34, you-32)
aux(hit-34, 'll-33)
conj_and(bulge-10, hit-34)
det(mouth-36, the-35)
dobj(hit-34, mouth-36)
det(Mississippi-39, the-38)
prep_of(mouth-36, Mississippi-39)
det(speed-43, the-42)
prep_at(hit-34, speed-43)
mark(going-47, that-44)
nsubj(going-47, I-45)
nsubj(send-49, I-45)
aux(going-47, 'm-46)
ccomp(hit-34, going-47)
aux(send-49, to-48)
xcomp(going-47, send-49)
dobj(send-49, you-50)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB be)
          (ADJP (RB so) (JJ high))
          (ADVP (RB up)
            (PP (IN in)
              (NP (DT the) (NN air))))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN earth))
              (VP (MD will)
                (VP (VB be)
                  (VP (VBN curved)
                    (S
                      (ADJP (JJ considerable)))))))))))
    (PRN (: --)
      (S
        (NP
          (NP (NN sorter))
          (PP (IN like)
            (NP (DT a) (NN washbowl))))
        (VP (VBD turned)
          (ADVP (RB upside) (RB down))))
      (: --))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB see)
          (NP
            (NP (DT a) (NN raft))
            (PP (IN of)
              (NP
                (NP (NNS rivers))
                (VP (VBG crawling)
                  (ADVP (IN around) (DT every))
                  (SBAR
                    (WHADVP (WDT which) (NN way))
                    (, ,)
                    (S
                      (S
                        (ADVP (RB long) (RB before))
                        (NP (PRP you))
                        (VP (VBP get)
                          (ADVP (RB there))))
                      (, ,)
                      (CC and)
                      (S
                        (NP (PRP you))
                        (VP (MD can)
                          (VP (VB pick)
                            (PRT (RP out))
                            (NP (DT the) (NNP Mississippi))
                            (PP (IN without)
                              (NP (DT any) (NN trouble)))))))))))))))
    (. .)))

nsubj(high-5, You-1)
aux(high-5, 'll-2)
cop(high-5, be-3)
advmod(high-5, so-4)
root(ROOT-0, high-5)
advmod(high-5, up-6)
det(air-9, the-8)
prep_in(up-6, air-9)
mark(curved-15, that-10)
det(earth-12, the-11)
nsubjpass(curved-15, earth-12)
aux(curved-15, will-13)
auxpass(curved-15, be-14)
ccomp(high-5, curved-15)
xcomp(curved-15, considerable-16)
nsubj(turned-22, sorter-18)
det(washbowl-21, a-20)
prep_like(sorter-18, washbowl-21)
dep(high-5, turned-22)
advmod(down-24, upside-23)
advmod(turned-22, down-24)
nsubj(see-29, you-27)
aux(see-29, 'll-28)
conj_and(high-5, see-29)
det(raft-31, a-30)
dobj(see-29, raft-31)
prep_of(raft-31, rivers-33)
vmod(rivers-33, crawling-34)
advmod(crawling-34, around-35)
dep(around-35, every-36)
dep(way-38, which-37)
advmod(get-43, way-38)
advmod(before-41, long-40)
advmod(get-43, before-41)
nsubj(get-43, you-42)
dep(crawling-34, get-43)
advmod(get-43, there-44)
nsubj(pick-49, you-47)
aux(pick-49, can-48)
dep(crawling-34, pick-49)
conj_and(get-43, pick-49)
prt(pick-49, out-50)
det(Mississippi-52, the-51)
dobj(pick-49, Mississippi-52)
det(trouble-55, any-54)
prep_without(pick-49, trouble-55)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (MD can)
        (VP (VB follow)
          (NP (DT the) (NN river))
          (ADVP (RB north) (RB nearly))
          (, ,)
          (NP
            (NP (DT an) (NN hour))
            (CC and)
            (NP (CD three) (NNS quarters)))
          (, ,)
          (SBAR (IN till)
            (S
              (NP (PRP you))
              (VP (VBP see)
                (S
                  (NP (DT the) (NNP Ohio))
                  (VP (VB come)
                    (PRT (RP in))))))))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB look)
              (ADJP (JJ sharp))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (VP (VBG getting) (IN near))))))))))
    (. .)))

advmod(follow-4, Then-1)
nsubj(follow-4, you-2)
aux(follow-4, can-3)
root(ROOT-0, follow-4)
det(river-6, the-5)
dobj(follow-4, river-6)
advmod(nearly-8, north-7)
advmod(follow-4, nearly-8)
det(hour-11, an-10)
dobj(follow-4, hour-11)
num(quarters-14, three-13)
dobj(follow-4, quarters-14)
conj_and(hour-11, quarters-14)
mark(see-18, till-16)
nsubj(see-18, you-17)
advcl(follow-4, see-18)
det(Ohio-20, the-19)
nsubj(come-21, Ohio-20)
ccomp(see-18, come-21)
prt(come-21, in-22)
advmod(want-26, then-24)
nsubj(want-26, you-25)
nsubj(look-28, you-25)
parataxis(follow-4, want-26)
aux(look-28, to-27)
xcomp(want-26, look-28)
acomp(look-28, sharp-29)
mark(getting-34, because-31)
nsubj(getting-34, you-32)
aux(getting-34, 're-33)
advcl(look-28, getting-34)
dep(getting-34, near-35)

(ROOT
  (S
    (ADVP
      (ADVP (RB Away) (RB up))
      (PP (TO to)
        (NP (PRP$ your) (NN left))))
    (NP (PRP you))
    (VP (MD 'll)
      (VP (VB see)
        (NP
          (NP (DT another) (NN thread))
          (VP (VBG coming)
            (PRT (RP in)))
          (: --)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP
                (VP (VBZ 's)
                  (NP (DT the) (NNP Missouri)))
                (CC and)
                (VP (VBZ is)
                  (NP
                    (NP (DT a) (JJ little))
                    (PP (IN above)
                      (NP (NNP St.) (NNP Louis)))))))))))
    (. .)))

advmod(up-2, Away-1)
advmod(see-8, up-2)
poss(left-5, your-4)
prep_to(up-2, left-5)
nsubj(see-8, you-6)
aux(see-8, 'll-7)
root(ROOT-0, see-8)
det(thread-10, another-9)
dobj(see-8, thread-10)
nsubj(Missouri-17, thread-10)
nsubj(little-21, thread-10)
vmod(thread-10, coming-11)
prt(coming-11, in-12)
cop(Missouri-17, 's-15)
det(Missouri-17, the-16)
rcmod(thread-10, Missouri-17)
cop(little-21, is-19)
det(little-21, a-20)
rcmod(thread-10, little-21)
conj_and(Missouri-17, little-21)
nn(Louis-24, St.-23)
prep_above(little-21, Louis-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB come)
        (ADVP (RB down) (JJ low))
        (ADVP (RB then))
        (, ,)
        (SBAR (RB so) (IN as)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB examine)
                (NP (DT the) (NNS villages))
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (VB spin)
                      (PRT (RP along)))))))))))
    (. .)))

nsubj(come-3, You-1)
aux(come-3, 'll-2)
root(ROOT-0, come-3)
advmod(low-5, down-4)
advmod(come-3, low-5)
advmod(come-3, then-6)
advmod(examine-12, so-8)
mark(examine-12, as-9)
nsubj(examine-12, you-10)
aux(examine-12, can-11)
advcl(come-3, examine-12)
det(villages-14, the-13)
dobj(examine-12, villages-14)
mark(spin-17, as-15)
nsubj(spin-17, you-16)
advcl(examine-12, spin-17)
prt(spin-17, along-18)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB pass)
          (NP (RB about) (JJ twenty-five))
          (PP (IN in)
            (NP (DT the) (JJ next) (CD fifteen) (NNS minutes))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB recognize)
          (NP (PRP ours))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP see)
                (NP (PRP it))))))))
    (: --)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't))))
      (, ,)
      (NP (PRP you))
      (VP (MD can)
        (VP
          (VP (VB yell)
            (PRT (RP down)))
          (CC and)
          (VP (VB ask)))))
    (. .) ('' '')))

nsubj(pass-3, You-1)
aux(pass-3, 'll-2)
root(ROOT-0, pass-3)
advmod(twenty-five-5, about-4)
dobj(pass-3, twenty-five-5)
det(minutes-10, the-7)
amod(minutes-10, next-8)
num(minutes-10, fifteen-9)
prep_in(pass-3, minutes-10)
nsubj(recognize-15, you-13)
aux(recognize-15, 'll-14)
conj_and(pass-3, recognize-15)
dobj(recognize-15, ours-16)
advmod(see-19, when-17)
nsubj(see-19, you-18)
advcl(recognize-15, see-19)
dobj(see-19, it-20)
mark(do-25, if-23)
nsubj(do-25, you-24)
advcl(yell-30, do-25)
neg(do-25, n't-26)
nsubj(yell-30, you-28)
nsubj(ask-33, you-28)
aux(yell-30, can-29)
conj_and(pass-3, yell-30)
prt(yell-30, down-31)
conj_and(pass-3, ask-33)
conj_and(yell-30, ask-33)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Ef)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (RB dat) (JJ easy)))))))
    (PRN (, ,)
      (S
        (NP (NNP Mars) (NNP Tom))
        (, ,)
        (NP (PRP I))
        (VP (VBP reckon)
          (SBAR
            (S
              (NP (PRP we))
              (ADVP (RB kin))
              (VP (VBP do)
                (NP (PRP it))
                (: --)
                (NP (NN yassir)))))))
      (, ,))
    (NP (PRP I))
    (VP (VBZ knows)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP kin)))))
    (. .) ('' '')))

dep(knows-21, Ef-2)
nsubj(easy-6, it-3)
cop(easy-6, 's-4)
advmod(easy-6, dat-5)
ccomp(Ef-2, easy-6)
nn(Tom-9, Mars-8)
nsubj(reckon-12, Tom-9)
nsubj(reckon-12, I-11)
parataxis(knows-21, reckon-12)
nsubj(do-15, we-13)
advmod(do-15, kin-14)
ccomp(reckon-12, do-15)
dobj(do-15, it-16)
parataxis(do-15, yassir-18)
nsubj(knows-21, I-20)
root(ROOT-0, knows-21)
nsubj(kin-23, we-22)
ccomp(knows-21, kin-23)

(ROOT
  (S
    (NP (DT The) (NN guide))
    (VP (VBD was)
      (ADJP (JJ sure))
      (PP (IN of)
        (NP (PRP it)))
      (, ,)
      (ADVP (RB too)))
    (, ,)
    (CC and)
    (VP (VBD thought)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB learn)
              (S
                (VP (TO to)
                  (VP (VB stand)
                    (NP (PRP$ his) (NN watch))
                    (PP (IN in)
                      (NP (DT a) (JJ little) (NN while)))))))))))
    (. .)))

det(guide-2, The-1)
nsubj(sure-4, guide-2)
nsubj(thought-11, guide-2)
cop(sure-4, was-3)
root(ROOT-0, sure-4)
prep_of(sure-4, it-6)
advmod(sure-4, too-8)
conj_and(sure-4, thought-11)
mark(learn-15, that-12)
nsubj(learn-15, he-13)
nsubj(stand-17, he-13)
aux(learn-15, could-14)
ccomp(thought-11, learn-15)
aux(stand-17, to-16)
xcomp(learn-15, stand-17)
poss(watch-19, his-18)
dobj(stand-17, watch-19)
det(while-23, a-21)
amod(while-23, little-22)
prep_in(stand-17, while-23)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Jim))
      (VP (MD can)
        (VP (VB learn)
          (S
            (NP (PRP you))
            (NP
              (NP (DT the) (JJ whole) (NN thing))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN half))
                  (NP (DT an) (NN hour)))))))))
    (, ,) ('' '')
    (NP (NNP Tom))
    (VP (VBD said))
    (. .)))

nsubj(learn-4, Jim-2)
aux(learn-4, can-3)
ccomp(said-17, learn-4)
nsubj(thing-8, you-5)
det(thing-8, the-6)
amod(thing-8, whole-7)
xcomp(learn-4, thing-8)
det(half-11, a-10)
prep_in(thing-8, half-11)
det(hour-13, an-12)
dep(half-11, hour-13)
nsubj(said-17, Tom-16)
root(ROOT-0, said-17)

(ROOT
  (S (`` ``)
    (NP (DT This) (NN balloon))
    (VP (VBZ 's)
      (ADJP (RB as) (JJ easy))
      (S
        (VP (TO to)
          (VP (VB manage)
            (PP (IN as)
              (NP (DT a) (NN canoe)))))))
    (. .) ('' '')))

det(balloon-3, This-2)
nsubj(easy-6, balloon-3)
nsubj(manage-8, balloon-3)
cop(easy-6, 's-4)
advmod(easy-6, as-5)
root(ROOT-0, easy-6)
aux(manage-8, to-7)
xcomp(easy-6, manage-8)
det(canoe-11, a-10)
prep_as(manage-8, canoe-11)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD got)
          (PRT (RP out))
          (NP (DT the) (NN chart)))
        (CC and)
        (VP
          (VP (VBD marked)
            (PRT (RP out))
            (NP (DT the) (NN course)))
          (CC and)
          (VP (VBD measured)
            (NP (PRP it)))
          (, ,)
          (CC and)
          (VP (VBZ says) (: :) (`` ``)
            (S
              (VP (TO To)
                (VP (VB go)
                  (ADVP (RB back) (RB west)
                    (SBAR
                      (S
                        (VP (VBZ is)
                          (NP (DT the) (JJS shortest) (NN way)))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP see))
    (. .)))

nsubj(got-2, Tom-1)
nsubj(marked-7, Tom-1)
ccomp(see-29, got-2)
prt(got-2, out-3)
det(chart-5, the-4)
dobj(got-2, chart-5)
conj_and(got-2, marked-7)
ccomp(see-29, marked-7)
prt(marked-7, out-8)
det(course-10, the-9)
dobj(marked-7, course-10)
conj_and(got-2, measured-12)
conj_and(marked-7, measured-12)
dobj(measured-12, it-13)
conj_and(got-2, says-16)
conj_and(marked-7, says-16)
aux(go-20, To-19)
xcomp(says-16, go-20)
advmod(west-22, back-21)
advmod(go-20, west-22)
cop(way-26, is-23)
det(way-26, the-24)
amod(way-26, shortest-25)
dep(west-22, way-26)
nsubj(see-29, you-28)
root(ROOT-0, see-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB only))
      (NP
        (QP (RB about) (CD seven) (CD thousand))
        (NNS miles)))
    (. .)))

nsubj(miles-7, It-1)
cop(miles-7, 's-2)
advmod(miles-7, only-3)
quantmod(thousand-6, about-4)
number(thousand-6, seven-5)
num(miles-7, thousand-6)
root(ROOT-0, miles-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD went)
          (ADVP
            (ADVP (JJ east))
            (, ,)
            (CC and)
            (ADVP (RB so) (RB on)))
          (ADVP (RB around)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB over) (RB twice))
      (ADVP (RB as) (RB far)))
    (. .) ('' '')))

mark(went-3, If-1)
nsubj(went-3, you-2)
advcl('s-12, went-3)
advmod(went-3, east-4)
advmod(on-8, so-7)
advmod(went-3, on-8)
conj_and(east-4, on-8)
advmod(went-3, around-9)
nsubj('s-12, it-11)
root(ROOT-0, 's-12)
advmod(twice-14, over-13)
advmod('s-12, twice-14)
advmod(far-16, as-15)
advmod('s-12, far-16)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (PRN
        (S
          (NP (PRP he))
          (VP (VBZ says)
            (PP (TO to)
              (NP (DT the) (NN guide)))))
        (, ,))
      (`` ``)
      (NP (PRP I))
      (VP (VBP want)
        (S
          (NP (PRP you))
          (VP (DT both) (TO to)
            (VP (VB watch)
              (NP (DT the) (NN tell-tale))
              (PP (DT all) (IN through)
                (NP (DT the) (NNS watches))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB whenever))
        (S
          (NP (PRP it))
          (VP (VBP do) (RB n't)
            (VP (VB mark)
              (NP
                (NP
                  (QP (CD three) (CD hundred))
                  (NNS miles))
                (NP (DT an) (NN hour)))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP go)
        (ADJP
          (ADJP (JJR higher))
          (CC or)
          (ADJP
            (NP (NN drop))
            (JJR lower)))
        (SBAR (IN till)
          (S
            (NP (PRP you))
            (VP (VBP find)
              (NP
                (NP (DT a) (NN storm-current))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (VP (VBG going)
                        (NP (PRP$ your) (NN way))))))))))))
    (. .)))

advmod(want-10, Then-1)
nsubj(says-3, he-2)
parataxis(want-10, says-3)
det(guide-6, the-5)
prep_to(says-3, guide-6)
nsubj(want-10, I-9)
root(ROOT-0, want-10)
dobj(want-10, you-11)
nsubj(watch-14, you-11)
dep(watch-14, both-12)
aux(watch-14, to-13)
ccomp(want-10, watch-14)
xcomp(want-10, watch-14)
det(tell-tale-16, the-15)
dobj(watch-14, tell-tale-16)
dep(watch-14, all-17)
det(watches-20, the-19)
prep_through(watch-14, watches-20)
advmod(mark-27, whenever-23)
nsubj(mark-27, it-24)
aux(mark-27, do-25)
neg(mark-27, n't-26)
advcl(go-35, mark-27)
number(hundred-29, three-28)
num(miles-30, hundred-29)
dobj(mark-27, miles-30)
iobj(mark-27, miles-30)
det(hour-32, an-31)
dep(miles-30, hour-32)
nsubj(go-35, you-34)
conj_and(want-10, go-35)
acomp(go-35, higher-36)
npadvmod(lower-39, drop-38)
acomp(go-35, lower-39)
conj_or(higher-36, lower-39)
mark(find-42, till-40)
nsubj(find-42, you-41)
advcl(go-35, find-42)
det(storm-current-44, a-43)
dobj(find-42, storm-current-44)
nsubj(going-47, storm-current-44)
aux(going-47, 's-46)
rcmod(storm-current-44, going-47)
poss(way-49, your-48)
dobj(going-47, way-49)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (PP
        (NP
          (NP
            (QP (DT a) (CD hundred))
            (NNS miles))
          (NP (DT an) (NN hour)))
        (IN in)
        (NP (DT this) (JJ old) (NN thing)))
      (PP (IN without)
        (NP (DT any) (NN wind)
          (S
            (VP (TO to)
              (VP (VB help)))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
quantmod(hundred-4, a-3)
num(miles-5, hundred-4)
npadvmod('s-2, miles-5)
det(hour-7, an-6)
dep(miles-5, hour-7)
det(thing-11, this-9)
amod(thing-11, old-10)
prep_in('s-2, thing-11)
det(wind-14, any-13)
prep_without('s-2, wind-14)
aux(help-16, to-15)
vmod(wind-14, help-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (JJ two-hundred-mile) (NNS gales)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN found) (, ,)
                (NP
                  (NP (DT any) (NN time))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP want)
                        (PP (TO to)
                          (NP
                            (NP (NN hunt))
                            (PP (IN for)
                              (NP (PRP them)))))))))))))))
    (. .) ('' '')))

expl('s-2, There-1)
root(ROOT-0, 's-2)
amod(gales-4, two-hundred-mile-3)
nsubj('s-2, gales-4)
aux(found-7, to-5)
auxpass(found-7, be-6)
vmod(gales-4, found-7)
det(time-10, any-9)
dobj(found-7, time-10)
nsubj(want-12, you-11)
rcmod(time-10, want-12)
prep_to(want-12, hunt-14)
prep_for(hunt-14, them-16)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD 'll)
      (VP (VB hunt)
        (PP (IN for)
          (NP (PRP them)))
        (, ,)
        (ADVP (RB sir))))
    (. .) ('' '')))

nsubj(hunt-4, We-2)
aux(hunt-4, 'll-3)
root(ROOT-0, hunt-4)
prep_for(hunt-4, them-6)
advmod(hunt-4, sir-8)

(ROOT
  (S (`` ``)
    (VP (VB See)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP do)))))
    (. .)))

root(ROOT-0, See-2)
mark(do-5, that-3)
nsubj(do-5, you-4)
ccomp(See-2, do-5)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (NP (PRP you))
      (VP (MD may)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB go)
                (PRT (RP up))
                (NP
                  (NP (DT a) (NN couple))
                  (PP (IN of)
                    (NP (NNS miles))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD 'll)
        (VP (VB be)
          (VP (VBN p)
            (NP (`` `)
              (NP (NN ison) (NN cold))
              (, ,)
              (CC but)
              (NP
                (NP (JJS most))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN time))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (MD 'll)
                          (VP (VB find)
                            (S
                              (NP (PRP$ your) (NN storm))
                              (ADJP
                                (NP (DT a) (JJ good) (NN deal))
                                (JJR lower)))))))))))))))
    (. .)))

advmod(have-4, Sometimes-1)
nsubj(have-4, you-2)
nsubj(go-6, you-2)
aux(have-4, may-3)
root(ROOT-0, have-4)
aux(go-6, to-5)
xcomp(have-4, go-6)
prt(go-6, up-7)
det(couple-9, a-8)
dobj(go-6, couple-9)
prep_of(couple-9, miles-11)
nsubjpass(p-17, it-14)
aux(p-17, 'll-15)
auxpass(p-17, be-16)
conj_and(have-4, p-17)
nn(cold-20, ison-19)
dobj(p-17, cold-20)
dobj(p-17, most-23)
conj_but(cold-20, most-23)
det(time-26, the-25)
prep_of(most-23, time-26)
nsubj(find-29, you-27)
aux(find-29, 'll-28)
rcmod(time-26, find-29)
poss(storm-31, your-30)
nsubj(lower-35, storm-31)
det(deal-34, a-32)
amod(deal-34, good-33)
npadvmod(lower-35, deal-34)
xcomp(find-29, lower-35)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD can)
          (ADVP (RB only))
          (VP (VB strike)
            (NP (DT a) (NN cyclone))))))
    (: --)
    (NP (DT that))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN ticket))
        (PP (IN for)
          (NP (PRP you)))))
    (. !)))

mark(strike-5, If-1)
nsubj(strike-5, you-2)
aux(strike-5, can-3)
advmod(strike-5, only-4)
advcl(ticket-12, strike-5)
det(cyclone-7, a-6)
dobj(strike-5, cyclone-7)
nsubj(ticket-12, that-9)
cop(ticket-12, 's-10)
det(ticket-12, the-11)
root(ROOT-0, ticket-12)
prep_for(ticket-12, you-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB see)
          (PP (IN by)
            (NP
              (NP (DT the) (NN professor) (POS 's))
              (NNS books)))
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP travel)
                (ADVP (NN west))
                (PP (IN in)
                  (NP (DT these) (NNS latitudes)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP travel)
        (ADJP (JJ low))
        (, ,)
        (ADVP (RB too))))
    (. .) ('' '')))

nsubj(see-3, You-1)
aux(see-3, 'll-2)
root(ROOT-0, see-3)
det(professor-6, the-5)
poss(books-8, professor-6)
prep_by(see-3, books-8)
mark(travel-11, that-9)
nsubj(travel-11, they-10)
ccomp(see-3, travel-11)
advmod(travel-11, west-12)
det(latitudes-15, these-14)
prep_in(travel-11, latitudes-15)
nsubj(travel-19, they-18)
conj_and(see-3, travel-19)
acomp(travel-19, low-20)
advmod(travel-19, too-22)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD ciphered)
        (PP (IN on)
          (NP (DT the) (NN time))))
      (, ,)
      (CC and)
      (VP (VBZ says) (: --) (`` ``)
        (S
          (NP (NNP Seven))
          (NP
            (NP
              (NP (CD thousand) (NNS miles))
              (, ,)
              (NP
                (NP
                  (QP (CD three) (CD hundred))
                  (NNS miles))
                (NP (DT an) (NN hour))))
            (PRN (: --)
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB make)
                    (NP
                      (NP (DT the) (NN trip))
                      (PP (IN in)
                        (NP (DT a) (NN day)))))))
              (: --))
            (NP (JJ twenty-four) (NNS hours))))))
    (. .)))

advmod(ciphered-3, Then-1)
nsubj(ciphered-3, he-2)
nsubj(says-9, he-2)
root(ROOT-0, ciphered-3)
det(time-6, the-5)
prep_on(ciphered-3, time-6)
conj_and(ciphered-3, says-9)
nsubj(miles-14, Seven-12)
num(miles-14, thousand-13)
xcomp(says-9, miles-14)
number(hundred-17, three-16)
num(miles-18, hundred-17)
appos(miles-14, miles-18)
det(hour-20, an-19)
dep(miles-18, hour-20)
nsubj(make-24, you-22)
aux(make-24, can-23)
dep(miles-14, make-24)
det(trip-26, the-25)
dobj(make-24, trip-26)
det(day-29, a-28)
prep_in(trip-26, day-29)
amod(hours-32, twenty-four-31)
dep(miles-14, hours-32)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP (NNP Thursday))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB be)
          (ADVP (RB back))
          (ADVP (RB here))
          (NP (NNP Saturday) (NN afternoon)))))
    (. .)))

nsubj(Thursday-3, This-1)
cop(Thursday-3, is-2)
root(ROOT-0, Thursday-3)
nsubj(afternoon-11, you-5)
aux(afternoon-11, 'll-6)
cop(afternoon-11, be-7)
advmod(afternoon-11, back-8)
advmod(afternoon-11, here-9)
nn(afternoon-11, Saturday-10)
parataxis(Thursday-3, afternoon-11)

(ROOT
  (S
    (S
      (NP (NNP Come))
      (, ,)
      (ADVP (RB now))
      (, ,)
      (VP (VBP hustle)
        (PRT (RP out))
        (NP
          (NP
            (NP (DT some) (NNS blankets))
            (CC and)
            (NP (NN food)))
          (CC and)
          (NP
            (NP (NNS books)
              (CC and)
              (NNS things))
            (PP (IN for)
              (NP
                (NP (PRP me))
                (CC and)
                (NP (NNP Huck))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB start)
          (ADVP (RB right) (RB along)))))
    (. .)))

nsubj(hustle-5, Come-1)
advmod(hustle-5, now-3)
root(ROOT-0, hustle-5)
prt(hustle-5, out-6)
det(blankets-8, some-7)
dobj(hustle-5, blankets-8)
dobj(hustle-5, food-10)
conj_and(blankets-8, food-10)
dobj(hustle-5, books-12)
conj_and(blankets-8, books-12)
conj_and(blankets-8, things-14)
conj_and(books-12, things-14)
prep_for(books-12, me-16)
prep_for(books-12, Huck-18)
conj_and(me-16, Huck-18)
nsubj(start-23, you-21)
aux(start-23, can-22)
conj_and(hustle-5, start-23)
advmod(along-25, right-24)
advmod(start-23, along-25)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN occasion)
          (S
            (VP (TO to)
              (VP (VB fool)
                (PRT (RP around))))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (NP (DT a) (NN smoke))))
    (, ,)
    (CC and)
    (S
      (X (DT the)
        (ADJP (JJR quicker)))
      (NP (PRP you))
      (VP (VBP fetch)
        (NP (DT that) (NN pipe))
        (ADVP (DT the) (RBR better))))
    (. .) ('' '')))

expl(ai-2, There-1)
root(ROOT-0, ai-2)
neg(ai-2, n't-3)
neg(occasion-5, no-4)
nsubj(ai-2, occasion-5)
aux(fool-7, to-6)
vmod(occasion-5, fool-7)
prt(fool-7, around-8)
nsubj(want-11, I-10)
conj_and(ai-2, want-11)
det(smoke-13, a-12)
dobj(want-11, smoke-13)
det(quicker-17, the-16)
dep(fetch-19, quicker-17)
nsubj(fetch-19, you-18)
conj_and(ai-2, fetch-19)
det(pipe-21, that-20)
dobj(fetch-19, pipe-21)
dep(better-23, the-22)
advmod(fetch-19, better-23)

(ROOT
  (S
    (S
      (NP (DT All) (NNS hands))
      (VP (VBD jumped)
        (PP (IN for)
          (NP (DT the) (NNS things)))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (CD eight) (NNS minutes)))
      (S
        (NP (PRP$ our) (NNS things))
        (VP (VBD was)
          (ADVP (RB out))))
      (CC and)
      (S
        (NP (DT the) (NN balloon))
        (VP (VBD was)
          (ADJP (JJ ready)
            (PP (IN for)
              (NP (NNP America)))))))
    (. .)))

det(hands-2, All-1)
nsubj(jumped-3, hands-2)
root(ROOT-0, jumped-3)
det(things-6, the-5)
prep_for(jumped-3, things-6)
num(minutes-11, eight-10)
prep_in(was-14, minutes-11)
poss(things-13, our-12)
nsubj(was-14, things-13)
conj_and(jumped-3, was-14)
advmod(was-14, out-15)
det(balloon-18, the-17)
nsubj(ready-20, balloon-18)
cop(ready-20, was-19)
conj_and(jumped-3, ready-20)
conj_and(was-14, ready-20)
prep_for(ready-20, America-22)

(ROOT
  (S (IN So)
    (S
      (NP (PRP we))
      (VP (VBD shook)
        (S
          (NP (NNS hands))
          (ADJP (JJ good-bye)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tom))
      (VP (VBD gave)
        (NP (PRP$ his) (JJ last) (NNS orders))
        (: :) (`` ``)
        (S
          (NP (PRP It))
          (VP (VBZ 's)
            (NP (CD 10) (NNS minutes))
            (PP (TO to)
              (NP
                (QP (CD 2) (CD P.M.))))
            (ADVP (RB now))))))
    (, ,)
    (S
      (NP (NNP Mount) (NNP Sinai))
      (NP (NN time)))
    (. .)))

dep(shook-3, So-1)
nsubj(shook-3, we-2)
root(ROOT-0, shook-3)
nsubj(good-bye-5, hands-4)
xcomp(shook-3, good-bye-5)
nsubj(gave-9, Tom-8)
conj_and(shook-3, gave-9)
poss(orders-12, his-10)
amod(orders-12, last-11)
dobj(gave-9, orders-12)
nsubj(minutes-18, It-15)
cop(minutes-18, 's-16)
num(minutes-18, 10-17)
dep(gave-9, minutes-18)
number(P.M.-21, 2-20)
prep_to(minutes-18, P.M.-21)
advmod(minutes-18, now-22)
nn(Sinai-25, Mount-24)
dep(time-26, Sinai-25)
conj_and(shook-3, time-26)
parataxis(shook-3, time-26)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (CD 24) (NNS hours)))
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB be)
          (NP (NN home)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD 'll)
        (VP (VB be)
          (NP
            (NP (CD 6) (NN to-morrow) (NN morning))
            (, ,)
            (NP (NN village) (NN time))))))
    (. .)))

num(hours-3, 24-2)
prep_in(home-7, hours-3)
nsubj(home-7, you-4)
aux(home-7, 'll-5)
cop(home-7, be-6)
root(ROOT-0, home-7)
nsubj(morning-15, it-10)
aux(morning-15, 'll-11)
cop(morning-15, be-12)
num(morning-15, 6-13)
nn(morning-15, to-morrow-14)
conj_and(home-7, morning-15)
nn(time-18, village-17)
appos(morning-15, time-18)

(ROOT
  (S
    (SBAR
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP
            (VP (VB strike)
              (NP (DT the) (NN village)))
            (, ,)
            (VP (VB land)
              (NP
                (NP (DT a) (JJ little) (NN back))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN top))
                    (PP (IN of)
                      (NP (DT the) (NN hill))))))
              (, ,)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS woods))
                  (, ,)
                  (ADVP (IN out)
                    (PP (IN of)
                      (NP
                        (NP (NN sight))
                        (: ;)
                        (SBAR
                          (S
                            (ADVP (RB then))
                            (NP (PRP you))
                            (VP (VBP rush)
                              (PRT (RP down)))))
                        (, ,))))
                  (NP (NNP Jim)))))
            (, ,)
            (CC and)
            (VP (VB shove)
              (NP (DT these) (NNS letters))
              (PP (IN in)
                (NP (DT the) (NN post-office)))))))
      (, ,)
      (CC and)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP see)
            (NP
              (NP (NN anybody))
              (VP (VBG stirring)))))))
    (, ,)
    (VP (VB pull)
      (NP (PRP$ your) (NN slouch))
      (ADVP (RB down)
        (PP (IN over)
          (NP (PRP$ your) (NN face))))
      (SBAR (IN so)
        (S
          (NP (PRP they))
          (VP (MD wo) (RB n't)
            (VP (VB know)
              (NP (PRP you)))))))
    (. .)))

advmod(strike-3, When-1)
nsubj(strike-3, you-2)
nsubj(land-7, you-2)
nsubj(shove-34, you-2)
advcl(pull-48, strike-3)
det(village-5, the-4)
dobj(strike-3, village-5)
conj_and(strike-3, land-7)
advcl(pull-48, land-7)
det(back-10, a-8)
amod(back-10, little-9)
dobj(land-7, back-10)
det(top-13, the-12)
prep_of(back-10, top-13)
det(hill-16, the-15)
prep_of(top-13, hill-16)
det(woods-20, the-19)
prep_in(land-7, woods-20)
prep_out_of(woods-20, sight-24)
advmod(rush-28, then-26)
nsubj(rush-28, you-27)
rcmod(sight-24, rush-28)
prt(rush-28, down-29)
dep(woods-20, Jim-31)
conj_and(strike-3, shove-34)
advcl(pull-48, shove-34)
det(letters-36, these-35)
dobj(shove-34, letters-36)
det(post-office-39, the-38)
prep_in(shove-34, post-office-39)
mark(see-44, if-42)
nsubj(see-44, you-43)
conj_and(strike-3, see-44)
advcl(pull-48, see-44)
dobj(see-44, anybody-45)
vmod(anybody-45, stirring-46)
root(ROOT-0, pull-48)
poss(slouch-50, your-49)
dobj(pull-48, slouch-50)
advmod(pull-48, down-51)
poss(face-54, your-53)
prep_over(down-51, face-54)
mark(know-59, so-55)
nsubj(know-59, they-56)
aux(know-59, wo-57)
neg(know-59, n't-58)
advcl(pull-48, know-59)
dobj(know-59, you-60)

(ROOT
  (S (RB Then)
    (NP (PRP you))
    (VP
      (VP (VBP go))
      (CC and)
      (VP
        (VP (VB slip)
          (PP (IN in)
            (NP (DT the) (JJ back) (NN way)))
          (PP (TO to)
            (NP (DT the) (NN kitchen))))
        (CC and)
        (VP
          (VP (VB git)
            (NP (DT the) (NN pipe)))
          (, ,)
          (CC and)
          (VP (VB lay)
            (NP
              (NP (DT this) (NN piece))
              (PP (IN of)
                (NP (NN paper))))
            (PP (IN on)
              (NP (DT the) (NN kitchen) (NN table))))
          (, ,)
          (CC and)
          (VP (VB put)
            (NP
              (NP (NN something))
              (PP (IN on)
                (NP (PRP it))))
            (S
              (VP (TO to)
                (VP
                  (VP (VB hold)
                    (NP (PRP it)))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (VP
                    (VP (VB slide)
                      (PRT (RP out)))
                    (CC and)
                    (VP (VB git)
                      (PRT (RP away))))))))))
      (, ,)
      (CC and)
      (VP (VBP do) (RB n't)
        (VP (VB let)
          (S
            (NP (NNP Aunt) (NNP Polly))
            (VP (VB catch)
              (NP
                (NP
                  (NP (DT a) (NN sight))
                  (PP (IN of)
                    (NP (PRP you))))
                (, ,)
                (CC nor)
                (NP
                  (NP (NN nobody))
                  (ADJP (RB else)))))))))
    (. .)))

advmod(go-3, Then-1)
nsubj(go-3, you-2)
nsubj(slip-5, you-2)
nsubj(let-49, you-2)
root(ROOT-0, go-3)
conj_and(go-3, slip-5)
det(way-9, the-7)
amod(way-9, back-8)
prep_in(slip-5, way-9)
det(kitchen-12, the-11)
prep_to(slip-5, kitchen-12)
conj_and(go-3, git-14)
conj_and(slip-5, git-14)
det(pipe-16, the-15)
dobj(git-14, pipe-16)
conj_and(slip-5, lay-19)
conj_and(git-14, lay-19)
det(piece-21, this-20)
dobj(lay-19, piece-21)
prep_of(piece-21, paper-23)
det(table-27, the-25)
nn(table-27, kitchen-26)
prep_on(lay-19, table-27)
conj_and(slip-5, put-30)
conj_and(git-14, put-30)
dobj(put-30, something-31)
prep_on(something-31, it-33)
aux(hold-35, to-34)
vmod(put-30, hold-35)
dobj(hold-35, it-36)
advmod(slide-40, then-39)
vmod(put-30, slide-40)
conj_and(hold-35, slide-40)
prt(slide-40, out-41)
conj_and(hold-35, git-43)
conj_and(slide-40, git-43)
prt(git-43, away-44)
aux(let-49, do-47)
neg(let-49, n't-48)
conj_and(go-3, let-49)
nn(Polly-51, Aunt-50)
nsubj(catch-52, Polly-51)
ccomp(let-49, catch-52)
det(sight-54, a-53)
dobj(catch-52, sight-54)
prep_of(sight-54, you-56)
dobj(catch-52, nobody-59)
conj_nor(sight-54, nobody-59)
amod(nobody-59, else-60)

(ROOT
  (S (RB Then)
    (NP (PRP you))
    (VP
      (VP (VBP jump)
        (PP (IN for)
          (NP (DT the) (NN balloon))))
      (CC and)
      (VP (VB shove)
        (PP (IN for)
          (NP (NNP Mount) (NNP Sinai)))
        (NP
          (NP
            (QP (CD three) (CD hundred))
            (NNS miles))
          (NP (DT an) (NN hour)))))
    (. .)))

advmod(jump-3, Then-1)
nsubj(jump-3, you-2)
nsubj(shove-8, you-2)
root(ROOT-0, jump-3)
det(balloon-6, the-5)
prep_for(jump-3, balloon-6)
conj_and(jump-3, shove-8)
nn(Sinai-11, Mount-10)
prep_for(shove-8, Sinai-11)
number(hundred-13, three-12)
num(miles-14, hundred-13)
dobj(shove-8, miles-14)
iobj(shove-8, miles-14)
det(hour-16, an-15)
dep(miles-14, hour-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD wo) (RB n't)
      (VP (VB have)
        (VP (VBN lost)
          (NP
            (QP (JJR more) (IN than) (DT an) (NN hour))))))
    (. .)))

nsubj(lost-5, You-1)
aux(lost-5, wo-2)
neg(lost-5, n't-3)
aux(lost-5, have-4)
root(ROOT-0, lost-5)
mwe(than-7, more-6)
quantmod(hour-9, than-7)
quantmod(hour-9, an-8)
dobj(lost-5, hour-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'll)
      (VP
        (VP (VB start)
          (PRT (RP back))
          (NP
            (NP
              (QP (IN at) (CD 7)
                (CC or)
                (CD 8))
              (NNS A.M.))
            (, ,)
            (NP (NN village) (NN time))
            (, ,)))
        (CC and)
        (VP (VB be)
          (ADVP (RB here))
          (PP (IN in)
            (NP (CD 24) (NNS hours)))
          (, ,)
          (S
            (VP (VBG arriving)
              (PP (IN at)
                (NP
                  (NP
                    (QP (CD 2)
                      (CC or)
                      (CD 3))
                    (NNS P.M.))
                  (, ,)
                  (NP (NNP Mount) (NNP Sinai))))
              (NP (NN time)))))))
    (. .) ('' '')))

nsubj(start-3, You-1)
nsubj(be-15, You-1)
aux(start-3, 'll-2)
root(ROOT-0, start-3)
prt(start-3, back-4)
amod(7-6, at-5)
num(A.M.-9, 7-6)
conj_or(7-6, 8-8)
num(A.M.-9, 8-8)
dobj(start-3, A.M.-9)
nn(time-12, village-11)
appos(A.M.-9, time-12)
conj_and(start-3, be-15)
advmod(be-15, here-16)
num(hours-19, 24-18)
prep_in(be-15, hours-19)
xcomp(be-15, arriving-21)
num(P.M.-26, 2-23)
conj_or(2-23, 3-25)
num(P.M.-26, 3-25)
prep_at(arriving-21, P.M.-26)
nn(Sinai-29, Mount-28)
appos(P.M.-26, Sinai-29)
dobj(arriving-21, time-30)

(ROOT
  (S
    (NP (NNP Tom) (PRP he))
    (VP (VBD read)
      (NP
        (NP (DT the) (NN piece))
        (PP (IN of)
          (NP (NN paper))))
      (PP (TO to)
        (NP (PRP us))))
    (. .)))

nsubj(read-3, Tom-1)
dep(Tom-1, he-2)
root(ROOT-0, read-3)
det(piece-5, the-4)
dobj(read-3, piece-5)
prep_of(piece-5, paper-7)
prep_to(read-3, us-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBD wrote)
        (PRT (RP on))
        (NP
          (NP (PRP it))
          (: :) (`` ``)
          (NP (NNP THURSDAY) (NNP AFTERNOON)))))
    (. .)))

nsubj(wrote-3, He-1)
aux(wrote-3, had-2)
root(ROOT-0, wrote-3)
prt(wrote-3, on-4)
dobj(wrote-3, it-5)
nn(AFTERNOON-9, THURSDAY-8)
dep(it-5, AFTERNOON-9)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Tom) (NNP Sawyer))
        (NP (DT the) (NN Erro-nort)))
      (VP (VBZ sends)
        (NP (PRP$ his) (NN love))
        (PP (TO to)
          (NP
            (NP (NNP Aunt) (NNP Polly))
            (PP (IN from)
              (NP (NNP Mount) (NNP Sinai)))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NNP Ark))
            (VP
              (VP (VBD was))
              (, ,)
              (CC and)
              (VP
                (ADVP (RB so))
                (VBZ does)
                (NP (NNP Huck) (NNP Finn))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (MD will)
        (VP (VB get)
          (S
            (NP (PRP it))
            (NP
              (NP (JJ to-morrow) (NN morning))
              (ADJP (JJ half-past)
                (NP (CD six))))))))
    (. .) ('' '')))

nn(Sawyer-2, Tom-1)
nsubj(sends-5, Sawyer-2)
det(Erro-nort-4, the-3)
dep(Sawyer-2, Erro-nort-4)
root(ROOT-0, sends-5)
poss(love-7, his-6)
dobj(sends-5, love-7)
nn(Polly-10, Aunt-9)
prep_to(sends-5, Polly-10)
nn(Sinai-13, Mount-12)
prep_from(Polly-10, Sinai-13)
advmod(was-17, where-14)
det(Ark-16, the-15)
nsubj(was-17, Ark-16)
nsubj(does-21, Ark-16)
advcl(sends-5, was-17)
advmod(does-21, so-20)
advcl(sends-5, does-21)
conj_and(was-17, does-21)
nn(Finn-23, Huck-22)
dobj(does-21, Finn-23)
nsubj(get-28, she-26)
aux(get-28, will-27)
conj_and(sends-5, get-28)
nsubj(morning-31, it-29)
amod(morning-31, to-morrow-30)
xcomp(get-28, morning-31)
amod(morning-31, half-past-32)
dep(half-past-32, six-33)

(ROOT
  (S
    (S
      (X
        (X (SYM *))
        (NP (CD -LSB-)))
      (X
        (X (SYM *))
        (NP
          (NP (DT This) (NN misplacing))
          (PP (IN of))))
      (NP (DT the) (NNP Ark))
      (VP (VBZ is)
        (ADVP (RB probably))
        (NP
          (NP (NNP Huck) (POS 's))
          (NN error))))
    (, ,) (RB not)
    (S
      (NP (NNP Tom))
      (VP (VBZ 's)))
    (. .)))

dep(-LSB--2, *-1)
dep(error-13, -LSB--2)
dep(misplacing-5, *-3)
det(misplacing-5, This-4)
dep(error-13, misplacing-5)
prep(misplacing-5, of-6)
det(Ark-8, the-7)
nsubj(error-13, Ark-8)
cop(error-13, is-9)
advmod(error-13, probably-10)
poss(error-13, Huck-11)
root(ROOT-0, error-13)
neg('s-17, not-15)
nsubj('s-17, Tom-16)
parataxis(error-13, 's-17)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (NNP M.T.))
      (VP (VBZ -RSB-)
        (S (`` ``)
          (S
            (NP (DT That))
            (VP (MD 'll)
              (VP (VB make)
                (NP (PRP$ her) (NNS eyes) (NN bulge))
                (PRT (RP out)))))
          (CC and)
          (S
            (NP (DT the) (NNS tears))
            (VP (VBP come))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBZ says))
    (. .)))

nsubj(-RSB--3, M.T.-2)
ccomp(says-19, -RSB--3)
nsubj(make-7, That-5)
aux(make-7, 'll-6)
dep(-RSB--3, make-7)
poss(bulge-10, her-8)
nn(bulge-10, eyes-9)
dobj(make-7, bulge-10)
prt(make-7, out-11)
det(tears-14, the-13)
nsubj(come-15, tears-14)
dep(-RSB--3, come-15)
conj_and(make-7, come-15)
nsubj(says-19, he-18)
root(ROOT-0, says-19)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBZ says) (: :) (`` ``)
      (S
        (VP (VB Stand)
          (PP (IN by)))))
    (. !)))

advmod(says-3, Then-1)
nsubj(says-3, he-2)
root(ROOT-0, says-3)
ccomp(says-3, Stand-6)
prep(Stand-6, by-7)

(ROOT
  (S
    (ADVP
      (NP
        (NP (CD One))
        (PRN (: --)
          (NP
            (NP (CD two))
            (: --)
            (NP (CD three)))
          (: --)))
      (RB away))
    (NP (PRP you))
    (VP (VBP go))
    (. !) ('' '')))

npadvmod(away-7, One-1)
dep(One-1, two-3)
dep(two-3, three-5)
advmod(go-9, away-7)
nsubj(go-9, you-8)
root(ROOT-0, go-9)

(ROOT
  (S (CC And)
    (ADVP (RB away))
    (NP (PRP she))
    (ADVP (RB DID))
    (VP (VBP go))
    (. !)))

cc(go-5, And-1)
advmod(go-5, away-2)
nsubj(go-5, she-3)
advmod(go-5, DID-4)
root(ROOT-0, go-5)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP she))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB whiz)
            (PRT (RP out))
            (PP (IN of)
              (NP
                (NP (NN sight))
                (PP (IN in)
                  (NP (DT a) (NN second)))))))))
    (. .)))

discourse(seemed-4, Why-1)
nsubj(seemed-4, she-3)
nsubj(whiz-6, she-3)
root(ROOT-0, seemed-4)
aux(whiz-6, to-5)
xcomp(seemed-4, whiz-6)
prep_out_of(whiz-6, sight-9)
det(second-12, a-11)
prep_in(sight-9, second-12)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP (VBD found)
        (NP
          (NP (DT a)
            (ADJP (RBS most) (JJ comfortable))
            (NN cave))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD looked)
                (PRT (RP out))
                (PP (IN over)
                  (NP (DT the) (JJ whole) (JJ big) (NN plain)))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP we))
      (VP (VBD camped)
        (S
          (VP (TO to)
            (VP (VB wait)
              (PP (IN for)
                (NP (DT the) (NN pipe))))))))
    (. .)))

advmod(found-3, Then-1)
nsubj(found-3, we-2)
root(ROOT-0, found-3)
det(cave-7, a-4)
advmod(comfortable-6, most-5)
amod(cave-7, comfortable-6)
dobj(found-3, cave-7)
nsubj(looked-9, cave-7)
rcmod(cave-7, looked-9)
prt(looked-9, out-10)
det(plain-15, the-12)
amod(plain-15, whole-13)
amod(plain-15, big-14)
prep_over(looked-9, plain-15)
advmod(camped-20, there-18)
nsubj(camped-20, we-19)
nsubj(wait-22, we-19)
conj_and(found-3, camped-20)
aux(wait-22, to-21)
xcomp(camped-20, wait-22)
det(pipe-25, the-24)
prep_for(wait-22, pipe-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN balloon))
      (VP (VBP come)
        (NP (NN hack))
        (ADVP (DT all) (RB right))))
    (, ,)
    (CC and)
    (S
      (VP (VBG brung)
        (NP (DT the) (NN pipe))))
    (: ;)
    (S
      (S (CC but)
        (NP (NNP Aunt) (NNP Polly))
        (VP (VBD had)
          (VP (VBN catched)
            (NP
              (NP (NNP Jim))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG getting)
                      (NP (PRP it))))))))))
      (, ,)
      (CC and)
      (S
        (NP (NN anybody))
        (VP (MD can)
          (VP (VB guess)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD happened))))))))
    (: :)
    (S
      (NP (PRP she))
      (VP (VBD sent)
        (PP (IN for)
          (NP (NNP Tom)))))
    (. .)))

det(balloon-2, The-1)
nsubj(come-3, balloon-2)
nsubj(brung-9, balloon-2)
root(ROOT-0, come-3)
dobj(come-3, hack-4)
dep(right-6, all-5)
advmod(come-3, right-6)
conj_and(come-3, brung-9)
det(pipe-11, the-10)
dobj(brung-9, pipe-11)
nn(Polly-15, Aunt-14)
nsubj(catched-17, Polly-15)
aux(catched-17, had-16)
conj_and(come-3, catched-17)
parataxis(come-3, catched-17)
dobj(catched-17, Jim-18)
tmod(getting-22, Jim-18)
advmod(getting-22, when-19)
nsubj(getting-22, he-20)
aux(getting-22, was-21)
rcmod(Jim-18, getting-22)
dobj(getting-22, it-23)
nsubj(guess-28, anybody-26)
aux(guess-28, can-27)
conj_and(come-3, guess-28)
parataxis(come-3, guess-28)
conj_and(catched-17, guess-28)
nsubj(happened-30, what-29)
ccomp(guess-28, happened-30)
nsubj(sent-33, she-32)
conj_and(come-3, sent-33)
parataxis(come-3, sent-33)
prep_for(sent-33, Tom-35)

(ROOT
  (S (IN So)
    (NP
      (NP (NNP Jim))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBZ says) (: :) (`` ``)
            (S
              (NP
                (NP (NNP Mars) (NNP Tom))
                (, ,)
                (NP
                  (NP (PRP she) (POS 's))
                  (ADJP (IN out)
                    (PP (IN on)
                      (NP (FW de))))
                  (NN porch)))
              (VP (VB wid)
                (NP (PRP$ her) (NN eye) (NN sot))
                (PP (IN on)
                  (NP (NNP de) (NN sky) (NN a-layin)))))
            ('' ')
            (PP (IN for)
              (NP (PRP you)))
            (, ,)
            (ADVP (IN en)))))
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBP say)
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBP ai) (RB n't)
                  (ADJP (JJ gwyne)
                    (S
                      (VP (TO to)
                        (VP (VB budge)
                          (PP (IN from)
                            (NP (NN dah))))))))))))))
    (VP (VBP tell)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBZ gits)
            (NP
              (NP (NN hold))
              (PP (IN of)
                (NP (PRP you))))))))
    (. .)))

dep(tell-39, So-1)
nsubj(tell-39, Jim-2)
nsubj(says-4, he-3)
rcmod(Jim-2, says-4)
nn(Tom-8, Mars-7)
nsubj(wid-16, Tom-8)
poss(porch-15, she-10)
amod(porch-15, out-12)
prep_on(out-12, de-14)
appos(Tom-8, porch-15)
ccomp(says-4, wid-16)
poss(sot-19, her-17)
nn(sot-19, eye-18)
dobj(wid-16, sot-19)
nn(a-layin-23, de-21)
nn(a-layin-23, sky-22)
prep_on(wid-16, a-layin-23)
prep_for(says-4, you-26)
advmod(says-4, en-28)
nsubj(say-30, she-29)
rcmod(Jim-2, say-30)
nsubj(gwyne-34, she-31)
nsubj(budge-36, she-31)
cop(gwyne-34, ai-32)
neg(gwyne-34, n't-33)
ccomp(say-30, gwyne-34)
aux(budge-36, to-35)
xcomp(gwyne-34, budge-36)
prep_from(budge-36, dah-38)
root(ROOT-0, tell-39)
nsubj(gits-41, she-40)
ccomp(tell-39, gits-41)
dobj(gits-41, hold-42)
prep_of(hold-42, you-44)

(ROOT
  (S
    (NP
      (NP (NNP Dey) (POS 's))
      (NN gwyne)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (NN trouble))
              (, ,)
              (NP (NNP Mars) (NNP Tom))
              (, ,))))))
    (`` `)
    (VP (VBD deed)
      (SBAR
        (S
          (NP (NN dey))
          (VP (VBZ is)))))
    (. .) ('' '')))

poss(gwyne-3, Dey-1)
nsubj(deed-12, gwyne-3)
aux(trouble-6, to-4)
cop(trouble-6, be-5)
vmod(gwyne-3, trouble-6)
nn(Tom-9, Mars-8)
appos(trouble-6, Tom-9)
root(ROOT-0, deed-12)
nsubj(is-14, dey-13)
ccomp(deed-12, is-14)

(ROOT
  (S (IN So)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (VBD shoved)
        (PP (IN for)
          (NP (NN home)))))
    (, ,)
    (CC and)
    (RB not)
    (S
      (VP (VBG feeling)
        (NP
          (NP (RB very) (JJ gay))
          (, ,)
          (NP (DT neither)))))
    (. .)))

dep(shoved-4, So-1)
advmod(shoved-4, then-2)
nsubj(shoved-4, we-3)
nsubj(feeling-10, we-3)
root(ROOT-0, shoved-4)
prep_for(shoved-4, home-6)
neg(feeling-10, not-9)
conj_and(shoved-4, feeling-10)
advmod(gay-12, very-11)
dobj(feeling-10, gay-12)
appos(gay-12, neither-14)

(ROOT
  (S
    (VP (VB END))
    (. .)))

root(ROOT-0, END-1)

